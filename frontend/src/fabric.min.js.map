{"version":3,"file":"index.min.js","sources":["../src/config.ts","../src/util/internals/console.ts","../src/filters/GLProbes/GLProbe.ts","../src/filters/GLProbes/WebGLProbe.ts","../src/env/browser.ts","../src/env/index.ts","../src/cache.ts","../src/constants.ts","../src/ClassRegistry.ts","../src/util/animation/AnimationRegistry.ts","../src/Observable.ts","../src/util/internals/findRight.ts","../src/util/internals/getRandomInt.ts","../src/util/internals/ifNaN.ts","../src/util/internals/removeFromArray.ts","../src/util/misc/cos.ts","../src/util/misc/sin.ts","../src/Point.ts","../src/Collection.ts","../src/CommonMethods.ts","../src/util/animation/AnimationFrameProvider.ts","../src/util/internals/uid.ts","../src/util/misc/dom.ts","../src/util/misc/radiansDegreesConversion.ts","../src/util/misc/matrix.ts","../src/util/misc/objectEnlive.ts","../src/util/misc/pick.ts","../src/color/color_map.ts","../src/color/util.ts","../src/color/Color.ts","../src/color/constants.ts","../src/util/misc/toFixed.ts","../src/util/misc/svgParsing.ts","../src/util/typeAssertions.ts","../src/util/dom_misc.ts","../src/util/dom_style.ts","../src/canvas/DOMManagers/util.ts","../src/canvas/DOMManagers/StaticCanvasDOMManager.ts","../src/canvas/StaticCanvasOptions.ts","../src/canvas/StaticCanvas.ts","../src/util/dom_event.ts","../src/util/misc/boundingBoxFromPoints.ts","../src/util/misc/objectTransforms.ts","../src/util/misc/planeChange.ts","../src/controls/fireEvent.ts","../src/util/misc/resolveOrigin.ts","../src/controls/util.ts","../src/controls/drag.ts","../src/shapes/Object/FabricObjectSVGExportMixin.ts","../src/util/animation/easing.ts","../src/util/animation/AnimationBase.ts","../src/util/animation/ValueAnimation.ts","../src/util/animation/ArrayAnimation.ts","../src/util/misc/capValue.ts","../src/util/animation/ColorAnimation.ts","../src/util/animation/animate.ts","../src/util/misc/vectors.ts","../src/Intersection.ts","../src/shapes/Object/ObjectOrigin.ts","../src/shapes/Object/ObjectGeometry.ts","../src/shapes/Object/StackedObject.ts","../src/shapes/Object/AnimatableObject.ts","../src/parser/getSvgRegex.ts","../src/parser/constants.ts","../src/Shadow.ts","../src/util/internals/cloneDeep.ts","../src/shapes/Object/defaultValues.ts","../src/shapes/Object/Object.ts","../src/controls/wrapWithFireEvent.ts","../src/controls/wrapWithFixedAnchor.ts","../src/controls/changeWidth.ts","../src/controls/controlRendering.ts","../src/controls/Control.ts","../src/controls/rotate.ts","../src/controls/scale.ts","../src/controls/skew.ts","../src/controls/scaleSkew.ts","../src/controls/commonControls.ts","../src/shapes/Object/InteractiveObject.ts","../src/util/applyMixins.ts","../src/shapes/Object/FabricObject.ts","../src/util/misc/isTransparent.ts","../src/util/misc/projectStroke/StrokeProjectionsBase.ts","../src/util/misc/projectStroke/StrokeLineJoinProjections.ts","../src/util/misc/projectStroke/StrokeLineCapProjections.ts","../src/util/misc/projectStroke/index.ts","../src/util/lang_string.ts","../src/util/misc/textStyles.ts","../src/parser/attributes.ts","../src/parser/selectorMatches.ts","../src/parser/elementMatchesRule.ts","../src/parser/doesSomeParentMatch.ts","../src/parser/normalizeAttr.ts","../src/util/internals/cleanupSvgAttribute.ts","../src/parser/parseTransformAttribute.ts","../src/parser/normalizeValue.ts","../src/parser/parseFontDeclaration.ts","../src/parser/parseStyleAttribute.ts","../src/parser/parseStyleString.ts","../src/parser/parseStyleObject.ts","../src/parser/setStrokeFillOpacity.ts","../src/parser/parseAttributes.ts","../src/parser/getGlobalStylesForElement.ts","../src/shapes/Rect.ts","../src/LayoutManager/constants.ts","../src/LayoutManager/LayoutStrategies/utils.ts","../src/LayoutManager/LayoutStrategies/LayoutStrategy.ts","../src/LayoutManager/LayoutStrategies/FitContentLayout.ts","../src/LayoutManager/LayoutManager.ts","../src/shapes/Group.ts","../src/util/misc/groupSVGElements.ts","../src/util/misc/findScaleTo.ts","../src/util/path/regex.ts","../src/util/path/index.ts","../src/util/internals/dom_request.ts","../src/util/transform_matrix_removal.ts","../src/util/misc/mergeClipPaths.ts","../src/util/misc/rotatePoint.ts","../src/canvas/DOMManagers/CanvasDOMManager.ts","../src/canvas/SelectableCanvas.ts","../src/canvas/CanvasOptions.ts","../src/canvas/TextEditingManager.ts","../src/canvas/Canvas.ts","../src/gradient/constants.ts","../src/parser/percent.ts","../src/gradient/parser/parseColorStops.ts","../src/gradient/parser/misc.ts","../src/gradient/parser/parseCoords.ts","../src/gradient/Gradient.ts","../src/Pattern/Pattern.ts","../src/brushes/BaseBrush.ts","../src/shapes/Path.ts","../src/brushes/PencilBrush.ts","../src/shapes/Circle.ts","../src/shapes/Line.ts","../src/shapes/Triangle.ts","../src/shapes/Ellipse.ts","../src/parser/parsePointsAttribute.ts","../src/shapes/Polyline.ts","../src/shapes/Polygon.ts","../src/shapes/Text/constants.ts","../src/shapes/Text/StyledText.ts","../src/shapes/Text/TextSVGExportMixin.ts","../src/shapes/Text/Text.ts","../src/shapes/IText/DraggableTextDelegate.ts","../src/shapes/IText/ITextBehavior.ts","../src/shapes/IText/ITextKeyBehavior.ts","../src/shapes/IText/ITextClickBehavior.ts","../src/shapes/IText/constants.ts","../src/shapes/IText/IText.ts","../src/shapes/Textbox.ts","../src/LayoutManager/LayoutStrategies/ClipPathLayout.ts","../src/LayoutManager/LayoutStrategies/FixedLayout.ts","../src/LayoutManager/ActiveSelectionLayoutManager.ts","../src/shapes/ActiveSelection.ts","../src/filters/Canvas2dFilterBackend.ts","../src/filters/WebGLFilterBackend.ts","../src/filters/FilterBackend.ts","../src/shapes/Image.ts","../src/parser/applyViewboxTransform.ts","../src/parser/getTagName.ts","../src/parser/hasInvalidAncestor.ts","../src/parser/getMultipleNodes.ts","../src/parser/recursivelyParseGradientsXlink.ts","../src/parser/getGradientDefs.ts","../src/parser/getCSSRules.ts","../src/parser/elements_parser.ts","../src/parser/parseSVGDocument.ts","../src/parser/parseUseDirectives.ts","../src/controls/polyControl.ts","../src/filters/utils.ts","../src/filters/shaders/baseFilter.ts","../src/filters/BaseFilter.ts","../src/filters/shaders/blendColor.ts","../src/filters/BlendColor.ts","../src/filters/shaders/blendImage.ts","../src/filters/BlendImage.ts","../src/filters/Blur.ts","../src/filters/shaders/blur.ts","../src/filters/Brightness.ts","../src/filters/shaders/brightness.ts","../src/filters/ColorMatrix.ts","../src/filters/shaders/colorMatrix.ts","../src/filters/ColorMatrixFilters.ts","../src/filters/Composed.ts","../src/filters/Contrast.ts","../src/filters/shaders/constrast.ts","../src/filters/shaders/convolute.ts","../src/filters/Convolute.ts","../src/filters/shaders/gamma.ts","../src/filters/Gamma.ts","../src/filters/shaders/grayscale.ts","../src/filters/Grayscale.ts","../src/filters/HueRotation.ts","../src/filters/Invert.ts","../src/filters/shaders/invert.ts","../src/filters/Noise.ts","../src/filters/shaders/noise.ts","../src/filters/Pixelate.ts","../src/filters/shaders/pixelate.ts","../src/filters/RemoveColor.ts","../src/filters/shaders/removeColor.ts","../src/filters/Resize.ts","../src/filters/Saturation.ts","../src/filters/shaders/saturation.ts","../src/filters/Vibrance.ts","../src/filters/shaders/vibrance.ts","../src/brushes/CircleBrush.ts","../src/brushes/PatternBrush.ts","../src/brushes/SprayBrush.ts","../src/parser/loadSVGFromString.ts","../src/parser/loadSVGFromURL.ts"],"sourcesContent":["export type TConfiguration = Partial<BaseConfiguration>;\r\n\r\nclass BaseConfiguration {\r\n  /**\r\n   * Browser-specific constant to adjust CanvasRenderingContext2D.shadowBlur value,\r\n   * which is unitless and not rendered equally across browsers.\r\n   *\r\n   * Values that work quite well (as of October 2017) are:\r\n   * - Chrome: 1.5\r\n   * - Edge: 1.75\r\n   * - Firefox: 0.9\r\n   * - Safari: 0.95\r\n   *\r\n   * @since 2.0.0\r\n   * @type Number\r\n   * @default 1\r\n   */\r\n  browserShadowBlurConstant = 1;\r\n\r\n  /**\r\n   * Pixel per Inch as a default value set to 96. Can be changed for more realistic conversion.\r\n   */\r\n  DPI = 96;\r\n\r\n  /**\r\n   * Device Pixel Ratio\r\n   * @see https://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/HTML-canvas-guide/SettingUptheCanvas/SettingUptheCanvas.html\r\n   */\r\n  devicePixelRatio =\r\n    typeof window !== 'undefined' ? window.devicePixelRatio : 1; // eslint-disable-line no-restricted-globals\r\n\r\n  /**\r\n   * Pixel limit for cache canvases. 1Mpx , 4Mpx should be fine.\r\n   * @since 1.7.14\r\n   * @type Number\r\n   * @default\r\n   */\r\n  perfLimitSizeTotal = 2097152;\r\n\r\n  /**\r\n   * Pixel limit for cache canvases width or height. IE fixes the maximum at 5000\r\n   * @since 1.7.14\r\n   * @type Number\r\n   * @default\r\n   */\r\n  maxCacheSideLimit = 4096;\r\n\r\n  /**\r\n   * Lowest pixel limit for cache canvases, set at 256PX\r\n   * @since 1.7.14\r\n   * @type Number\r\n   * @default\r\n   */\r\n  minCacheSideLimit = 256;\r\n\r\n  /**\r\n   * When 'true', style information is not retained when copy/pasting text, making\r\n   * pasted text use destination style.\r\n   * Defaults to 'false'.\r\n   * @type Boolean\r\n   * @default\r\n   * @deprecated\r\n   */\r\n  disableStyleCopyPaste = false;\r\n\r\n  /**\r\n   * Enable webgl for filtering picture is available\r\n   * A filtering backend will be initialized, this will both take memory and\r\n   * time since a default 2048x2048 canvas will be created for the gl context\r\n   * @since 2.0.0\r\n   * @type Boolean\r\n   * @default\r\n   */\r\n  enableGLFiltering = true;\r\n\r\n  /**\r\n   * if webgl is enabled and available, textureSize will determine the size\r\n   * of the canvas backend\r\n   *\r\n   * In order to support old hardware set to `2048` to avoid OOM\r\n   *\r\n   * @since 2.0.0\r\n   * @type Number\r\n   * @default\r\n   */\r\n  textureSize = 4096;\r\n\r\n  /**\r\n   * Skip performance testing of setupGLContext and force the use of putImageData that seems to be the one that works best on\r\n   * Chrome + old hardware. if your users are experiencing empty images after filtering you may try to force this to true\r\n   * this has to be set before instantiating the filtering backend ( before filtering the first image )\r\n   * @type Boolean\r\n   * @default false\r\n   */\r\n  forceGLPutImageData = false;\r\n\r\n  /**\r\n   * If disabled boundsOfCurveCache is not used. For apps that make heavy usage of pencil drawing probably disabling it is better\r\n   * @default true\r\n   */\r\n  cachesBoundsOfCurve = true;\r\n\r\n  /**\r\n   * Map of font files\r\n   * Map<fontFamily, pathToFile> of font files\r\n   */\r\n  fontPaths: Record</** fontFamily */ string, /** pathToFile */ string> = {};\r\n\r\n  /**\r\n   * Defines the number of fraction digits to use when serializing object values.\r\n   * Used in exporting methods (`toObject`, `toJSON`, `toSVG`)\r\n   * You can use it to increase/decrease precision of such values like left, top, scaleX, scaleY, etc.\r\n   */\r\n  NUM_FRACTION_DIGITS = 4;\r\n}\r\n\r\nexport class Configuration extends BaseConfiguration {\r\n  constructor(config?: TConfiguration) {\r\n    super();\r\n    this.configure(config);\r\n  }\r\n\r\n  configure(config: TConfiguration = {}) {\r\n    Object.assign(this, config);\r\n  }\r\n\r\n  /**\r\n   * Map<fontFamily, pathToFile> of font files\r\n   */\r\n  addFonts(\r\n    paths: Record</** fontFamily */ string, /** pathToFile */ string> = {}\r\n  ) {\r\n    this.fontPaths = {\r\n      ...this.fontPaths,\r\n      ...paths,\r\n    };\r\n  }\r\n\r\n  removeFonts(fontFamilys: string[] = []) {\r\n    fontFamilys.forEach((fontFamily) => {\r\n      delete this.fontPaths[fontFamily];\r\n    });\r\n  }\r\n\r\n  clearFonts() {\r\n    this.fontPaths = {};\r\n  }\r\n\r\n  restoreDefaults<T extends BaseConfiguration>(keys?: (keyof T)[]) {\r\n    const defaults = new BaseConfiguration() as T;\r\n    const config =\r\n      keys?.reduce((acc, key) => {\r\n        acc[key] = defaults[key];\r\n        return acc;\r\n      }, {} as T) || defaults;\r\n    this.configure(config);\r\n  }\r\n}\r\n\r\nexport const config = new Configuration();\r\n","export const log = (\r\n  severity: 'log' | 'warn' | 'error',\r\n  ...optionalParams: any[]\r\n) =>\r\n  // eslint-disable-next-line no-restricted-syntax\r\n  console[severity]('fabric', ...optionalParams);\r\n\r\nexport class FabricError extends Error {\r\n  constructor(message?: string, options?: ErrorOptions) {\r\n    super(`fabric: ${message}`, options);\r\n  }\r\n}\r\n\r\nexport class SignalAbortedError extends FabricError {\r\n  constructor(context: string) {\r\n    super(`${context} 'options.signal' is in 'aborted' state`);\r\n  }\r\n}\r\n","export type GLPrecision = 'lowp' | 'mediump' | 'highp';\r\n\r\nexport abstract class GLProbe {\r\n  declare GLPrecision: GLPrecision | undefined;\r\n  abstract queryWebGL(canvas: HTMLCanvasElement): void;\r\n  abstract isSupported(textureSize: number): boolean;\r\n}\r\n","import { log } from '../../util/internals/console';\r\nimport { GLProbe } from './GLProbe';\r\nimport type { GLPrecision } from './GLProbe';\r\n\r\n/**\r\n * Lazy initialize WebGL constants\r\n */\r\nexport class WebGLProbe extends GLProbe {\r\n  declare maxTextureSize?: number;\r\n\r\n  /**\r\n   * Tests if webgl supports certain precision\r\n   * @param {WebGL} Canvas WebGL context to test on\r\n   * @param {GLPrecision} Precision to test can be any of following\r\n   * @returns {Boolean} Whether the user's browser WebGL supports given precision.\r\n   */\r\n  private testPrecision(\r\n    gl: WebGLRenderingContext,\r\n    precision: GLPrecision\r\n  ): boolean {\r\n    const fragmentSource = `precision ${precision} float;\\nvoid main(){}`;\r\n    const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\r\n    if (!fragmentShader) {\r\n      return false;\r\n    }\r\n    gl.shaderSource(fragmentShader, fragmentSource);\r\n    gl.compileShader(fragmentShader);\r\n    return !!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS);\r\n  }\r\n\r\n  /**\r\n   * query browser for WebGL\r\n   */\r\n  queryWebGL(canvas: HTMLCanvasElement) {\r\n    const gl = canvas.getContext('webgl');\r\n    if (gl) {\r\n      this.maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\r\n      this.GLPrecision = (['highp', 'mediump', 'lowp'] as const).find(\r\n        (precision) => this.testPrecision(gl, precision)\r\n      );\r\n      gl.getExtension('WEBGL_lose_context')!.loseContext();\r\n      log('log', `WebGL: max texture size ${this.maxTextureSize}`);\r\n    }\r\n  }\r\n\r\n  isSupported(textureSize: number) {\r\n    return !!this.maxTextureSize && this.maxTextureSize >= textureSize;\r\n  }\r\n}\r\n","/* eslint-disable no-restricted-globals */\r\nimport { WebGLProbe } from '../filters/GLProbes/WebGLProbe';\r\nimport type { TCopyPasteData, TFabricEnv } from './types';\r\n\r\nconst copyPasteData: TCopyPasteData = {};\r\n\r\nexport const getEnv = (): TFabricEnv => {\r\n  return {\r\n    document,\r\n    window,\r\n    isTouchSupported:\r\n      'ontouchstart' in window ||\r\n      'ontouchstart' in document ||\r\n      (window && window.navigator && window.navigator.maxTouchPoints > 0),\r\n    WebGLProbe: new WebGLProbe(),\r\n    dispose() {\r\n      // noop\r\n    },\r\n    copyPasteData,\r\n  };\r\n};\r\n","/**\r\n * This file is consumed by fabric.\r\n * The `./node` and `./browser` files define the env variable that is used by this module.\r\n * The `./browser` module is defined to be the default env and doesn't set the env at all.\r\n * This is done in order to support isomorphic usage for browser and node applications\r\n * since window and document aren't defined at time of import in SSR, we can't set env so we avoid it by deferring to the default env.\r\n */\r\n\r\nimport { config } from '../config';\r\nimport { getEnv as getBrowserEnv } from './browser';\r\nimport type { TFabricEnv } from './types';\r\nimport type { DOMWindow } from 'jsdom';\r\n\r\nlet env: TFabricEnv;\r\n\r\n/**\r\n * Sets the environment variables used by fabric.\\\r\n * This is exposed for special cases, such as configuring a test environment, and should be used with care.\r\n *\r\n * **CAUTION**: Must be called before using the package.\r\n *\r\n * @example\r\n * <caption>Passing `window` and `document` objects to fabric (in case they are mocked or something)</caption>\r\n * import { getEnv, setEnv } from 'fabric';\r\n * // we want fabric to use the `window` and `document` objects exposed by the environment we are running in.\r\n * setEnv({ ...getEnv(), window, document });\r\n * // done with setup, using fabric is now safe\r\n */\r\nexport const setEnv = (value: TFabricEnv) => {\r\n  env = value;\r\n};\r\n\r\n/**\r\n * In order to support SSR we **MUST** access the browser env only after the window has loaded\r\n */\r\nexport const getEnv = () => env || (env = getBrowserEnv());\r\n\r\nexport const getFabricDocument = (): Document => getEnv().document;\r\n\r\nexport const getFabricWindow = (): (Window & typeof globalThis) | DOMWindow =>\r\n  getEnv().window;\r\n\r\n/**\r\n * @returns the config value if defined, fallbacks to the environment value\r\n */\r\nexport const getDevicePixelRatio = () =>\r\n  Math.max(config.devicePixelRatio ?? getFabricWindow().devicePixelRatio, 1);\r\n","import { config } from './config';\r\nimport type { TRectBounds } from './typedefs';\r\n\r\nexport class Cache {\r\n  /**\r\n   * Cache of widths of chars in text rendering.\r\n   */\r\n  charWidthsCache: Record<\r\n    /** fontFamily */ string,\r\n    Record<\r\n      /** fontStyleCacheKey */ string,\r\n      Record</** char */ string, /** width */ number>\r\n    >\r\n  > = {};\r\n\r\n  /**\r\n   * @return {Object} reference to cache\r\n   */\r\n  getFontCache({\r\n    fontFamily,\r\n    fontStyle,\r\n    fontWeight,\r\n  }: {\r\n    fontFamily: string;\r\n    fontStyle: string;\r\n    fontWeight: string | number;\r\n  }) {\r\n    fontFamily = fontFamily.toLowerCase();\r\n    if (!this.charWidthsCache[fontFamily]) {\r\n      this.charWidthsCache[fontFamily] = {};\r\n    }\r\n    const fontCache = this.charWidthsCache[fontFamily];\r\n    const cacheKey = `${fontStyle.toLowerCase()}_${(\r\n      fontWeight + ''\r\n    ).toLowerCase()}`;\r\n    if (!fontCache[cacheKey]) {\r\n      fontCache[cacheKey] = {};\r\n    }\r\n    return fontCache[cacheKey];\r\n  }\r\n\r\n  /**\r\n   * Clear char widths cache for the given font family or all the cache if no\r\n   * fontFamily is specified.\r\n   * Use it if you know you are loading fonts in a lazy way and you are not waiting\r\n   * for custom fonts to load properly when adding text objects to the canvas.\r\n   * If a text object is added when its own font is not loaded yet, you will get wrong\r\n   * measurement and so wrong bounding boxes.\r\n   * After the font cache is cleared, either change the textObject text content or call\r\n   * initDimensions() to trigger a recalculation\r\n   * @param {String} [fontFamily] font family to clear\r\n   */\r\n  clearFontCache(fontFamily?: string) {\r\n    fontFamily = (fontFamily || '').toLowerCase();\r\n    if (!fontFamily) {\r\n      this.charWidthsCache = {};\r\n    } else if (this.charWidthsCache[fontFamily]) {\r\n      delete this.charWidthsCache[fontFamily];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Given current aspect ratio, determines the max width and height that can\r\n   * respect the total allowed area for the cache.\r\n   * @param {number} ar aspect ratio\r\n   * @return {number[]} Limited dimensions X and Y\r\n   */\r\n  limitDimsByArea(ar: number) {\r\n    const { perfLimitSizeTotal } = config;\r\n    const roughWidth = Math.sqrt(perfLimitSizeTotal * ar);\r\n    // we are not returning a point on purpose, to avoid circular dependencies\r\n    // this is an internal utility\r\n    return [\r\n      Math.floor(roughWidth),\r\n      Math.floor(perfLimitSizeTotal / roughWidth),\r\n    ];\r\n  }\r\n\r\n  /**\r\n   * This object keeps the results of the boundsOfCurve calculation mapped by the joined arguments necessary to calculate it.\r\n   * It does speed up calculation, if you parse and add always the same paths, but in case of heavy usage of freedrawing\r\n   * you do not get any speed benefit and you get a big object in memory.\r\n   * The object was a private variable before, while now is appended to the lib so that you have access to it and you\r\n   * can eventually clear it.\r\n   * It was an internal variable, is accessible since version 2.3.4\r\n   */\r\n  boundsOfCurveCache: Record<string, TRectBounds> = {};\r\n}\r\n\r\nexport const cache = new Cache();\r\n","import type { TMat2D } from './typedefs';\r\n// use this syntax so babel plugin see this import here\r\nimport { version } from '../package.json';\r\n\r\nexport const VERSION = version;\r\n// eslint-disable-next-line @typescript-eslint/no-empty-function\r\nexport function noop() {}\r\n\r\nexport const halfPI = Math.PI / 2;\r\nexport const twoMathPi = Math.PI * 2;\r\nexport const PiBy180 = Math.PI / 180;\r\n\r\nexport const iMatrix = Object.freeze([1, 0, 0, 1, 0, 0]) as TMat2D;\r\nexport const DEFAULT_SVG_FONT_SIZE = 16;\r\nexport const ALIASING_LIMIT = 2;\r\n\r\n/* \"magic number\" for bezier approximations of arcs (http://itc.ktu.lt/itc354/Riskus354.pdf) */\r\nexport const kRect = 1 - 0.5522847498;\r\n\r\nexport const CENTER = 'center';\r\nexport const LEFT = 'left';\r\nexport const TOP = 'top';\r\nexport const BOTTOM = 'bottom';\r\nexport const RIGHT = 'right';\r\nexport const NONE = 'none';\r\n\r\nexport const reNewline = /\\r?\\n/;\r\n\r\nexport const MOVING = 'moving';\r\nexport const SCALING = 'scaling';\r\nexport const ROTATING = 'rotating';\r\nexport const ROTATE = 'rotate';\r\nexport const SKEWING = 'skewing';\r\nexport const RESIZING = 'resizing';\r\nexport const MODIFY_POLY = 'modifyPoly';\r\nexport const CHANGED = 'changed';\r\nexport const SCALE = 'scale';\r\nexport const SCALE_X = 'scaleX';\r\nexport const SCALE_Y = 'scaleY';\r\nexport const SKEW_X = 'skewX';\r\nexport const SKEW_Y = 'skewY';\r\nexport const FILL = 'fill';\r\nexport const STROKE = 'stroke';\r\nexport const MODIFIED = 'modified';\r\n","import { FabricError } from './util/internals/console';\r\n\r\n/*\r\n * This Map connects the objects type value with their\r\n * class implementation. It used from any object to understand which are\r\n * the classes to enlive when requesting a object.type = 'path' for example.\r\n * Objects uses it for clipPath, Canvas uses it for everything.\r\n * This is necessary for generic code to run and enlive instances from serialized representation.\r\n * You can customize which classes get enlived from SVG parsing using this classRegistry.\r\n * The Registry start empty and gets filled in depending which files you import.\r\n * If you want to be able to parse arbitrary SVGs or JSON representation of canvases, coming from\r\n * different sources you will need to import all fabric because you may need all classes.\r\n */\r\n\r\nexport const JSON = 'json';\r\nexport const SVG = 'svg';\r\n\r\nexport class ClassRegistry {\r\n  declare [JSON]: Map<string, any>;\r\n  declare [SVG]: Map<string, any>;\r\n\r\n  constructor() {\r\n    this[JSON] = new Map();\r\n    this[SVG] = new Map();\r\n  }\r\n\r\n  getClass<T>(classType: string): T {\r\n    const constructor = this[JSON].get(classType);\r\n    if (!constructor) {\r\n      throw new FabricError(`No class registered for ${classType}`);\r\n    }\r\n    return constructor;\r\n  }\r\n\r\n  setClass(classConstructor: any, classType?: string) {\r\n    if (classType) {\r\n      this[JSON].set(classType, classConstructor);\r\n    } else {\r\n      this[JSON].set(classConstructor.type, classConstructor);\r\n      // legacy\r\n      // @TODO: needs to be removed in fabric 7 or 8\r\n      this[JSON].set(classConstructor.type.toLowerCase(), classConstructor);\r\n    }\r\n  }\r\n\r\n  getSVGClass(SVGTagName: string): any {\r\n    return this[SVG].get(SVGTagName);\r\n  }\r\n\r\n  setSVGClass(classConstructor: any, SVGTagName?: string) {\r\n    this[SVG].set(\r\n      SVGTagName ?? classConstructor.type.toLowerCase(),\r\n      classConstructor\r\n    );\r\n  }\r\n}\r\n\r\nexport const classRegistry = new ClassRegistry();\r\n","import type { StaticCanvas } from '../../canvas/StaticCanvas';\r\nimport type { FabricObject } from '../../shapes/Object/FabricObject';\r\nimport type { AnimationBase } from './AnimationBase';\r\n\r\n/**\r\n * Array holding all running animations\r\n */\r\nclass AnimationRegistry extends Array<AnimationBase> {\r\n  /**\r\n   * Remove a single animation using an animation context\r\n   * @param {AnimationBase} context\r\n   */\r\n  remove(context: AnimationBase) {\r\n    const index = this.indexOf(context);\r\n    index > -1 && this.splice(index, 1);\r\n  }\r\n\r\n  /**\r\n   * Cancel all running animations on the next frame\r\n   */\r\n  cancelAll() {\r\n    const animations = this.splice(0);\r\n    animations.forEach((animation) => animation.abort());\r\n    return animations;\r\n  }\r\n\r\n  /**\r\n   * Cancel all running animations attached to a canvas on the next frame\r\n   * @param {StaticCanvas} canvas\r\n   */\r\n  cancelByCanvas(canvas: StaticCanvas) {\r\n    if (!canvas) {\r\n      return [];\r\n    }\r\n    const animations = this.filter(\r\n      (animation) =>\r\n        animation.target === canvas ||\r\n        (typeof animation.target === 'object' &&\r\n          (animation.target as FabricObject)?.canvas === canvas)\r\n    );\r\n    animations.forEach((animation) => animation.abort());\r\n    return animations;\r\n  }\r\n\r\n  /**\r\n   * Cancel all running animations for target on the next frame\r\n   * @param target\r\n   */\r\n  cancelByTarget(target: AnimationBase['target']) {\r\n    if (!target) {\r\n      return [];\r\n    }\r\n    const animations = this.filter((animation) => animation.target === target);\r\n    animations.forEach((animation) => animation.abort());\r\n    return animations;\r\n  }\r\n}\r\n\r\nexport const runningAnimations = new AnimationRegistry();\r\n","export type TEventCallback<T = any> = (options: T) => any;\r\n\r\ntype EventRegistryObject<E> = {\r\n  [K in keyof E]?: TEventCallback<E[K]>;\r\n};\r\n\r\n/**\r\n * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#events}\r\n * @see {@link http://fabricjs.com/events|Events demo}\r\n */\r\nexport class Observable<EventSpec> {\r\n  private __eventListeners: Record<keyof EventSpec, TEventCallback[]> =\r\n    {} as Record<keyof EventSpec, TEventCallback[]>;\r\n\r\n  /**\r\n   * Observes specified event\r\n   * @alias on\r\n   * @param {string} eventName Event name (eg. 'after:render')\r\n   * @param {EventRegistryObject} handlers key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\r\n   * @param {Function} handler Function that receives a notification when an event of the specified type occurs\r\n   * @return {Function} disposer\r\n   */\r\n  on<K extends keyof EventSpec, E extends EventSpec[K]>(\r\n    eventName: K,\r\n    handler: TEventCallback<E>\r\n  ): VoidFunction;\r\n  on(handlers: EventRegistryObject<EventSpec>): VoidFunction;\r\n  on<K extends keyof EventSpec, E extends EventSpec[K]>(\r\n    arg0: K | EventRegistryObject<EventSpec>,\r\n    handler?: TEventCallback<E>\r\n  ): VoidFunction {\r\n    if (!this.__eventListeners) {\r\n      this.__eventListeners = {} as Record<keyof EventSpec, TEventCallback[]>;\r\n    }\r\n    if (typeof arg0 === 'object') {\r\n      // one object with key/value pairs was passed\r\n      Object.entries(arg0).forEach(([eventName, handler]) => {\r\n        this.on(eventName as K, handler as TEventCallback);\r\n      });\r\n      return () => this.off(arg0);\r\n    } else if (handler) {\r\n      const eventName = arg0;\r\n      if (!this.__eventListeners[eventName]) {\r\n        this.__eventListeners[eventName] = [];\r\n      }\r\n      this.__eventListeners[eventName].push(handler);\r\n      return () => this.off(eventName, handler);\r\n    } else {\r\n      // noop\r\n      return () => false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Observes specified event **once**\r\n   * @alias once\r\n   * @param {string} eventName Event name (eg. 'after:render')\r\n   * @param {EventRegistryObject} handlers key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\r\n   * @param {Function} handler Function that receives a notification when an event of the specified type occurs\r\n   * @return {Function} disposer\r\n   */\r\n  once<K extends keyof EventSpec, E extends EventSpec[K]>(\r\n    eventName: K,\r\n    handler: TEventCallback<E>\r\n  ): VoidFunction;\r\n  once(handlers: EventRegistryObject<EventSpec>): VoidFunction;\r\n  once<K extends keyof EventSpec, E extends EventSpec[K]>(\r\n    arg0: K | EventRegistryObject<EventSpec>,\r\n    handler?: TEventCallback<E>\r\n  ): VoidFunction {\r\n    if (typeof arg0 === 'object') {\r\n      // one object with key/value pairs was passed\r\n      const disposers: VoidFunction[] = [];\r\n      Object.entries(arg0).forEach(([eventName, handler]) => {\r\n        disposers.push(this.once(eventName as K, handler as TEventCallback));\r\n      });\r\n      return () => disposers.forEach((d) => d());\r\n    } else if (handler) {\r\n      const disposer = this.on<K, E>(\r\n        arg0,\r\n        function onceHandler(this: Observable<EventSpec>, ...args) {\r\n          handler.call(this, ...args);\r\n          disposer();\r\n        }\r\n      );\r\n      return disposer;\r\n    } else {\r\n      // noop\r\n      return () => false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {string} eventName\r\n   * @param {Function} [handler]\r\n   */\r\n  private _removeEventListener<K extends keyof EventSpec>(\r\n    eventName: K,\r\n    handler?: TEventCallback\r\n  ) {\r\n    if (!this.__eventListeners[eventName]) {\r\n      return;\r\n    }\r\n\r\n    if (handler) {\r\n      const eventListener = this.__eventListeners[eventName];\r\n      const index = eventListener.indexOf(handler);\r\n      index > -1 && eventListener.splice(index, 1);\r\n    } else {\r\n      this.__eventListeners[eventName] = [];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Unsubscribe all event listeners for eventname.\r\n   * Do not use this pattern. You could kill internal fabricJS events.\r\n   * We know we should have protected events for internal flows, but we don't have yet\r\n   * @deprecated\r\n   * @param {string} eventName event name (eg. 'after:render')\r\n   */\r\n  off<K extends keyof EventSpec>(eventName: K): void;\r\n  /**\r\n   * unsubscribe an event listener\r\n   * @param {string} eventName event name (eg. 'after:render')\r\n   * @param {TEventCallback} handler event listener to unsubscribe\r\n   */\r\n  off<K extends keyof EventSpec>(eventName: K, handler: TEventCallback): void;\r\n  /**\r\n   * unsubscribe event listeners\r\n   * @param handlers handlers key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\r\n   */\r\n  off(handlers: EventRegistryObject<EventSpec>): void;\r\n  /**\r\n   * unsubscribe all event listeners\r\n   */\r\n  off(): void;\r\n  off<K extends keyof EventSpec>(\r\n    arg0?: K | EventRegistryObject<EventSpec>,\r\n    handler?: TEventCallback\r\n  ) {\r\n    if (!this.__eventListeners) {\r\n      return;\r\n    }\r\n\r\n    // remove all key/value pairs (event name -> event handler)\r\n    if (typeof arg0 === 'undefined') {\r\n      for (const eventName in this.__eventListeners) {\r\n        this._removeEventListener(eventName);\r\n      }\r\n    }\r\n    // one object with key/value pairs was passed\r\n    else if (typeof arg0 === 'object') {\r\n      Object.entries(arg0).forEach(([eventName, handler]) => {\r\n        this._removeEventListener(eventName as K, handler as TEventCallback);\r\n      });\r\n    } else {\r\n      this._removeEventListener(arg0, handler);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Fires event with an optional options object\r\n   * @param {String} eventName Event name to fire\r\n   * @param {Object} [options] Options object\r\n   */\r\n  fire<K extends keyof EventSpec>(eventName: K, options?: EventSpec[K]) {\r\n    if (!this.__eventListeners) {\r\n      return;\r\n    }\r\n\r\n    const listenersForEvent = this.__eventListeners[eventName]?.concat();\r\n    if (listenersForEvent) {\r\n      for (let i = 0; i < listenersForEvent.length; i++) {\r\n        listenersForEvent[i].call(this, options || {});\r\n      }\r\n    }\r\n  }\r\n}\r\n","export const findIndexRight = <T>(\r\n  array: T[],\r\n  predicate: (value: T, index: number, array: T[]) => boolean\r\n) => {\r\n  for (let index = array.length - 1; index >= 0; index--) {\r\n    if (predicate(array[index], index, array)) {\r\n      return index;\r\n    }\r\n  }\r\n  return -1;\r\n};\r\n","/**\r\n * Returns random number between 2 specified ones.\r\n * @param {Number} min lower limit\r\n * @param {Number} max upper limit\r\n * @return {Number} random value (between min and max)\r\n */\r\nexport const getRandomInt = (min: number, max: number): number =>\r\n  Math.floor(Math.random() * (max - min + 1)) + min;\r\n","/**\r\n *\r\n * @param value value to check if NaN\r\n * @param [valueIfNaN]\r\n * @returns `fallback` is `value is NaN\r\n */\r\nexport const ifNaN = (value: number, valueIfNaN?: number) => {\r\n  return isNaN(value) && typeof valueIfNaN === 'number' ? valueIfNaN : value;\r\n};\r\n","/**\r\n * Removes value from an array.\r\n * Presence of value (and its position in an array) is determined via `Array.prototype.indexOf`\r\n * @param {Array} array\r\n * @param {*} value\r\n * @return {Array} original array\r\n */\r\nexport const removeFromArray = <T>(array: T[], value: T): T[] => {\r\n  const idx = array.indexOf(value);\r\n  if (idx !== -1) {\r\n    array.splice(idx, 1);\r\n  }\r\n  return array;\r\n};\r\n","import type { TRadian } from '../../typedefs';\r\nimport { halfPI } from '../../constants';\r\n\r\n/**\r\n * Calculate the cos of an angle, avoiding returning floats for known results\r\n * This function is here just to avoid getting 0.999999999999999 when dealing\r\n * with numbers that are really 1 or 0.\r\n * @param {TRadian} angle the angle\r\n * @return {Number} the cosin value for angle.\r\n */\r\nexport const cos = (angle: TRadian): number => {\r\n  if (angle === 0) {\r\n    return 1;\r\n  }\r\n  const angleSlice = Math.abs(angle) / halfPI;\r\n  switch (angleSlice) {\r\n    case 1:\r\n    case 3:\r\n      return 0;\r\n    case 2:\r\n      return -1;\r\n  }\r\n  return Math.cos(angle);\r\n};\r\n","import type { TRadian } from '../../typedefs';\r\nimport { halfPI } from '../../constants';\r\n\r\n/**\r\n * Calculate the cos of an angle, avoiding returning floats for known results\r\n * This function is here just to avoid getting 0.999999999999999 when dealing\r\n * with numbers that are really 1 or 0.\r\n * @param {TRadian} angle the angle\r\n * @return {Number} the sin value for angle.\r\n */\r\nexport const sin = (angle: TRadian): number => {\r\n  if (angle === 0) {\r\n    return 0;\r\n  }\r\n  const angleSlice = angle / halfPI;\r\n  const value = Math.sign(angle);\r\n  switch (angleSlice) {\r\n    case 1:\r\n      return value;\r\n    case 2:\r\n      return 0;\r\n    case 3:\r\n      return -value;\r\n  }\r\n  return Math.sin(angle);\r\n};\r\n","import type { TMat2D, TRadian } from './typedefs';\r\nimport { cos } from './util/misc/cos';\r\nimport { sin } from './util/misc/sin';\r\n\r\nexport interface XY {\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\n/**\r\n * Adaptation of work of Kevin Lindsey(kevin@kevlindev.com)\r\n */\r\nexport class Point implements XY {\r\n  declare x: number;\r\n\r\n  declare y: number;\r\n\r\n  constructor();\r\n  constructor(x: number, y: number);\r\n  constructor(point?: XY);\r\n  constructor(arg0: number | XY = 0, y = 0) {\r\n    if (typeof arg0 === 'object') {\r\n      this.x = arg0.x;\r\n      this.y = arg0.y;\r\n    } else {\r\n      this.x = arg0;\r\n      this.y = y;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Adds another point to this one and returns another one\r\n   * @param {XY} that\r\n   * @return {Point} new Point instance with added values\r\n   */\r\n  add(that: XY): Point {\r\n    return new Point(this.x + that.x, this.y + that.y);\r\n  }\r\n\r\n  /**\r\n   * Adds another point to this one\r\n   * @param {XY} that\r\n   * @return {Point} thisArg\r\n   * @chainable\r\n   * @deprecated\r\n   */\r\n  addEquals(that: XY): Point {\r\n    this.x += that.x;\r\n    this.y += that.y;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Adds value to this point and returns a new one\r\n   * @param {Number} scalar\r\n   * @return {Point} new Point with added value\r\n   */\r\n  scalarAdd(scalar: number): Point {\r\n    return new Point(this.x + scalar, this.y + scalar);\r\n  }\r\n\r\n  /**\r\n   * Adds value to this point\r\n   * @param {Number} scalar\r\n   * @return {Point} thisArg\r\n   * @chainable\r\n   * @deprecated\r\n   */\r\n  scalarAddEquals(scalar: number): Point {\r\n    this.x += scalar;\r\n    this.y += scalar;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Subtracts another point from this point and returns a new one\r\n   * @param {XY} that\r\n   * @return {Point} new Point object with subtracted values\r\n   */\r\n  subtract(that: XY): Point {\r\n    return new Point(this.x - that.x, this.y - that.y);\r\n  }\r\n\r\n  /**\r\n   * Subtracts another point from this point\r\n   * @param {XY} that\r\n   * @return {Point} thisArg\r\n   * @chainable\r\n   * @deprecated\r\n   */\r\n  subtractEquals(that: XY): Point {\r\n    this.x -= that.x;\r\n    this.y -= that.y;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Subtracts value from this point and returns a new one\r\n   * @param {Number} scalar\r\n   * @return {Point}\r\n   */\r\n  scalarSubtract(scalar: number): Point {\r\n    return new Point(this.x - scalar, this.y - scalar);\r\n  }\r\n\r\n  /**\r\n   * Subtracts value from this point\r\n   * @param {Number} scalar\r\n   * @return {Point} thisArg\r\n   * @chainable\r\n   * @deprecated\r\n   */\r\n  scalarSubtractEquals(scalar: number): Point {\r\n    this.x -= scalar;\r\n    this.y -= scalar;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Multiplies this point by another value and returns a new one\r\n   * @param {XY} that\r\n   * @return {Point}\r\n   */\r\n  multiply(that: XY): Point {\r\n    return new Point(this.x * that.x, this.y * that.y);\r\n  }\r\n\r\n  /**\r\n   * Multiplies this point by a value and returns a new one\r\n   * @param {Number} scalar\r\n   * @return {Point}\r\n   */\r\n  scalarMultiply(scalar: number): Point {\r\n    return new Point(this.x * scalar, this.y * scalar);\r\n  }\r\n\r\n  /**\r\n   * Multiplies this point by a value\r\n   * @param {Number} scalar\r\n   * @return {Point} thisArg\r\n   * @chainable\r\n   * @deprecated\r\n   */\r\n  scalarMultiplyEquals(scalar: number): Point {\r\n    this.x *= scalar;\r\n    this.y *= scalar;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Divides this point by another and returns a new one\r\n   * @param {XY} that\r\n   * @return {Point}\r\n   */\r\n  divide(that: XY): Point {\r\n    return new Point(this.x / that.x, this.y / that.y);\r\n  }\r\n\r\n  /**\r\n   * Divides this point by a value and returns a new one\r\n   * @param {Number} scalar\r\n   * @return {Point}\r\n   */\r\n  scalarDivide(scalar: number): Point {\r\n    return new Point(this.x / scalar, this.y / scalar);\r\n  }\r\n\r\n  /**\r\n   * Divides this point by a value\r\n   * @param {Number} scalar\r\n   * @return {Point} thisArg\r\n   * @chainable\r\n   * @deprecated\r\n   */\r\n  scalarDivideEquals(scalar: number): Point {\r\n    this.x /= scalar;\r\n    this.y /= scalar;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Returns true if this point is equal to another one\r\n   * @param {XY} that\r\n   * @return {Boolean}\r\n   */\r\n  eq(that: XY): boolean {\r\n    return this.x === that.x && this.y === that.y;\r\n  }\r\n\r\n  /**\r\n   * Returns true if this point is less than another one\r\n   * @param {XY} that\r\n   * @return {Boolean}\r\n   */\r\n  lt(that: XY): boolean {\r\n    return this.x < that.x && this.y < that.y;\r\n  }\r\n\r\n  /**\r\n   * Returns true if this point is less than or equal to another one\r\n   * @param {XY} that\r\n   * @return {Boolean}\r\n   */\r\n  lte(that: XY): boolean {\r\n    return this.x <= that.x && this.y <= that.y;\r\n  }\r\n\r\n  /**\r\n\r\n   * Returns true if this point is greater another one\r\n   * @param {XY} that\r\n   * @return {Boolean}\r\n   */\r\n  gt(that: XY): boolean {\r\n    return this.x > that.x && this.y > that.y;\r\n  }\r\n\r\n  /**\r\n   * Returns true if this point is greater than or equal to another one\r\n   * @param {XY} that\r\n   * @return {Boolean}\r\n   */\r\n  gte(that: XY): boolean {\r\n    return this.x >= that.x && this.y >= that.y;\r\n  }\r\n\r\n  /**\r\n   * Returns new point which is the result of linear interpolation with this one and another one\r\n   * @param {XY} that\r\n   * @param {Number} t , position of interpolation, between 0 and 1 default 0.5\r\n   * @return {Point}\r\n   */\r\n  lerp(that: XY, t = 0.5): Point {\r\n    t = Math.max(Math.min(1, t), 0);\r\n    return new Point(\r\n      this.x + (that.x - this.x) * t,\r\n      this.y + (that.y - this.y) * t\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Returns distance from this point and another one\r\n   * @param {XY} that\r\n   * @return {Number}\r\n   */\r\n  distanceFrom(that: XY): number {\r\n    const dx = this.x - that.x,\r\n      dy = this.y - that.y;\r\n    return Math.sqrt(dx * dx + dy * dy);\r\n  }\r\n\r\n  /**\r\n   * Returns the point between this point and another one\r\n   * @param {XY} that\r\n   * @return {Point}\r\n   */\r\n  midPointFrom(that: XY): Point {\r\n    return this.lerp(that);\r\n  }\r\n\r\n  /**\r\n   * Returns a new point which is the min of this and another one\r\n   * @param {XY} that\r\n   * @return {Point}\r\n   */\r\n  min(that: XY): Point {\r\n    return new Point(Math.min(this.x, that.x), Math.min(this.y, that.y));\r\n  }\r\n\r\n  /**\r\n   * Returns a new point which is the max of this and another one\r\n   * @param {XY} that\r\n   * @return {Point}\r\n   */\r\n  max(that: XY): Point {\r\n    return new Point(Math.max(this.x, that.x), Math.max(this.y, that.y));\r\n  }\r\n\r\n  /**\r\n   * Returns string representation of this point\r\n   * @return {String}\r\n   */\r\n  toString(): string {\r\n    return `${this.x},${this.y}`;\r\n  }\r\n\r\n  /**\r\n   * Sets x/y of this point\r\n   * @param {Number} x\r\n   * @param {Number} y\r\n   * @chainable\r\n   */\r\n  setXY(x: number, y: number) {\r\n    this.x = x;\r\n    this.y = y;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Sets x of this point\r\n   * @param {Number} x\r\n   * @chainable\r\n   */\r\n  setX(x: number) {\r\n    this.x = x;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Sets y of this point\r\n   * @param {Number} y\r\n   * @chainable\r\n   */\r\n  setY(y: number) {\r\n    this.y = y;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Sets x/y of this point from another point\r\n   * @param {XY} that\r\n   * @chainable\r\n   */\r\n  setFromPoint(that: XY) {\r\n    this.x = that.x;\r\n    this.y = that.y;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Swaps x/y of this point and another point\r\n   * @param {XY} that\r\n   */\r\n  swap(that: XY) {\r\n    const x = this.x,\r\n      y = this.y;\r\n    this.x = that.x;\r\n    this.y = that.y;\r\n    that.x = x;\r\n    that.y = y;\r\n  }\r\n\r\n  /**\r\n   * return a cloned instance of the point\r\n   * @return {Point}\r\n   */\r\n  clone(): Point {\r\n    return new Point(this.x, this.y);\r\n  }\r\n\r\n  /**\r\n   * Rotates `point` around `origin` with `radians`\r\n   * @static\r\n   * @memberOf fabric.util\r\n   * @param {XY} origin The origin of the rotation\r\n   * @param {TRadian} radians The radians of the angle for the rotation\r\n   * @return {Point} The new rotated point\r\n   */\r\n  rotate(radians: TRadian, origin: XY = ZERO): Point {\r\n    // TODO benchmark and verify the add and subtract how much cost\r\n    // and then in case early return if no origin is passed\r\n    const sinus = sin(radians),\r\n      cosinus = cos(radians);\r\n    const p = this.subtract(origin);\r\n    const rotated = new Point(\r\n      p.x * cosinus - p.y * sinus,\r\n      p.x * sinus + p.y * cosinus\r\n    );\r\n    return rotated.add(origin);\r\n  }\r\n\r\n  /**\r\n   * Apply transform t to point p\r\n   * @static\r\n   * @memberOf fabric.util\r\n   * @param  {TMat2D} t The transform\r\n   * @param  {Boolean} [ignoreOffset] Indicates that the offset should not be applied\r\n   * @return {Point} The transformed point\r\n   */\r\n  transform(t: TMat2D, ignoreOffset = false): Point {\r\n    return new Point(\r\n      t[0] * this.x + t[2] * this.y + (ignoreOffset ? 0 : t[4]),\r\n      t[1] * this.x + t[3] * this.y + (ignoreOffset ? 0 : t[5])\r\n    );\r\n  }\r\n}\r\n\r\nexport const ZERO = new Point(0, 0);\r\n","import type { Constructor, TBBox } from './typedefs';\r\nimport { removeFromArray } from './util/internals';\r\nimport { Point } from './Point';\r\nimport type { ActiveSelection } from './shapes/ActiveSelection';\r\nimport type { Group } from './shapes/Group';\r\nimport type { InteractiveFabricObject } from './shapes/Object/InteractiveObject';\r\nimport type { FabricObject } from './shapes/Object/FabricObject';\r\n\r\nexport const isCollection = (\r\n  fabricObject?: FabricObject\r\n): fabricObject is Group | ActiveSelection => {\r\n  return !!fabricObject && Array.isArray((fabricObject as Group)._objects);\r\n};\r\n\r\nexport function createCollectionMixin<TBase extends Constructor>(Base: TBase) {\r\n  class Collection extends Base {\r\n    /**\r\n     * @type {FabricObject[]}\r\n     * @TODO needs to end up in the constructor too\r\n     */\r\n    _objects: FabricObject[] = [];\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    _onObjectAdded(object: FabricObject) {\r\n      // subclasses should override this method\r\n    }\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    _onObjectRemoved(object: FabricObject) {\r\n      // subclasses should override this method\r\n    }\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    _onStackOrderChanged(object: FabricObject) {\r\n      // subclasses should override this method\r\n    }\r\n\r\n    /**\r\n     * Adds objects to collection\r\n     * Objects should be instances of (or inherit from) FabricObject\r\n     * @param {...FabricObject[]} objects to add\r\n     * @returns {number} new array length\r\n     */\r\n    add(...objects: FabricObject[]): number {\r\n      const size = this._objects.push(...objects);\r\n      objects.forEach((object) => this._onObjectAdded(object));\r\n      return size;\r\n    }\r\n\r\n    /**\r\n     * Inserts an object into collection at specified index\r\n     * @param {number} index Index to insert object at\r\n     * @param {...FabricObject[]} objects Object(s) to insert\r\n     * @returns {number} new array length\r\n     */\r\n    insertAt(index: number, ...objects: FabricObject[]) {\r\n      this._objects.splice(index, 0, ...objects);\r\n      objects.forEach((object) => this._onObjectAdded(object));\r\n      return this._objects.length;\r\n    }\r\n\r\n    /**\r\n     * Removes objects from a collection, then renders canvas (if `renderOnAddRemove` is not `false`)\r\n     * @private\r\n     * @param {...FabricObject[]} objects objects to remove\r\n     * @returns {FabricObject[]} removed objects\r\n     */\r\n    remove(...objects: FabricObject[]) {\r\n      const array = this._objects,\r\n        removed: FabricObject[] = [];\r\n      objects.forEach((object) => {\r\n        const index = array.indexOf(object);\r\n        // only call onObjectRemoved if an object was actually removed\r\n        if (index !== -1) {\r\n          array.splice(index, 1);\r\n          removed.push(object);\r\n          this._onObjectRemoved(object);\r\n        }\r\n      });\r\n      return removed;\r\n    }\r\n\r\n    /**\r\n     * Executes given function for each object in this group\r\n     * A simple shortcut for getObjects().forEach, before es6 was more complicated,\r\n     * now is just a shortcut.\r\n     * @param {Function} callback\r\n     *                   Callback invoked with current object as first argument,\r\n     *                   index - as second and an array of all objects - as third.\r\n     */\r\n    forEachObject(\r\n      callback: (\r\n        object: FabricObject,\r\n        index: number,\r\n        array: FabricObject[]\r\n      ) => any\r\n    ) {\r\n      this.getObjects().forEach((object, index, objects) =>\r\n        callback(object, index, objects)\r\n      );\r\n    }\r\n\r\n    /**\r\n     * Returns an array of children objects of this instance\r\n     * @param {...String} [types] When specified, only objects of these types are returned\r\n     * @return {Array}\r\n     */\r\n    getObjects(...types: string[]) {\r\n      if (types.length === 0) {\r\n        return [...this._objects];\r\n      }\r\n      return this._objects.filter((o) => o.isType(...types));\r\n    }\r\n\r\n    /**\r\n     * Returns object at specified index\r\n     * @param {Number} index\r\n     * @return {Object} object at index\r\n     */\r\n    item(index: number) {\r\n      return this._objects[index];\r\n    }\r\n\r\n    /**\r\n     * Returns true if collection contains no objects\r\n     * @return {Boolean} true if collection is empty\r\n     */\r\n    isEmpty() {\r\n      return this._objects.length === 0;\r\n    }\r\n\r\n    /**\r\n     * Returns a size of a collection (i.e: length of an array containing its objects)\r\n     * @return {Number} Collection size\r\n     */\r\n    size() {\r\n      return this._objects.length;\r\n    }\r\n\r\n    /**\r\n     * Returns true if collection contains an object.\\\r\n     * **Prefer using {@link FabricObject#isDescendantOf} for performance reasons**\r\n     * instead of `a.contains(b)` use `b.isDescendantOf(a)`\r\n     * @param {Object} object Object to check against\r\n     * @param {Boolean} [deep=false] `true` to check all descendants, `false` to check only `_objects`\r\n     * @return {Boolean} `true` if collection contains an object\r\n     */\r\n    contains(object: FabricObject, deep?: boolean): boolean {\r\n      if (this._objects.includes(object)) {\r\n        return true;\r\n      } else if (deep) {\r\n        return this._objects.some(\r\n          (obj) =>\r\n            obj instanceof Collection &&\r\n            (obj as unknown as Collection).contains(object, true)\r\n        );\r\n      }\r\n      return false;\r\n    }\r\n\r\n    /**\r\n     * Returns number representation of a collection complexity\r\n     * @return {Number} complexity\r\n     */\r\n    complexity() {\r\n      return this._objects.reduce((memo, current) => {\r\n        memo += current.complexity ? current.complexity() : 0;\r\n        return memo;\r\n      }, 0);\r\n    }\r\n\r\n    /**\r\n     * Moves an object or the objects of a multiple selection\r\n     * to the bottom of the stack of drawn objects\r\n     * @param {fabric.Object} object Object to send to back\r\n     * @returns {boolean} true if change occurred\r\n     */\r\n    sendObjectToBack(object: FabricObject) {\r\n      if (!object || object === this._objects[0]) {\r\n        return false;\r\n      }\r\n      removeFromArray(this._objects, object);\r\n      this._objects.unshift(object);\r\n      this._onStackOrderChanged(object);\r\n      return true;\r\n    }\r\n\r\n    /**\r\n     * Moves an object or the objects of a multiple selection\r\n     * to the top of the stack of drawn objects\r\n     * @param {fabric.Object} object Object to send\r\n     * @returns {boolean} true if change occurred\r\n     */\r\n    bringObjectToFront(object: FabricObject) {\r\n      if (!object || object === this._objects[this._objects.length - 1]) {\r\n        return false;\r\n      }\r\n      removeFromArray(this._objects, object);\r\n      this._objects.push(object);\r\n      this._onStackOrderChanged(object);\r\n      return true;\r\n    }\r\n\r\n    /**\r\n     * Moves an object or a selection down in stack of drawn objects\r\n     * An optional parameter, `intersecting` allows to move the object in behind\r\n     * the first intersecting object. Where intersection is calculated with\r\n     * bounding box. If no intersection is found, there will not be change in the\r\n     * stack.\r\n     * @param {fabric.Object} object Object to send\r\n     * @param {boolean} [intersecting] If `true`, send object behind next lower intersecting object\r\n     * @returns {boolean} true if change occurred\r\n     */\r\n    sendObjectBackwards(object: FabricObject, intersecting?: boolean) {\r\n      if (!object) {\r\n        return false;\r\n      }\r\n      const idx = this._objects.indexOf(object);\r\n      if (idx !== 0) {\r\n        // if object is not on the bottom of stack\r\n        const newIdx = this.findNewLowerIndex(object, idx, intersecting);\r\n        removeFromArray(this._objects, object);\r\n        this._objects.splice(newIdx, 0, object);\r\n        this._onStackOrderChanged(object);\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n\r\n    /**\r\n     * Moves an object or a selection up in stack of drawn objects\r\n     * An optional parameter, intersecting allows to move the object in front\r\n     * of the first intersecting object. Where intersection is calculated with\r\n     * bounding box. If no intersection is found, there will not be change in the\r\n     * stack.\r\n     * @param {fabric.Object} object Object to send\r\n     * @param {boolean} [intersecting] If `true`, send object in front of next upper intersecting object\r\n     * @returns {boolean} true if change occurred\r\n     */\r\n    bringObjectForward(object: FabricObject, intersecting?: boolean) {\r\n      if (!object) {\r\n        return false;\r\n      }\r\n      const idx = this._objects.indexOf(object);\r\n      if (idx !== this._objects.length - 1) {\r\n        // if object is not on top of stack (last item in an array)\r\n        const newIdx = this.findNewUpperIndex(object, idx, intersecting);\r\n        removeFromArray(this._objects, object);\r\n        this._objects.splice(newIdx, 0, object);\r\n        this._onStackOrderChanged(object);\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n\r\n    /**\r\n     * Moves an object to specified level in stack of drawn objects\r\n     * @param {fabric.Object} object Object to send\r\n     * @param {number} index Position to move to\r\n     * @returns {boolean} true if change occurred\r\n     */\r\n    moveObjectTo(object: FabricObject, index: number) {\r\n      if (object === this._objects[index]) {\r\n        return false;\r\n      }\r\n      removeFromArray(this._objects, object);\r\n      this._objects.splice(index, 0, object);\r\n      this._onStackOrderChanged(object);\r\n      return true;\r\n    }\r\n\r\n    findNewLowerIndex(\r\n      object: FabricObject,\r\n      idx: number,\r\n      intersecting?: boolean\r\n    ) {\r\n      let newIdx;\r\n\r\n      if (intersecting) {\r\n        newIdx = idx;\r\n        // traverse down the stack looking for the nearest intersecting object\r\n        for (let i = idx - 1; i >= 0; --i) {\r\n          if (object.isOverlapping(this._objects[i])) {\r\n            newIdx = i;\r\n            break;\r\n          }\r\n        }\r\n      } else {\r\n        newIdx = idx - 1;\r\n      }\r\n\r\n      return newIdx;\r\n    }\r\n\r\n    findNewUpperIndex(\r\n      object: FabricObject,\r\n      idx: number,\r\n      intersecting?: boolean\r\n    ) {\r\n      let newIdx;\r\n\r\n      if (intersecting) {\r\n        newIdx = idx;\r\n        // traverse up the stack looking for the nearest intersecting object\r\n        for (let i = idx + 1; i < this._objects.length; ++i) {\r\n          if (object.isOverlapping(this._objects[i])) {\r\n            newIdx = i;\r\n            break;\r\n          }\r\n        }\r\n      } else {\r\n        newIdx = idx + 1;\r\n      }\r\n\r\n      return newIdx;\r\n    }\r\n\r\n    /**\r\n     * Given a bounding box, return all the objects of the collection that are contained in the bounding box.\r\n     * If `includeIntersecting` is true, return also the objects that intersect the bounding box as well.\r\n     * This is meant to work with selection. Is not a generic method.\r\n     * @param {TBBox} bbox a bounding box in scene coordinates\r\n     * @param {{ includeIntersecting?: boolean }} options an object with includeIntersecting\r\n     * @returns array of objects contained in the bounding box, ordered from top to bottom stacking wise\r\n     */\r\n    collectObjects(\r\n      { left, top, width, height }: TBBox,\r\n      { includeIntersecting = true }: { includeIntersecting?: boolean } = {}\r\n    ) {\r\n      const objects: InteractiveFabricObject[] = [],\r\n        tl = new Point(left, top),\r\n        br = tl.add(new Point(width, height));\r\n\r\n      // we iterate reverse order to collect top first in case of click.\r\n      for (let i = this._objects.length - 1; i >= 0; i--) {\r\n        const object = this._objects[i] as unknown as InteractiveFabricObject;\r\n        if (\r\n          object.selectable &&\r\n          object.visible &&\r\n          ((includeIntersecting && object.intersectsWithRect(tl, br)) ||\r\n            object.isContainedWithinRect(tl, br) ||\r\n            (includeIntersecting && object.containsPoint(tl)) ||\r\n            (includeIntersecting && object.containsPoint(br)))\r\n        ) {\r\n          objects.push(object);\r\n        }\r\n      }\r\n\r\n      return objects;\r\n    }\r\n  }\r\n\r\n  // https://github.com/microsoft/TypeScript/issues/32080\r\n  return Collection as typeof Collection & TBase;\r\n}\r\n","import { Observable } from './Observable';\r\n\r\nexport class CommonMethods<EventSpec> extends Observable<EventSpec> {\r\n  /**\r\n   * Sets object's properties from options, for initialization only\r\n   * @protected\r\n   * @param {Object} [options] Options object\r\n   */\r\n  protected _setOptions(options: any = {}) {\r\n    for (const prop in options) {\r\n      this.set(prop, options[prop]);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _setObject(obj: Record<string, any>) {\r\n    for (const prop in obj) {\r\n      this._set(prop, obj[prop]);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sets property to a given value. When changing position/dimension -related properties (left, top, scale, angle, etc.) `set` does not update position of object's borders/controls. If you need to update those, call `setCoords()`.\r\n   * @param {String|Object} key Property name or object (if object, iterate over the object properties)\r\n   * @param {Object|Function} value Property value (if function, the value is passed into it and its return value is used as a new one)\r\n   */\r\n  set(key: string | Record<string, any>, value?: any) {\r\n    if (typeof key === 'object') {\r\n      this._setObject(key);\r\n    } else {\r\n      this._set(key, value);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  _set(key: string, value: any) {\r\n    this[key as keyof this] = value;\r\n  }\r\n\r\n  /**\r\n   * Toggles specified property from `true` to `false` or from `false` to `true`\r\n   * @param {String} property Property to toggle\r\n   */\r\n  toggle(property: string) {\r\n    const value = this.get(property);\r\n    if (typeof value === 'boolean') {\r\n      this.set(property, !value);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Basic getter\r\n   * @param {String} property Property name\r\n   * @return {*} value of a property\r\n   */\r\n  get(property: string): any {\r\n    return this[property as keyof this];\r\n  }\r\n}\r\n","import { getFabricWindow } from '../../env';\r\n\r\nexport function requestAnimFrame(callback: FrameRequestCallback): number {\r\n  return getFabricWindow().requestAnimationFrame(callback);\r\n}\r\n\r\nexport function cancelAnimFrame(handle: number): void {\r\n  return getFabricWindow().cancelAnimationFrame(handle);\r\n}\r\n","let id = 0;\r\n\r\nexport const uid = () => id++;\r\n","import { getFabricDocument } from '../../env';\r\nimport type { ImageFormat } from '../../typedefs';\r\nimport { FabricError } from '../internals/console';\r\n/**\r\n * Creates canvas element\r\n * @return {CanvasElement} initialized canvas element\r\n */\r\nexport const createCanvasElement = (): HTMLCanvasElement => {\r\n  const element = getFabricDocument().createElement('canvas');\r\n  if (!element || typeof element.getContext === 'undefined') {\r\n    throw new FabricError('Failed to create `canvas` element');\r\n  }\r\n  return element;\r\n};\r\n\r\n/**\r\n * Creates image element (works on client and node)\r\n * @return {HTMLImageElement} HTML image element\r\n */\r\nexport const createImage = (): HTMLImageElement =>\r\n  getFabricDocument().createElement('img');\r\n\r\n/**\r\n * Creates a canvas element that is a copy of another and is also painted\r\n * @param {CanvasElement} canvas to copy size and content of\r\n * @return {CanvasElement} initialized canvas element\r\n */\r\nexport const copyCanvasElement = (\r\n  canvas: HTMLCanvasElement\r\n): HTMLCanvasElement => {\r\n  const newCanvas = createCanvasElement();\r\n  newCanvas.width = canvas.width;\r\n  newCanvas.height = canvas.height;\r\n  newCanvas.getContext('2d')?.drawImage(canvas, 0, 0);\r\n  return newCanvas;\r\n};\r\n\r\n/**\r\n * since 2.6.0 moved from canvas instance to utility.\r\n * possibly useless\r\n * @param {CanvasElement} canvasEl to copy size and content of\r\n * @param {String} format 'jpeg' or 'png', in some browsers 'webp' is ok too\r\n * @param {Number} quality <= 1 and > 0\r\n * @return {String} data url\r\n */\r\nexport const toDataURL = (\r\n  canvasEl: HTMLCanvasElement,\r\n  format: ImageFormat,\r\n  quality: number\r\n) => canvasEl.toDataURL(`image/${format}`, quality);\r\n\r\nexport const isHTMLCanvas = (\r\n  canvas?: HTMLCanvasElement | string\r\n): canvas is HTMLCanvasElement => {\r\n  return !!canvas && (canvas as HTMLCanvasElement).getContext !== undefined;\r\n};\r\n","import type { TRadian, TDegree } from '../../typedefs';\r\nimport { PiBy180 } from '../../constants';\r\n\r\n/**\r\n * Transforms degrees to radians.\r\n * @param {TDegree} degrees value in degrees\r\n * @return {TRadian} value in radians\r\n */\r\nexport const degreesToRadians = (degrees: TDegree): TRadian =>\r\n  (degrees * PiBy180) as TRadian;\r\n\r\n/**\r\n * Transforms radians to degrees.\r\n * @param {TRadian} radians value in radians\r\n * @return {TDegree} value in degrees\r\n */\r\nexport const radiansToDegrees = (radians: TRadian): TDegree =>\r\n  (radians / PiBy180) as TDegree;\r\n","import { iMatrix } from '../../constants';\r\nimport type { XY } from '../../Point';\r\nimport { Point } from '../../Point';\r\nimport type { TDegree, TRadian, TMat2D } from '../../typedefs';\r\nimport { cos } from './cos';\r\nimport { degreesToRadians, radiansToDegrees } from './radiansDegreesConversion';\r\nimport { sin } from './sin';\r\n\r\nexport type TRotateMatrixArgs = {\r\n  angle?: TDegree;\r\n};\r\n\r\nexport type TTranslateMatrixArgs = {\r\n  translateX?: number;\r\n  translateY?: number;\r\n};\r\n\r\nexport type TScaleMatrixArgs = {\r\n  scaleX?: number;\r\n  scaleY?: number;\r\n  flipX?: boolean;\r\n  flipY?: boolean;\r\n  skewX?: TDegree;\r\n  skewY?: TDegree;\r\n};\r\n\r\nexport type TComposeMatrixArgs = TTranslateMatrixArgs &\r\n  TRotateMatrixArgs &\r\n  TScaleMatrixArgs;\r\n\r\nexport type TQrDecomposeOut = Required<\r\n  Omit<TComposeMatrixArgs, 'flipX' | 'flipY'>\r\n>;\r\n\r\nexport const isIdentityMatrix = (mat: TMat2D) =>\r\n  mat.every((value, index) => value === iMatrix[index]);\r\n\r\n/**\r\n * Apply transform t to point p\r\n * @deprecated use {@link Point#transform}\r\n * @param  {Point | XY} p The point to transform\r\n * @param  {Array} t The transform\r\n * @param  {Boolean} [ignoreOffset] Indicates that the offset should not be applied\r\n * @return {Point} The transformed point\r\n */\r\nexport const transformPoint = (\r\n  p: XY,\r\n  t: TMat2D,\r\n  ignoreOffset?: boolean\r\n): Point => new Point(p).transform(t, ignoreOffset);\r\n\r\n/**\r\n * Invert transformation t\r\n * @param {Array} t The transform\r\n * @return {Array} The inverted transform\r\n */\r\nexport const invertTransform = (t: TMat2D): TMat2D => {\r\n  const a = 1 / (t[0] * t[3] - t[1] * t[2]),\r\n    r = [a * t[3], -a * t[1], -a * t[2], a * t[0], 0, 0] as TMat2D,\r\n    { x, y } = new Point(t[4], t[5]).transform(r, true);\r\n  r[4] = -x;\r\n  r[5] = -y;\r\n  return r;\r\n};\r\n\r\n/**\r\n * Multiply matrix A by matrix B to nest transformations\r\n * @param  {TMat2D} a First transformMatrix\r\n * @param  {TMat2D} b Second transformMatrix\r\n * @param  {Boolean} is2x2 flag to multiply matrices as 2x2 matrices\r\n * @return {TMat2D} The product of the two transform matrices\r\n */\r\nexport const multiplyTransformMatrices = (\r\n  a: TMat2D,\r\n  b: TMat2D,\r\n  is2x2?: boolean\r\n): TMat2D =>\r\n  [\r\n    a[0] * b[0] + a[2] * b[1],\r\n    a[1] * b[0] + a[3] * b[1],\r\n    a[0] * b[2] + a[2] * b[3],\r\n    a[1] * b[2] + a[3] * b[3],\r\n    is2x2 ? 0 : a[0] * b[4] + a[2] * b[5] + a[4],\r\n    is2x2 ? 0 : a[1] * b[4] + a[3] * b[5] + a[5],\r\n  ] as TMat2D;\r\n\r\n/**\r\n * Multiplies {@link matrices} such that a matrix defines the plane for the rest of the matrices **after** it\r\n *\r\n * `multiplyTransformMatrixArray([A, B, C, D])` is equivalent to `A(B(C(D)))`\r\n *\r\n * @param matrices an array of matrices\r\n * @param [is2x2] flag to multiply matrices as 2x2 matrices\r\n * @returns the multiplication product\r\n */\r\nexport const multiplyTransformMatrixArray = (\r\n  matrices: (TMat2D | undefined | null | false)[],\r\n  is2x2?: boolean\r\n) =>\r\n  matrices.reduceRight(\r\n    (product: TMat2D, curr) =>\r\n      curr && product\r\n        ? multiplyTransformMatrices(curr, product, is2x2)\r\n        : curr || product,\r\n    undefined as unknown as TMat2D\r\n  ) || iMatrix.concat();\r\n\r\nexport const calcPlaneRotation = ([a, b]: TMat2D) =>\r\n  Math.atan2(b, a) as TRadian;\r\n\r\n/**\r\n * Decomposes standard 2x3 matrix into transform components\r\n * @param  {TMat2D} a transformMatrix\r\n * @return {Object} Components of transform\r\n */\r\nexport const qrDecompose = (a: TMat2D): TQrDecomposeOut => {\r\n  const angle = calcPlaneRotation(a),\r\n    denom = Math.pow(a[0], 2) + Math.pow(a[1], 2),\r\n    scaleX = Math.sqrt(denom),\r\n    scaleY = (a[0] * a[3] - a[2] * a[1]) / scaleX,\r\n    skewX = Math.atan2(a[0] * a[2] + a[1] * a[3], denom);\r\n  return {\r\n    angle: radiansToDegrees(angle),\r\n    scaleX,\r\n    scaleY,\r\n    skewX: radiansToDegrees(skewX),\r\n    skewY: 0 as TDegree,\r\n    translateX: a[4] || 0,\r\n    translateY: a[5] || 0,\r\n  };\r\n};\r\n\r\n/**\r\n * Generate a translation matrix\r\n *\r\n * A translation matrix in the form of\r\n * [ 1 0 x ]\r\n * [ 0 1 y ]\r\n * [ 0 0 1 ]\r\n *\r\n * See @link https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/transform#translate for more details\r\n *\r\n * @param {number} x translation on X axis\r\n * @param {number} [y] translation on Y axis\r\n * @returns {TMat2D} matrix\r\n */\r\nexport const createTranslateMatrix = (x: number, y = 0): TMat2D => [\r\n  1,\r\n  0,\r\n  0,\r\n  1,\r\n  x,\r\n  y,\r\n];\r\n\r\n/**\r\n * Generate a rotation matrix around around a point (x,y), defaulting to (0,0)\r\n *\r\n * A matrix in the form of\r\n * [cos(a) -sin(a) -x*cos(a)+y*sin(a)+x]\r\n * [sin(a)  cos(a) -x*sin(a)-y*cos(a)+y]\r\n * [0       0      1                 ]\r\n *\r\n *\r\n * @param {TDegree} angle rotation in degrees\r\n * @param {XY} [pivotPoint] pivot point to rotate around\r\n * @returns {TMat2D} matrix\r\n */\r\nexport function createRotateMatrix(\r\n  { angle = 0 }: TRotateMatrixArgs = {},\r\n  { x = 0, y = 0 }: Partial<XY> = {}\r\n): TMat2D {\r\n  const angleRadiant = degreesToRadians(angle),\r\n    cosValue = cos(angleRadiant),\r\n    sinValue = sin(angleRadiant);\r\n  return [\r\n    cosValue,\r\n    sinValue,\r\n    -sinValue,\r\n    cosValue,\r\n    x ? x - (cosValue * x - sinValue * y) : 0,\r\n    y ? y - (sinValue * x + cosValue * y) : 0,\r\n  ];\r\n}\r\n\r\n/**\r\n * Generate a scale matrix around the point (0,0)\r\n *\r\n * A matrix in the form of\r\n * [x 0 0]\r\n * [0 y 0]\r\n * [0 0 1]\r\n *\r\n * @link https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/transform#scale\r\n *\r\n * @param {number} x scale on X axis\r\n * @param {number} [y] scale on Y axis\r\n * @returns {TMat2D} matrix\r\n */\r\nexport const createScaleMatrix = (x: number, y: number = x): TMat2D => [\r\n  x,\r\n  0,\r\n  0,\r\n  y,\r\n  0,\r\n  0,\r\n];\r\n\r\nexport const angleToSkew = (angle: TDegree) =>\r\n  Math.tan(degreesToRadians(angle));\r\n\r\nexport const skewToAngle = (value: TRadian) =>\r\n  radiansToDegrees(Math.atan(value));\r\n\r\n/**\r\n * Generate a skew matrix for the X axis\r\n *\r\n * A matrix in the form of\r\n * [1 x 0]\r\n * [0 1 0]\r\n * [0 0 1]\r\n *\r\n * @link https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/transform#skewx\r\n *\r\n * @param {TDegree} skewValue translation on X axis\r\n * @returns {TMat2D} matrix\r\n */\r\nexport const createSkewXMatrix = (skewValue: TDegree): TMat2D => [\r\n  1,\r\n  0,\r\n  angleToSkew(skewValue),\r\n  1,\r\n  0,\r\n  0,\r\n];\r\n\r\n/**\r\n * Generate a skew matrix for the Y axis\r\n *\r\n * A matrix in the form of\r\n * [1 0 0]\r\n * [y 1 0]\r\n * [0 0 1]\r\n *\r\n * @link https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/transform#skewy\r\n *\r\n * @param {TDegree} skewValue translation on Y axis\r\n * @returns {TMat2D} matrix\r\n */\r\nexport const createSkewYMatrix = (skewValue: TDegree): TMat2D => [\r\n  1,\r\n  angleToSkew(skewValue),\r\n  0,\r\n  1,\r\n  0,\r\n  0,\r\n];\r\n\r\n/**\r\n * Returns a transform matrix starting from an object of the same kind of\r\n * the one returned from qrDecompose, useful also if you want to calculate some\r\n * transformations from an object that is not enlived yet.\r\n * is called DimensionsTransformMatrix because those properties are the one that influence\r\n * the size of the resulting box of the object.\r\n * @param  {Object} options\r\n * @param  {Number} [options.scaleX]\r\n * @param  {Number} [options.scaleY]\r\n * @param  {Boolean} [options.flipX]\r\n * @param  {Boolean} [options.flipY]\r\n * @param  {Number} [options.skewX]\r\n * @param  {Number} [options.skewY]\r\n * @return {Number[]} transform matrix\r\n */\r\nexport const calcDimensionsMatrix = ({\r\n  scaleX = 1,\r\n  scaleY = 1,\r\n  flipX = false,\r\n  flipY = false,\r\n  skewX = 0 as TDegree,\r\n  skewY = 0 as TDegree,\r\n}: TScaleMatrixArgs) => {\r\n  let matrix = createScaleMatrix(\r\n    flipX ? -scaleX : scaleX,\r\n    flipY ? -scaleY : scaleY\r\n  );\r\n  if (skewX) {\r\n    matrix = multiplyTransformMatrices(matrix, createSkewXMatrix(skewX), true);\r\n  }\r\n  if (skewY) {\r\n    matrix = multiplyTransformMatrices(matrix, createSkewYMatrix(skewY), true);\r\n  }\r\n  return matrix;\r\n};\r\n\r\n/**\r\n * Returns a transform matrix starting from an object of the same kind of\r\n * the one returned from qrDecompose, useful also if you want to calculate some\r\n * transformations from an object that is not enlived yet\r\n * Before changing this function look at: src/benchmarks/calcTransformMatrix.mjs\r\n * @param  {Object} options\r\n * @param  {Number} [options.angle]\r\n * @param  {Number} [options.scaleX]\r\n * @param  {Number} [options.scaleY]\r\n * @param  {Boolean} [options.flipX]\r\n * @param  {Boolean} [options.flipY]\r\n * @param  {Number} [options.skewX]\r\n * @param  {Number} [options.skewY]\r\n * @param  {Number} [options.translateX]\r\n * @param  {Number} [options.translateY]\r\n * @return {Number[]} transform matrix\r\n */\r\nexport const composeMatrix = (options: TComposeMatrixArgs): TMat2D => {\r\n  const { translateX = 0, translateY = 0, angle = 0 as TDegree } = options;\r\n  let matrix = createTranslateMatrix(translateX, translateY);\r\n  if (angle) {\r\n    matrix = multiplyTransformMatrices(matrix, createRotateMatrix({ angle }));\r\n  }\r\n  const scaleMatrix = calcDimensionsMatrix(options);\r\n  if (!isIdentityMatrix(scaleMatrix)) {\r\n    matrix = multiplyTransformMatrices(matrix, scaleMatrix);\r\n  }\r\n  return matrix;\r\n};\r\n","import { noop } from '../../constants';\r\nimport type { Pattern } from '../../Pattern';\r\nimport type { FabricObject } from '../../shapes/Object/FabricObject';\r\nimport type {\r\n  Abortable,\r\n  Constructor,\r\n  TCrossOrigin,\r\n  TFiller,\r\n} from '../../typedefs';\r\nimport { createImage } from './dom';\r\nimport { classRegistry } from '../../ClassRegistry';\r\nimport type { BaseFilter } from '../../filters/BaseFilter';\r\nimport type { FabricObject as BaseFabricObject } from '../../shapes/Object/Object';\r\nimport { FabricError, SignalAbortedError } from '../internals/console';\r\nimport type { Shadow } from '../../Shadow';\r\n\r\nexport type LoadImageOptions = Abortable & {\r\n  /**\r\n   * cors value for the image loading, default to anonymous\r\n   */\r\n  crossOrigin?: TCrossOrigin;\r\n};\r\n\r\n/**\r\n * Loads image element from given url and resolve it, or catch.\r\n * @param {String} url URL representing an image\r\n * @param {LoadImageOptions} [options] image loading options\r\n * @returns {Promise<HTMLImageElement>} the loaded image.\r\n */\r\nexport const loadImage = (\r\n  url: string,\r\n  { signal, crossOrigin = null }: LoadImageOptions = {}\r\n) =>\r\n  new Promise<HTMLImageElement>(function (resolve, reject) {\r\n    if (signal && signal.aborted) {\r\n      return reject(new SignalAbortedError('loadImage'));\r\n    }\r\n    const img = createImage();\r\n    let abort: EventListenerOrEventListenerObject;\r\n    if (signal) {\r\n      abort = function (err: Event) {\r\n        img.src = '';\r\n        reject(err);\r\n      };\r\n      signal.addEventListener('abort', abort, { once: true });\r\n    }\r\n    const done = function () {\r\n      img.onload = img.onerror = null;\r\n      abort && signal?.removeEventListener('abort', abort);\r\n      resolve(img);\r\n    };\r\n    if (!url) {\r\n      done();\r\n      return;\r\n    }\r\n    img.onload = done;\r\n    img.onerror = function () {\r\n      abort && signal?.removeEventListener('abort', abort);\r\n      reject(new FabricError(`Error loading ${img.src}`));\r\n    };\r\n    crossOrigin && (img.crossOrigin = crossOrigin);\r\n    img.src = url;\r\n  });\r\n\r\nexport type EnlivenObjectOptions = Abortable & {\r\n  /**\r\n   * Method for further parsing of object elements,\r\n   * called after each fabric object created.\r\n   */\r\n  reviver?: <\r\n    T extends\r\n      | BaseFabricObject\r\n      | FabricObject\r\n      | BaseFilter<string>\r\n      | Shadow\r\n      | TFiller\r\n  >(\r\n    serializedObj: Record<string, any>,\r\n    instance: T\r\n  ) => void;\r\n};\r\n\r\n/**\r\n * @TODO type this correctly.\r\n * Creates corresponding fabric instances from their object representations\r\n * @param {Object[]} objects Objects to enliven\r\n * @param {EnlivenObjectOptions} [options]\r\n * @param {(serializedObj: object, instance: FabricObject) => any} [options.reviver] Method for further parsing of object elements,\r\n * called after each fabric object created.\r\n * @param {AbortSignal} [options.signal] handle aborting, see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\r\n * @returns {Promise<FabricObject[]>}\r\n */\r\nexport const enlivenObjects = <\r\n  T extends\r\n    | BaseFabricObject\r\n    | FabricObject\r\n    | BaseFilter<string>\r\n    | Shadow\r\n    | TFiller\r\n>(\r\n  objects: any[],\r\n  { signal, reviver = noop }: EnlivenObjectOptions = {}\r\n) =>\r\n  new Promise<T[]>((resolve, reject) => {\r\n    const instances: T[] = [];\r\n    signal && signal.addEventListener('abort', reject, { once: true });\r\n    Promise.all(\r\n      objects.map((obj) =>\r\n        classRegistry\r\n          .getClass<\r\n            Constructor<T> & {\r\n              fromObject(options: any, context: Abortable): Promise<T>;\r\n            }\r\n          >(obj.type)\r\n          .fromObject(obj, { signal })\r\n          .then((fabricInstance) => {\r\n            reviver(obj, fabricInstance);\r\n            instances.push(fabricInstance);\r\n            return fabricInstance;\r\n          })\r\n      )\r\n    )\r\n      .then(resolve)\r\n      .catch((error) => {\r\n        // cleanup\r\n        instances.forEach((instance) => {\r\n          (instance as FabricObject).dispose &&\r\n            (instance as FabricObject).dispose();\r\n        });\r\n        reject(error);\r\n      })\r\n      .finally(() => {\r\n        signal && signal.removeEventListener('abort', reject);\r\n      });\r\n  });\r\n\r\n/**\r\n * Creates corresponding fabric instances residing in an object, e.g. `clipPath`\r\n * @param {Object} object with properties to enlive ( fill, stroke, clipPath, path )\r\n * @param {object} [options]\r\n * @param {AbortSignal} [options.signal] handle aborting, see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\r\n * @returns {Promise<Record<string, FabricObject | TFiller | null>>} the input object with enlived values\r\n */\r\nexport const enlivenObjectEnlivables = <\r\n  R = Record<string, FabricObject | TFiller | null>\r\n>(\r\n  serializedObject: any,\r\n  { signal }: Abortable = {}\r\n) =>\r\n  new Promise<R>((resolve, reject) => {\r\n    const instances: (FabricObject | TFiller | Shadow)[] = [];\r\n    signal && signal.addEventListener('abort', reject, { once: true });\r\n    // enlive every possible property\r\n    const promises = Object.values(serializedObject).map((value: any) => {\r\n      if (!value) {\r\n        return value;\r\n      }\r\n      // clipPath or shadow or gradient\r\n      if (value.type) {\r\n        return enlivenObjects<FabricObject | Shadow | TFiller>([value], {\r\n          signal,\r\n        }).then(([enlived]) => {\r\n          instances.push(enlived);\r\n          return enlived;\r\n        });\r\n      }\r\n      // pattern\r\n      if (value.source) {\r\n        return classRegistry\r\n          .getClass<typeof Pattern>('pattern')\r\n          .fromObject(value, { signal })\r\n          .then((pattern: Pattern) => {\r\n            instances.push(pattern);\r\n            return pattern;\r\n          });\r\n      }\r\n      return value;\r\n    });\r\n    const keys = Object.keys(serializedObject);\r\n    Promise.all(promises)\r\n      .then((enlived) => {\r\n        return enlived.reduce((acc, instance, index) => {\r\n          acc[keys[index]] = instance;\r\n          return acc;\r\n        }, {});\r\n      })\r\n      .then(resolve)\r\n      .catch((error) => {\r\n        // cleanup\r\n        instances.forEach((instance: any) => {\r\n          instance.dispose && instance.dispose();\r\n        });\r\n        reject(error);\r\n      })\r\n      .finally(() => {\r\n        signal && signal.removeEventListener('abort', reject);\r\n      });\r\n  });\r\n","/**\r\n * Populates an object with properties of another object\r\n * @param {Object} source Source object\r\n * @param {string[]} properties Properties names to include\r\n * @returns object populated with the picked keys\r\n */\r\nexport const pick = <T extends Record<string, any>>(\r\n  source: T,\r\n  keys: (keyof T)[] = []\r\n) => {\r\n  return keys.reduce((o, key) => {\r\n    if (key in source) {\r\n      o[key] = source[key];\r\n    }\r\n    return o;\r\n  }, {} as Partial<T>);\r\n};\r\n\r\nexport const pickBy = <T extends Record<string, any>>(\r\n  source: T,\r\n  predicate: <K extends keyof T>(value: T[K], key: K, collection: T) => boolean\r\n) => {\r\n  return (Object.keys(source) as (keyof T)[]).reduce((o, key) => {\r\n    if (predicate(source[key], key, source)) {\r\n      o[key] = source[key];\r\n    }\r\n    return o;\r\n  }, {} as Partial<T>);\r\n};\r\n","/**\r\n * Map of the 148 color names with HEX code\r\n * @see: https://www.w3.org/TR/css3-color/#svg-color\r\n */\r\nexport const ColorNameMap = {\r\n  aliceblue: '#F0F8FF',\r\n  antiquewhite: '#FAEBD7',\r\n  aqua: '#0FF',\r\n  aquamarine: '#7FFFD4',\r\n  azure: '#F0FFFF',\r\n  beige: '#F5F5DC',\r\n  bisque: '#FFE4C4',\r\n  black: '#000',\r\n  blanchedalmond: '#FFEBCD',\r\n  blue: '#00F',\r\n  blueviolet: '#8A2BE2',\r\n  brown: '#A52A2A',\r\n  burlywood: '#DEB887',\r\n  cadetblue: '#5F9EA0',\r\n  chartreuse: '#7FFF00',\r\n  chocolate: '#D2691E',\r\n  coral: '#FF7F50',\r\n  cornflowerblue: '#6495ED',\r\n  cornsilk: '#FFF8DC',\r\n  crimson: '#DC143C',\r\n  cyan: '#0FF',\r\n  darkblue: '#00008B',\r\n  darkcyan: '#008B8B',\r\n  darkgoldenrod: '#B8860B',\r\n  darkgray: '#A9A9A9',\r\n  darkgrey: '#A9A9A9',\r\n  darkgreen: '#006400',\r\n  darkkhaki: '#BDB76B',\r\n  darkmagenta: '#8B008B',\r\n  darkolivegreen: '#556B2F',\r\n  darkorange: '#FF8C00',\r\n  darkorchid: '#9932CC',\r\n  darkred: '#8B0000',\r\n  darksalmon: '#E9967A',\r\n  darkseagreen: '#8FBC8F',\r\n  darkslateblue: '#483D8B',\r\n  darkslategray: '#2F4F4F',\r\n  darkslategrey: '#2F4F4F',\r\n  darkturquoise: '#00CED1',\r\n  darkviolet: '#9400D3',\r\n  deeppink: '#FF1493',\r\n  deepskyblue: '#00BFFF',\r\n  dimgray: '#696969',\r\n  dimgrey: '#696969',\r\n  dodgerblue: '#1E90FF',\r\n  firebrick: '#B22222',\r\n  floralwhite: '#FFFAF0',\r\n  forestgreen: '#228B22',\r\n  fuchsia: '#F0F',\r\n  gainsboro: '#DCDCDC',\r\n  ghostwhite: '#F8F8FF',\r\n  gold: '#FFD700',\r\n  goldenrod: '#DAA520',\r\n  gray: '#808080',\r\n  grey: '#808080',\r\n  green: '#008000',\r\n  greenyellow: '#ADFF2F',\r\n  honeydew: '#F0FFF0',\r\n  hotpink: '#FF69B4',\r\n  indianred: '#CD5C5C',\r\n  indigo: '#4B0082',\r\n  ivory: '#FFFFF0',\r\n  khaki: '#F0E68C',\r\n  lavender: '#E6E6FA',\r\n  lavenderblush: '#FFF0F5',\r\n  lawngreen: '#7CFC00',\r\n  lemonchiffon: '#FFFACD',\r\n  lightblue: '#ADD8E6',\r\n  lightcoral: '#F08080',\r\n  lightcyan: '#E0FFFF',\r\n  lightgoldenrodyellow: '#FAFAD2',\r\n  lightgray: '#D3D3D3',\r\n  lightgrey: '#D3D3D3',\r\n  lightgreen: '#90EE90',\r\n  lightpink: '#FFB6C1',\r\n  lightsalmon: '#FFA07A',\r\n  lightseagreen: '#20B2AA',\r\n  lightskyblue: '#87CEFA',\r\n  lightslategray: '#789',\r\n  lightslategrey: '#789',\r\n  lightsteelblue: '#B0C4DE',\r\n  lightyellow: '#FFFFE0',\r\n  lime: '#0F0',\r\n  limegreen: '#32CD32',\r\n  linen: '#FAF0E6',\r\n  magenta: '#F0F',\r\n  maroon: '#800000',\r\n  mediumaquamarine: '#66CDAA',\r\n  mediumblue: '#0000CD',\r\n  mediumorchid: '#BA55D3',\r\n  mediumpurple: '#9370DB',\r\n  mediumseagreen: '#3CB371',\r\n  mediumslateblue: '#7B68EE',\r\n  mediumspringgreen: '#00FA9A',\r\n  mediumturquoise: '#48D1CC',\r\n  mediumvioletred: '#C71585',\r\n  midnightblue: '#191970',\r\n  mintcream: '#F5FFFA',\r\n  mistyrose: '#FFE4E1',\r\n  moccasin: '#FFE4B5',\r\n  navajowhite: '#FFDEAD',\r\n  navy: '#000080',\r\n  oldlace: '#FDF5E6',\r\n  olive: '#808000',\r\n  olivedrab: '#6B8E23',\r\n  orange: '#FFA500',\r\n  orangered: '#FF4500',\r\n  orchid: '#DA70D6',\r\n  palegoldenrod: '#EEE8AA',\r\n  palegreen: '#98FB98',\r\n  paleturquoise: '#AFEEEE',\r\n  palevioletred: '#DB7093',\r\n  papayawhip: '#FFEFD5',\r\n  peachpuff: '#FFDAB9',\r\n  peru: '#CD853F',\r\n  pink: '#FFC0CB',\r\n  plum: '#DDA0DD',\r\n  powderblue: '#B0E0E6',\r\n  purple: '#800080',\r\n  rebeccapurple: '#639',\r\n  red: '#F00',\r\n  rosybrown: '#BC8F8F',\r\n  royalblue: '#4169E1',\r\n  saddlebrown: '#8B4513',\r\n  salmon: '#FA8072',\r\n  sandybrown: '#F4A460',\r\n  seagreen: '#2E8B57',\r\n  seashell: '#FFF5EE',\r\n  sienna: '#A0522D',\r\n  silver: '#C0C0C0',\r\n  skyblue: '#87CEEB',\r\n  slateblue: '#6A5ACD',\r\n  slategray: '#708090',\r\n  slategrey: '#708090',\r\n  snow: '#FFFAFA',\r\n  springgreen: '#00FF7F',\r\n  steelblue: '#4682B4',\r\n  tan: '#D2B48C',\r\n  teal: '#008080',\r\n  thistle: '#D8BFD8',\r\n  tomato: '#FF6347',\r\n  turquoise: '#40E0D0',\r\n  violet: '#EE82EE',\r\n  wheat: '#F5DEB3',\r\n  white: '#FFF',\r\n  whitesmoke: '#F5F5F5',\r\n  yellow: '#FF0',\r\n  yellowgreen: '#9ACD32',\r\n};\r\n","import type { TRGBAColorSource } from './typedefs';\r\n\r\n/**\r\n * @param {Number} p\r\n * @param {Number} q\r\n * @param {Number} t\r\n * @return {Number}\r\n */\r\nexport const hue2rgb = (p: number, q: number, t: number): number => {\r\n  if (t < 0) {\r\n    t += 1;\r\n  }\r\n  if (t > 1) {\r\n    t -= 1;\r\n  }\r\n  if (t < 1 / 6) {\r\n    return p + (q - p) * 6 * t;\r\n  }\r\n  if (t < 1 / 2) {\r\n    return q;\r\n  }\r\n  if (t < 2 / 3) {\r\n    return p + (q - p) * (2 / 3 - t) * 6;\r\n  }\r\n  return p;\r\n};\r\n\r\n/**\r\n * Adapted from {@link https://gist.github.com/mjackson/5311256 https://gist.github.com/mjackson}\r\n * @param {Number} r Red color value\r\n * @param {Number} g Green color value\r\n * @param {Number} b Blue color value\r\n * @param {Number} a Alpha color value pass through\r\n * @return {TRGBColorSource} Hsl color\r\n */\r\nexport const rgb2Hsl = (\r\n  r: number,\r\n  g: number,\r\n  b: number,\r\n  a: number\r\n): TRGBAColorSource => {\r\n  r /= 255;\r\n  g /= 255;\r\n  b /= 255;\r\n  const maxValue = Math.max(r, g, b),\r\n    minValue = Math.min(r, g, b);\r\n\r\n  let h!: number, s: number;\r\n  const l = (maxValue + minValue) / 2;\r\n\r\n  if (maxValue === minValue) {\r\n    h = s = 0; // achromatic\r\n  } else {\r\n    const d = maxValue - minValue;\r\n    s = l > 0.5 ? d / (2 - maxValue - minValue) : d / (maxValue + minValue);\r\n    switch (maxValue) {\r\n      case r:\r\n        h = (g - b) / d + (g < b ? 6 : 0);\r\n        break;\r\n      case g:\r\n        h = (b - r) / d + 2;\r\n        break;\r\n      case b:\r\n        h = (r - g) / d + 4;\r\n        break;\r\n    }\r\n    h /= 6;\r\n  }\r\n\r\n  return [Math.round(h * 360), Math.round(s * 100), Math.round(l * 100), a];\r\n};\r\n\r\nexport const fromAlphaToFloat = (value = '1') =>\r\n  parseFloat(value) / (value.endsWith('%') ? 100 : 1);\r\n\r\n/**\r\n * Convert a value in the inclusive range [0, 255] to hex\r\n */\r\nexport const hexify = (value: number) =>\r\n  Math.min(Math.round(value), 255).toString(16).toUpperCase().padStart(2, '0');\r\n\r\n/**\r\n * Calculate the grey average value for rgb and pass through alpha\r\n */\r\nexport const greyAverage = ([\r\n  r,\r\n  g,\r\n  b,\r\n  a = 1,\r\n]: TRGBAColorSource): TRGBAColorSource => {\r\n  const avg = Math.round(r * 0.3 + g * 0.59 + b * 0.11);\r\n  return [avg, avg, avg, a];\r\n};\r\n","import { radiansToDegrees } from '../util/misc/radiansDegreesConversion';\r\nimport { ColorNameMap } from './color_map';\r\nimport { reHSLa, reHex, reRGBa } from './constants';\r\nimport type { TRGBAColorSource, TColorArg } from './typedefs';\r\nimport {\r\n  hue2rgb,\r\n  hexify,\r\n  rgb2Hsl,\r\n  fromAlphaToFloat,\r\n  greyAverage,\r\n} from './util';\r\n\r\n/**\r\n * @class Color common color operations\r\n * @tutorial {@link http://fabricjs.com/fabric-intro-part-2/#colors colors}\r\n */\r\nexport class Color {\r\n  private declare _source: TRGBAColorSource;\r\n  isUnrecognised = false;\r\n\r\n  /**\r\n   *\r\n   * @param {string} [color] optional in hex or rgb(a) or hsl format or from known color list\r\n   */\r\n  constructor(color?: TColorArg) {\r\n    if (!color) {\r\n      // we default to black as canvas does\r\n      this.setSource([0, 0, 0, 1]);\r\n    } else if (color instanceof Color) {\r\n      this.setSource([...color._source]);\r\n    } else if (Array.isArray(color)) {\r\n      const [r, g, b, a = 1] = color;\r\n      this.setSource([r, g, b, a]);\r\n    } else {\r\n      this.setSource(this._tryParsingColor(color));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {string} [color] Color value to parse\r\n   * @returns {TRGBAColorSource}\r\n   */\r\n  protected _tryParsingColor(color: string) {\r\n    if (color in ColorNameMap) {\r\n      color = ColorNameMap[color as keyof typeof ColorNameMap];\r\n    }\r\n    return color === 'transparent'\r\n      ? ([255, 255, 255, 0] as TRGBAColorSource)\r\n      : Color.sourceFromHex(color) ||\r\n          Color.sourceFromRgb(color) ||\r\n          Color.sourceFromHsl(color) ||\r\n          // color is not recognized\r\n          // we default to black as canvas does\r\n          ((this.isUnrecognised = true) && ([0, 0, 0, 1] as TRGBAColorSource));\r\n  }\r\n\r\n  /**\r\n   * Returns source of this color (where source is an array representation; ex: [200, 200, 100, 1])\r\n   * @return {TRGBAColorSource}\r\n   */\r\n  getSource() {\r\n    return this._source;\r\n  }\r\n\r\n  /**\r\n   * Sets source of this color (where source is an array representation; ex: [200, 200, 100, 1])\r\n   * @param {TRGBAColorSource} source\r\n   */\r\n  setSource(source: TRGBAColorSource) {\r\n    this._source = source;\r\n  }\r\n\r\n  /**\r\n   * Returns color representation in RGB format\r\n   * @return {String} ex: rgb(0-255,0-255,0-255)\r\n   */\r\n  toRgb() {\r\n    const [r, g, b] = this.getSource();\r\n    return `rgb(${r},${g},${b})`;\r\n  }\r\n\r\n  /**\r\n   * Returns color representation in RGBA format\r\n   * @return {String} ex: rgba(0-255,0-255,0-255,0-1)\r\n   */\r\n  toRgba() {\r\n    return `rgba(${this.getSource().join(',')})`;\r\n  }\r\n\r\n  /**\r\n   * Returns color representation in HSL format\r\n   * @return {String} ex: hsl(0-360,0%-100%,0%-100%)\r\n   */\r\n  toHsl() {\r\n    const [h, s, l] = rgb2Hsl(...this.getSource());\r\n    return `hsl(${h},${s}%,${l}%)`;\r\n  }\r\n\r\n  /**\r\n   * Returns color representation in HSLA format\r\n   * @return {String} ex: hsla(0-360,0%-100%,0%-100%,0-1)\r\n   */\r\n  toHsla() {\r\n    const [h, s, l, a] = rgb2Hsl(...this.getSource());\r\n    return `hsla(${h},${s}%,${l}%,${a})`;\r\n  }\r\n\r\n  /**\r\n   * Returns color representation in HEX format\r\n   * @return {String} ex: FF5555\r\n   */\r\n  toHex() {\r\n    const fullHex = this.toHexa();\r\n    return fullHex.slice(0, 6);\r\n  }\r\n\r\n  /**\r\n   * Returns color representation in HEXA format\r\n   * @return {String} ex: FF5555CC\r\n   */\r\n  toHexa() {\r\n    const [r, g, b, a] = this.getSource();\r\n    return `${hexify(r)}${hexify(g)}${hexify(b)}${hexify(Math.round(a * 255))}`;\r\n  }\r\n\r\n  /**\r\n   * Gets value of alpha channel for this color\r\n   * @return {Number} 0-1\r\n   */\r\n  getAlpha() {\r\n    return this.getSource()[3];\r\n  }\r\n\r\n  /**\r\n   * Sets value of alpha channel for this color\r\n   * @param {Number} alpha Alpha value 0-1\r\n   * @return {Color} thisArg\r\n   */\r\n  setAlpha(alpha: number) {\r\n    this._source[3] = alpha;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Transforms color to its grayscale representation\r\n   * @return {Color} thisArg\r\n   */\r\n  toGrayscale() {\r\n    this.setSource(greyAverage(this.getSource()));\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Transforms color to its black and white representation\r\n   * @param {Number} threshold\r\n   * @return {Color} thisArg\r\n   */\r\n  toBlackWhite(threshold: number) {\r\n    const [average, , , a] = greyAverage(this.getSource()),\r\n      bOrW = average < (threshold || 127) ? 0 : 255;\r\n    this.setSource([bOrW, bOrW, bOrW, a]);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Overlays color with another color\r\n   * @param {String|Color} otherColor\r\n   * @return {Color} thisArg\r\n   */\r\n  overlayWith(otherColor: string | Color) {\r\n    if (!(otherColor instanceof Color)) {\r\n      otherColor = new Color(otherColor);\r\n    }\r\n\r\n    const source = this.getSource(),\r\n      otherAlpha = 0.5,\r\n      otherSource = otherColor.getSource(),\r\n      [R, G, B] = source.map((value, index) =>\r\n        Math.round(value * (1 - otherAlpha) + otherSource[index] * otherAlpha)\r\n      );\r\n\r\n    this.setSource([R, G, B, source[3]]);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Returns new color object, when given a color in RGB format\r\n   * @memberOf Color\r\n   * @param {String} color Color value ex: rgb(0-255,0-255,0-255)\r\n   * @return {Color}\r\n   */\r\n  static fromRgb(color: string): Color {\r\n    return Color.fromRgba(color);\r\n  }\r\n\r\n  /**\r\n   * Returns new color object, when given a color in RGBA format\r\n   * @static\r\n   * @function\r\n   * @memberOf Color\r\n   * @param {String} color\r\n   * @return {Color}\r\n   */\r\n  static fromRgba(color: string): Color {\r\n    return new Color(Color.sourceFromRgb(color));\r\n  }\r\n\r\n  /**\r\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in RGB or RGBA format\r\n   * @memberOf Color\r\n   * @param {String} color Color value ex: rgb(0-255,0-255,0-255), rgb(0%-100%,0%-100%,0%-100%)\r\n   * @return {TRGBAColorSource | undefined} source\r\n   */\r\n  static sourceFromRgb(color: string): TRGBAColorSource | undefined {\r\n    const match = color.match(reRGBa());\r\n    if (match) {\r\n      const [r, g, b] = match.slice(1, 4).map((value) => {\r\n        const parsedValue = parseFloat(value);\r\n        return value.endsWith('%')\r\n          ? Math.round(parsedValue * 2.55)\r\n          : parsedValue;\r\n      });\r\n      return [r, g, b, fromAlphaToFloat(match[4])];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns new color object, when given a color in HSL format\r\n   * @param {String} color Color value ex: hsl(0-260,0%-100%,0%-100%)\r\n   * @memberOf Color\r\n   * @return {Color}\r\n   */\r\n  static fromHsl(color: string): Color {\r\n    return Color.fromHsla(color);\r\n  }\r\n\r\n  /**\r\n   * Returns new color object, when given a color in HSLA format\r\n   * @static\r\n   * @function\r\n   * @memberOf Color\r\n   * @param {String} color\r\n   * @return {Color}\r\n   */\r\n  static fromHsla(color: string): Color {\r\n    return new Color(Color.sourceFromHsl(color));\r\n  }\r\n\r\n  /**\r\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in HSL or HSLA format.\r\n   * Adapted from <a href=\"https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html\">https://github.com/mjijackson</a>\r\n   * @memberOf Color\r\n   * @param {String} color Color value ex: hsl(0-360,0%-100%,0%-100%) or hsla(0-360,0%-100%,0%-100%, 0-1)\r\n   * @return {TRGBAColorSource | undefined} source\r\n   * @see http://http://www.w3.org/TR/css3-color/#hsl-color\r\n   */\r\n  static sourceFromHsl(color: string): TRGBAColorSource | undefined {\r\n    const match = color.match(reHSLa());\r\n    if (!match) {\r\n      return;\r\n    }\r\n    const match1degrees = Color.parseAngletoDegrees(match[1]);\r\n\r\n    const h = (((match1degrees % 360) + 360) % 360) / 360,\r\n      s = parseFloat(match[2]) / 100,\r\n      l = parseFloat(match[3]) / 100;\r\n    let r: number, g: number, b: number;\r\n\r\n    if (s === 0) {\r\n      r = g = b = l;\r\n    } else {\r\n      const q = l <= 0.5 ? l * (s + 1) : l + s - l * s,\r\n        p = l * 2 - q;\r\n\r\n      r = hue2rgb(p, q, h + 1 / 3);\r\n      g = hue2rgb(p, q, h);\r\n      b = hue2rgb(p, q, h - 1 / 3);\r\n    }\r\n\r\n    return [\r\n      Math.round(r * 255),\r\n      Math.round(g * 255),\r\n      Math.round(b * 255),\r\n      fromAlphaToFloat(match[4]),\r\n    ];\r\n  }\r\n\r\n  /**\r\n   * Returns new color object, when given a color in HEX format\r\n   * @static\r\n   * @memberOf Color\r\n   * @param {String} color Color value ex: FF5555\r\n   * @return {Color}\r\n   */\r\n  static fromHex(color: string): Color {\r\n    return new Color(Color.sourceFromHex(color));\r\n  }\r\n\r\n  /**\r\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in HEX format\r\n   * @static\r\n   * @memberOf Color\r\n   * @param {String} color ex: FF5555 or FF5544CC (RGBa)\r\n   * @return {TRGBAColorSource | undefined} source\r\n   */\r\n  static sourceFromHex(color: string): TRGBAColorSource | undefined {\r\n    if (color.match(reHex())) {\r\n      const value = color.slice(color.indexOf('#') + 1),\r\n        isShortNotation = value.length <= 4;\r\n      let expandedValue: string[];\r\n      if (isShortNotation) {\r\n        expandedValue = value.split('').map((hex) => hex + hex);\r\n      } else {\r\n        expandedValue = value.match(/.{2}/g)!;\r\n      }\r\n      const [r, g, b, a = 255] = expandedValue.map((hexCouple) =>\r\n        parseInt(hexCouple, 16)\r\n      );\r\n      return [r, g, b, a / 255];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Converts a string that could be any angle notation (50deg, 0.5turn, 2rad)\r\n   * into degrees without the 'deg' suffix\r\n   * @static\r\n   * @memberOf Color\r\n   * @param {String} value ex: 0deg, 0.5turn, 2rad\r\n   * @return {Number} number in degrees or NaN if inputs are invalid\r\n   */\r\n  static parseAngletoDegrees(value: string): number {\r\n    const lowercase = value.toLowerCase();\r\n    const numeric = parseFloat(lowercase);\r\n\r\n    if (lowercase.includes('rad')) {\r\n      return radiansToDegrees(numeric);\r\n    }\r\n\r\n    if (lowercase.includes('turn')) {\r\n      return numeric * 360;\r\n    }\r\n\r\n    // Value is probably just a number already in degrees eg '50'\r\n    return numeric;\r\n  }\r\n}\r\n","/**\r\n * Regex matching color in RGB or RGBA formats (ex: `rgb(0, 0, 0)`, `rgba(255, 100, 10, 0.5)`, `rgba( 255 , 100 , 10 , 0.5 )`, `rgb(1,1,1)`, `rgba(100%, 60%, 10%, 0.5)`)\r\n * Also matching rgba(r g b / a) as per new specs\r\n * https://developer.mozilla.org/en-US/docs/Web/CSS/color_value/rgb\r\n * Formal syntax at the time of writing:\r\n * <rgb()> =\r\n *  rgb( [ <percentage> | none ]{3} [ / [ <alpha-value> | none ] ]? )  |\r\n *  rgb( [ <number> | none ]{3} [ / [ <alpha-value> | none ] ]? )\r\n * <alpha-value> = <number> | <percentage>\r\n *\r\n * For learners this is how you can read this regex\r\n * Regular expression for matching an rgba or rgb CSS color value\r\n *\r\n * /^          # Beginning of the string\r\n * rgba?       # \"rgb\" or \"rgba\"\r\n * \\(\\s*       # Opening parenthesis and optional whitespace\r\n * (\\d{0,3}    # 0 to three digits R channel\r\n *  (?:\\.\\d+)? # Optional decimal with one or more digits\r\n * )           # End of capturing group for the first color component\r\n * %?          # Optional percent sign after the first color component\r\n * \\s*         # Optional whitespace\r\n * [\\s|,]      # Separator between color components can be a space or comma\r\n * \\s*         # Optional whitespace\r\n * (\\d{0,3}    # 0 to three digits G channel\r\n *  (?:\\.\\d+)? # Optional decimal with one or more digits\r\n * )           # End of capturing group for the second color component\r\n * %?          # Optional percent sign after the second color component\r\n * \\s*         # Optional whitespace\r\n * [\\s|,]      # Separator between color components can be a space or comma\r\n * \\s*         # Optional whitespace\r\n * (\\d{0,3}    # 0 to three digits B channel\r\n *  (?:\\.\\d+)? # Optional decimal with one or more digits\r\n * )           # End of capturing group for the third color component\r\n * %?          # Optional percent sign after the third color component\r\n * \\s*         # Optional whitespace\r\n * (?:         # Beginning of non-capturing group for alpha value\r\n *  \\s*        # Optional whitespace\r\n *  [,/]       # Comma or slash separator for alpha value\r\n *  \\s*        # Optional whitespace\r\n *  (\\d{0,3}   # Zero to three digits\r\n *    (?:\\.\\d+)? # Optional decimal with one or more digits\r\n *  )          # End of capturing group for alpha value\r\n *  %?         # Optional percent sign after alpha value\r\n *  \\s*        # Optional whitespace\r\n * )?          # End of non-capturing group for alpha value (optional)\r\n * \\)          # Closing parenthesis\r\n * $           # End of the string\r\n *\r\n * The alpha channel can be in the format 0.4 .7 or 1 or 73%\r\n *\r\n * WARNING this regex doesn't fail on off spec colors. it matches everything that could be a color.\r\n * So the spec does not allow for `rgba(30 , 45%  35, 49%)` but this will work anyways for us\r\n */\r\nexport const reRGBa = () =>\r\n  /^rgba?\\(\\s*(\\d{0,3}(?:\\.\\d+)?%?)\\s*[\\s|,]\\s*(\\d{0,3}(?:\\.\\d+)?%?)\\s*[\\s|,]\\s*(\\d{0,3}(?:\\.\\d+)?%?)\\s*(?:\\s*[,/]\\s*(\\d{0,3}(?:\\.\\d+)?%?)\\s*)?\\)$/i;\r\n\r\n/**\r\n * Regex matching color in HSL or HSLA formats (ex: hsl(0, 0, 0), rgba(255, 100, 10, 0.5), rgba( 255 , 100 , 10 , 0.5 ), rgb(1,1,1), rgba(100%, 60%, 10%, 0.5))\r\n * Also matching rgba(r g b / a) as per new specs\r\n * https://developer.mozilla.org/en-US/docs/Web/CSS/color_value/hsl\r\n * Formal syntax at the time of writing:\r\n * <hsl()> =\r\n *   hsl( [ <hue> | none ] [ <percentage> | none ] [ <percentage> | none ] [ / [ <alpha-value> | none ] ]? )\r\n *\r\n * <hue> =\r\n *   <number>  |\r\n *   <angle>\r\n *\r\n * <alpha-value> =\r\n *   <number>      |\r\n *   <percentage>\r\n *\r\n * For learners this is how you can read this regex\r\n * Regular expression for matching an hsla or hsl CSS color value\r\n *\r\n * /^hsla?\\(         // Matches the beginning of the string and the opening parenthesis of \"hsl\" or \"hsla\"\r\n * \\s*               // Matches any whitespace characters (space, tab, etc.) zero or more times\r\n * (\\d{0,3}          // Hue: 0 to three digits - start capture in a group\r\n * (?:\\.\\d+)?        // Hue: Optional (non capture group) decimal with one or more digits.\r\n * (?:deg|turn|rad)? // Hue: Optionally include suffix deg or turn or rad\r\n * )                 // Hue: End capture group\r\n * \\s*               // Matches any whitespace characters zero or more times\r\n * [\\s|,]            // Matches a space, tab or comma\r\n * \\s*               // Matches any whitespace characters zero or more times\r\n * (\\d{0,3}          // Saturation: 0 to three digits - start capture in a group\r\n * (?:\\.\\d+)?        // Saturation: Optional decimal with one or more digits in a non-capturing group\r\n * %?)               // Saturation: match optional % character and end capture group\r\n * \\s*               // Matches any whitespace characters zero or more times\r\n * [\\s|,]            // Matches a space, tab or comma\r\n * \\s*               // Matches any whitespace characters zero or more times\r\n * (\\d{0,3}          // Lightness: 0 to three digits - start capture in a group\r\n * (?:\\.\\d+)?        // Lightness: Optional decimal with one or more digits in a non-capturing group\r\n * %?)                // Lightness: match % character and end capture group\r\n * \\s*               // Matches any whitespace characters zero or more times\r\n * (?:               // Alpha: Begins a non-capturing group for the alpha value\r\n *   \\s*             // Matches any whitespace characters zero or more times\r\n *   [,/]            // Matches a comma or forward slash\r\n *   \\s*             // Matches any whitespace characters zero or more times\r\n *   (\\d*(?:\\.\\d+)?%?) // Matches zero or more digits, optionally followed by a decimal point and one or more digits, followed by an optional percentage sign and captures it in a group\r\n *   \\s*             // Matches any whitespace characters zero or more times\r\n * )?                // Makes the alpha value group optional\r\n * \\)                // Matches the closing parenthesis\r\n * $/i               // Matches the end of the string and sets the regular expression to case-insensitive mode\r\n *\r\n * WARNING this regex doesn't fail on off spec colors. It matches everything that could be a color.\r\n * So the spec does not allow `hsl(30 , 45%  35, 49%)` but this will work anyways for us.\r\n */\r\nexport const reHSLa = () =>\r\n  /^hsla?\\(\\s*([+-]?\\d{0,3}(?:\\.\\d+)?(?:deg|turn|rad)?)\\s*[\\s|,]\\s*(\\d{0,3}(?:\\.\\d+)?%?)\\s*[\\s|,]\\s*(\\d{0,3}(?:\\.\\d+)?%?)\\s*(?:\\s*[,/]\\s*(\\d*(?:\\.\\d+)?%?)\\s*)?\\)$/i;\r\n\r\n/**\r\n * Regex matching color in HEX format (ex: #FF5544CC, #FF5555, 010155, aff)\r\n */\r\nexport const reHex = () => /^#?(([0-9a-f]){3,4}|([0-9a-f]{2}){3,4})$/i;\r\n","/**\r\n * A wrapper around Number#toFixed, which contrary to native method returns number, not string.\r\n * @param {number|string} number number to operate on\r\n * @param {number} fractionDigits number of fraction digits to \"leave\"\r\n * @return {number}\r\n */\r\nexport const toFixed = (number: number | string, fractionDigits: number) =>\r\n  parseFloat(Number(number).toFixed(fractionDigits));\r\n","import { Color } from '../../color/Color';\r\nimport { config } from '../../config';\r\nimport { DEFAULT_SVG_FONT_SIZE, FILL, NONE } from '../../constants';\r\nimport type {\r\n  TBBox,\r\n  TMat2D,\r\n  SVGElementName,\r\n  SupportedSVGUnit,\r\n} from '../../typedefs';\r\nimport { toFixed } from './toFixed';\r\n\r\n/**\r\n * Returns array of attributes for given svg that fabric parses\r\n * @param {SVGElementName} type Type of svg element (eg. 'circle')\r\n * @return {Array} string names of supported attributes\r\n */\r\nexport const getSvgAttributes = (type: SVGElementName) => {\r\n  const commonAttributes = ['instantiated_by_use', 'style', 'id', 'class'];\r\n  switch (type) {\r\n    case 'linearGradient':\r\n      return commonAttributes.concat([\r\n        'x1',\r\n        'y1',\r\n        'x2',\r\n        'y2',\r\n        'gradientUnits',\r\n        'gradientTransform',\r\n      ]);\r\n    case 'radialGradient':\r\n      return commonAttributes.concat([\r\n        'gradientUnits',\r\n        'gradientTransform',\r\n        'cx',\r\n        'cy',\r\n        'r',\r\n        'fx',\r\n        'fy',\r\n        'fr',\r\n      ]);\r\n    case 'stop':\r\n      return commonAttributes.concat(['offset', 'stop-color', 'stop-opacity']);\r\n  }\r\n  return commonAttributes;\r\n};\r\n\r\n/**\r\n * Converts from attribute value to pixel value if applicable.\r\n * Returns converted pixels or original value not converted.\r\n * @param {string} value number to operate on\r\n * @param {number} fontSize\r\n * @return {number}\r\n */\r\nexport const parseUnit = (value: string, fontSize = DEFAULT_SVG_FONT_SIZE) => {\r\n  const unit = /\\D{0,2}$/.exec(value),\r\n    number = parseFloat(value);\r\n  const dpi = config.DPI;\r\n  switch (unit?.[0] as SupportedSVGUnit) {\r\n    case 'mm':\r\n      return (number * dpi) / 25.4;\r\n\r\n    case 'cm':\r\n      return (number * dpi) / 2.54;\r\n\r\n    case 'in':\r\n      return number * dpi;\r\n\r\n    case 'pt':\r\n      return (number * dpi) / 72; // or * 4 / 3\r\n\r\n    case 'pc':\r\n      return ((number * dpi) / 72) * 12; // or * 16\r\n\r\n    case 'em':\r\n      return number * fontSize;\r\n\r\n    default:\r\n      return number;\r\n  }\r\n};\r\n\r\nexport type MeetOrSlice = 'meet' | 'slice';\r\n\r\nexport type MinMidMax = 'Min' | 'Mid' | 'Max' | 'none';\r\n\r\nexport type TPreserveArParsed = {\r\n  meetOrSlice: MeetOrSlice;\r\n  alignX: MinMidMax;\r\n  alignY: MinMidMax;\r\n};\r\n\r\n// align can be either none or undefined or a combination of mid/max\r\nconst parseAlign = (align: string): MinMidMax[] => {\r\n  //divide align in alignX and alignY\r\n  if (align && align !== NONE) {\r\n    return [align.slice(1, 4) as MinMidMax, align.slice(5, 8) as MinMidMax];\r\n  } else if (align === NONE) {\r\n    return [align, align];\r\n  }\r\n  return ['Mid', 'Mid'];\r\n};\r\n\r\n/**\r\n * Parse preserveAspectRatio attribute from element\r\n * https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/preserveAspectRatio\r\n * @param {string} attribute to be parsed\r\n * @return {Object} an object containing align and meetOrSlice attribute\r\n */\r\nexport const parsePreserveAspectRatioAttribute = (\r\n  attribute: string\r\n): TPreserveArParsed => {\r\n  const [firstPart, secondPart] = attribute.trim().split(' ') as [\r\n    MinMidMax,\r\n    MeetOrSlice | undefined\r\n  ];\r\n  const [alignX, alignY] = parseAlign(firstPart);\r\n  return {\r\n    meetOrSlice: secondPart || 'meet',\r\n    alignX,\r\n    alignY,\r\n  };\r\n};\r\n\r\n/**\r\n * given an array of 6 number returns something like `\"matrix(...numbers)\"`\r\n * @param {TMat2D} transform an array with 6 numbers\r\n * @return {String} transform matrix for svg\r\n */\r\nexport const matrixToSVG = (transform: TMat2D) =>\r\n  'matrix(' +\r\n  transform\r\n    .map((value) => toFixed(value, config.NUM_FRACTION_DIGITS))\r\n    .join(' ') +\r\n  ')';\r\n\r\n/**\r\n * Adobe Illustrator (at least CS5) is unable to render rgba()-based fill values\r\n * we work around it by \"moving\" alpha channel into opacity attribute and setting fill's alpha to 1\r\n * @param prop\r\n * @param value\r\n * @param {boolean} inlineStyle The default is inline style, the separator used is \":\", The other is \"=\"\r\n * @returns\r\n */\r\nexport const colorPropToSVG = (\r\n  prop: string,\r\n  value?: any,\r\n  inlineStyle = true\r\n) => {\r\n  let colorValue;\r\n  let opacityValue;\r\n  if (!value) {\r\n    colorValue = 'none';\r\n  } else if (value.toLive) {\r\n    colorValue = `url(#SVGID_${value.id})`;\r\n  } else {\r\n    const color = new Color(value),\r\n      opacity = color.getAlpha();\r\n\r\n    colorValue = color.toRgb();\r\n    if (opacity !== 1) {\r\n      opacityValue = opacity.toString();\r\n    }\r\n  }\r\n  if (inlineStyle) {\r\n    return `${prop}: ${colorValue}; ${\r\n      opacityValue ? `${prop}-opacity: ${opacityValue}; ` : ''\r\n    }`;\r\n  } else {\r\n    return `${prop}=\"${colorValue}\" ${\r\n      opacityValue ? `${prop}-opacity=\"${opacityValue}\" ` : ''\r\n    }`;\r\n  }\r\n};\r\n\r\nexport const createSVGRect = (\r\n  color: string,\r\n  { left, top, width, height }: TBBox,\r\n  precision = config.NUM_FRACTION_DIGITS\r\n) => {\r\n  const svgColor = colorPropToSVG(FILL, color, false);\r\n  const [x, y, w, h] = [left, top, width, height].map((value) =>\r\n    toFixed(value, precision)\r\n  );\r\n  return `<rect ${svgColor} x=\"${x}\" y=\"${y}\" width=\"${w}\" height=\"${h}\"></rect>`;\r\n};\r\n","import type { FabricObject } from '../shapes/Object/Object';\r\nimport type { TFiller } from '../typedefs';\r\nimport type { FabricText } from '../shapes/Text/Text';\r\nimport type { Pattern } from '../Pattern';\r\nimport type { Path } from '../shapes/Path';\r\nimport type { ActiveSelection } from '../shapes/ActiveSelection';\r\n\r\nexport const isFiller = (\r\n  filler: TFiller | string | null\r\n): filler is TFiller => {\r\n  return !!filler && (filler as TFiller).toLive !== undefined;\r\n};\r\n\r\nexport const isSerializableFiller = (\r\n  filler: TFiller | string | null\r\n): filler is TFiller => {\r\n  return !!filler && typeof (filler as TFiller).toObject === 'function';\r\n};\r\n\r\nexport const isPattern = (filler: TFiller): filler is Pattern => {\r\n  return (\r\n    !!filler && (filler as Pattern).offsetX !== undefined && 'source' in filler\r\n  );\r\n};\r\n\r\nexport const isTextObject = (\r\n  fabricObject?: FabricObject\r\n): fabricObject is FabricText => {\r\n  return (\r\n    !!fabricObject &&\r\n    typeof (fabricObject as FabricText)._renderText === 'function'\r\n  );\r\n};\r\n\r\nexport const isPath = (fabricObject?: FabricObject): fabricObject is Path => {\r\n  // we could use instanceof but that would mean pulling in Text code for a simple check\r\n  // @todo discuss what to do and how to do\r\n  return (\r\n    !!fabricObject &&\r\n    typeof (fabricObject as Path)._renderPathCommands === 'function'\r\n  );\r\n};\r\n\r\nexport const isActiveSelection = (\r\n  fabricObject?: FabricObject\r\n): fabricObject is ActiveSelection =>\r\n  !!fabricObject && 'multiSelectionStacking' in fabricObject;\r\n","/**\r\n * Returns element scroll offsets\r\n * @param {HTMLElement} element Element to operate on\r\n * @return {Object} Object with left/top values\r\n */\r\nexport function getScrollLeftTop(element: HTMLElement | null) {\r\n  const doc = element && getDocumentFromElement(element);\r\n  let left = 0,\r\n    top = 0;\r\n  if (!element || !doc) {\r\n    return { left, top };\r\n  }\r\n\r\n  const docElement = doc.documentElement,\r\n    body = doc.body || {\r\n      scrollLeft: 0,\r\n      scrollTop: 0,\r\n    };\r\n  // While loop checks (and then sets element to) .parentNode OR .host\r\n  //  to account for ShadowDOM. We still want to traverse up out of ShadowDOM,\r\n  //  but the .parentNode of a root ShadowDOM node will always be null, instead\r\n  //  it should be accessed through .host. See http://stackoverflow.com/a/24765528/4383938\r\n  // @ts-expect-error Set element to element parent, or 'host' in case of ShadowDOM\r\n  while (element && (element.parentNode || element.host)) {\r\n    // @ts-expect-error Set element to element parent, or 'host' in case of ShadowDOM\r\n    element = element.parentNode || element.host;\r\n    // @ts-expect-error because element is typed as HTMLElement but it can go up to document\r\n    if (element === doc) {\r\n      left = body.scrollLeft || docElement.scrollLeft || 0;\r\n      top = body.scrollTop || docElement.scrollTop || 0;\r\n    } else {\r\n      left += element!.scrollLeft || 0;\r\n      top += element!.scrollTop || 0;\r\n    }\r\n\r\n    if (element!.nodeType === 1 && element!.style.position === 'fixed') {\r\n      break;\r\n    }\r\n  }\r\n\r\n  return { left, top };\r\n}\r\n\r\nexport const getDocumentFromElement = (el: HTMLElement) =>\r\n  el.ownerDocument || null;\r\n\r\nexport const getWindowFromElement = (el: HTMLElement) =>\r\n  el.ownerDocument?.defaultView || null;\r\n","// TODO this file needs to go away, cross browser style support is not fabricjs domain.\r\n\r\n/**\r\n * wrapper for setting element's style\r\n * @param {HTMLElement} element\r\n * @param {Object | string} styles\r\n */\r\nexport function setStyle(\r\n  element: HTMLElement,\r\n  styles: string | Record<string, string>\r\n) {\r\n  const elementStyle = element.style;\r\n  if (!elementStyle) {\r\n    return;\r\n  } else if (typeof styles === 'string') {\r\n    element.style.cssText += ';' + styles;\r\n  } else {\r\n    Object.entries(styles).forEach(([property, value]) =>\r\n      elementStyle.setProperty(property, value)\r\n    );\r\n  }\r\n}\r\n","import { LEFT, NONE, TOP } from '../../constants';\r\nimport type { TSize } from '../../typedefs';\r\nimport {\r\n  getDocumentFromElement,\r\n  getWindowFromElement,\r\n  getScrollLeftTop,\r\n} from '../../util/dom_misc';\r\nimport { setStyle } from '../../util/dom_style';\r\n\r\nexport const setCanvasDimensions = (\r\n  el: HTMLCanvasElement,\r\n  ctx: CanvasRenderingContext2D,\r\n  { width, height }: TSize,\r\n  retinaScaling = 1\r\n) => {\r\n  el.width = width;\r\n  el.height = height;\r\n  if (retinaScaling > 1) {\r\n    el.setAttribute('width', (width * retinaScaling).toString());\r\n    el.setAttribute('height', (height * retinaScaling).toString());\r\n    ctx.scale(retinaScaling, retinaScaling);\r\n  }\r\n};\r\n\r\nexport function allowTouchScrolling(element: HTMLElement, allow: boolean) {\r\n  const touchAction = allow ? 'manipulation' : NONE;\r\n  setStyle(element, {\r\n    'touch-action': touchAction,\r\n    '-ms-touch-action': touchAction,\r\n  });\r\n}\r\n\r\nexport type CSSDimensions = {\r\n  width: number | string;\r\n  height: number | string;\r\n};\r\n\r\nexport const setCSSDimensions = (\r\n  el: HTMLElement,\r\n  { width, height }: Partial<CSSDimensions>\r\n) => {\r\n  width && (el.style.width = typeof width === 'number' ? `${width}px` : width);\r\n  height &&\r\n    (el.style.height = typeof height === 'number' ? `${height}px` : height);\r\n};\r\n\r\n/**\r\n * Returns offset for a given element\r\n * @param {HTMLElement} element Element to get offset for\r\n * @return {Object} Object with \"left\" and \"top\" properties\r\n */\r\nexport function getElementOffset(element: HTMLElement) {\r\n  let box = { left: 0, top: 0 };\r\n  const doc = element && getDocumentFromElement(element),\r\n    offset = { left: 0, top: 0 },\r\n    offsetAttributes = {\r\n      borderLeftWidth: LEFT,\r\n      borderTopWidth: TOP,\r\n      paddingLeft: LEFT,\r\n      paddingTop: TOP,\r\n    } as const;\r\n\r\n  if (!doc) {\r\n    return offset;\r\n  }\r\n  const elemStyle =\r\n    getWindowFromElement(element)?.getComputedStyle(element, null) || {};\r\n  for (const attr in offsetAttributes) {\r\n    // @ts-expect-error TS learn to iterate!\r\n    offset[offsetAttributes[attr]] += parseInt(elemStyle[attr], 10) || 0;\r\n  }\r\n\r\n  const docElem = doc.documentElement;\r\n  if (typeof element.getBoundingClientRect !== 'undefined') {\r\n    box = element.getBoundingClientRect();\r\n  }\r\n\r\n  const scrollLeftTop = getScrollLeftTop(element);\r\n\r\n  return {\r\n    left:\r\n      box.left + scrollLeftTop.left - (docElem.clientLeft || 0) + offset.left,\r\n    top: box.top + scrollLeftTop.top - (docElem.clientTop || 0) + offset.top,\r\n  };\r\n}\r\n\r\n/**\r\n * Makes element unselectable\r\n * @param {HTMLElement} element Element to make unselectable\r\n * @return {HTMLElement} Element that was passed in\r\n */\r\nexport function makeElementUnselectable(element: HTMLElement) {\r\n  if (typeof element.onselectstart !== 'undefined') {\r\n    element.onselectstart = () => false;\r\n  }\r\n  element.style.userSelect = NONE;\r\n  return element;\r\n}\r\n","import { getEnv, getFabricDocument } from '../../env';\r\nimport type { TSize } from '../../typedefs';\r\nimport type { CSSDimensions } from './util';\r\nimport { setCSSDimensions, getElementOffset } from './util';\r\nimport { createCanvasElement, isHTMLCanvas } from '../../util/misc/dom';\r\nimport { setCanvasDimensions } from './util';\r\nimport { FabricError } from '../../util/internals/console';\r\n\r\nexport type CanvasItem = {\r\n  el: HTMLCanvasElement;\r\n  ctx: CanvasRenderingContext2D;\r\n};\r\n\r\nexport class StaticCanvasDOMManager {\r\n  /**\r\n   * Keeps a copy of the canvas style before setting retina scaling and other potions\r\n   * in order to return it to original state on dispose\r\n   * @type string\r\n   */\r\n  private _originalCanvasStyle?: string;\r\n\r\n  lower: CanvasItem;\r\n\r\n  constructor(arg0?: string | HTMLCanvasElement) {\r\n    const el = this.createLowerCanvas(arg0);\r\n    this.lower = { el, ctx: el.getContext('2d')! };\r\n  }\r\n\r\n  protected createLowerCanvas(arg0?: HTMLCanvasElement | string) {\r\n    // canvasEl === 'HTMLCanvasElement' does not work on jsdom/node\r\n    const el = isHTMLCanvas(arg0)\r\n      ? arg0\r\n      : (arg0 &&\r\n          (getFabricDocument().getElementById(arg0) as HTMLCanvasElement)) ||\r\n        createCanvasElement();\r\n    if (el.hasAttribute('data-fabric')) {\r\n      throw new FabricError(\r\n        'Trying to initialize a canvas that has already been initialized. Did you forget to dispose the canvas?'\r\n      );\r\n    }\r\n    this._originalCanvasStyle = el.style.cssText;\r\n    el.setAttribute('data-fabric', 'main');\r\n    el.classList.add('lower-canvas');\r\n    return el;\r\n  }\r\n\r\n  cleanupDOM({ width, height }: TSize) {\r\n    const { el } = this.lower;\r\n    // restore canvas style and attributes\r\n    el.classList.remove('lower-canvas');\r\n    el.removeAttribute('data-fabric');\r\n    // restore canvas size to original size in case retina scaling was applied\r\n    el.setAttribute('width', `${width}`);\r\n    el.setAttribute('height', `${height}`);\r\n    el.style.cssText = this._originalCanvasStyle || '';\r\n    this._originalCanvasStyle = undefined;\r\n  }\r\n\r\n  setDimensions(size: TSize, retinaScaling: number) {\r\n    const { el, ctx } = this.lower;\r\n    setCanvasDimensions(el, ctx, size, retinaScaling);\r\n  }\r\n\r\n  setCSSDimensions(size: Partial<CSSDimensions>) {\r\n    setCSSDimensions(this.lower.el, size);\r\n  }\r\n\r\n  /**\r\n   * Calculates canvas element offset relative to the document\r\n   */\r\n  calcOffset() {\r\n    return getElementOffset(this.lower.el);\r\n  }\r\n\r\n  dispose() {\r\n    getEnv().dispose(this.lower.el);\r\n    // @ts-expect-error disposing\r\n    delete this.lower;\r\n  }\r\n}\r\n","import { iMatrix } from '../constants';\r\nimport type { FabricObject } from '../shapes/Object/FabricObject';\r\nimport type { TFiller, TMat2D, TOptions } from '../typedefs';\r\nimport type { StaticCanvas } from './StaticCanvas';\r\n\r\ninterface CanvasDrawableOptions {\r\n  /**\r\n   * if set to false background image is not affected by viewport transform\r\n   * @since 1.6.3\r\n   * @type Boolean\r\n   * @todo we should really find a different way to do this\r\n   * @default\r\n   */\r\n  backgroundVpt: boolean;\r\n\r\n  /**\r\n   * Background color of canvas instance.\r\n   * @type {(String|TFiller)}\r\n   * @default\r\n   */\r\n  backgroundColor: TFiller | string;\r\n\r\n  /**\r\n   * Background image of canvas instance.\r\n   * since 2.4.0 image caching is active, please when putting an image as background, add to the\r\n   * canvas property a reference to the canvas it is on. Otherwise the image cannot detect the zoom\r\n   * vale. As an alternative you can disable image objectCaching\r\n   * @type FabricObject\r\n   * @default\r\n   */\r\n  backgroundImage?: FabricObject;\r\n\r\n  /**\r\n   * if set to false overlay image is not affected by viewport transform\r\n   * @since 1.6.3\r\n   * @type Boolean\r\n   * @todo we should really find a different way to do this\r\n   * @default\r\n   */\r\n  overlayVpt: boolean;\r\n\r\n  /**\r\n   * Overlay color of canvas instance.\r\n   * @since 1.3.9\r\n   * @type {(String|TFiller)}\r\n   * @default\r\n   */\r\n  overlayColor: TFiller | string;\r\n\r\n  /**\r\n   * Overlay image of canvas instance.\r\n   * since 2.4.0 image caching is active, please when putting an image as overlay, add to the\r\n   * canvas property a reference to the canvas it is on. Otherwise the image cannot detect the zoom\r\n   * vale. As an alternative you can disable image objectCaching\r\n   * @type FabricObject\r\n   * @default\r\n   */\r\n  overlayImage?: FabricObject;\r\n}\r\n\r\ninterface CanvasRenderingOptions {\r\n  /**\r\n   * Indicates whether {@link StaticCanvas#add}, {@link StaticCanvas#insertAt} and {@link StaticCanvas#remove},\r\n   * {@link StaticCanvas#moveTo}, {@link StaticCanvas#clear} and many more, should also re-render canvas.\r\n   * Disabling this option will not give a performance boost when adding/removing a lot of objects to/from canvas at once\r\n   * since the renders are queued and executed one per frame.\r\n   * Disabling is suggested anyway and managing the renders of the app manually is not a big effort ( canvas.requestRenderAll() )\r\n   * Left default to true to do not break documentation and old app, fiddles.\r\n   * @type Boolean\r\n   * @default\r\n   */\r\n  renderOnAddRemove: boolean;\r\n\r\n  /**\r\n   * Based on vptCoords and object.aCoords, skip rendering of objects that\r\n   * are not included in current viewport.\r\n   * May greatly help in applications with crowded canvas and use of zoom/pan\r\n   * If One of the corner of the bounding box of the object is on the canvas\r\n   * the objects get rendered.\r\n   * @type Boolean\r\n   * @default true\r\n   */\r\n  skipOffscreen: boolean;\r\n\r\n  /**\r\n   * When true, canvas is scaled by devicePixelRatio for better rendering on retina screens\r\n   * @type Boolean\r\n   * @default\r\n   */\r\n  enableRetinaScaling: boolean;\r\n\r\n  /**\r\n   * Indicates whether this canvas will use image smoothing, this is on by default in browsers\r\n   * @type Boolean\r\n   * @default\r\n   */\r\n  imageSmoothingEnabled: boolean;\r\n\r\n  /**\r\n   * a fabricObject that, without stroke define a clipping area with their shape. filled in black\r\n   * the clipPath object gets used when the canvas has rendered, and the context is placed in the\r\n   * top left corner of the canvas.\r\n   * clipPath will clip away controls, if you do not want this to happen use controlsAboveOverlay = true\r\n   * @type FabricObject\r\n   */\r\n  clipPath?: FabricObject;\r\n}\r\n\r\nexport interface CanvasExportOptions {\r\n  /**\r\n   * Indicates whether toObject/toDatalessObject should include default values\r\n   * if set to false, takes precedence over the object value.\r\n   * @type Boolean\r\n   * @default\r\n   */\r\n  includeDefaultValues: boolean;\r\n\r\n  /**\r\n   * When true, getSvgTransform() will apply the StaticCanvas.viewportTransform to the SVG transformation. When true,\r\n   * a zoomed canvas will then produce zoomed SVG output.\r\n   * @type Boolean\r\n   * @default\r\n   */\r\n  svgViewportTransformation: boolean;\r\n}\r\n\r\nexport interface StaticCanvasOptions\r\n  extends CanvasDrawableOptions,\r\n    CanvasRenderingOptions,\r\n    CanvasExportOptions {\r\n  /**\r\n   * Width in virtual/logical pixels of the canvas.\r\n   * The canvas can be larger than width if retina scaling is active\r\n   * @type number\r\n   */\r\n  width: number;\r\n\r\n  /**\r\n   * Height in virtual/logical pixels of the canvas.\r\n   * The canvas can be taller than width if retina scaling is active\r\n   * @type height\r\n   */\r\n  height: number;\r\n\r\n  /**\r\n   * Indicates whether object controls (borders/controls) are rendered above overlay image\r\n   * @type Boolean\r\n   * @default\r\n   *\r\n   * @todo move to Canvas\r\n   */\r\n  controlsAboveOverlay: boolean;\r\n\r\n  /**\r\n   * Indicates whether the browser can be scrolled when using a touchscreen and dragging on the canvas\r\n   * @type Boolean\r\n   * @default\r\n   *\r\n   * @todo move to Canvas\r\n   */\r\n  allowTouchScrolling: boolean;\r\n\r\n  /**\r\n   * The transformation (a Canvas 2D API transform matrix) which focuses the viewport\r\n   * @type Array\r\n   * @example <caption>Default transform</caption>\r\n   * canvas.viewportTransform = [1, 0, 0, 1, 0, 0];\r\n   * @example <caption>Scale by 70% and translate toward bottom-right by 50, without skewing</caption>\r\n   * canvas.viewportTransform = [0.7, 0, 0, 0.7, 50, 50];\r\n   * @default\r\n   */\r\n  viewportTransform: TMat2D;\r\n}\r\n\r\nexport const staticCanvasDefaults: TOptions<StaticCanvasOptions> = {\r\n  backgroundVpt: true,\r\n  backgroundColor: '',\r\n  overlayVpt: true,\r\n  overlayColor: '',\r\n\r\n  includeDefaultValues: true,\r\n  svgViewportTransformation: true,\r\n\r\n  renderOnAddRemove: true,\r\n  skipOffscreen: true,\r\n  enableRetinaScaling: true,\r\n  imageSmoothingEnabled: true,\r\n\r\n  /**\r\n   * @todo move to Canvas\r\n   */\r\n  controlsAboveOverlay: false,\r\n  /**\r\n   * @todo move to Canvas\r\n   */\r\n  allowTouchScrolling: false,\r\n\r\n  viewportTransform: [...iMatrix],\r\n};\r\n","import { config } from '../config';\r\nimport { CENTER, VERSION } from '../constants';\r\nimport type { CanvasEvents, StaticCanvasEvents } from '../EventTypeDefs';\r\nimport type { Gradient } from '../gradient/Gradient';\r\nimport { createCollectionMixin, isCollection } from '../Collection';\r\nimport { CommonMethods } from '../CommonMethods';\r\nimport type { Pattern } from '../Pattern';\r\nimport { Point } from '../Point';\r\nimport type { TCachedFabricObject } from '../shapes/Object/Object';\r\nimport type {\r\n  Abortable,\r\n  Constructor,\r\n  TCornerPoint,\r\n  TDataUrlOptions,\r\n  TFiller,\r\n  TMat2D,\r\n  TSize,\r\n  TSVGReviver,\r\n  TToCanvasElementOptions,\r\n  TValidToObjectMethod,\r\n  TOptions,\r\n} from '../typedefs';\r\nimport {\r\n  cancelAnimFrame,\r\n  requestAnimFrame,\r\n} from '../util/animation/AnimationFrameProvider';\r\nimport { runningAnimations } from '../util/animation/AnimationRegistry';\r\nimport { uid } from '../util/internals/uid';\r\nimport { createCanvasElement, toDataURL } from '../util/misc/dom';\r\nimport { invertTransform, transformPoint } from '../util/misc/matrix';\r\nimport type { EnlivenObjectOptions } from '../util/misc/objectEnlive';\r\nimport {\r\n  enlivenObjectEnlivables,\r\n  enlivenObjects,\r\n} from '../util/misc/objectEnlive';\r\nimport { pick } from '../util/misc/pick';\r\nimport { matrixToSVG } from '../util/misc/svgParsing';\r\nimport { toFixed } from '../util/misc/toFixed';\r\nimport { isFiller, isPattern, isTextObject } from '../util/typeAssertions';\r\nimport { StaticCanvasDOMManager } from './DOMManagers/StaticCanvasDOMManager';\r\nimport type { CSSDimensions } from './DOMManagers/util';\r\nimport type { FabricObject } from '../shapes/Object/FabricObject';\r\nimport type { StaticCanvasOptions } from './StaticCanvasOptions';\r\nimport { staticCanvasDefaults } from './StaticCanvasOptions';\r\nimport { log, FabricError } from '../util/internals/console';\r\nimport { getDevicePixelRatio } from '../env';\r\n\r\n/**\r\n * Having both options in TCanvasSizeOptions set to true transform the call in a calcOffset\r\n * Better try to restrict with types to avoid confusion.\r\n */\r\nexport type TCanvasSizeOptions =\r\n  | {\r\n      backstoreOnly?: true;\r\n      cssOnly?: false;\r\n    }\r\n  | {\r\n      backstoreOnly?: false;\r\n      cssOnly?: true;\r\n    };\r\n\r\nexport type TSVGExportOptions = {\r\n  suppressPreamble?: boolean;\r\n  viewBox?: {\r\n    x: number;\r\n    y: number;\r\n    width: number;\r\n    height: number;\r\n  };\r\n  encoding?: 'UTF-8'; // test Encoding type and see what happens\r\n  width?: string;\r\n  height?: string;\r\n  reviver?: TSVGReviver;\r\n};\r\n\r\n/**\r\n * Static canvas class\r\n * @see {@link http://fabricjs.com/static_canvas|StaticCanvas demo}\r\n * @fires before:render\r\n * @fires after:render\r\n * @fires canvas:cleared\r\n * @fires object:added\r\n * @fires object:removed\r\n */\r\n// TODO: fix `EventSpec` inheritance https://github.com/microsoft/TypeScript/issues/26154#issuecomment-1366616260\r\nexport class StaticCanvas<\r\n    EventSpec extends StaticCanvasEvents = StaticCanvasEvents\r\n  >\r\n  extends createCollectionMixin(CommonMethods<CanvasEvents>)\r\n  implements StaticCanvasOptions\r\n{\r\n  declare width: number;\r\n  declare height: number;\r\n\r\n  // background\r\n  declare backgroundVpt: boolean;\r\n  declare backgroundColor: TFiller | string;\r\n  declare backgroundImage?: FabricObject;\r\n  // overlay\r\n  declare overlayVpt: boolean;\r\n  declare overlayColor: TFiller | string;\r\n  declare overlayImage?: FabricObject;\r\n\r\n  declare clipPath?: FabricObject;\r\n\r\n  declare includeDefaultValues: boolean;\r\n\r\n  // rendering config\r\n  declare renderOnAddRemove: boolean;\r\n  declare skipOffscreen: boolean;\r\n  declare enableRetinaScaling: boolean;\r\n  declare imageSmoothingEnabled: boolean;\r\n\r\n  /**\r\n   * @todo move to Canvas\r\n   */\r\n  declare controlsAboveOverlay: boolean;\r\n\r\n  /**\r\n   * @todo move to Canvas\r\n   */\r\n  declare allowTouchScrolling: boolean;\r\n\r\n  declare viewportTransform: TMat2D;\r\n\r\n  /**\r\n   * The viewport bounding box in scene plane coordinates, see {@link calcViewportBoundaries}\r\n   */\r\n  declare vptCoords: TCornerPoint;\r\n\r\n  /**\r\n   * A reference to the canvas actual HTMLCanvasElement.\r\n   * Can be use to read the raw pixels, but never write or manipulate\r\n   * @type HTMLCanvasElement\r\n   */\r\n  get lowerCanvasEl() {\r\n    return this.elements.lower?.el;\r\n  }\r\n\r\n  get contextContainer() {\r\n    return this.elements.lower?.ctx;\r\n  }\r\n\r\n  /**\r\n   * If true the Canvas is in the process or has been disposed/destroyed.\r\n   * No more rendering operation will be executed on this canvas.\r\n   * @type boolean\r\n   */\r\n  declare destroyed?: boolean;\r\n\r\n  /**\r\n   * Started the process of disposing but not done yet.\r\n   * WIll likely complete the render cycle already scheduled but stopping adding more.\r\n   * @type boolean\r\n   */\r\n  declare disposed?: boolean;\r\n\r\n  declare _offset: { left: number; top: number };\r\n  protected declare hasLostContext: boolean;\r\n  protected declare nextRenderHandle: number;\r\n\r\n  declare elements: StaticCanvasDOMManager;\r\n\r\n  /**\r\n   * When true control drawing is skipped.\r\n   * This boolean is used to avoid toDataURL to export controls.\r\n   * Usage of this boolean to build up other flows and features is not supported\r\n   * @type Boolean\r\n   * @default false\r\n   */\r\n  protected declare skipControlsDrawing: boolean;\r\n\r\n  static ownDefaults = staticCanvasDefaults;\r\n\r\n  // reference to\r\n  protected declare __cleanupTask?: {\r\n    (): void;\r\n    kill: (reason?: any) => void;\r\n  };\r\n\r\n  static getDefaults(): Record<string, any> {\r\n    return StaticCanvas.ownDefaults;\r\n  }\r\n\r\n  constructor(\r\n    el?: string | HTMLCanvasElement,\r\n    options: TOptions<StaticCanvasOptions> = {}\r\n  ) {\r\n    super();\r\n    Object.assign(\r\n      this,\r\n      (this.constructor as typeof StaticCanvas).getDefaults()\r\n    );\r\n    this.set(options);\r\n    this.initElements(el);\r\n    this._setDimensionsImpl({\r\n      width: this.width || this.elements.lower.el.width || 0,\r\n      height: this.height || this.elements.lower.el.height || 0,\r\n    });\r\n    this.skipControlsDrawing = false;\r\n    this.viewportTransform = [...this.viewportTransform];\r\n    this.calcViewportBoundaries();\r\n  }\r\n\r\n  protected initElements(el?: string | HTMLCanvasElement) {\r\n    this.elements = new StaticCanvasDOMManager(el);\r\n  }\r\n\r\n  add(...objects: FabricObject[]) {\r\n    const size = super.add(...objects);\r\n    objects.length > 0 && this.renderOnAddRemove && this.requestRenderAll();\r\n    return size;\r\n  }\r\n\r\n  insertAt(index: number, ...objects: FabricObject[]) {\r\n    const size = super.insertAt(index, ...objects);\r\n    objects.length > 0 && this.renderOnAddRemove && this.requestRenderAll();\r\n    return size;\r\n  }\r\n\r\n  remove(...objects: FabricObject[]) {\r\n    const removed = super.remove(...objects);\r\n    removed.length > 0 && this.renderOnAddRemove && this.requestRenderAll();\r\n    return removed;\r\n  }\r\n\r\n  _onObjectAdded(obj: FabricObject) {\r\n    if (obj.canvas && (obj.canvas as StaticCanvas) !== this) {\r\n      log(\r\n        'warn',\r\n        'Canvas is trying to add an object that belongs to a different canvas.\\n' +\r\n          'Resulting to default behavior: removing object from previous canvas and adding to new canvas'\r\n      );\r\n      obj.canvas.remove(obj);\r\n    }\r\n    obj._set('canvas', this);\r\n    obj.setCoords();\r\n    this.fire('object:added', { target: obj });\r\n    obj.fire('added', { target: this });\r\n  }\r\n\r\n  _onObjectRemoved(obj: FabricObject) {\r\n    obj._set('canvas', undefined);\r\n    this.fire('object:removed', { target: obj });\r\n    obj.fire('removed', { target: this });\r\n  }\r\n\r\n  _onStackOrderChanged() {\r\n    this.renderOnAddRemove && this.requestRenderAll();\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @see https://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/HTML-canvas-guide/SettingUptheCanvas/SettingUptheCanvas.html\r\n   * @return {Number} retinaScaling if applied, otherwise 1;\r\n   */\r\n  getRetinaScaling() {\r\n    return this.enableRetinaScaling ? getDevicePixelRatio() : 1;\r\n  }\r\n\r\n  /**\r\n   * Calculates canvas element offset relative to the document\r\n   * This method is also attached as \"resize\" event handler of window\r\n   */\r\n  calcOffset() {\r\n    return (this._offset = this.elements.calcOffset());\r\n  }\r\n\r\n  /**\r\n   * Returns canvas width (in px)\r\n   * @return {Number}\r\n   */\r\n  getWidth(): number {\r\n    return this.width;\r\n  }\r\n\r\n  /**\r\n   * Returns canvas height (in px)\r\n   * @return {Number}\r\n   */\r\n  getHeight(): number {\r\n    return this.height;\r\n  }\r\n\r\n  /**\r\n   * Sets width of this canvas instance\r\n   * @param {Number|String} value                         Value to set width to\r\n   * @param {Object}        [options]                     Options object\r\n   * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\r\n   * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\r\n   * @deprecated will be removed in 7.0\r\n   */\r\n  setWidth(\r\n    value: TSize['width'],\r\n    options?: { backstoreOnly?: true; cssOnly?: false }\r\n  ): void;\r\n  setWidth(\r\n    value: CSSDimensions['width'],\r\n    options?: { cssOnly?: true; backstoreOnly?: false }\r\n  ): void;\r\n  setWidth(value: number, options?: never) {\r\n    return this.setDimensions({ width: value }, options);\r\n  }\r\n\r\n  /**s\r\n   * Sets height of this canvas instance\r\n   * @param {Number|String} value                         Value to set height to\r\n   * @param {Object}        [options]                     Options object\r\n   * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\r\n   * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\r\n   * @deprecated will be removed in 7.0\r\n   */\r\n  setHeight(\r\n    value: TSize['height'],\r\n    options?: { backstoreOnly?: true; cssOnly?: false }\r\n  ): void;\r\n  setHeight(\r\n    value: CSSDimensions['height'],\r\n    options?: { cssOnly?: true; backstoreOnly?: false }\r\n  ): void;\r\n  setHeight(value: CSSDimensions['height'], options?: never) {\r\n    return this.setDimensions({ height: value }, options);\r\n  }\r\n\r\n  /**\r\n   * Internal use only\r\n   * @protected\r\n   */\r\n  protected _setDimensionsImpl(\r\n    dimensions: Partial<TSize | CSSDimensions>,\r\n    { cssOnly = false, backstoreOnly = false }: TCanvasSizeOptions = {}\r\n  ) {\r\n    if (!cssOnly) {\r\n      const size = {\r\n        width: this.width,\r\n        height: this.height,\r\n        ...(dimensions as Partial<TSize>),\r\n      };\r\n      this.elements.setDimensions(size, this.getRetinaScaling());\r\n      this.hasLostContext = true;\r\n      this.width = size.width;\r\n      this.height = size.height;\r\n    }\r\n    if (!backstoreOnly) {\r\n      this.elements.setCSSDimensions(dimensions);\r\n    }\r\n\r\n    this.calcOffset();\r\n  }\r\n\r\n  /**\r\n   * Sets dimensions (width, height) of this canvas instance. when options.cssOnly flag active you should also supply the unit of measure (px/%/em)\r\n   * @param {Object}        dimensions                    Object with width/height properties\r\n   * @param {Number|String} [dimensions.width]            Width of canvas element\r\n   * @param {Number|String} [dimensions.height]           Height of canvas element\r\n   * @param {Object}        [options]                     Options object\r\n   * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\r\n   * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\r\n   */\r\n  setDimensions(\r\n    dimensions: Partial<CSSDimensions>,\r\n    options?: { cssOnly?: true; backstoreOnly?: false }\r\n  ): void;\r\n  setDimensions(\r\n    dimensions: Partial<TSize>,\r\n    options?: { backstoreOnly?: true; cssOnly?: false }\r\n  ): void;\r\n  setDimensions(dimensions: Partial<TSize>, options?: never): void;\r\n  setDimensions(\r\n    dimensions: Partial<TSize | CSSDimensions>,\r\n    options?: TCanvasSizeOptions\r\n  ) {\r\n    this._setDimensionsImpl(dimensions, options);\r\n    if (!options || !options.cssOnly) {\r\n      this.requestRenderAll();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns canvas zoom level\r\n   * @return {Number}\r\n   */\r\n  getZoom() {\r\n    return this.viewportTransform[0];\r\n  }\r\n\r\n  /**\r\n   * Sets viewport transformation of this canvas instance\r\n   * @param {Array} vpt a Canvas 2D API transform matrix\r\n   */\r\n  setViewportTransform(vpt: TMat2D) {\r\n    this.viewportTransform = vpt;\r\n    this.calcViewportBoundaries();\r\n    this.renderOnAddRemove && this.requestRenderAll();\r\n  }\r\n\r\n  /**\r\n   * Sets zoom level of this canvas instance, the zoom centered around point\r\n   * meaning that following zoom to point with the same point will have the visual\r\n   * effect of the zoom originating from that point. The point won't move.\r\n   * It has nothing to do with canvas center or visual center of the viewport.\r\n   * @param {Point} point to zoom with respect to\r\n   * @param {Number} value to set zoom to, less than 1 zooms out\r\n   */\r\n  zoomToPoint(point: Point, value: number) {\r\n    // TODO: just change the scale, preserve other transformations\r\n    const before = point,\r\n      vpt: TMat2D = [...this.viewportTransform];\r\n    const newPoint = transformPoint(point, invertTransform(vpt));\r\n    vpt[0] = value;\r\n    vpt[3] = value;\r\n    const after = transformPoint(newPoint, vpt);\r\n    vpt[4] += before.x - after.x;\r\n    vpt[5] += before.y - after.y;\r\n    this.setViewportTransform(vpt);\r\n  }\r\n\r\n  /**\r\n   * Sets zoom level of this canvas instance\r\n   * @param {Number} value to set zoom to, less than 1 zooms out\r\n   */\r\n  setZoom(value: number) {\r\n    this.zoomToPoint(new Point(0, 0), value);\r\n  }\r\n\r\n  /**\r\n   * Pan viewport so as to place point at top left corner of canvas\r\n   * @param {Point} point to move to\r\n   */\r\n  absolutePan(point: Point) {\r\n    const vpt: TMat2D = [...this.viewportTransform];\r\n    vpt[4] = -point.x;\r\n    vpt[5] = -point.y;\r\n    return this.setViewportTransform(vpt);\r\n  }\r\n\r\n  /**\r\n   * Pans viewpoint relatively\r\n   * @param {Point} point (position vector) to move by\r\n   */\r\n  relativePan(point: Point) {\r\n    return this.absolutePan(\r\n      new Point(\r\n        -point.x - this.viewportTransform[4],\r\n        -point.y - this.viewportTransform[5]\r\n      )\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Returns &lt;canvas> element corresponding to this instance\r\n   * @return {HTMLCanvasElement}\r\n   */\r\n  getElement(): HTMLCanvasElement {\r\n    return this.elements.lower.el;\r\n  }\r\n\r\n  /**\r\n   * Clears specified context of canvas element\r\n   * @param {CanvasRenderingContext2D} ctx Context to clear\r\n   */\r\n  clearContext(ctx: CanvasRenderingContext2D) {\r\n    ctx.clearRect(0, 0, this.width, this.height);\r\n  }\r\n\r\n  /**\r\n   * Returns context of canvas where objects are drawn\r\n   * @return {CanvasRenderingContext2D}\r\n   */\r\n  getContext(): CanvasRenderingContext2D {\r\n    return this.elements.lower.ctx;\r\n  }\r\n\r\n  /**\r\n   * Clears all contexts (background, main, top) of an instance\r\n   */\r\n  clear() {\r\n    this.remove(...this.getObjects());\r\n    this.backgroundImage = undefined;\r\n    this.overlayImage = undefined;\r\n    this.backgroundColor = '';\r\n    this.overlayColor = '';\r\n    this.clearContext(this.getContext());\r\n    this.fire('canvas:cleared');\r\n    this.renderOnAddRemove && this.requestRenderAll();\r\n  }\r\n\r\n  /**\r\n   * Renders the canvas\r\n   */\r\n  renderAll() {\r\n    this.cancelRequestedRender();\r\n    if (this.destroyed) {\r\n      return;\r\n    }\r\n    this.renderCanvas(this.getContext(), this._objects);\r\n  }\r\n\r\n  /**\r\n   * Function created to be instance bound at initialization\r\n   * used in requestAnimationFrame rendering\r\n   * Let the fabricJS call it. If you call it manually you could have more\r\n   * animationFrame stacking on to of each other\r\n   * for an imperative rendering, use canvas.renderAll\r\n   * @private\r\n   */\r\n  renderAndReset() {\r\n    this.nextRenderHandle = 0;\r\n    this.renderAll();\r\n  }\r\n\r\n  /**\r\n   * Append a renderAll request to next animation frame.\r\n   * unless one is already in progress, in that case nothing is done\r\n   * a boolean flag will avoid appending more.\r\n   */\r\n  requestRenderAll() {\r\n    if (!this.nextRenderHandle && !this.disposed && !this.destroyed) {\r\n      this.nextRenderHandle = requestAnimFrame(() => this.renderAndReset());\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Calculate the position of the 4 corner of canvas with current viewportTransform.\r\n   * helps to determinate when an object is in the current rendering viewport\r\n   */\r\n  calcViewportBoundaries(): TCornerPoint {\r\n    const width = this.width,\r\n      height = this.height,\r\n      iVpt = invertTransform(this.viewportTransform),\r\n      a = transformPoint({ x: 0, y: 0 }, iVpt),\r\n      b = transformPoint({ x: width, y: height }, iVpt),\r\n      // we don't support vpt flipping\r\n      // but the code is robust enough to mostly work with flipping\r\n      min = a.min(b),\r\n      max = a.max(b);\r\n    return (this.vptCoords = {\r\n      tl: min,\r\n      tr: new Point(max.x, min.y),\r\n      bl: new Point(min.x, max.y),\r\n      br: max,\r\n    });\r\n  }\r\n\r\n  cancelRequestedRender() {\r\n    if (this.nextRenderHandle) {\r\n      cancelAnimFrame(this.nextRenderHandle);\r\n      this.nextRenderHandle = 0;\r\n    }\r\n  }\r\n\r\n  drawControls(ctx: CanvasRenderingContext2D) {\r\n    // Static canvas has no controls\r\n  }\r\n\r\n  /**\r\n   * Renders background, objects, overlay and controls.\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {Array} objects to render\r\n   */\r\n  renderCanvas(ctx: CanvasRenderingContext2D, objects: FabricObject[]) {\r\n    if (this.destroyed) {\r\n      return;\r\n    }\r\n\r\n    const v = this.viewportTransform,\r\n      path = this.clipPath;\r\n    this.calcViewportBoundaries();\r\n    this.clearContext(ctx);\r\n    ctx.imageSmoothingEnabled = this.imageSmoothingEnabled;\r\n    // @ts-expect-error node-canvas stuff\r\n    ctx.patternQuality = 'best';\r\n    this.fire('before:render', { ctx });\r\n    this._renderBackground(ctx);\r\n\r\n    ctx.save();\r\n    //apply viewport transform once for all rendering process\r\n    ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\r\n    this._renderObjects(ctx, objects);\r\n    ctx.restore();\r\n    if (!this.controlsAboveOverlay && !this.skipControlsDrawing) {\r\n      this.drawControls(ctx);\r\n    }\r\n    if (path) {\r\n      path._set('canvas', this);\r\n      // needed to setup a couple of variables\r\n      path.shouldCache();\r\n      path._transformDone = true;\r\n      path.renderCache({ forClipping: true });\r\n      this.drawClipPathOnCanvas(ctx, path as TCachedFabricObject);\r\n    }\r\n    this._renderOverlay(ctx);\r\n    if (this.controlsAboveOverlay && !this.skipControlsDrawing) {\r\n      this.drawControls(ctx);\r\n    }\r\n    this.fire('after:render', { ctx });\r\n\r\n    if (this.__cleanupTask) {\r\n      this.__cleanupTask();\r\n      this.__cleanupTask = undefined;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Paint the cached clipPath on the lowerCanvasEl\r\n   * @param {CanvasRenderingContext2D} ctx Context to render on\r\n   */\r\n  drawClipPathOnCanvas(\r\n    ctx: CanvasRenderingContext2D,\r\n    clipPath: TCachedFabricObject\r\n  ) {\r\n    const v = this.viewportTransform;\r\n    ctx.save();\r\n    ctx.transform(...v);\r\n    // DEBUG: uncomment this line, comment the following\r\n    // ctx.globalAlpha = 0.4;\r\n    ctx.globalCompositeOperation = 'destination-in';\r\n    clipPath.transform(ctx);\r\n    ctx.scale(1 / clipPath.zoomX, 1 / clipPath.zoomY);\r\n    ctx.drawImage(\r\n      clipPath._cacheCanvas,\r\n      -clipPath.cacheTranslationX,\r\n      -clipPath.cacheTranslationY\r\n    );\r\n    ctx.restore();\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {CanvasRenderingContext2D} ctx Context to render on\r\n   * @param {Array} objects to render\r\n   */\r\n  _renderObjects(ctx: CanvasRenderingContext2D, objects: FabricObject[]) {\r\n    for (let i = 0, len = objects.length; i < len; ++i) {\r\n      objects[i] && objects[i].render(ctx);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {CanvasRenderingContext2D} ctx Context to render on\r\n   * @param {string} property 'background' or 'overlay'\r\n   */\r\n  _renderBackgroundOrOverlay(\r\n    ctx: CanvasRenderingContext2D,\r\n    property: 'background' | 'overlay'\r\n  ) {\r\n    const fill = this[`${property}Color`],\r\n      object = this[`${property}Image`],\r\n      v = this.viewportTransform,\r\n      needsVpt = this[`${property}Vpt`];\r\n    if (!fill && !object) {\r\n      return;\r\n    }\r\n    const isAFiller = isFiller(fill);\r\n    if (fill) {\r\n      ctx.save();\r\n      ctx.beginPath();\r\n      ctx.moveTo(0, 0);\r\n      ctx.lineTo(this.width, 0);\r\n      ctx.lineTo(this.width, this.height);\r\n      ctx.lineTo(0, this.height);\r\n      ctx.closePath();\r\n      ctx.fillStyle = isAFiller ? fill.toLive(ctx /* this */)! : fill;\r\n      if (needsVpt) {\r\n        ctx.transform(...v);\r\n      }\r\n      if (isAFiller) {\r\n        ctx.transform(1, 0, 0, 1, fill.offsetX || 0, fill.offsetY || 0);\r\n        const m = ((fill as Gradient<'linear'>).gradientTransform ||\r\n          (fill as Pattern).patternTransform) as TMat2D;\r\n        m && ctx.transform(...m);\r\n      }\r\n      ctx.fill();\r\n      ctx.restore();\r\n    }\r\n    if (object) {\r\n      ctx.save();\r\n      const { skipOffscreen } = this;\r\n      // if the object doesn't move with the viewport,\r\n      // the offscreen concept does not apply;\r\n      this.skipOffscreen = needsVpt;\r\n      if (needsVpt) {\r\n        ctx.transform(...v);\r\n      }\r\n      object.render(ctx);\r\n      this.skipOffscreen = skipOffscreen;\r\n      ctx.restore();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {CanvasRenderingContext2D} ctx Context to render on\r\n   */\r\n  _renderBackground(ctx: CanvasRenderingContext2D) {\r\n    this._renderBackgroundOrOverlay(ctx, 'background');\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {CanvasRenderingContext2D} ctx Context to render on\r\n   */\r\n  _renderOverlay(ctx: CanvasRenderingContext2D) {\r\n    this._renderBackgroundOrOverlay(ctx, 'overlay');\r\n  }\r\n\r\n  /**\r\n   * Returns coordinates of a center of canvas.\r\n   * Returned value is an object with top and left properties\r\n   * @return {Object} object with \"top\" and \"left\" number values\r\n   * @deprecated migrate to `getCenterPoint`\r\n   */\r\n  getCenter() {\r\n    return {\r\n      top: this.height / 2,\r\n      left: this.width / 2,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Returns coordinates of a center of canvas.\r\n   * @return {Point}\r\n   */\r\n  getCenterPoint() {\r\n    return new Point(this.width / 2, this.height / 2);\r\n  }\r\n\r\n  /**\r\n   * Centers object horizontally in the canvas\r\n   */\r\n  centerObjectH(object: FabricObject) {\r\n    return this._centerObject(\r\n      object,\r\n      new Point(this.getCenterPoint().x, object.getCenterPoint().y)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Centers object vertically in the canvas\r\n   * @param {FabricObject} object Object to center vertically\r\n   */\r\n  centerObjectV(object: FabricObject) {\r\n    return this._centerObject(\r\n      object,\r\n      new Point(object.getCenterPoint().x, this.getCenterPoint().y)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Centers object vertically and horizontally in the canvas\r\n   * @param {FabricObject} object Object to center vertically and horizontally\r\n   */\r\n  centerObject(object: FabricObject) {\r\n    return this._centerObject(object, this.getCenterPoint());\r\n  }\r\n\r\n  /**\r\n   * Centers object vertically and horizontally in the viewport\r\n   * @param {FabricObject} object Object to center vertically and horizontally\r\n   */\r\n  viewportCenterObject(object: FabricObject) {\r\n    return this._centerObject(object, this.getVpCenter());\r\n  }\r\n\r\n  /**\r\n   * Centers object horizontally in the viewport, object.top is unchanged\r\n   * @param {FabricObject} object Object to center vertically and horizontally\r\n   */\r\n  viewportCenterObjectH(object: FabricObject) {\r\n    return this._centerObject(\r\n      object,\r\n      new Point(this.getVpCenter().x, object.getCenterPoint().y)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Centers object Vertically in the viewport, object.top is unchanged\r\n   * @param {FabricObject} object Object to center vertically and horizontally\r\n   */\r\n  viewportCenterObjectV(object: FabricObject) {\r\n    return this._centerObject(\r\n      object,\r\n      new Point(object.getCenterPoint().x, this.getVpCenter().y)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Calculate the point in canvas that correspond to the center of actual viewport.\r\n   * @return {Point} vpCenter, viewport center\r\n   */\r\n  getVpCenter(): Point {\r\n    return transformPoint(\r\n      this.getCenterPoint(),\r\n      invertTransform(this.viewportTransform)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {FabricObject} object Object to center\r\n   * @param {Point} center Center point\r\n   */\r\n  _centerObject(object: FabricObject, center: Point) {\r\n    object.setXY(center, CENTER, CENTER);\r\n    object.setCoords();\r\n    this.renderOnAddRemove && this.requestRenderAll();\r\n  }\r\n\r\n  /**\r\n   * Returns dataless JSON representation of canvas\r\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n   * @return {String} json string\r\n   */\r\n  toDatalessJSON(propertiesToInclude?: string[]) {\r\n    return this.toDatalessObject(propertiesToInclude);\r\n  }\r\n\r\n  /**\r\n   * Returns object representation of canvas\r\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n   * @return {Object} object representation of an instance\r\n   */\r\n  toObject(propertiesToInclude?: string[]) {\r\n    return this._toObjectMethod('toObject', propertiesToInclude);\r\n  }\r\n\r\n  /**\r\n   * Returns Object representation of canvas\r\n   * this alias is provided because if you call JSON.stringify on an instance,\r\n   * the toJSON object will be invoked if it exists.\r\n   * Having a toJSON method means you can do JSON.stringify(myCanvas)\r\n   * @return {Object} JSON compatible object\r\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\r\n   * @see {@link http://jsfiddle.net/fabricjs/pec86/|jsFiddle demo}\r\n   * @example <caption>JSON without additional properties</caption>\r\n   * var json = canvas.toJSON();\r\n   * @example <caption>JSON with additional properties included</caption>\r\n   * var json = canvas.toJSON(['lockMovementX', 'lockMovementY', 'lockRotation', 'lockScalingX', 'lockScalingY']);\r\n   * @example <caption>JSON without default values</caption>\r\n   * var json = canvas.toJSON();\r\n   */\r\n  toJSON() {\r\n    return this.toObject();\r\n  }\r\n\r\n  /**\r\n   * Returns dataless object representation of canvas\r\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n   * @return {Object} object representation of an instance\r\n   */\r\n  toDatalessObject(propertiesToInclude?: string[]) {\r\n    return this._toObjectMethod('toDatalessObject', propertiesToInclude);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _toObjectMethod(\r\n    methodName: TValidToObjectMethod,\r\n    propertiesToInclude?: string[]\r\n  ) {\r\n    const clipPath = this.clipPath;\r\n    const clipPathData =\r\n      clipPath && !clipPath.excludeFromExport\r\n        ? this._toObject(clipPath, methodName, propertiesToInclude)\r\n        : null;\r\n    return {\r\n      version: VERSION,\r\n      ...pick(this, propertiesToInclude as (keyof this)[]),\r\n      objects: this._objects\r\n        .filter((object) => !object.excludeFromExport)\r\n        .map((instance) =>\r\n          this._toObject(instance, methodName, propertiesToInclude)\r\n        ),\r\n      ...this.__serializeBgOverlay(methodName, propertiesToInclude),\r\n      ...(clipPathData ? { clipPath: clipPathData } : null),\r\n    };\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  protected _toObject(\r\n    instance: FabricObject,\r\n    methodName: TValidToObjectMethod,\r\n    propertiesToInclude?: string[]\r\n  ) {\r\n    let originalValue;\r\n\r\n    if (!this.includeDefaultValues) {\r\n      originalValue = instance.includeDefaultValues;\r\n      instance.includeDefaultValues = false;\r\n    }\r\n\r\n    const object = instance[methodName](propertiesToInclude);\r\n    if (!this.includeDefaultValues) {\r\n      instance.includeDefaultValues = !!originalValue;\r\n    }\r\n    return object;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  __serializeBgOverlay(\r\n    methodName: TValidToObjectMethod,\r\n    propertiesToInclude?: string[]\r\n  ) {\r\n    const data: any = {},\r\n      bgImage = this.backgroundImage,\r\n      overlayImage = this.overlayImage,\r\n      bgColor = this.backgroundColor,\r\n      overlayColor = this.overlayColor;\r\n\r\n    if (isFiller(bgColor)) {\r\n      if (!bgColor.excludeFromExport) {\r\n        data.background = bgColor.toObject(propertiesToInclude);\r\n      }\r\n    } else if (bgColor) {\r\n      data.background = bgColor;\r\n    }\r\n\r\n    if (isFiller(overlayColor)) {\r\n      if (!overlayColor.excludeFromExport) {\r\n        data.overlay = overlayColor.toObject(propertiesToInclude);\r\n      }\r\n    } else if (overlayColor) {\r\n      data.overlay = overlayColor;\r\n    }\r\n\r\n    if (bgImage && !bgImage.excludeFromExport) {\r\n      data.backgroundImage = this._toObject(\r\n        bgImage,\r\n        methodName,\r\n        propertiesToInclude\r\n      );\r\n    }\r\n    if (overlayImage && !overlayImage.excludeFromExport) {\r\n      data.overlayImage = this._toObject(\r\n        overlayImage,\r\n        methodName,\r\n        propertiesToInclude\r\n      );\r\n    }\r\n\r\n    return data;\r\n  }\r\n\r\n  /* _TO_SVG_START_ */\r\n\r\n  declare svgViewportTransformation: boolean;\r\n\r\n  /**\r\n   * Returns SVG representation of canvas\r\n   * @function\r\n   * @param {Object} [options] Options object for SVG output\r\n   * @param {Boolean} [options.suppressPreamble=false] If true xml tag is not included\r\n   * @param {Object} [options.viewBox] SVG viewbox object\r\n   * @param {Number} [options.viewBox.x] x-coordinate of viewbox\r\n   * @param {Number} [options.viewBox.y] y-coordinate of viewbox\r\n   * @param {Number} [options.viewBox.width] Width of viewbox\r\n   * @param {Number} [options.viewBox.height] Height of viewbox\r\n   * @param {String} [options.encoding=UTF-8] Encoding of SVG output\r\n   * @param {String} [options.width] desired width of svg with or without units\r\n   * @param {String} [options.height] desired height of svg with or without units\r\n   * @param {Function} [reviver] Method for further parsing of svg elements, called after each fabric object converted into svg representation.\r\n   * @return {String} SVG string\r\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\r\n   * @see {@link http://jsfiddle.net/fabricjs/jQ3ZZ/|jsFiddle demo}\r\n   * @example <caption>Normal SVG output</caption>\r\n   * var svg = canvas.toSVG();\r\n   * @example <caption>SVG output without preamble (without &lt;?xml ../>)</caption>\r\n   * var svg = canvas.toSVG({suppressPreamble: true});\r\n   * @example <caption>SVG output with viewBox attribute</caption>\r\n   * var svg = canvas.toSVG({\r\n   *   viewBox: {\r\n   *     x: 100,\r\n   *     y: 100,\r\n   *     width: 200,\r\n   *     height: 300\r\n   *   }\r\n   * });\r\n   * @example <caption>SVG output with different encoding (default: UTF-8)</caption>\r\n   * var svg = canvas.toSVG({encoding: 'ISO-8859-1'});\r\n   * @example <caption>Modify SVG output with reviver function</caption>\r\n   * var svg = canvas.toSVG(null, function(svg) {\r\n   *   return svg.replace('stroke-dasharray: ; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; ', '');\r\n   * });\r\n   */\r\n  toSVG(options: TSVGExportOptions = {}, reviver?: TSVGReviver) {\r\n    options.reviver = reviver;\r\n    const markup: string[] = [];\r\n\r\n    this._setSVGPreamble(markup, options);\r\n    this._setSVGHeader(markup, options);\r\n    if (this.clipPath) {\r\n      markup.push(`<g clip-path=\"url(#${this.clipPath.clipPathId})\" >\\n`);\r\n    }\r\n    this._setSVGBgOverlayColor(markup, 'background');\r\n    this._setSVGBgOverlayImage(markup, 'backgroundImage', reviver);\r\n    this._setSVGObjects(markup, reviver);\r\n    if (this.clipPath) {\r\n      markup.push('</g>\\n');\r\n    }\r\n    this._setSVGBgOverlayColor(markup, 'overlay');\r\n    this._setSVGBgOverlayImage(markup, 'overlayImage', reviver);\r\n\r\n    markup.push('</svg>');\r\n\r\n    return markup.join('');\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _setSVGPreamble(markup: string[], options: TSVGExportOptions): void {\r\n    if (options.suppressPreamble) {\r\n      return;\r\n    }\r\n    markup.push(\r\n      '<?xml version=\"1.0\" encoding=\"',\r\n      options.encoding || 'UTF-8',\r\n      '\" standalone=\"no\" ?>\\n',\r\n      '<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" ',\r\n      '\"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\\n'\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _setSVGHeader(markup: string[], options: TSVGExportOptions): void {\r\n    const width = options.width || `${this.width}`,\r\n      height = options.height || `${this.height}`,\r\n      NUM_FRACTION_DIGITS = config.NUM_FRACTION_DIGITS,\r\n      optViewBox = options.viewBox;\r\n    let viewBox: string;\r\n    if (optViewBox) {\r\n      viewBox = `viewBox=\"${optViewBox.x} ${optViewBox.y} ${optViewBox.width} ${optViewBox.height}\" `;\r\n    } else if (this.svgViewportTransformation) {\r\n      const vpt = this.viewportTransform;\r\n      viewBox = `viewBox=\"${toFixed(\r\n        -vpt[4] / vpt[0],\r\n        NUM_FRACTION_DIGITS\r\n      )} ${toFixed(-vpt[5] / vpt[3], NUM_FRACTION_DIGITS)} ${toFixed(\r\n        this.width / vpt[0],\r\n        NUM_FRACTION_DIGITS\r\n      )} ${toFixed(this.height / vpt[3], NUM_FRACTION_DIGITS)}\" `;\r\n    } else {\r\n      viewBox = `viewBox=\"0 0 ${this.width} ${this.height}\" `;\r\n    }\r\n\r\n    markup.push(\r\n      '<svg ',\r\n      'xmlns=\"http://www.w3.org/2000/svg\" ',\r\n      'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ',\r\n      'version=\"1.1\" ',\r\n      'width=\"',\r\n      width,\r\n      '\" ',\r\n      'height=\"',\r\n      height,\r\n      '\" ',\r\n      viewBox,\r\n      'xml:space=\"preserve\">\\n',\r\n      '<desc>Created with Fabric.js ',\r\n      VERSION,\r\n      '</desc>\\n',\r\n      '<defs>\\n',\r\n      this.createSVGFontFacesMarkup(),\r\n      this.createSVGRefElementsMarkup(),\r\n      this.createSVGClipPathMarkup(options),\r\n      '</defs>\\n'\r\n    );\r\n  }\r\n\r\n  createSVGClipPathMarkup(options: TSVGExportOptions): string {\r\n    const clipPath = this.clipPath;\r\n    if (clipPath) {\r\n      clipPath.clipPathId = `CLIPPATH_${uid()}`;\r\n      return `<clipPath id=\"${clipPath.clipPathId}\" >\\n${clipPath.toClipPathSVG(\r\n        options.reviver\r\n      )}</clipPath>\\n`;\r\n    }\r\n    return '';\r\n  }\r\n\r\n  /**\r\n   * Creates markup containing SVG referenced elements like patterns, gradients etc.\r\n   * @return {String}\r\n   */\r\n  createSVGRefElementsMarkup(): string {\r\n    return (['background', 'overlay'] as const)\r\n      .map((prop) => {\r\n        const fill = this[`${prop}Color`];\r\n        if (isFiller(fill)) {\r\n          const shouldTransform = this[`${prop}Vpt`],\r\n            vpt = this.viewportTransform,\r\n            object = {\r\n              // otherwise circular dependency\r\n              isType: () => false,\r\n              width: this.width / (shouldTransform ? vpt[0] : 1),\r\n              height: this.height / (shouldTransform ? vpt[3] : 1),\r\n            };\r\n          return fill.toSVG(object as FabricObject, {\r\n            additionalTransform: shouldTransform ? matrixToSVG(vpt) : '',\r\n          });\r\n        }\r\n      })\r\n      .join('');\r\n  }\r\n\r\n  /**\r\n   * Creates markup containing SVG font faces,\r\n   * font URLs for font faces must be collected by developers\r\n   * and are not extracted from the DOM by fabricjs\r\n   * @param {Array} objects Array of fabric objects\r\n   * @return {String}\r\n   */\r\n  createSVGFontFacesMarkup(): string {\r\n    const objects: FabricObject[] = [],\r\n      fontList: Record<string, boolean> = {},\r\n      fontPaths = config.fontPaths;\r\n\r\n    this._objects.forEach(function add(object) {\r\n      objects.push(object);\r\n      if (isCollection(object)) {\r\n        object._objects.forEach(add);\r\n      }\r\n    });\r\n\r\n    objects.forEach((obj) => {\r\n      if (!isTextObject(obj)) {\r\n        return;\r\n      }\r\n      const { styles, fontFamily } = obj;\r\n      if (fontList[fontFamily] || !fontPaths[fontFamily]) {\r\n        return;\r\n      }\r\n      fontList[fontFamily] = true;\r\n      if (!styles) {\r\n        return;\r\n      }\r\n      Object.values(styles).forEach((styleRow) => {\r\n        Object.values(styleRow).forEach(({ fontFamily = '' }) => {\r\n          if (!fontList[fontFamily] && fontPaths[fontFamily]) {\r\n            fontList[fontFamily] = true;\r\n          }\r\n        });\r\n      });\r\n    });\r\n\r\n    const fontListMarkup = Object.keys(fontList)\r\n      .map(\r\n        (fontFamily) =>\r\n          `\\t\\t@font-face {\\n\\t\\t\\tfont-family: '${fontFamily}';\\n\\t\\t\\tsrc: url('${fontPaths[fontFamily]}');\\n\\t\\t}\\n`\r\n      )\r\n      .join('');\r\n\r\n    if (fontListMarkup) {\r\n      return `\\t<style type=\"text/css\"><![CDATA[\\n${fontListMarkup}]]></style>\\n`;\r\n    }\r\n    return '';\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _setSVGObjects(markup: string[], reviver?: TSVGReviver) {\r\n    this.forEachObject((fabricObject) => {\r\n      if (fabricObject.excludeFromExport) {\r\n        return;\r\n      }\r\n      this._setSVGObject(markup, fabricObject, reviver);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * This is its own function because the Canvas ( non static ) requires extra code here\r\n   * @private\r\n   */\r\n  _setSVGObject(\r\n    markup: string[],\r\n    instance: FabricObject,\r\n    reviver?: TSVGReviver\r\n  ) {\r\n    markup.push(instance.toSVG(reviver));\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _setSVGBgOverlayImage(\r\n    markup: string[],\r\n    property: 'overlayImage' | 'backgroundImage',\r\n    reviver?: TSVGReviver\r\n  ) {\r\n    const bgOrOverlay = this[property];\r\n    if (bgOrOverlay && !bgOrOverlay.excludeFromExport && bgOrOverlay.toSVG) {\r\n      markup.push(bgOrOverlay.toSVG(reviver));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @TODO this seems to handle patterns but fail at gradients.\r\n   * @private\r\n   */\r\n  _setSVGBgOverlayColor(markup: string[], property: 'background' | 'overlay') {\r\n    const filler = this[`${property}Color`];\r\n    if (!filler) {\r\n      return;\r\n    }\r\n    if (isFiller(filler)) {\r\n      const repeat = (filler as Pattern).repeat || '',\r\n        finalWidth = this.width,\r\n        finalHeight = this.height,\r\n        shouldInvert = this[`${property}Vpt`],\r\n        additionalTransform = shouldInvert\r\n          ? matrixToSVG(invertTransform(this.viewportTransform))\r\n          : '';\r\n      markup.push(\r\n        `<rect transform=\"${additionalTransform} translate(${finalWidth / 2},${\r\n          finalHeight / 2\r\n        })\" x=\"${filler.offsetX - finalWidth / 2}\" y=\"${\r\n          filler.offsetY - finalHeight / 2\r\n        }\" width=\"${\r\n          (repeat === 'repeat-y' || repeat === 'no-repeat') && isPattern(filler)\r\n            ? (filler.source as HTMLImageElement).width\r\n            : finalWidth\r\n        }\" height=\"${\r\n          (repeat === 'repeat-x' || repeat === 'no-repeat') && isPattern(filler)\r\n            ? (filler.source as HTMLImageElement).height\r\n            : finalHeight\r\n        }\" fill=\"url(#SVGID_${filler.id})\"></rect>\\n`\r\n      );\r\n    } else {\r\n      markup.push(\r\n        '<rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" ',\r\n        'fill=\"',\r\n        filler,\r\n        '\"',\r\n        '></rect>\\n'\r\n      );\r\n    }\r\n  }\r\n  /* _TO_SVG_END_ */\r\n\r\n  /**\r\n   * Populates canvas with data from the specified JSON.\r\n   * JSON format must conform to the one of {@link fabric.Canvas#toJSON}\r\n   *\r\n   * **IMPORTANT**: It is recommended to abort loading tasks before calling this method to prevent race conditions and unnecessary networking\r\n   *\r\n   * @param {String|Object} json JSON string or object\r\n   * @param {Function} [reviver] Method for further parsing of JSON elements, called after each fabric object created.\r\n   * @param {Object} [options] options\r\n   * @param {AbortSignal} [options.signal] see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\r\n   * @return {Promise<Canvas | StaticCanvas>} instance\r\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#deserialization}\r\n   * @see {@link http://jsfiddle.net/fabricjs/fmgXt/|jsFiddle demo}\r\n   * @example <caption>loadFromJSON</caption>\r\n   * canvas.loadFromJSON(json).then((canvas) => canvas.requestRenderAll());\r\n   * @example <caption>loadFromJSON with reviver</caption>\r\n   * canvas.loadFromJSON(json, function(o, object) {\r\n   *   // `o` = json object\r\n   *   // `object` = fabric.Object instance\r\n   *   // ... do some stuff ...\r\n   * }).then((canvas) => {\r\n   *   ... canvas is restored, add your code.\r\n   * });\r\n   *\r\n   */\r\n  loadFromJSON(\r\n    json: string | Record<string, any>,\r\n    reviver?: EnlivenObjectOptions['reviver'],\r\n    { signal }: Abortable = {}\r\n  ): Promise<this> {\r\n    if (!json) {\r\n      return Promise.reject(new FabricError('`json` is undefined'));\r\n    }\r\n\r\n    // parse json if it wasn't already\r\n    const serialized = typeof json === 'string' ? JSON.parse(json) : json;\r\n    const {\r\n      objects = [],\r\n      backgroundImage,\r\n      background,\r\n      overlayImage,\r\n      overlay,\r\n      clipPath,\r\n    } = serialized;\r\n    const renderOnAddRemove = this.renderOnAddRemove;\r\n    this.renderOnAddRemove = false;\r\n\r\n    return Promise.all([\r\n      enlivenObjects<FabricObject>(objects, {\r\n        reviver,\r\n        signal,\r\n      }),\r\n      enlivenObjectEnlivables(\r\n        {\r\n          backgroundImage,\r\n          backgroundColor: background,\r\n          overlayImage,\r\n          overlayColor: overlay,\r\n          clipPath,\r\n        },\r\n        { signal }\r\n      ),\r\n    ]).then(([enlived, enlivedMap]) => {\r\n      this.clear();\r\n      this.add(...enlived);\r\n      this.set(serialized);\r\n      this.set(enlivedMap);\r\n      this.renderOnAddRemove = renderOnAddRemove;\r\n      return this;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Clones canvas instance\r\n   * @param {string[]} [properties] Array of properties to include in the cloned canvas and children\r\n   */\r\n  clone(properties: string[]) {\r\n    const data = this.toObject(properties);\r\n    const canvas = this.cloneWithoutData();\r\n    return canvas.loadFromJSON(data);\r\n  }\r\n\r\n  /**\r\n   * Clones canvas instance without cloning existing data.\r\n   * This essentially copies canvas dimensions since loadFromJSON does not affect canvas size.\r\n   */\r\n  cloneWithoutData() {\r\n    const el = createCanvasElement();\r\n    el.width = this.width;\r\n    el.height = this.height;\r\n    return new (this.constructor as Constructor<this>)(el);\r\n  }\r\n\r\n  /**\r\n   * Exports canvas element to a dataurl image. Note that when multiplier is used, cropping is scaled appropriately\r\n   * @param {Object} [options] Options object\r\n   * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\r\n   * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\r\n   * @param {Number} [options.multiplier=1] Multiplier to scale by, to have consistent\r\n   * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\r\n   * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\r\n   * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\r\n   * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\r\n   * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 2.0.0\r\n   * @param {(object: fabric.Object) => boolean} [options.filter] Function to filter objects.\r\n   * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\r\n   * @see {@link https://jsfiddle.net/xsjua1rd/ demo}\r\n   * @example <caption>Generate jpeg dataURL with lower quality</caption>\r\n   * var dataURL = canvas.toDataURL({\r\n   *   format: 'jpeg',\r\n   *   quality: 0.8\r\n   * });\r\n   * @example <caption>Generate cropped png dataURL (clipping of canvas)</caption>\r\n   * var dataURL = canvas.toDataURL({\r\n   *   format: 'png',\r\n   *   left: 100,\r\n   *   top: 100,\r\n   *   width: 200,\r\n   *   height: 200\r\n   * });\r\n   * @example <caption>Generate double scaled png dataURL</caption>\r\n   * var dataURL = canvas.toDataURL({\r\n   *   format: 'png',\r\n   *   multiplier: 2\r\n   * });\r\n   * @example <caption>Generate dataURL with objects that overlap a specified object</caption>\r\n   * var myObject;\r\n   * var dataURL = canvas.toDataURL({\r\n   *   filter: (object) => object.isContainedWithinObject(myObject) || object.intersectsWithObject(myObject)\r\n   * });\r\n   */\r\n  toDataURL(options = {} as TDataUrlOptions): string {\r\n    const {\r\n      format = 'png',\r\n      quality = 1,\r\n      multiplier = 1,\r\n      enableRetinaScaling = false,\r\n    } = options;\r\n    const finalMultiplier =\r\n      multiplier * (enableRetinaScaling ? this.getRetinaScaling() : 1);\r\n\r\n    return toDataURL(\r\n      this.toCanvasElement(finalMultiplier, options),\r\n      format,\r\n      quality\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Create a new HTMLCanvas element painted with the current canvas content.\r\n   * No need to resize the actual one or repaint it.\r\n   * Will transfer object ownership to a new canvas, paint it, and set everything back.\r\n   * This is an intermediary step used to get to a dataUrl but also it is useful to\r\n   * create quick image copies of a canvas without passing for the dataUrl string\r\n   * @param {Number} [multiplier] a zoom factor.\r\n   * @param {Object} [options] Cropping informations\r\n   * @param {Number} [options.left] Cropping left offset.\r\n   * @param {Number} [options.top] Cropping top offset.\r\n   * @param {Number} [options.width] Cropping width.\r\n   * @param {Number} [options.height] Cropping height.\r\n   * @param {(object: fabric.Object) => boolean} [options.filter] Function to filter objects.\r\n   */\r\n  toCanvasElement(\r\n    multiplier = 1,\r\n    { width, height, left, top, filter } = {} as TToCanvasElementOptions\r\n  ): HTMLCanvasElement {\r\n    const scaledWidth = (width || this.width) * multiplier,\r\n      scaledHeight = (height || this.height) * multiplier,\r\n      zoom = this.getZoom(),\r\n      originalWidth = this.width,\r\n      originalHeight = this.height,\r\n      originalSkipControlsDrawing = this.skipControlsDrawing,\r\n      newZoom = zoom * multiplier,\r\n      vp = this.viewportTransform,\r\n      translateX = (vp[4] - (left || 0)) * multiplier,\r\n      translateY = (vp[5] - (top || 0)) * multiplier,\r\n      newVp = [newZoom, 0, 0, newZoom, translateX, translateY] as TMat2D,\r\n      originalRetina = this.enableRetinaScaling,\r\n      canvasEl = createCanvasElement(),\r\n      objectsToRender = filter\r\n        ? this._objects.filter((obj) => filter(obj))\r\n        : this._objects;\r\n    canvasEl.width = scaledWidth;\r\n    canvasEl.height = scaledHeight;\r\n    this.enableRetinaScaling = false;\r\n    this.viewportTransform = newVp;\r\n    this.width = scaledWidth;\r\n    this.height = scaledHeight;\r\n    this.skipControlsDrawing = true;\r\n    this.calcViewportBoundaries();\r\n    this.renderCanvas(canvasEl.getContext('2d')!, objectsToRender);\r\n    this.viewportTransform = vp;\r\n    this.width = originalWidth;\r\n    this.height = originalHeight;\r\n    this.calcViewportBoundaries();\r\n    this.enableRetinaScaling = originalRetina;\r\n    this.skipControlsDrawing = originalSkipControlsDrawing;\r\n    return canvasEl;\r\n  }\r\n\r\n  /**\r\n   * Waits until rendering has settled to destroy the canvas\r\n   * @returns {Promise<boolean>} a promise resolving to `true` once the canvas has been destroyed or to `false` if the canvas has was already destroyed\r\n   * @throws if aborted by a consequent call\r\n   */\r\n  dispose() {\r\n    !this.disposed &&\r\n      this.elements.cleanupDOM({ width: this.width, height: this.height });\r\n    runningAnimations.cancelByCanvas(this);\r\n    this.disposed = true;\r\n    return new Promise<boolean>((resolve, reject) => {\r\n      const task = () => {\r\n        this.destroy();\r\n        resolve(true);\r\n      };\r\n      task.kill = reject;\r\n      if (this.__cleanupTask) {\r\n        this.__cleanupTask.kill('aborted');\r\n      }\r\n\r\n      if (this.destroyed) {\r\n        resolve(false);\r\n      } else if (this.nextRenderHandle) {\r\n        this.__cleanupTask = task;\r\n      } else {\r\n        task();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Clears the canvas element, disposes objects and frees resources.\r\n   *\r\n   * Invoked as part of the **async** operation of {@link dispose}.\r\n   *\r\n   * **CAUTION**:\r\n   *\r\n   * This method is **UNSAFE**.\r\n   * You may encounter a race condition using it if there's a requested render.\r\n   * Call this method only if you are sure rendering has settled.\r\n   * Consider using {@link dispose} as it is **SAFE**\r\n   *\r\n   * @private\r\n   */\r\n  destroy() {\r\n    this.destroyed = true;\r\n    this.cancelRequestedRender();\r\n    this.forEachObject((object) => object.dispose());\r\n    this._objects = [];\r\n    if (this.backgroundImage) {\r\n      this.backgroundImage.dispose();\r\n    }\r\n    this.backgroundImage = undefined;\r\n    if (this.overlayImage) {\r\n      this.overlayImage.dispose();\r\n    }\r\n    this.overlayImage = undefined;\r\n    this.elements.dispose();\r\n  }\r\n\r\n  /**\r\n   * Returns a string representation of an instance\r\n   * @return {String} string representation of an instance\r\n   */\r\n  toString() {\r\n    return `#<Canvas (${this.complexity()}): { objects: ${\r\n      this._objects.length\r\n    } }>`;\r\n  }\r\n}\r\n","import type { TPointerEvent } from '../EventTypeDefs';\r\nimport { Point } from '../Point';\r\nimport { getScrollLeftTop } from './dom_misc';\r\n\r\nconst touchEvents = ['touchstart', 'touchmove', 'touchend'];\r\n\r\nfunction getTouchInfo(event: TouchEvent | MouseEvent): MouseEvent | Touch {\r\n  const touchProp = (event as TouchEvent).changedTouches;\r\n  if (touchProp && touchProp[0]) {\r\n    return touchProp[0];\r\n  }\r\n  return event as MouseEvent;\r\n}\r\n\r\nexport const getPointer = (event: TPointerEvent): Point => {\r\n  const element = event.target as HTMLElement,\r\n    scroll = getScrollLeftTop(element),\r\n    _evt = getTouchInfo(event);\r\n  return new Point(_evt.clientX + scroll.left, _evt.clientY + scroll.top);\r\n};\r\n\r\nexport const isTouchEvent = (event: TPointerEvent) =>\r\n  touchEvents.includes(event.type) ||\r\n  (event as PointerEvent).pointerType === 'touch';\r\n\r\nexport const stopEvent = (e: Event) => {\r\n  e.preventDefault();\r\n  e.stopPropagation();\r\n};\r\n","import type { XY } from '../../Point';\r\nimport { Point } from '../../Point';\r\nimport type { TBBox } from '../../typedefs';\r\n\r\n/**\r\n * Calculates bounding box (left, top, width, height) from given `points`\r\n * @param {XY[]} points\r\n * @return {Object} Object with left, top, width, height properties\r\n */\r\nexport const makeBoundingBoxFromPoints = (points: XY[]): TBBox => {\r\n  if (points.length === 0) {\r\n    return {\r\n      left: 0,\r\n      top: 0,\r\n      width: 0,\r\n      height: 0,\r\n    };\r\n  }\r\n\r\n  const { min, max } = points.reduce(\r\n    ({ min, max }, curr) => {\r\n      return {\r\n        min: min.min(curr),\r\n        max: max.max(curr),\r\n      };\r\n    },\r\n    { min: new Point(points[0]), max: new Point(points[0]) }\r\n  );\r\n\r\n  const size = max.subtract(min);\r\n\r\n  return {\r\n    left: min.x,\r\n    top: min.y,\r\n    width: size.x,\r\n    height: size.y,\r\n  };\r\n};\r\n","import { Point } from '../../Point';\r\nimport { CENTER } from '../../constants';\r\nimport type { FabricObject } from '../../shapes/Object/Object';\r\nimport type { TMat2D } from '../../typedefs';\r\nimport { makeBoundingBoxFromPoints } from './boundingBoxFromPoints';\r\nimport {\r\n  invertTransform,\r\n  multiplyTransformMatrices,\r\n  qrDecompose,\r\n} from './matrix';\r\n\r\n/**\r\n * given an object and a transform, apply the inverse transform to the object,\r\n * this is equivalent to remove from that object that transformation, so that\r\n * added in a space with the removed transform, the object will be the same as before.\r\n * Removing from an object a transform that scale by 2 is like scaling it by 1/2.\r\n * Removing from an object a transform that rotate by 30deg is like rotating by 30deg\r\n * in the opposite direction.\r\n * This util is used to add objects inside transformed groups or nested groups.\r\n * @param {FabricObject} object the object you want to transform\r\n * @param {TMat2D} transform the destination transform\r\n */\r\nexport const removeTransformFromObject = (\r\n  object: FabricObject,\r\n  transform: TMat2D\r\n) => {\r\n  const inverted = invertTransform(transform),\r\n    finalTransform = multiplyTransformMatrices(\r\n      inverted,\r\n      object.calcOwnMatrix()\r\n    );\r\n  applyTransformToObject(object, finalTransform);\r\n};\r\n\r\n/**\r\n * given an object and a transform, apply the transform to the object.\r\n * this is equivalent to change the space where the object is drawn.\r\n * Adding to an object a transform that scale by 2 is like scaling it by 2.\r\n * This is used when removing an object from an active selection for example.\r\n * @param {FabricObject} object the object you want to transform\r\n * @param {Array} transform the destination transform\r\n */\r\nexport const addTransformToObject = (object: FabricObject, transform: TMat2D) =>\r\n  applyTransformToObject(\r\n    object,\r\n    multiplyTransformMatrices(transform, object.calcOwnMatrix())\r\n  );\r\n\r\n/**\r\n * discard an object transform state and apply the one from the matrix.\r\n * @param {FabricObject} object the object you want to transform\r\n * @param {Array} transform the destination transform\r\n */\r\nexport const applyTransformToObject = (\r\n  object: FabricObject,\r\n  transform: TMat2D\r\n) => {\r\n  const { translateX, translateY, scaleX, scaleY, ...otherOptions } =\r\n      qrDecompose(transform),\r\n    center = new Point(translateX, translateY);\r\n  object.flipX = false;\r\n  object.flipY = false;\r\n  Object.assign(object, otherOptions);\r\n  object.set({ scaleX, scaleY });\r\n  object.setPositionByOrigin(center, CENTER, CENTER);\r\n};\r\n/**\r\n * reset an object transform state to neutral. Top and left are not accounted for\r\n * @param  {FabricObject} target object to transform\r\n */\r\nexport const resetObjectTransform = (target: FabricObject) => {\r\n  target.scaleX = 1;\r\n  target.scaleY = 1;\r\n  target.skewX = 0;\r\n  target.skewY = 0;\r\n  target.flipX = false;\r\n  target.flipY = false;\r\n  target.rotate(0);\r\n};\r\n\r\n/**\r\n * Extract Object transform values\r\n * @param  {FabricObject} target object to read from\r\n * @return {Object} Components of transform\r\n */\r\nexport const saveObjectTransform = (target: FabricObject) => ({\r\n  scaleX: target.scaleX,\r\n  scaleY: target.scaleY,\r\n  skewX: target.skewX,\r\n  skewY: target.skewY,\r\n  angle: target.angle,\r\n  left: target.left,\r\n  flipX: target.flipX,\r\n  flipY: target.flipY,\r\n  top: target.top,\r\n});\r\n\r\n/**\r\n * given a width and height, return the size of the bounding box\r\n * that can contains the box with width/height with applied transform.\r\n * Use to calculate the boxes around objects for controls.\r\n * @param {Number} width\r\n * @param {Number} height\r\n * @param {TMat2D} t\r\n * @returns {Point} size\r\n */\r\nexport const sizeAfterTransform = (\r\n  width: number,\r\n  height: number,\r\n  t: TMat2D\r\n) => {\r\n  const dimX = width / 2,\r\n    dimY = height / 2,\r\n    points = [\r\n      new Point(-dimX, -dimY),\r\n      new Point(dimX, -dimY),\r\n      new Point(-dimX, dimY),\r\n      new Point(dimX, dimY),\r\n    ].map((p) => p.transform(t)),\r\n    bbox = makeBoundingBoxFromPoints(points);\r\n  return new Point(bbox.width, bbox.height);\r\n};\r\n","import { iMatrix } from '../../constants';\r\nimport type { Point } from '../../Point';\r\nimport type { FabricObject } from '../../shapes/Object/Object';\r\nimport type { TMat2D } from '../../typedefs';\r\nimport { invertTransform, multiplyTransformMatrices } from './matrix';\r\nimport { applyTransformToObject } from './objectTransforms';\r\n\r\n/**\r\n * We are actually looking for the transformation from the destination plane to the source plane (change of basis matrix)\\\r\n * The object will exist on the destination plane and we want it to seem unchanged by it so we invert the destination matrix (`to`) and then apply the source matrix (`from`)\r\n * @param [from]\r\n * @param [to]\r\n * @returns\r\n */\r\nexport const calcPlaneChangeMatrix = (\r\n  from: TMat2D = iMatrix,\r\n  to: TMat2D = iMatrix\r\n) => multiplyTransformMatrices(invertTransform(to), from);\r\n\r\n/**\r\n * Sends a point from the source coordinate plane to the destination coordinate plane.\\\r\n * From the canvas/viewer's perspective the point remains unchanged.\r\n *\r\n * @example <caption>Send point from canvas plane to group plane</caption>\r\n * var obj = new Rect({ left: 20, top: 20, width: 60, height: 60, strokeWidth: 0 });\r\n * var group = new Group([obj], { strokeWidth: 0 });\r\n * var sentPoint1 = sendPointToPlane(new Point(50, 50), undefined, group.calcTransformMatrix());\r\n * var sentPoint2 = sendPointToPlane(new Point(50, 50), iMatrix, group.calcTransformMatrix());\r\n * console.log(sentPoint1, sentPoint2) //  both points print (0,0) which is the center of group\r\n *\r\n * @param {Point} point\r\n * @param {TMat2D} [from] plane matrix containing object. Passing `undefined` is equivalent to passing the identity matrix, which means `point` exists in the canvas coordinate plane.\r\n * @param {TMat2D} [to] destination plane matrix to contain object. Passing `undefined` means `point` should be sent to the canvas coordinate plane.\r\n * @returns {Point} transformed point\r\n */\r\nexport const sendPointToPlane = (\r\n  point: Point,\r\n  from: TMat2D = iMatrix,\r\n  to: TMat2D = iMatrix\r\n): Point => point.transform(calcPlaneChangeMatrix(from, to));\r\n\r\n/**\r\n * See {@link sendPointToPlane}\r\n */\r\nexport const sendVectorToPlane = (\r\n  point: Point,\r\n  from: TMat2D = iMatrix,\r\n  to: TMat2D = iMatrix\r\n): Point => point.transform(calcPlaneChangeMatrix(from, to), true);\r\n\r\n/**\r\n *\r\n * A util that abstracts applying transform to objects.\\\r\n * Sends `object` to the destination coordinate plane by applying the relevant transformations.\\\r\n * Changes the space/plane where `object` is drawn.\\\r\n * From the canvas/viewer's perspective `object` remains unchanged.\r\n *\r\n * @example <caption>Move clip path from one object to another while preserving it's appearance as viewed by canvas/viewer</caption>\r\n * let obj, obj2;\r\n * let clipPath = new Circle({ radius: 50 });\r\n * obj.clipPath = clipPath;\r\n * // render\r\n * sendObjectToPlane(clipPath, obj.calcTransformMatrix(), obj2.calcTransformMatrix());\r\n * obj.clipPath = undefined;\r\n * obj2.clipPath = clipPath;\r\n * // render, clipPath now clips obj2 but seems unchanged from the eyes of the viewer\r\n *\r\n * @example <caption>Clip an object's clip path with an existing object</caption>\r\n * let obj, existingObj;\r\n * let clipPath = new Circle({ radius: 50 });\r\n * obj.clipPath = clipPath;\r\n * let transformTo = multiplyTransformMatrices(obj.calcTransformMatrix(), clipPath.calcTransformMatrix());\r\n * sendObjectToPlane(existingObj, existingObj.group?.calcTransformMatrix(), transformTo);\r\n * clipPath.clipPath = existingObj;\r\n *\r\n * @param {FabricObject} object\r\n * @param {Matrix} [from] plane matrix containing object. Passing `undefined` is equivalent to passing the identity matrix, which means `object` is a direct child of canvas.\r\n * @param {Matrix} [to] destination plane matrix to contain object. Passing `undefined` means `object` should be sent to the canvas coordinate plane.\r\n * @returns {Matrix} the transform matrix that was applied to `object`\r\n */\r\nexport const sendObjectToPlane = (\r\n  object: FabricObject,\r\n  from?: TMat2D,\r\n  to?: TMat2D\r\n): TMat2D => {\r\n  const t = calcPlaneChangeMatrix(from, to);\r\n  applyTransformToObject(\r\n    object,\r\n    multiplyTransformMatrices(t, object.calcOwnMatrix())\r\n  );\r\n  return t;\r\n};\r\n","import type {\r\n  BasicTransformEvent,\r\n  TModificationEvents,\r\n} from '../EventTypeDefs';\r\n\r\nexport const fireEvent = (\r\n  eventName: TModificationEvents,\r\n  options: BasicTransformEvent\r\n) => {\r\n  const {\r\n    transform: { target },\r\n  } = options;\r\n  target.canvas?.fire(`object:${eventName}`, {\r\n    ...options,\r\n    target,\r\n  });\r\n  target.fire(eventName, options);\r\n};\r\n","import type { TOriginX, TOriginY } from '../../typedefs';\r\n\r\nconst originOffset = {\r\n  left: -0.5,\r\n  top: -0.5,\r\n  center: 0,\r\n  bottom: 0.5,\r\n  right: 0.5,\r\n};\r\n/**\r\n * Resolves origin value relative to center\r\n * @private\r\n * @param {TOriginX | TOriginY} originValue originX / originY\r\n * @returns number\r\n */\r\n\r\nexport const resolveOrigin = (\r\n  originValue: TOriginX | TOriginY | number\r\n): number =>\r\n  typeof originValue === 'string'\r\n    ? originOffset[originValue]\r\n    : originValue - 0.5;\r\n","import type {\r\n  TPointerEvent,\r\n  Transform,\r\n  TransformAction,\r\n  BasicTransformEvent,\r\n} from '../EventTypeDefs';\r\nimport { resolveOrigin } from '../util/misc/resolveOrigin';\r\nimport { Point } from '../Point';\r\nimport type { FabricObject } from '../shapes/Object/FabricObject';\r\nimport type { TOriginX, TOriginY } from '../typedefs';\r\nimport {\r\n  degreesToRadians,\r\n  radiansToDegrees,\r\n} from '../util/misc/radiansDegreesConversion';\r\nimport type { Control } from './Control';\r\nimport { CENTER } from '../constants';\r\n\r\nexport const NOT_ALLOWED_CURSOR = 'not-allowed';\r\n\r\n/**\r\n * @param {Boolean} alreadySelected true if target is already selected\r\n * @param {String} corner a string representing the corner ml, mr, tl ...\r\n * @param {Event} e Event object\r\n * @param {FabricObject} [target] inserted back to help overriding. Unused\r\n */\r\nexport const getActionFromCorner = (\r\n  alreadySelected: boolean,\r\n  corner: string | undefined,\r\n  e: TPointerEvent,\r\n  target: FabricObject\r\n) => {\r\n  if (!corner || !alreadySelected) {\r\n    return 'drag';\r\n  }\r\n  const control = target.controls[corner];\r\n  return control.getActionName(e, control, target);\r\n};\r\n\r\n/**\r\n * Checks if transform is centered\r\n * @param {Object} transform transform data\r\n * @return {Boolean} true if transform is centered\r\n */\r\nexport function isTransformCentered(transform: Transform) {\r\n  return (\r\n    resolveOrigin(transform.originX) === resolveOrigin(CENTER) &&\r\n    resolveOrigin(transform.originY) === resolveOrigin(CENTER)\r\n  );\r\n}\r\n\r\nexport function invertOrigin(origin: TOriginX | TOriginY) {\r\n  return -resolveOrigin(origin) + 0.5;\r\n}\r\n\r\nexport const isLocked = (\r\n  target: FabricObject,\r\n  lockingKey:\r\n    | 'lockMovementX'\r\n    | 'lockMovementY'\r\n    | 'lockRotation'\r\n    | 'lockScalingX'\r\n    | 'lockScalingY'\r\n    | 'lockSkewingX'\r\n    | 'lockSkewingY'\r\n    | 'lockScalingFlip'\r\n) => target[lockingKey];\r\n\r\nexport const commonEventInfo: TransformAction<\r\n  Transform,\r\n  BasicTransformEvent\r\n> = (eventData, transform, x, y) => {\r\n  return {\r\n    e: eventData,\r\n    transform,\r\n    pointer: new Point(x, y),\r\n  };\r\n};\r\n\r\n/**\r\n * Combine control position and object angle to find the control direction compared\r\n * to the object center.\r\n * @param {FabricObject} fabricObject the fabric object for which we are rendering controls\r\n * @param {Control} control the control class\r\n * @return {Number} 0 - 7 a quadrant number\r\n */\r\nexport function findCornerQuadrant(\r\n  fabricObject: FabricObject,\r\n  control: Control\r\n): number {\r\n  //  angle is relative to canvas plane\r\n  const angle = fabricObject.getTotalAngle(),\r\n    cornerAngle =\r\n      angle + radiansToDegrees(Math.atan2(control.y, control.x)) + 360;\r\n  return Math.round((cornerAngle % 360) / 45);\r\n}\r\n\r\n/**\r\n * @returns the normalized point (rotated relative to center) in local coordinates\r\n */\r\nfunction normalizePoint(\r\n  target: FabricObject,\r\n  point: Point,\r\n  originX: TOriginX,\r\n  originY: TOriginY\r\n): Point {\r\n  const center = target.getRelativeCenterPoint(),\r\n    p =\r\n      typeof originX !== 'undefined' && typeof originY !== 'undefined'\r\n        ? target.translateToGivenOrigin(\r\n            center,\r\n            CENTER,\r\n            CENTER,\r\n            originX,\r\n            originY\r\n          )\r\n        : new Point(target.left, target.top),\r\n    p2 = target.angle\r\n      ? point.rotate(-degreesToRadians(target.angle), center)\r\n      : point;\r\n  return p2.subtract(p);\r\n}\r\n\r\n/**\r\n * Transforms a point to the offset from the given origin\r\n * @param {Object} transform\r\n * @param {String} originX\r\n * @param {String} originY\r\n * @param {number} x\r\n * @param {number} y\r\n * @return {Fabric.Point} the normalized point\r\n */\r\nexport function getLocalPoint(\r\n  { target, corner }: Transform,\r\n  originX: TOriginX,\r\n  originY: TOriginY,\r\n  x: number,\r\n  y: number\r\n) {\r\n  const control = target.controls[corner],\r\n    zoom = target.canvas?.getZoom() || 1,\r\n    padding = target.padding / zoom,\r\n    localPoint = normalizePoint(target, new Point(x, y), originX, originY);\r\n  if (localPoint.x >= padding) {\r\n    localPoint.x -= padding;\r\n  }\r\n  if (localPoint.x <= -padding) {\r\n    localPoint.x += padding;\r\n  }\r\n  if (localPoint.y >= padding) {\r\n    localPoint.y -= padding;\r\n  }\r\n  if (localPoint.y <= padding) {\r\n    localPoint.y += padding;\r\n  }\r\n  localPoint.x -= control.offsetX;\r\n  localPoint.y -= control.offsetY;\r\n  return localPoint;\r\n}\r\n","import type { TransformActionHandler } from '../EventTypeDefs';\r\nimport { LEFT, TOP, MOVING } from '../constants';\r\nimport { fireEvent } from './fireEvent';\r\nimport { commonEventInfo, isLocked } from './util';\r\n\r\n/**\r\n * Action handler\r\n * @private\r\n * @param {Event} eventData javascript event that is doing the transform\r\n * @param {Object} transform javascript object containing a series of information around the current transform\r\n * @param {number} x current mouse x position, canvas normalized\r\n * @param {number} y current mouse y position, canvas normalized\r\n * @return {Boolean} true if the translation occurred\r\n */\r\nexport const dragHandler: TransformActionHandler = (\r\n  eventData,\r\n  transform,\r\n  x,\r\n  y\r\n) => {\r\n  const { target, offsetX, offsetY } = transform,\r\n    newLeft = x - offsetX,\r\n    newTop = y - offsetY,\r\n    moveX = !isLocked(target, 'lockMovementX') && target.left !== newLeft,\r\n    moveY = !isLocked(target, 'lockMovementY') && target.top !== newTop;\r\n  moveX && target.set(LEFT, newLeft);\r\n  moveY && target.set(TOP, newTop);\r\n  if (moveX || moveY) {\r\n    fireEvent(MOVING, commonEventInfo(eventData, transform, x, y));\r\n  }\r\n  return moveX || moveY;\r\n};\r\n","import type { TSVGReviver } from '../../typedefs';\r\nimport { uid } from '../../util/internals/uid';\r\nimport { colorPropToSVG, matrixToSVG } from '../../util/misc/svgParsing';\r\nimport { FILL, NONE, STROKE } from '../../constants';\r\nimport type { FabricObject } from './FabricObject';\r\nimport { isFiller } from '../../util/typeAssertions';\r\n\r\nexport class FabricObjectSVGExportMixin {\r\n  /**\r\n   * When an object is being exported as SVG as a clippath, a reference inside the SVG is needed.\r\n   * This reference is a UID in the fabric namespace and is temporary stored here.\r\n   * @type {String}\r\n   */\r\n  declare clipPathId?: string;\r\n\r\n  /**\r\n   * Returns styles-string for svg-export\r\n   * @param {Boolean} skipShadow a boolean to skip shadow filter output\r\n   * @return {String}\r\n   */\r\n  getSvgStyles(\r\n    this: FabricObjectSVGExportMixin & FabricObject,\r\n    skipShadow?: boolean\r\n  ) {\r\n    const fillRule = this.fillRule ? this.fillRule : 'nonzero',\r\n      strokeWidth = this.strokeWidth ? this.strokeWidth : '0',\r\n      strokeDashArray = this.strokeDashArray\r\n        ? this.strokeDashArray.join(' ')\r\n        : NONE,\r\n      strokeDashOffset = this.strokeDashOffset ? this.strokeDashOffset : '0',\r\n      strokeLineCap = this.strokeLineCap ? this.strokeLineCap : 'butt',\r\n      strokeLineJoin = this.strokeLineJoin ? this.strokeLineJoin : 'miter',\r\n      strokeMiterLimit = this.strokeMiterLimit ? this.strokeMiterLimit : '4',\r\n      opacity = typeof this.opacity !== 'undefined' ? this.opacity : '1',\r\n      visibility = this.visible ? '' : ' visibility: hidden;',\r\n      filter = skipShadow ? '' : this.getSvgFilter(),\r\n      fill = colorPropToSVG(FILL, this.fill),\r\n      stroke = colorPropToSVG(STROKE, this.stroke);\r\n\r\n    return [\r\n      stroke,\r\n      'stroke-width: ',\r\n      strokeWidth,\r\n      '; ',\r\n      'stroke-dasharray: ',\r\n      strokeDashArray,\r\n      '; ',\r\n      'stroke-linecap: ',\r\n      strokeLineCap,\r\n      '; ',\r\n      'stroke-dashoffset: ',\r\n      strokeDashOffset,\r\n      '; ',\r\n      'stroke-linejoin: ',\r\n      strokeLineJoin,\r\n      '; ',\r\n      'stroke-miterlimit: ',\r\n      strokeMiterLimit,\r\n      '; ',\r\n      fill,\r\n      'fill-rule: ',\r\n      fillRule,\r\n      '; ',\r\n      'opacity: ',\r\n      opacity,\r\n      ';',\r\n      filter,\r\n      visibility,\r\n    ].join('');\r\n  }\r\n\r\n  /**\r\n   * Returns filter for svg shadow\r\n   * @return {String}\r\n   */\r\n  getSvgFilter(this: FabricObjectSVGExportMixin & FabricObject) {\r\n    return this.shadow ? `filter: url(#SVGID_${this.shadow.id});` : '';\r\n  }\r\n\r\n  /**\r\n   * Returns id attribute for svg output\r\n   * @return {String}\r\n   */\r\n  getSvgCommons(\r\n    this: FabricObjectSVGExportMixin & FabricObject & { id?: string }\r\n  ) {\r\n    return [\r\n      this.id ? `id=\"${this.id}\" ` : '',\r\n      this.clipPath\r\n        ? `clip-path=\"url(#${\r\n            (this.clipPath as FabricObjectSVGExportMixin & FabricObject)\r\n              .clipPathId\r\n          })\" `\r\n        : '',\r\n    ].join('');\r\n  }\r\n\r\n  /**\r\n   * Returns transform-string for svg-export\r\n   * @param {Boolean} use the full transform or the single object one.\r\n   * @return {String}\r\n   */\r\n  getSvgTransform(\r\n    this: FabricObjectSVGExportMixin & FabricObject,\r\n    full?: boolean,\r\n    additionalTransform = ''\r\n  ) {\r\n    const transform = full ? this.calcTransformMatrix() : this.calcOwnMatrix(),\r\n      svgTransform = `transform=\"${matrixToSVG(transform)}`;\r\n    return `${svgTransform}${additionalTransform}\" `;\r\n  }\r\n\r\n  /**\r\n   * Returns svg representation of an instance\r\n   * This function is implemented in each subclass\r\n   * This is just because typescript otherwise cryies all the time\r\n   * @return {Array} an array of strings with the specific svg representation\r\n   * of the instance\r\n   */\r\n  _toSVG(reviver?: TSVGReviver): string[] {\r\n    return [''];\r\n  }\r\n\r\n  /**\r\n   * Returns svg representation of an instance\r\n   * @param {TSVGReviver} [reviver] Method for further parsing of svg representation.\r\n   * @return {String} svg representation of an instance\r\n   */\r\n  toSVG(\r\n    this: FabricObjectSVGExportMixin & FabricObject,\r\n    reviver?: TSVGReviver\r\n  ) {\r\n    return this._createBaseSVGMarkup(this._toSVG(reviver), {\r\n      reviver,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Returns svg clipPath representation of an instance\r\n   * @param {TSVGReviver} [reviver] Method for further parsing of svg representation.\r\n   * @return {String} svg representation of an instance\r\n   */\r\n  toClipPathSVG(\r\n    this: FabricObjectSVGExportMixin & FabricObject,\r\n    reviver?: TSVGReviver\r\n  ) {\r\n    return (\r\n      '\\t' +\r\n      this._createBaseClipPathSVGMarkup(this._toSVG(reviver), {\r\n        reviver,\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _createBaseClipPathSVGMarkup(\r\n    this: FabricObjectSVGExportMixin & FabricObject,\r\n    objectMarkup: string[],\r\n    {\r\n      reviver,\r\n      additionalTransform = '',\r\n    }: { reviver?: TSVGReviver; additionalTransform?: string } = {}\r\n  ) {\r\n    const commonPieces = [\r\n        this.getSvgTransform(true, additionalTransform),\r\n        this.getSvgCommons(),\r\n      ].join(''),\r\n      // insert commons in the markup, style and svgCommons\r\n      index = objectMarkup.indexOf('COMMON_PARTS');\r\n    objectMarkup[index] = commonPieces;\r\n    return reviver ? reviver(objectMarkup.join('')) : objectMarkup.join('');\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _createBaseSVGMarkup(\r\n    this: FabricObjectSVGExportMixin & FabricObject,\r\n    objectMarkup: string[],\r\n    {\r\n      noStyle,\r\n      reviver,\r\n      withShadow,\r\n      additionalTransform,\r\n    }: {\r\n      noStyle?: boolean;\r\n      reviver?: TSVGReviver;\r\n      withShadow?: boolean;\r\n      additionalTransform?: string;\r\n    } = {}\r\n  ): string {\r\n    const styleInfo = noStyle ? '' : `style=\"${this.getSvgStyles()}\" `,\r\n      shadowInfo = withShadow ? `style=\"${this.getSvgFilter()}\" ` : '',\r\n      clipPath = this.clipPath as FabricObjectSVGExportMixin & FabricObject,\r\n      vectorEffect = this.strokeUniform\r\n        ? 'vector-effect=\"non-scaling-stroke\" '\r\n        : '',\r\n      absoluteClipPath = clipPath && clipPath.absolutePositioned,\r\n      stroke = this.stroke,\r\n      fill = this.fill,\r\n      shadow = this.shadow,\r\n      markup = [],\r\n      // insert commons in the markup, style and svgCommons\r\n      index = objectMarkup.indexOf('COMMON_PARTS');\r\n    let clipPathMarkup;\r\n    if (clipPath) {\r\n      clipPath.clipPathId = `CLIPPATH_${uid()}`;\r\n      clipPathMarkup = `<clipPath id=\"${\r\n        clipPath.clipPathId\r\n      }\" >\\n${clipPath.toClipPathSVG(reviver)}</clipPath>\\n`;\r\n    }\r\n    if (absoluteClipPath) {\r\n      markup.push('<g ', shadowInfo, this.getSvgCommons(), ' >\\n');\r\n    }\r\n    markup.push(\r\n      '<g ',\r\n      this.getSvgTransform(false),\r\n      !absoluteClipPath ? shadowInfo + this.getSvgCommons() : '',\r\n      ' >\\n'\r\n    );\r\n    const commonPieces = [\r\n      styleInfo,\r\n      vectorEffect,\r\n      noStyle ? '' : this.addPaintOrder(),\r\n      ' ',\r\n      additionalTransform ? `transform=\"${additionalTransform}\" ` : '',\r\n    ].join('');\r\n    objectMarkup[index] = commonPieces;\r\n    if (isFiller(fill)) {\r\n      markup.push(fill.toSVG(this));\r\n    }\r\n    if (isFiller(stroke)) {\r\n      markup.push(stroke.toSVG(this));\r\n    }\r\n    if (shadow) {\r\n      markup.push(shadow.toSVG(this));\r\n    }\r\n    if (clipPath) {\r\n      markup.push(clipPathMarkup);\r\n    }\r\n    markup.push(objectMarkup.join(''));\r\n    markup.push('</g>\\n');\r\n    absoluteClipPath && markup.push('</g>\\n');\r\n    return reviver ? reviver(markup.join('')) : markup.join('');\r\n  }\r\n\r\n  addPaintOrder(this: FabricObjectSVGExportMixin & FabricObject) {\r\n    return this.paintFirst !== FILL ? ` paint-order=\"${this.paintFirst}\" ` : '';\r\n  }\r\n}\r\n","/**\r\n * Easing functions\r\n * @see {@link http://gizma.com/easing/ Easing Equations by Robert Penner}\r\n */\r\n\r\nimport { twoMathPi, halfPI } from '../../constants';\r\nimport type { TEasingFunction } from './types';\r\n\r\nconst normalize = (a: number, c: number, p: number, s: number) => {\r\n  if (a < Math.abs(c)) {\r\n    a = c;\r\n    s = p / 4;\r\n  } else {\r\n    //handle the 0/0 case:\r\n    if (c === 0 && a === 0) {\r\n      s = (p / twoMathPi) * Math.asin(1);\r\n    } else {\r\n      s = (p / twoMathPi) * Math.asin(c / a);\r\n    }\r\n  }\r\n  return { a, c, p, s };\r\n};\r\n\r\nconst elastic = (\r\n  a: number,\r\n  s: number,\r\n  p: number,\r\n  t: number,\r\n  d: number\r\n): number =>\r\n  a * Math.pow(2, 10 * (t -= 1)) * Math.sin(((t * d - s) * twoMathPi) / p);\r\n\r\n/**\r\n * Default sinusoidal easing\r\n */\r\nexport const defaultEasing: TEasingFunction = (t, b, c, d) =>\r\n  -c * Math.cos((t / d) * halfPI) + c + b;\r\n\r\n/**\r\n * Cubic easing in\r\n */\r\nexport const easeInCubic: TEasingFunction = (t, b, c, d) =>\r\n  c * (t / d) ** 3 + b;\r\n\r\n/**\r\n * Cubic easing out\r\n */\r\nexport const easeOutCubic: TEasingFunction = (t, b, c, d) =>\r\n  c * ((t / d - 1) ** 3 + 1) + b;\r\n\r\n/**\r\n * Cubic easing in and out\r\n */\r\nexport const easeInOutCubic: TEasingFunction = (t, b, c, d) => {\r\n  t /= d / 2;\r\n  if (t < 1) {\r\n    return (c / 2) * t ** 3 + b;\r\n  }\r\n  return (c / 2) * ((t - 2) ** 3 + 2) + b;\r\n};\r\n\r\n/**\r\n * Quartic easing in\r\n */\r\nexport const easeInQuart: TEasingFunction = (t, b, c, d) =>\r\n  c * (t /= d) * t ** 3 + b;\r\n\r\n/**\r\n * Quartic easing out\r\n */\r\nexport const easeOutQuart: TEasingFunction = (t, b, c, d) =>\r\n  -c * ((t = t / d - 1) * t ** 3 - 1) + b;\r\n\r\n/**\r\n * Quartic easing in and out\r\n */\r\nexport const easeInOutQuart: TEasingFunction = (t, b, c, d) => {\r\n  t /= d / 2;\r\n  if (t < 1) {\r\n    return (c / 2) * t ** 4 + b;\r\n  }\r\n  return (-c / 2) * ((t -= 2) * t ** 3 - 2) + b;\r\n};\r\n\r\n/**\r\n * Quintic easing in\r\n */\r\nexport const easeInQuint: TEasingFunction = (t, b, c, d) =>\r\n  c * (t / d) ** 5 + b;\r\n\r\n/**\r\n * Quintic easing out\r\n */\r\nexport const easeOutQuint: TEasingFunction = (t, b, c, d) =>\r\n  c * ((t / d - 1) ** 5 + 1) + b;\r\n\r\n/**\r\n * Quintic easing in and out\r\n */\r\nexport const easeInOutQuint: TEasingFunction = (t, b, c, d) => {\r\n  t /= d / 2;\r\n  if (t < 1) {\r\n    return (c / 2) * t ** 5 + b;\r\n  }\r\n  return (c / 2) * ((t - 2) ** 5 + 2) + b;\r\n};\r\n\r\n/**\r\n * Sinusoidal easing in\r\n */\r\nexport const easeInSine: TEasingFunction = (t, b, c, d) =>\r\n  -c * Math.cos((t / d) * halfPI) + c + b;\r\n\r\n/**\r\n * Sinusoidal easing out\r\n */\r\nexport const easeOutSine: TEasingFunction = (t, b, c, d) =>\r\n  c * Math.sin((t / d) * halfPI) + b;\r\n\r\n/**\r\n * Sinusoidal easing in and out\r\n */\r\nexport const easeInOutSine: TEasingFunction = (t, b, c, d) =>\r\n  (-c / 2) * (Math.cos((Math.PI * t) / d) - 1) + b;\r\n\r\n/**\r\n * Exponential easing in\r\n */\r\nexport const easeInExpo: TEasingFunction = (t, b, c, d) =>\r\n  t === 0 ? b : c * 2 ** (10 * (t / d - 1)) + b;\r\n\r\n/**\r\n * Exponential easing out\r\n */\r\nexport const easeOutExpo: TEasingFunction = (t, b, c, d) =>\r\n  t === d ? b + c : c * -(2 ** ((-10 * t) / d) + 1) + b;\r\n\r\n/**\r\n * Exponential easing in and out\r\n */\r\nexport const easeInOutExpo: TEasingFunction = (t, b, c, d) => {\r\n  if (t === 0) {\r\n    return b;\r\n  }\r\n  if (t === d) {\r\n    return b + c;\r\n  }\r\n  t /= d / 2;\r\n  if (t < 1) {\r\n    return (c / 2) * 2 ** (10 * (t - 1)) + b;\r\n  }\r\n  return (c / 2) * -(2 ** (-10 * --t) + 2) + b;\r\n};\r\n\r\n/**\r\n * Circular easing in\r\n */\r\nexport const easeInCirc: TEasingFunction = (t, b, c, d) =>\r\n  -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b;\r\n\r\n/**\r\n * Circular easing out\r\n */\r\nexport const easeOutCirc: TEasingFunction = (t, b, c, d) =>\r\n  c * Math.sqrt(1 - (t = t / d - 1) * t) + b;\r\n\r\n/**\r\n * Circular easing in and out\r\n */\r\nexport const easeInOutCirc: TEasingFunction = (t, b, c, d) => {\r\n  t /= d / 2;\r\n  if (t < 1) {\r\n    return (-c / 2) * (Math.sqrt(1 - t ** 2) - 1) + b;\r\n  }\r\n  return (c / 2) * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;\r\n};\r\n\r\n/**\r\n * Elastic easing in\r\n */\r\nexport const easeInElastic: TEasingFunction = (t, b, c, d) => {\r\n  const s = 1.70158,\r\n    a = c;\r\n  let p = 0;\r\n  if (t === 0) {\r\n    return b;\r\n  }\r\n  t /= d;\r\n  if (t === 1) {\r\n    return b + c;\r\n  }\r\n  if (!p) {\r\n    p = d * 0.3;\r\n  }\r\n  const { a: normA, s: normS, p: normP } = normalize(a, c, p, s);\r\n  return -elastic(normA, normS, normP, t, d) + b;\r\n};\r\n\r\n/**\r\n * Elastic easing out\r\n */\r\nexport const easeOutElastic: TEasingFunction = (t, b, c, d) => {\r\n  const s = 1.70158,\r\n    a = c;\r\n  let p = 0;\r\n  if (t === 0) {\r\n    return b;\r\n  }\r\n  t /= d;\r\n  if (t === 1) {\r\n    return b + c;\r\n  }\r\n  if (!p) {\r\n    p = d * 0.3;\r\n  }\r\n  const { a: normA, s: normS, p: normP, c: normC } = normalize(a, c, p, s);\r\n  return (\r\n    normA * 2 ** (-10 * t) * Math.sin(((t * d - normS) * twoMathPi) / normP) +\r\n    normC +\r\n    b\r\n  );\r\n};\r\n\r\n/**\r\n * Elastic easing in and out\r\n */\r\nexport const easeInOutElastic: TEasingFunction = (t, b, c, d) => {\r\n  const s = 1.70158,\r\n    a = c;\r\n  let p = 0;\r\n  if (t === 0) {\r\n    return b;\r\n  }\r\n  t /= d / 2;\r\n  if (t === 2) {\r\n    return b + c;\r\n  }\r\n  if (!p) {\r\n    p = d * (0.3 * 1.5);\r\n  }\r\n  const { a: normA, s: normS, p: normP, c: normC } = normalize(a, c, p, s);\r\n  if (t < 1) {\r\n    return -0.5 * elastic(normA, normS, normP, t, d) + b;\r\n  }\r\n  return (\r\n    normA *\r\n      Math.pow(2, -10 * (t -= 1)) *\r\n      Math.sin(((t * d - normS) * twoMathPi) / normP) *\r\n      0.5 +\r\n    normC +\r\n    b\r\n  );\r\n};\r\n\r\n/**\r\n * Backwards easing in\r\n */\r\nexport const easeInBack: TEasingFunction = (t, b, c, d, s = 1.70158) =>\r\n  c * (t /= d) * t * ((s + 1) * t - s) + b;\r\n\r\n/**\r\n * Backwards easing out\r\n */\r\nexport const easeOutBack: TEasingFunction = (t, b, c, d, s = 1.70158) =>\r\n  c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\r\n\r\n/**\r\n * Backwards easing in and out\r\n */\r\nexport const easeInOutBack: TEasingFunction = (t, b, c, d, s = 1.70158) => {\r\n  t /= d / 2;\r\n  if (t < 1) {\r\n    return (c / 2) * (t * t * (((s *= 1.525) + 1) * t - s)) + b;\r\n  }\r\n  return (c / 2) * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2) + b;\r\n};\r\n\r\n/**\r\n * Bouncing easing out\r\n */\r\nexport const easeOutBounce: TEasingFunction = (t, b, c, d) => {\r\n  if ((t /= d) < 1 / 2.75) {\r\n    return c * (7.5625 * t * t) + b;\r\n  } else if (t < 2 / 2.75) {\r\n    return c * (7.5625 * (t -= 1.5 / 2.75) * t + 0.75) + b;\r\n  } else if (t < 2.5 / 2.75) {\r\n    return c * (7.5625 * (t -= 2.25 / 2.75) * t + 0.9375) + b;\r\n  } else {\r\n    return c * (7.5625 * (t -= 2.625 / 2.75) * t + 0.984375) + b;\r\n  }\r\n};\r\n\r\n/**\r\n * Bouncing easing in\r\n */\r\nexport const easeInBounce: TEasingFunction = (t, b, c, d) =>\r\n  c - easeOutBounce(d - t, 0, c, d) + b;\r\n\r\n/**\r\n * Bouncing easing in and out\r\n */\r\nexport const easeInOutBounce: TEasingFunction = (t, b, c, d) =>\r\n  t < d / 2\r\n    ? easeInBounce(t * 2, 0, c, d) * 0.5 + b\r\n    : easeOutBounce(t * 2 - d, 0, c, d) * 0.5 + c * 0.5 + b;\r\n\r\n/**\r\n * Quadratic easing in\r\n */\r\nexport const easeInQuad: TEasingFunction = (t, b, c, d) => c * (t /= d) * t + b;\r\n\r\n/**\r\n * Quadratic easing out\r\n */\r\nexport const easeOutQuad: TEasingFunction = (t, b, c, d) =>\r\n  -c * (t /= d) * (t - 2) + b;\r\n\r\n/**\r\n * Quadratic easing in and out\r\n */\r\nexport const easeInOutQuad: TEasingFunction = (t, b, c, d) => {\r\n  t /= d / 2;\r\n  if (t < 1) {\r\n    return (c / 2) * t ** 2 + b;\r\n  }\r\n  return (-c / 2) * (--t * (t - 2) - 1) + b;\r\n};\r\n","import { noop } from '../../constants';\r\nimport { requestAnimFrame } from './AnimationFrameProvider';\r\nimport { runningAnimations } from './AnimationRegistry';\r\nimport { defaultEasing } from './easing';\r\nimport type {\r\n  AnimationState,\r\n  TAbortCallback,\r\n  TBaseAnimationOptions,\r\n  TEasingFunction,\r\n  TOnAnimationChangeCallback,\r\n} from './types';\r\n\r\nconst defaultAbort = () => false;\r\n\r\nexport abstract class AnimationBase<\r\n  T extends number | number[] = number | number[]\r\n> {\r\n  declare readonly startValue: T;\r\n  declare readonly endValue: T;\r\n  declare readonly duration: number;\r\n  declare readonly delay: number;\r\n\r\n  protected declare readonly byValue: T;\r\n  protected declare readonly easing: TEasingFunction<T>;\r\n\r\n  private declare readonly _onStart: VoidFunction;\r\n  private declare readonly _onChange: TOnAnimationChangeCallback<T, void>;\r\n  private declare readonly _onComplete: TOnAnimationChangeCallback<T, void>;\r\n  private declare readonly _abort: TAbortCallback<T>;\r\n\r\n  /**\r\n   * Used to register the animation to a target object\r\n   * so that it can be cancelled within the object context\r\n   */\r\n  declare readonly target?: unknown;\r\n\r\n  private _state: AnimationState = 'pending';\r\n  /**\r\n   * Time %, or the ratio of `timeElapsed / duration`\r\n   * @see tick\r\n   */\r\n  durationProgress = 0;\r\n  /**\r\n   * Value %, or the ratio of `(currentValue - startValue) / (endValue - startValue)`\r\n   */\r\n  valueProgress = 0;\r\n  /**\r\n   * Current value\r\n   */\r\n  declare value: T;\r\n  /**\r\n   * Animation start time ms\r\n   */\r\n  private declare startTime: number;\r\n\r\n  constructor({\r\n    startValue,\r\n    byValue,\r\n    duration = 500,\r\n    delay = 0,\r\n    easing = defaultEasing,\r\n    onStart = noop,\r\n    onChange = noop,\r\n    onComplete = noop,\r\n    abort = defaultAbort,\r\n    target,\r\n  }: TBaseAnimationOptions<T>) {\r\n    this.tick = this.tick.bind(this);\r\n\r\n    this.duration = duration;\r\n    this.delay = delay;\r\n    this.easing = easing;\r\n    this._onStart = onStart;\r\n    this._onChange = onChange;\r\n    this._onComplete = onComplete;\r\n    this._abort = abort;\r\n    this.target = target;\r\n\r\n    this.startValue = startValue;\r\n    this.byValue = byValue;\r\n    this.value = this.startValue;\r\n    this.endValue = Object.freeze(this.calculate(this.duration).value);\r\n  }\r\n\r\n  get state() {\r\n    return this._state;\r\n  }\r\n\r\n  isDone() {\r\n    return this._state === 'aborted' || this._state === 'completed';\r\n  }\r\n\r\n  /**\r\n   * Calculate the current value based on the easing parameters\r\n   * @param timeElapsed in ms\r\n   * @protected\r\n   */\r\n  protected abstract calculate(timeElapsed: number): {\r\n    value: T;\r\n    valueProgress: number;\r\n  };\r\n\r\n  start() {\r\n    const firstTick: FrameRequestCallback = (timestamp) => {\r\n      if (this._state !== 'pending') return;\r\n      this.startTime = timestamp || +new Date();\r\n      this._state = 'running';\r\n      this._onStart();\r\n      this.tick(this.startTime);\r\n    };\r\n\r\n    this.register();\r\n\r\n    // setTimeout(cb, 0) will run cb on the next frame, causing a delay\r\n    // we don't want that\r\n    if (this.delay > 0) {\r\n      setTimeout(() => requestAnimFrame(firstTick), this.delay);\r\n    } else {\r\n      requestAnimFrame(firstTick);\r\n    }\r\n  }\r\n\r\n  private tick(t: number) {\r\n    const durationMs = (t || +new Date()) - this.startTime;\r\n    const boundDurationMs = Math.min(durationMs, this.duration);\r\n    this.durationProgress = boundDurationMs / this.duration;\r\n    const { value, valueProgress } = this.calculate(boundDurationMs);\r\n    this.value = Object.freeze(value);\r\n    this.valueProgress = valueProgress;\r\n\r\n    if (this._state === 'aborted') {\r\n      return;\r\n    } else if (\r\n      this._abort(this.value, this.valueProgress, this.durationProgress)\r\n    ) {\r\n      this._state = 'aborted';\r\n      this.unregister();\r\n    } else if (durationMs >= this.duration) {\r\n      this.durationProgress = this.valueProgress = 1;\r\n      this._onChange(this.endValue, this.valueProgress, this.durationProgress);\r\n      this._state = 'completed';\r\n      this._onComplete(\r\n        this.endValue,\r\n        this.valueProgress,\r\n        this.durationProgress\r\n      );\r\n      this.unregister();\r\n    } else {\r\n      this._onChange(this.value, this.valueProgress, this.durationProgress);\r\n      requestAnimFrame(this.tick);\r\n    }\r\n  }\r\n\r\n  private register() {\r\n    runningAnimations.push(this as unknown as AnimationBase);\r\n  }\r\n\r\n  private unregister() {\r\n    runningAnimations.remove(this as unknown as AnimationBase);\r\n  }\r\n\r\n  abort() {\r\n    this._state = 'aborted';\r\n    this.unregister();\r\n  }\r\n}\r\n","import { AnimationBase } from './AnimationBase';\r\nimport type { ValueAnimationOptions } from './types';\r\n\r\nexport class ValueAnimation extends AnimationBase<number> {\r\n  constructor({\r\n    startValue = 0,\r\n    endValue = 100,\r\n    ...otherOptions\r\n  }: ValueAnimationOptions) {\r\n    super({\r\n      ...otherOptions,\r\n      startValue,\r\n      byValue: endValue - startValue,\r\n    });\r\n  }\r\n\r\n  protected calculate(timeElapsed: number) {\r\n    const value = this.easing(\r\n      timeElapsed,\r\n      this.startValue,\r\n      this.byValue,\r\n      this.duration\r\n    );\r\n    return {\r\n      value,\r\n      valueProgress: Math.abs((value - this.startValue) / this.byValue),\r\n    };\r\n  }\r\n}\r\n","import { AnimationBase } from './AnimationBase';\r\nimport type { ArrayAnimationOptions } from './types';\r\n\r\nexport class ArrayAnimation extends AnimationBase<number[]> {\r\n  constructor({\r\n    startValue = [0],\r\n    endValue = [100],\r\n    ...options\r\n  }: ArrayAnimationOptions) {\r\n    super({\r\n      ...options,\r\n      startValue,\r\n      byValue: endValue.map((value, i) => value - startValue[i]),\r\n    });\r\n  }\r\n  protected calculate(timeElapsed: number) {\r\n    const values = this.startValue.map((value, i) =>\r\n      this.easing(timeElapsed, value, this.byValue[i], this.duration, i)\r\n    );\r\n    return {\r\n      value: values,\r\n      valueProgress: Math.abs(\r\n        (values[0] - this.startValue[0]) / this.byValue[0]\r\n      ),\r\n    };\r\n  }\r\n}\r\n","export const capValue = (min: number, value: number, max: number) =>\r\n  Math.max(min, Math.min(value, max));\r\n","import { Color } from '../../color/Color';\r\nimport type { TRGBAColorSource } from '../../color/typedefs';\r\nimport { halfPI } from '../../constants';\r\nimport { capValue } from '../misc/capValue';\r\nimport { AnimationBase } from './AnimationBase';\r\nimport type {\r\n  ColorAnimationOptions,\r\n  TEasingFunction,\r\n  TOnAnimationChangeCallback,\r\n} from './types';\r\n\r\nconst defaultColorEasing: TEasingFunction = (\r\n  timeElapsed,\r\n  startValue,\r\n  byValue,\r\n  duration\r\n) => {\r\n  const durationProgress = 1 - Math.cos((timeElapsed / duration) * halfPI);\r\n  return startValue + byValue * durationProgress;\r\n};\r\n\r\nconst wrapColorCallback = <R>(\r\n  callback?: TOnAnimationChangeCallback<string, R>\r\n) =>\r\n  callback &&\r\n  ((rgba: TRGBAColorSource, valueProgress: number, durationProgress: number) =>\r\n    callback(new Color(rgba).toRgba(), valueProgress, durationProgress));\r\n\r\nexport class ColorAnimation extends AnimationBase<TRGBAColorSource> {\r\n  constructor({\r\n    startValue,\r\n    endValue,\r\n    easing = defaultColorEasing,\r\n    onChange,\r\n    onComplete,\r\n    abort,\r\n    ...options\r\n  }: ColorAnimationOptions) {\r\n    const startColor = new Color(startValue).getSource();\r\n    const endColor = new Color(endValue).getSource();\r\n    super({\r\n      ...options,\r\n      startValue: startColor,\r\n      byValue: endColor.map(\r\n        (value, i) => value - startColor[i]\r\n      ) as TRGBAColorSource,\r\n      easing,\r\n      onChange: wrapColorCallback(onChange),\r\n      onComplete: wrapColorCallback(onComplete),\r\n      abort: wrapColorCallback(abort),\r\n    });\r\n  }\r\n  protected calculate(timeElapsed: number) {\r\n    const [r, g, b, a] = this.startValue.map((value, i) =>\r\n      this.easing(timeElapsed, value, this.byValue[i], this.duration, i)\r\n    ) as TRGBAColorSource;\r\n    const value = [\r\n      ...[r, g, b].map(Math.round),\r\n      capValue(0, a, 1),\r\n    ] as TRGBAColorSource;\r\n    return {\r\n      value,\r\n      valueProgress:\r\n        // to correctly calculate the change ratio we must find a changed value\r\n        value\r\n          .map((p, i) =>\r\n            this.byValue[i] !== 0\r\n              ? Math.abs((p - this.startValue[i]) / this.byValue[i])\r\n              : 0\r\n          )\r\n          .find((p) => p !== 0) || 0,\r\n    };\r\n  }\r\n}\r\n","import { ValueAnimation } from './ValueAnimation';\r\nimport { ArrayAnimation } from './ArrayAnimation';\r\nimport { ColorAnimation } from './ColorAnimation';\r\nimport type {\r\n  ValueAnimationOptions,\r\n  ArrayAnimationOptions,\r\n  ColorAnimationOptions,\r\n} from './types';\r\nimport type { TColorArg } from '../../color/typedefs';\r\n\r\nexport type TAnimation<T extends number | number[] | TColorArg> =\r\n  T extends TColorArg\r\n    ? ColorAnimation\r\n    : T extends number[]\r\n    ? ArrayAnimation\r\n    : ValueAnimation;\r\n\r\nconst isArrayAnimation = (\r\n  options: ArrayAnimationOptions | ValueAnimationOptions\r\n): options is ArrayAnimationOptions => {\r\n  return Array.isArray(options.startValue) || Array.isArray(options.endValue);\r\n};\r\n\r\n/**\r\n * Changes value(s) from startValue to endValue within a certain period of time,\r\n * invoking callbacks as the value(s) change.\r\n *\r\n * @example\r\n * animate({\r\n *   startValue: 1,\r\n *   endValue: 0,\r\n *   onChange: (v) => {\r\n *     obj.set('opacity', v);\r\n *     // since we are running in a requested frame we should call `renderAll` and not `requestRenderAll`\r\n *     canvas.renderAll();\r\n *   }\r\n * });\r\n *\r\n * @example Using lists:\r\n * animate({\r\n *   startValue: [1, 2, 3],\r\n *   endValue: [2, 4, 6],\r\n *   onChange: ([x, y, zoom]) => {\r\n *     canvas.zoomToPoint(new Point(x, y), zoom);\r\n *     canvas.renderAll();\r\n *   }\r\n * });\r\n *\r\n */\r\nexport function animate(options: ArrayAnimationOptions): ArrayAnimation;\r\nexport function animate(options: ValueAnimationOptions): ValueAnimation;\r\nexport function animate<\r\n  T extends ValueAnimationOptions | ArrayAnimationOptions\r\n>(\r\n  options: T\r\n): T extends ArrayAnimationOptions ? ArrayAnimation : ValueAnimation;\r\nexport function animate<\r\n  T extends ValueAnimationOptions | ArrayAnimationOptions,\r\n  R extends T extends ArrayAnimationOptions ? ArrayAnimation : ValueAnimation\r\n>(options: T): R {\r\n  const animation = (\r\n    isArrayAnimation(options)\r\n      ? new ArrayAnimation(options)\r\n      : new ValueAnimation(options)\r\n  ) as R;\r\n  animation.start();\r\n  return animation;\r\n}\r\n\r\nexport function animateColor(options: ColorAnimationOptions) {\r\n  const animation = new ColorAnimation(options);\r\n  animation.start();\r\n  return animation;\r\n}\r\n","import type { XY } from '../../Point';\r\nimport { Point } from '../../Point';\r\nimport type { TRadian } from '../../typedefs';\r\n\r\nconst unitVectorX = new Point(1, 0);\r\nconst zero = new Point();\r\n\r\n/**\r\n * Rotates `vector` with `radians`\r\n * @param {Point} vector The vector to rotate (x and y)\r\n * @param {Number} radians The radians of the angle for the rotation\r\n * @return {Point} The new rotated point\r\n */\r\nexport const rotateVector = (vector: Point, radians: TRadian) =>\r\n  vector.rotate(radians);\r\n\r\n/**\r\n * Creates a vector from points represented as a point\r\n *\r\n * @param {Point} from\r\n * @param {Point} to\r\n * @returns {Point} vector\r\n */\r\nexport const createVector = (from: XY, to: XY): Point =>\r\n  new Point(to).subtract(from);\r\n\r\n/**\r\n * return the magnitude of a vector\r\n * @return {number}\r\n */\r\nexport const magnitude = (point: Point) => point.distanceFrom(zero);\r\n\r\n/**\r\n * Calculates the angle between 2 vectors\r\n * @param {Point} a\r\n * @param {Point} b\r\n * @returns the angle in radians from `a` to `b`\r\n */\r\nexport const calcAngleBetweenVectors = (a: Point, b: Point): TRadian =>\r\n  Math.atan2(crossProduct(a, b), dotProduct(a, b)) as TRadian;\r\n\r\n/**\r\n * Calculates the angle between the x axis and the vector\r\n * @param {Point} v\r\n * @returns the angle in radians of `v`\r\n */\r\nexport const calcVectorRotation = (v: Point) =>\r\n  calcAngleBetweenVectors(unitVectorX, v);\r\n\r\n/**\r\n * @param {Point} v\r\n * @returns {Point} vector representing the unit vector pointing to the direction of `v`\r\n */\r\nexport const getUnitVector = (v: Point): Point =>\r\n  v.eq(zero) ? v : v.scalarDivide(magnitude(v));\r\n\r\n/**\r\n * @param {Point} v\r\n * @param {Boolean} [counterClockwise] the direction of the orthogonal vector, defaults to `true`\r\n * @returns {Point} the unit orthogonal vector\r\n */\r\nexport const getOrthonormalVector = (\r\n  v: Point,\r\n  counterClockwise = true\r\n): Point =>\r\n  getUnitVector(new Point(-v.y, v.x).scalarMultiply(counterClockwise ? 1 : -1));\r\n\r\n/**\r\n * Cross product of two vectors in 2D\r\n * @param {Point} a\r\n * @param {Point} b\r\n * @returns {number} the magnitude of Z vector\r\n */\r\nexport const crossProduct = (a: Point, b: Point): number =>\r\n  a.x * b.y - a.y * b.x;\r\n\r\n/**\r\n * Dot product of two vectors in 2D\r\n * @param {Point} a\r\n * @param {Point} b\r\n * @returns {number}\r\n */\r\nexport const dotProduct = (a: Point, b: Point): number => a.x * b.x + a.y * b.y;\r\n\r\n/**\r\n * Checks if the vector is between two others. It is considered\r\n * to be inside when the vector to be tested is between the\r\n * initial vector and the final vector (included) in a counterclockwise direction.\r\n * @param {Point} t vector to be tested\r\n * @param {Point} a initial vector\r\n * @param {Point} b final vector\r\n * @returns {boolean} true if the vector is among the others\r\n */\r\nexport const isBetweenVectors = (t: Point, a: Point, b: Point): boolean => {\r\n  if (t.eq(a) || t.eq(b)) return true;\r\n  const AxB = crossProduct(a, b),\r\n    AxT = crossProduct(a, t),\r\n    BxT = crossProduct(b, t);\r\n  return AxB >= 0 ? AxT >= 0 && BxT <= 0 : !(AxT <= 0 && BxT >= 0);\r\n};\r\n","import { Point } from './Point';\r\nimport { createVector } from './util/misc/vectors';\r\n\r\n/* Adaptation of work of Kevin Lindsey (kevin@kevlindev.com) */\r\n\r\nexport type IntersectionType = 'Intersection' | 'Coincident' | 'Parallel';\r\n\r\nexport class Intersection {\r\n  declare points: Point[];\r\n\r\n  declare status?: IntersectionType;\r\n\r\n  constructor(status?: IntersectionType) {\r\n    this.status = status;\r\n    this.points = [];\r\n  }\r\n\r\n  /**\r\n   * Used to verify if a point is alredy in the collection\r\n   * @param {Point} point\r\n   * @returns {boolean}\r\n   */\r\n  private includes(point: Point): boolean {\r\n    return this.points.some((p) => p.eq(point));\r\n  }\r\n\r\n  /**\r\n   * Appends points of intersection\r\n   * @param {...Point[]} points\r\n   * @return {Intersection} thisArg\r\n   * @chainable\r\n   */\r\n  private append(...points: Point[]): Intersection {\r\n    this.points = this.points.concat(\r\n      points.filter((point) => {\r\n        return !this.includes(point);\r\n      })\r\n    );\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * check if point T is on the segment or line defined between A and B\r\n   *\r\n   * @param {Point} T the point we are checking for\r\n   * @param {Point} A one extremity of the segment\r\n   * @param {Point} B the other extremity of the segment\r\n   * @param [infinite] if true checks if `T` is on the line defined by `A` and `B`\r\n   * @returns true if `T` is contained\r\n   */\r\n  static isPointContained(T: Point, A: Point, B: Point, infinite = false) {\r\n    if (A.eq(B)) {\r\n      // Edge case: the segment is a point, we check for coincidence,\r\n      // infinite param has no meaning because there are infinite lines to consider\r\n      return T.eq(A);\r\n    } else if (A.x === B.x) {\r\n      // Edge case: horizontal line.\r\n      // we first check if T.x has the same value, and then if T.y is contained between A.y and B.y\r\n      return (\r\n        T.x === A.x &&\r\n        (infinite || (T.y >= Math.min(A.y, B.y) && T.y <= Math.max(A.y, B.y)))\r\n      );\r\n    } else if (A.y === B.y) {\r\n      // Edge case: vertical line.\r\n      // we first check if T.y has the same value, and then if T.x is contained between A.x and B.x\r\n      return (\r\n        T.y === A.y &&\r\n        (infinite || (T.x >= Math.min(A.x, B.x) && T.x <= Math.max(A.x, B.x)))\r\n      );\r\n    } else {\r\n      // Generic case: sloped line.\r\n      // we check that AT has the same slope as AB\r\n      // for the segment case we need both the vectors to have the same direction and for AT to be lte AB in size\r\n      // for the infinite case we check the absolute value of the slope, since direction is meaningless\r\n      const AB = createVector(A, B);\r\n      const AT = createVector(A, T);\r\n      const s = AT.divide(AB);\r\n      return infinite\r\n        ? Math.abs(s.x) === Math.abs(s.y)\r\n        : s.x === s.y && s.x >= 0 && s.x <= 1;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Use the ray casting algorithm to determine if {@link point} is in the polygon defined by {@link points}\r\n   * @see https://en.wikipedia.org/wiki/Point_in_polygon\r\n   * @param point\r\n   * @param points polygon points\r\n   * @returns\r\n   */\r\n  static isPointInPolygon(point: Point, points: Point[]) {\r\n    const other = new Point(point).setX(\r\n      Math.min(point.x - 1, ...points.map((p) => p.x))\r\n    );\r\n    let hits = 0;\r\n    for (let index = 0; index < points.length; index++) {\r\n      const inter = this.intersectSegmentSegment(\r\n        // polygon side\r\n        points[index],\r\n        points[(index + 1) % points.length],\r\n        // ray\r\n        point,\r\n        other\r\n      );\r\n      if (inter.includes(point)) {\r\n        // point is on the polygon side\r\n        return true;\r\n      }\r\n      hits += Number(inter.status === 'Intersection');\r\n    }\r\n    return hits % 2 === 1;\r\n  }\r\n\r\n  /**\r\n   * Checks if a line intersects another\r\n   * @see {@link https://en.wikipedia.org/wiki/Line%E2%80%93line_intersection line intersection}\r\n   * @see {@link https://en.wikipedia.org/wiki/Cramer%27s_rule Cramer's rule}\r\n   * @static\r\n   * @param {Point} a1\r\n   * @param {Point} a2\r\n   * @param {Point} b1\r\n   * @param {Point} b2\r\n   * @param {boolean} [aInfinite=true] check segment intersection by passing `false`\r\n   * @param {boolean} [bInfinite=true] check segment intersection by passing `false`\r\n   * @return {Intersection}\r\n   */\r\n  static intersectLineLine(\r\n    a1: Point,\r\n    a2: Point,\r\n    b1: Point,\r\n    b2: Point,\r\n    aInfinite = true,\r\n    bInfinite = true\r\n  ): Intersection {\r\n    const a2xa1x = a2.x - a1.x,\r\n      a2ya1y = a2.y - a1.y,\r\n      b2xb1x = b2.x - b1.x,\r\n      b2yb1y = b2.y - b1.y,\r\n      a1xb1x = a1.x - b1.x,\r\n      a1yb1y = a1.y - b1.y,\r\n      uaT = b2xb1x * a1yb1y - b2yb1y * a1xb1x,\r\n      ubT = a2xa1x * a1yb1y - a2ya1y * a1xb1x,\r\n      uB = b2yb1y * a2xa1x - b2xb1x * a2ya1y;\r\n    if (uB !== 0) {\r\n      const ua = uaT / uB,\r\n        ub = ubT / uB;\r\n      if (\r\n        (aInfinite || (0 <= ua && ua <= 1)) &&\r\n        (bInfinite || (0 <= ub && ub <= 1))\r\n      ) {\r\n        return new Intersection('Intersection').append(\r\n          new Point(a1.x + ua * a2xa1x, a1.y + ua * a2ya1y)\r\n        );\r\n      } else {\r\n        return new Intersection();\r\n      }\r\n    } else {\r\n      if (uaT === 0 || ubT === 0) {\r\n        const segmentsCoincide =\r\n          aInfinite ||\r\n          bInfinite ||\r\n          Intersection.isPointContained(a1, b1, b2) ||\r\n          Intersection.isPointContained(a2, b1, b2) ||\r\n          Intersection.isPointContained(b1, a1, a2) ||\r\n          Intersection.isPointContained(b2, a1, a2);\r\n        return new Intersection(segmentsCoincide ? 'Coincident' : undefined);\r\n      } else {\r\n        return new Intersection('Parallel');\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Checks if a segment intersects a line\r\n   * @see {@link intersectLineLine} for line intersection\r\n   * @static\r\n   * @param {Point} s1 boundary point of segment\r\n   * @param {Point} s2 other boundary point of segment\r\n   * @param {Point} l1 point on line\r\n   * @param {Point} l2 other point on line\r\n   * @return {Intersection}\r\n   */\r\n  static intersectSegmentLine(\r\n    s1: Point,\r\n    s2: Point,\r\n    l1: Point,\r\n    l2: Point\r\n  ): Intersection {\r\n    return Intersection.intersectLineLine(s1, s2, l1, l2, false, true);\r\n  }\r\n\r\n  /**\r\n   * Checks if a segment intersects another\r\n   * @see {@link intersectLineLine} for line intersection\r\n   * @static\r\n   * @param {Point} a1 boundary point of segment\r\n   * @param {Point} a2 other boundary point of segment\r\n   * @param {Point} b1 boundary point of segment\r\n   * @param {Point} b2 other boundary point of segment\r\n   * @return {Intersection}\r\n   */\r\n  static intersectSegmentSegment(\r\n    a1: Point,\r\n    a2: Point,\r\n    b1: Point,\r\n    b2: Point\r\n  ): Intersection {\r\n    return Intersection.intersectLineLine(a1, a2, b1, b2, false, false);\r\n  }\r\n\r\n  /**\r\n   * Checks if line intersects polygon\r\n   *\r\n   * @todo account for stroke\r\n   *\r\n   * @static\r\n   * @see {@link intersectSegmentPolygon} for segment intersection\r\n   * @param {Point} a1 point on line\r\n   * @param {Point} a2 other point on line\r\n   * @param {Point[]} points polygon points\r\n   * @param {boolean} [infinite=true] check segment intersection by passing `false`\r\n   * @return {Intersection}\r\n   */\r\n  static intersectLinePolygon(\r\n    a1: Point,\r\n    a2: Point,\r\n    points: Point[],\r\n    infinite = true\r\n  ): Intersection {\r\n    const result = new Intersection();\r\n    const length = points.length;\r\n\r\n    for (let i = 0, b1, b2, inter; i < length; i++) {\r\n      b1 = points[i];\r\n      b2 = points[(i + 1) % length];\r\n      inter = Intersection.intersectLineLine(a1, a2, b1, b2, infinite, false);\r\n      if (inter.status === 'Coincident') {\r\n        return inter;\r\n      }\r\n      result.append(...inter.points);\r\n    }\r\n\r\n    if (result.points.length > 0) {\r\n      result.status = 'Intersection';\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Checks if segment intersects polygon\r\n   * @static\r\n   * @see {@link intersectLinePolygon} for line intersection\r\n   * @param {Point} a1 boundary point of segment\r\n   * @param {Point} a2 other boundary point of segment\r\n   * @param {Point[]} points polygon points\r\n   * @return {Intersection}\r\n   */\r\n  static intersectSegmentPolygon(\r\n    a1: Point,\r\n    a2: Point,\r\n    points: Point[]\r\n  ): Intersection {\r\n    return Intersection.intersectLinePolygon(a1, a2, points, false);\r\n  }\r\n\r\n  /**\r\n   * Checks if polygon intersects another polygon\r\n   *\r\n   * @todo account for stroke\r\n   *\r\n   * @static\r\n   * @param {Point[]} points1\r\n   * @param {Point[]} points2\r\n   * @return {Intersection}\r\n   */\r\n  static intersectPolygonPolygon(\r\n    points1: Point[],\r\n    points2: Point[]\r\n  ): Intersection {\r\n    const result = new Intersection(),\r\n      length = points1.length;\r\n    const coincidences: Intersection[] = [];\r\n\r\n    for (let i = 0; i < length; i++) {\r\n      const a1 = points1[i],\r\n        a2 = points1[(i + 1) % length],\r\n        inter = Intersection.intersectSegmentPolygon(a1, a2, points2);\r\n      if (inter.status === 'Coincident') {\r\n        coincidences.push(inter);\r\n        result.append(a1, a2);\r\n      } else {\r\n        result.append(...inter.points);\r\n      }\r\n    }\r\n\r\n    if (coincidences.length > 0 && coincidences.length === points1.length) {\r\n      return new Intersection('Coincident');\r\n    } else if (result.points.length > 0) {\r\n      result.status = 'Intersection';\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Checks if polygon intersects rectangle\r\n   * @static\r\n   * @see {@link intersectPolygonPolygon} for polygon intersection\r\n   * @param {Point[]} points polygon points\r\n   * @param {Point} r1 top left point of rect\r\n   * @param {Point} r2 bottom right point of rect\r\n   * @return {Intersection}\r\n   */\r\n  static intersectPolygonRectangle(\r\n    points: Point[],\r\n    r1: Point,\r\n    r2: Point\r\n  ): Intersection {\r\n    const min = r1.min(r2),\r\n      max = r1.max(r2),\r\n      topRight = new Point(max.x, min.y),\r\n      bottomLeft = new Point(min.x, max.y);\r\n\r\n    return Intersection.intersectPolygonPolygon(points, [\r\n      min,\r\n      topRight,\r\n      max,\r\n      bottomLeft,\r\n    ]);\r\n  }\r\n}\r\n","import { Point } from '../../Point';\r\nimport type { Group } from '../Group';\r\nimport type { TDegree, TOriginX, TOriginY } from '../../typedefs';\r\nimport { calcDimensionsMatrix, transformPoint } from '../../util/misc/matrix';\r\nimport { sizeAfterTransform } from '../../util/misc/objectTransforms';\r\nimport { degreesToRadians } from '../../util/misc/radiansDegreesConversion';\r\nimport { CommonMethods } from '../../CommonMethods';\r\nimport { resolveOrigin } from '../../util/misc/resolveOrigin';\r\nimport type { BaseProps } from './types/BaseProps';\r\nimport type { FillStrokeProps } from './types/FillStrokeProps';\r\nimport { CENTER, LEFT, TOP } from '../../constants';\r\n\r\nexport class ObjectOrigin<EventSpec>\r\n  extends CommonMethods<EventSpec>\r\n  implements BaseProps, Pick<FillStrokeProps, 'strokeWidth' | 'strokeUniform'>\r\n{\r\n  declare top: number;\r\n  declare left: number;\r\n  declare width: number;\r\n  declare height: number;\r\n  declare flipX: boolean;\r\n  declare flipY: boolean;\r\n  declare scaleX: number;\r\n  declare scaleY: number;\r\n  declare skewX: number;\r\n  declare skewY: number;\r\n  declare originX: TOriginX;\r\n  declare originY: TOriginY;\r\n  declare angle: TDegree;\r\n  declare strokeWidth: number;\r\n  declare strokeUniform: boolean;\r\n\r\n  /**\r\n   * Object containing this object.\r\n   * can influence its size and position\r\n   */\r\n  declare group?: Group;\r\n\r\n  /**\r\n   * Calculate object bounding box dimensions from its properties scale, skew.\r\n   * This bounding box is aligned with object angle and not with canvas axis or screen.\r\n   * @param {Object} [options]\r\n   * @param {Number} [options.scaleX]\r\n   * @param {Number} [options.scaleY]\r\n   * @param {Number} [options.skewX]\r\n   * @param {Number} [options.skewY]\r\n   * @private\r\n   * @returns {Point} dimensions\r\n   */\r\n  _getTransformedDimensions(options: any = {}): Point {\r\n    const dimOptions = {\r\n      // if scaleX or scaleY are negative numbers,\r\n      // this will return dimensions that are negative.\r\n      // and this will break assumptions around the codebase\r\n      scaleX: this.scaleX,\r\n      scaleY: this.scaleY,\r\n      skewX: this.skewX,\r\n      skewY: this.skewY,\r\n      width: this.width,\r\n      height: this.height,\r\n      strokeWidth: this.strokeWidth,\r\n      ...options,\r\n    };\r\n    // stroke is applied before/after transformations are applied according to `strokeUniform`\r\n    const strokeWidth = dimOptions.strokeWidth;\r\n    let preScalingStrokeValue = strokeWidth,\r\n      postScalingStrokeValue = 0;\r\n\r\n    if (this.strokeUniform) {\r\n      preScalingStrokeValue = 0;\r\n      postScalingStrokeValue = strokeWidth;\r\n    }\r\n    const dimX = dimOptions.width + preScalingStrokeValue,\r\n      dimY = dimOptions.height + preScalingStrokeValue,\r\n      noSkew = dimOptions.skewX === 0 && dimOptions.skewY === 0;\r\n    let finalDimensions;\r\n    if (noSkew) {\r\n      finalDimensions = new Point(\r\n        dimX * dimOptions.scaleX,\r\n        dimY * dimOptions.scaleY\r\n      );\r\n    } else {\r\n      finalDimensions = sizeAfterTransform(\r\n        dimX,\r\n        dimY,\r\n        calcDimensionsMatrix(dimOptions)\r\n      );\r\n    }\r\n\r\n    return finalDimensions.scalarAdd(postScalingStrokeValue);\r\n  }\r\n\r\n  /**\r\n   * Translates the coordinates from a set of origin to another (based on the object's dimensions)\r\n   * @param {Point} point The point which corresponds to the originX and originY params\r\n   * @param {TOriginX} fromOriginX Horizontal origin: 'left', 'center' or 'right'\r\n   * @param {TOriginY} fromOriginY Vertical origin: 'top', 'center' or 'bottom'\r\n   * @param {TOriginX} toOriginX Horizontal origin: 'left', 'center' or 'right'\r\n   * @param {TOriginY} toOriginY Vertical origin: 'top', 'center' or 'bottom'\r\n   * @return {Point}\r\n   */\r\n  translateToGivenOrigin(\r\n    point: Point,\r\n    fromOriginX: TOriginX,\r\n    fromOriginY: TOriginY,\r\n    toOriginX: TOriginX,\r\n    toOriginY: TOriginY\r\n  ): Point {\r\n    let x = point.x,\r\n      y = point.y;\r\n    const offsetX = resolveOrigin(toOriginX) - resolveOrigin(fromOriginX),\r\n      offsetY = resolveOrigin(toOriginY) - resolveOrigin(fromOriginY);\r\n\r\n    if (offsetX || offsetY) {\r\n      const dim = this._getTransformedDimensions();\r\n      x += offsetX * dim.x;\r\n      y += offsetY * dim.y;\r\n    }\r\n\r\n    return new Point(x, y);\r\n  }\r\n\r\n  /**\r\n   * Translates the coordinates from origin to center coordinates (based on the object's dimensions)\r\n   * @param {Point} point The point which corresponds to the originX and originY params\r\n   * @param {TOriginX} originX Horizontal origin: 'left', 'center' or 'right'\r\n   * @param {TOriginY} originY Vertical origin: 'top', 'center' or 'bottom'\r\n   * @return {Point}\r\n   */\r\n  translateToCenterPoint(\r\n    point: Point,\r\n    originX: TOriginX,\r\n    originY: TOriginY\r\n  ): Point {\r\n    const p = this.translateToGivenOrigin(\r\n      point,\r\n      originX,\r\n      originY,\r\n      CENTER,\r\n      CENTER\r\n    );\r\n    if (this.angle) {\r\n      return p.rotate(degreesToRadians(this.angle), point);\r\n    }\r\n    return p;\r\n  }\r\n\r\n  /**\r\n   * Translates the coordinates from center to origin coordinates (based on the object's dimensions)\r\n   * @param {Point} center The point which corresponds to center of the object\r\n   * @param {OriginX} originX Horizontal origin: 'left', 'center' or 'right'\r\n   * @param {OriginY} originY Vertical origin: 'top', 'center' or 'bottom'\r\n   * @return {Point}\r\n   */\r\n  translateToOriginPoint(\r\n    center: Point,\r\n    originX: TOriginX,\r\n    originY: TOriginY\r\n  ): Point {\r\n    const p = this.translateToGivenOrigin(\r\n      center,\r\n      CENTER,\r\n      CENTER,\r\n      originX,\r\n      originY\r\n    );\r\n    if (this.angle) {\r\n      return p.rotate(degreesToRadians(this.angle), center);\r\n    }\r\n    return p;\r\n  }\r\n\r\n  /**\r\n   * Returns the center coordinates of the object relative to canvas\r\n   * @return {Point}\r\n   */\r\n  getCenterPoint(): Point {\r\n    const relCenter = this.getRelativeCenterPoint();\r\n    return this.group\r\n      ? transformPoint(relCenter, this.group.calcTransformMatrix())\r\n      : relCenter;\r\n  }\r\n\r\n  /**\r\n   * Returns the center coordinates of the object relative to it's parent\r\n   * @return {Point}\r\n   */\r\n  getRelativeCenterPoint(): Point {\r\n    return this.translateToCenterPoint(\r\n      new Point(this.left, this.top),\r\n      this.originX,\r\n      this.originY\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Returns the coordinates of the object as if it has a different origin\r\n   * @param {TOriginX} originX Horizontal origin: 'left', 'center' or 'right'\r\n   * @param {TOriginY} originY Vertical origin: 'top', 'center' or 'bottom'\r\n   * @return {Point}\r\n   */\r\n  getPointByOrigin(originX: TOriginX, originY: TOriginY): Point {\r\n    return this.translateToOriginPoint(\r\n      this.getRelativeCenterPoint(),\r\n      originX,\r\n      originY\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Sets the position of the object taking into consideration the object's origin\r\n   * @param {Point} pos The new position of the object\r\n   * @param {TOriginX} originX Horizontal origin: 'left', 'center' or 'right'\r\n   * @param {TOriginY} originY Vertical origin: 'top', 'center' or 'bottom'\r\n   * @return {void}\r\n   */\r\n  setPositionByOrigin(pos: Point, originX: TOriginX, originY: TOriginY) {\r\n    const center = this.translateToCenterPoint(pos, originX, originY),\r\n      position = this.translateToOriginPoint(\r\n        center,\r\n        this.originX,\r\n        this.originY\r\n      );\r\n    this.set({ left: position.x, top: position.y });\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _getLeftTopCoords() {\r\n    return this.translateToOriginPoint(\r\n      this.getRelativeCenterPoint(),\r\n      LEFT,\r\n      TOP\r\n    );\r\n  }\r\n}\r\n","import type {\r\n  TBBox,\r\n  TCornerPoint,\r\n  TDegree,\r\n  TMat2D,\r\n  TOriginX,\r\n  TOriginY,\r\n} from '../../typedefs';\r\nimport { SCALE_X, SCALE_Y, iMatrix } from '../../constants';\r\nimport { Intersection } from '../../Intersection';\r\nimport { Point } from '../../Point';\r\nimport { makeBoundingBoxFromPoints } from '../../util/misc/boundingBoxFromPoints';\r\nimport {\r\n  createRotateMatrix,\r\n  createTranslateMatrix,\r\n  composeMatrix,\r\n  invertTransform,\r\n  multiplyTransformMatrices,\r\n  transformPoint,\r\n  calcPlaneRotation,\r\n} from '../../util/misc/matrix';\r\nimport { radiansToDegrees } from '../../util/misc/radiansDegreesConversion';\r\nimport type { Canvas } from '../../canvas/Canvas';\r\nimport type { StaticCanvas } from '../../canvas/StaticCanvas';\r\nimport { ObjectOrigin } from './ObjectOrigin';\r\nimport type { ObjectEvents } from '../../EventTypeDefs';\r\nimport type { ControlProps } from './types/ControlProps';\r\nimport { resolveOrigin } from '../../util/misc/resolveOrigin';\r\n\r\ntype TMatrixCache = {\r\n  key: number[];\r\n  value: TMat2D;\r\n};\r\n\r\ntype TACoords = TCornerPoint;\r\n\r\nexport class ObjectGeometry<EventSpec extends ObjectEvents = ObjectEvents>\r\n  extends ObjectOrigin<EventSpec>\r\n  implements Pick<ControlProps, 'padding'>\r\n{\r\n  declare padding: number;\r\n\r\n  /**\r\n   * Describe object's corner position in scene coordinates.\r\n   * The coordinates are derived from the following:\r\n   * left, top, width, height, scaleX, scaleY, skewX, skewY, angle, strokeWidth.\r\n   * The coordinates do not depend on viewport changes.\r\n   * The coordinates get updated with {@link setCoords}.\r\n   * You can calculate them without updating with {@link calcACoords()}\r\n   */\r\n  declare aCoords: TACoords;\r\n\r\n  /**\r\n   * storage cache for object transform matrix\r\n   */\r\n  declare ownMatrixCache?: TMatrixCache;\r\n\r\n  /**\r\n   * storage cache for object full transform matrix\r\n   */\r\n  declare matrixCache?: TMatrixCache;\r\n\r\n  /**\r\n   * A Reference of the Canvas where the object is actually added\r\n   * @type StaticCanvas | Canvas;\r\n   * @default undefined\r\n   * @private\r\n   */\r\n  declare canvas?: StaticCanvas | Canvas;\r\n\r\n  /**\r\n   * @returns {number} x position according to object's {@link originX} property in canvas coordinate plane\r\n   */\r\n  getX(): number {\r\n    return this.getXY().x;\r\n  }\r\n\r\n  /**\r\n   * @param {number} value x position according to object's {@link originX} property in canvas coordinate plane\r\n   */\r\n  setX(value: number) {\r\n    this.setXY(this.getXY().setX(value));\r\n  }\r\n\r\n  /**\r\n   * @returns {number} y position according to object's {@link originY} property in canvas coordinate plane\r\n   */\r\n  getY(): number {\r\n    return this.getXY().y;\r\n  }\r\n\r\n  /**\r\n   * @param {number} value y position according to object's {@link originY} property in canvas coordinate plane\r\n   */\r\n  setY(value: number) {\r\n    this.setXY(this.getXY().setY(value));\r\n  }\r\n\r\n  /**\r\n   * @returns {number} x position according to object's {@link originX} property in parent's coordinate plane\\\r\n   * if parent is canvas then this property is identical to {@link getX}\r\n   */\r\n  getRelativeX(): number {\r\n    return this.left;\r\n  }\r\n\r\n  /**\r\n   * @param {number} value x position according to object's {@link originX} property in parent's coordinate plane\\\r\n   * if parent is canvas then this method is identical to {@link setX}\r\n   */\r\n  setRelativeX(value: number) {\r\n    this.left = value;\r\n  }\r\n\r\n  /**\r\n   * @returns {number} y position according to object's {@link originY} property in parent's coordinate plane\\\r\n   * if parent is canvas then this property is identical to {@link getY}\r\n   */\r\n  getRelativeY(): number {\r\n    return this.top;\r\n  }\r\n\r\n  /**\r\n   * @param {number} value y position according to object's {@link originY} property in parent's coordinate plane\\\r\n   * if parent is canvas then this property is identical to {@link setY}\r\n   */\r\n  setRelativeY(value: number) {\r\n    this.top = value;\r\n  }\r\n\r\n  /**\r\n   * @returns {Point} x position according to object's {@link originX} {@link originY} properties in canvas coordinate plane\r\n   */\r\n  getXY(): Point {\r\n    const relativePosition = this.getRelativeXY();\r\n    return this.group\r\n      ? transformPoint(relativePosition, this.group.calcTransformMatrix())\r\n      : relativePosition;\r\n  }\r\n\r\n  /**\r\n   * Set an object position to a particular point, the point is intended in absolute ( canvas ) coordinate.\r\n   * You can specify {@link originX} and {@link originY} values,\r\n   * that otherwise are the object's current values.\r\n   * @example <caption>Set object's bottom left corner to point (5,5) on canvas</caption>\r\n   * object.setXY(new Point(5, 5), 'left', 'bottom').\r\n   * @param {Point} point position in canvas coordinate plane\r\n   * @param {TOriginX} [originX] Horizontal origin: 'left', 'center' or 'right'\r\n   * @param {TOriginY} [originY] Vertical origin: 'top', 'center' or 'bottom'\r\n   */\r\n  setXY(point: Point, originX?: TOriginX, originY?: TOriginY) {\r\n    if (this.group) {\r\n      point = transformPoint(\r\n        point,\r\n        invertTransform(this.group.calcTransformMatrix())\r\n      );\r\n    }\r\n    this.setRelativeXY(point, originX, originY);\r\n  }\r\n\r\n  /**\r\n   * @returns {Point} x,y position according to object's {@link originX} {@link originY} properties in parent's coordinate plane\r\n   */\r\n  getRelativeXY(): Point {\r\n    return new Point(this.left, this.top);\r\n  }\r\n\r\n  /**\r\n   * As {@link setXY}, but in current parent's coordinate plane (the current group if any or the canvas)\r\n   * @param {Point} point position according to object's {@link originX} {@link originY} properties in parent's coordinate plane\r\n   * @param {TOriginX} [originX] Horizontal origin: 'left', 'center' or 'right'\r\n   * @param {TOriginY} [originY] Vertical origin: 'top', 'center' or 'bottom'\r\n   */\r\n  setRelativeXY(\r\n    point: Point,\r\n    originX: TOriginX = this.originX,\r\n    originY: TOriginY = this.originY\r\n  ) {\r\n    this.setPositionByOrigin(point, originX, originY);\r\n  }\r\n\r\n  /**\r\n   * @deprecated intermidiate method to be removed, do not use\r\n   */\r\n  protected isStrokeAccountedForInDimensions() {\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * @return {Point[]} [tl, tr, br, bl] in the scene plane\r\n   */\r\n  getCoords(): Point[] {\r\n    const { tl, tr, br, bl } =\r\n      this.aCoords || (this.aCoords = this.calcACoords());\r\n    const coords = [tl, tr, br, bl];\r\n    if (this.group) {\r\n      const t = this.group.calcTransformMatrix();\r\n      return coords.map((p) => transformPoint(p, t));\r\n    }\r\n    return coords;\r\n  }\r\n\r\n  /**\r\n   * Checks if object intersects with the scene rect formed by {@link tl} and {@link br}\r\n   */\r\n  intersectsWithRect(tl: Point, br: Point): boolean {\r\n    const intersection = Intersection.intersectPolygonRectangle(\r\n      this.getCoords(),\r\n      tl,\r\n      br\r\n    );\r\n    return intersection.status === 'Intersection';\r\n  }\r\n\r\n  /**\r\n   * Checks if object intersects with another object\r\n   * @param {Object} other Object to test\r\n   * @return {Boolean} true if object intersects with another object\r\n   */\r\n  intersectsWithObject(other: ObjectGeometry): boolean {\r\n    const intersection = Intersection.intersectPolygonPolygon(\r\n      this.getCoords(),\r\n      other.getCoords()\r\n    );\r\n\r\n    return (\r\n      intersection.status === 'Intersection' ||\r\n      intersection.status === 'Coincident' ||\r\n      other.isContainedWithinObject(this) ||\r\n      this.isContainedWithinObject(other)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Checks if object is fully contained within area of another object\r\n   * @param {Object} other Object to test\r\n   * @return {Boolean} true if object is fully contained within area of another object\r\n   */\r\n  isContainedWithinObject(other: ObjectGeometry): boolean {\r\n    const points = this.getCoords();\r\n    return points.every((point) => other.containsPoint(point));\r\n  }\r\n\r\n  /**\r\n   * Checks if object is fully contained within the scene rect formed by {@link tl} and {@link br}\r\n   */\r\n  isContainedWithinRect(tl: Point, br: Point): boolean {\r\n    const { left, top, width, height } = this.getBoundingRect();\r\n    return (\r\n      left >= tl.x &&\r\n      left + width <= br.x &&\r\n      top >= tl.y &&\r\n      top + height <= br.y\r\n    );\r\n  }\r\n\r\n  isOverlapping<T extends ObjectGeometry>(other: T): boolean {\r\n    return (\r\n      this.intersectsWithObject(other) ||\r\n      this.isContainedWithinObject(other) ||\r\n      other.isContainedWithinObject(this)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Checks if point is inside the object\r\n   * @param {Point} point Point to check against\r\n   * @return {Boolean} true if point is inside the object\r\n   */\r\n  containsPoint(point: Point): boolean {\r\n    return Intersection.isPointInPolygon(point, this.getCoords());\r\n  }\r\n\r\n  /**\r\n   * Checks if object is contained within the canvas with current viewportTransform\r\n   * the check is done stopping at first point that appears on screen\r\n   * @return {Boolean} true if object is fully or partially contained within canvas\r\n   */\r\n  isOnScreen(): boolean {\r\n    if (!this.canvas) {\r\n      return false;\r\n    }\r\n    const { tl, br } = this.canvas.vptCoords;\r\n    const points = this.getCoords();\r\n    // if some point is on screen, the object is on screen.\r\n    if (\r\n      points.some(\r\n        (point) =>\r\n          point.x <= br.x &&\r\n          point.x >= tl.x &&\r\n          point.y <= br.y &&\r\n          point.y >= tl.y\r\n      )\r\n    ) {\r\n      return true;\r\n    }\r\n    // no points on screen, check intersection with absolute coordinates\r\n    if (this.intersectsWithRect(tl, br)) {\r\n      return true;\r\n    }\r\n    // check if the object is so big that it contains the entire viewport\r\n    return this.containsPoint(tl.midPointFrom(br));\r\n  }\r\n\r\n  /**\r\n   * Checks if object is partially contained within the canvas with current viewportTransform\r\n   * @return {Boolean} true if object is partially contained within canvas\r\n   */\r\n  isPartiallyOnScreen(): boolean {\r\n    if (!this.canvas) {\r\n      return false;\r\n    }\r\n    const { tl, br } = this.canvas.vptCoords;\r\n    if (this.intersectsWithRect(tl, br)) {\r\n      return true;\r\n    }\r\n    const allPointsAreOutside = this.getCoords().every(\r\n      (point) =>\r\n        (point.x >= br.x || point.x <= tl.x) &&\r\n        (point.y >= br.y || point.y <= tl.y)\r\n    );\r\n    // check if the object is so big that it contains the entire viewport\r\n    return allPointsAreOutside && this.containsPoint(tl.midPointFrom(br));\r\n  }\r\n\r\n  /**\r\n   * Returns coordinates of object's bounding rectangle (left, top, width, height)\r\n   * the box is intended as aligned to axis of canvas.\r\n   * @return {Object} Object with left, top, width, height properties\r\n   */\r\n  getBoundingRect(): TBBox {\r\n    return makeBoundingBoxFromPoints(this.getCoords());\r\n  }\r\n\r\n  /**\r\n   * Returns width of an object's bounding box counting transformations\r\n   * @todo shouldn't this account for group transform and return the actual size in canvas coordinate plane?\r\n   * @return {Number} width value\r\n   */\r\n  getScaledWidth(): number {\r\n    return this._getTransformedDimensions().x;\r\n  }\r\n\r\n  /**\r\n   * Returns height of an object bounding box counting transformations\r\n   * @todo shouldn't this account for group transform and return the actual size in canvas coordinate plane?\r\n   * @return {Number} height value\r\n   */\r\n  getScaledHeight(): number {\r\n    return this._getTransformedDimensions().y;\r\n  }\r\n\r\n  /**\r\n   * Scales an object (equally by x and y)\r\n   * @param {Number} value Scale factor\r\n   * @return {void}\r\n   */\r\n  scale(value: number): void {\r\n    this._set(SCALE_X, value);\r\n    this._set(SCALE_Y, value);\r\n    this.setCoords();\r\n  }\r\n\r\n  /**\r\n   * Scales an object to a given width, with respect to bounding box (scaling by x/y equally)\r\n   * @param {Number} value New width value\r\n   * @return {void}\r\n   */\r\n  scaleToWidth(value: number) {\r\n    // adjust to bounding rect factor so that rotated shapes would fit as well\r\n    const boundingRectFactor =\r\n      this.getBoundingRect().width / this.getScaledWidth();\r\n    return this.scale(value / this.width / boundingRectFactor);\r\n  }\r\n\r\n  /**\r\n   * Scales an object to a given height, with respect to bounding box (scaling by x/y equally)\r\n   * @param {Number} value New height value\r\n   * @return {void}\r\n   */\r\n  scaleToHeight(value: number) {\r\n    // adjust to bounding rect factor so that rotated shapes would fit as well\r\n    const boundingRectFactor =\r\n      this.getBoundingRect().height / this.getScaledHeight();\r\n    return this.scale(value / this.height / boundingRectFactor);\r\n  }\r\n\r\n  getCanvasRetinaScaling() {\r\n    return this.canvas?.getRetinaScaling() || 1;\r\n  }\r\n\r\n  /**\r\n   * Returns the object angle relative to canvas counting also the group property\r\n   * @returns {TDegree}\r\n   */\r\n  getTotalAngle(): TDegree {\r\n    return this.group\r\n      ? radiansToDegrees(calcPlaneRotation(this.calcTransformMatrix()))\r\n      : this.angle;\r\n  }\r\n\r\n  /**\r\n   * Retrieves viewportTransform from Object's canvas if available\r\n   * @return {TMat2D}\r\n   */\r\n  getViewportTransform(): TMat2D {\r\n    return this.canvas?.viewportTransform || (iMatrix.concat() as TMat2D);\r\n  }\r\n\r\n  /**\r\n   * Calculates the coordinates of the 4 corner of the bbox, in absolute coordinates.\r\n   * those never change with zoom or viewport changes.\r\n   * @return {TCornerPoint}\r\n   */\r\n  calcACoords(): TCornerPoint {\r\n    const rotateMatrix = createRotateMatrix({ angle: this.angle }),\r\n      { x, y } = this.getRelativeCenterPoint(),\r\n      tMatrix = createTranslateMatrix(x, y),\r\n      finalMatrix = multiplyTransformMatrices(tMatrix, rotateMatrix),\r\n      dim = this._getTransformedDimensions(),\r\n      w = dim.x / 2,\r\n      h = dim.y / 2;\r\n    return {\r\n      // corners\r\n      tl: transformPoint({ x: -w, y: -h }, finalMatrix),\r\n      tr: transformPoint({ x: w, y: -h }, finalMatrix),\r\n      bl: transformPoint({ x: -w, y: h }, finalMatrix),\r\n      br: transformPoint({ x: w, y: h }, finalMatrix),\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Sets corner and controls position coordinates based on current angle, width and height, left and top.\r\n   * aCoords are used to quickly find an object on the canvas.\r\n   * See {@link https://github.com/fabricjs/fabric.js/wiki/When-to-call-setCoords} and {@link http://fabricjs.com/fabric-gotchas}\r\n   */\r\n  setCoords(): void {\r\n    this.aCoords = this.calcACoords();\r\n  }\r\n\r\n  transformMatrixKey(skipGroup = false): number[] {\r\n    let prefix: number[] = [];\r\n    if (!skipGroup && this.group) {\r\n      prefix = this.group.transformMatrixKey(skipGroup);\r\n    }\r\n    prefix.push(\r\n      this.top,\r\n      this.left,\r\n      this.width,\r\n      this.height,\r\n      this.scaleX,\r\n      this.scaleY,\r\n      this.angle,\r\n      this.strokeWidth,\r\n      this.skewX,\r\n      this.skewY,\r\n      +this.flipX,\r\n      +this.flipY,\r\n      resolveOrigin(this.originX),\r\n      resolveOrigin(this.originY)\r\n    );\r\n\r\n    return prefix;\r\n  }\r\n\r\n  /**\r\n   * calculate transform matrix that represents the current transformations from the\r\n   * object's properties.\r\n   * @param {Boolean} [skipGroup] return transform matrix for object not counting parent transformations\r\n   * There are some situation in which this is useful to avoid the fake rotation.\r\n   * @return {TMat2D} transform matrix for the object\r\n   */\r\n  calcTransformMatrix(skipGroup = false): TMat2D {\r\n    let matrix = this.calcOwnMatrix();\r\n    if (skipGroup || !this.group) {\r\n      return matrix;\r\n    }\r\n    const key = this.transformMatrixKey(skipGroup),\r\n      cache = this.matrixCache;\r\n    if (cache && cache.key.every((x, i) => x === key[i])) {\r\n      return cache.value;\r\n    }\r\n    if (this.group) {\r\n      matrix = multiplyTransformMatrices(\r\n        this.group.calcTransformMatrix(false),\r\n        matrix\r\n      );\r\n    }\r\n    this.matrixCache = {\r\n      key,\r\n      value: matrix,\r\n    };\r\n    return matrix;\r\n  }\r\n\r\n  /**\r\n   * calculate transform matrix that represents the current transformations from the\r\n   * object's properties, this matrix does not include the group transformation\r\n   * @return {TMat2D} transform matrix for the object\r\n   */\r\n  calcOwnMatrix(): TMat2D {\r\n    const key = this.transformMatrixKey(true),\r\n      cache = this.ownMatrixCache;\r\n    if (cache && cache.key === key) {\r\n      return cache.value;\r\n    }\r\n    const center = this.getRelativeCenterPoint(),\r\n      options = {\r\n        angle: this.angle,\r\n        translateX: center.x,\r\n        translateY: center.y,\r\n        scaleX: this.scaleX,\r\n        scaleY: this.scaleY,\r\n        skewX: this.skewX,\r\n        skewY: this.skewY,\r\n        flipX: this.flipX,\r\n        flipY: this.flipY,\r\n      },\r\n      value = composeMatrix(options);\r\n    this.ownMatrixCache = {\r\n      key,\r\n      value,\r\n    };\r\n    return value;\r\n  }\r\n\r\n  /**\r\n   * Calculate object dimensions from its properties\r\n   * @private\r\n   * @returns {Point} dimensions\r\n   */\r\n  _getNonTransformedDimensions(): Point {\r\n    return new Point(this.width, this.height).scalarAdd(this.strokeWidth);\r\n  }\r\n\r\n  /**\r\n   * Calculate object dimensions for controls box, including padding and canvas zoom.\r\n   * and active selection\r\n   * @private\r\n   * @param {object} [options] transform options\r\n   * @returns {Point} dimensions\r\n   */\r\n  _calculateCurrentDimensions(options?: any): Point {\r\n    return this._getTransformedDimensions(options)\r\n      .transform(this.getViewportTransform(), true)\r\n      .scalarAdd(2 * this.padding);\r\n  }\r\n}\r\n","import type { ObjectEvents } from '../../EventTypeDefs';\r\nimport type { Group } from '../Group';\r\nimport type { Canvas } from '../../canvas/Canvas';\r\nimport type { StaticCanvas } from '../../canvas/StaticCanvas';\r\nimport { ObjectGeometry } from './ObjectGeometry';\r\nimport type { FabricObject } from './FabricObject';\r\n\r\ntype TAncestor = StackedObject | Canvas | StaticCanvas;\r\ntype TCollection = Group | Canvas | StaticCanvas;\r\n\r\nexport type Ancestors =\r\n  | [StackedObject | Group]\r\n  | [StackedObject | Group, ...Group[]]\r\n  | Group[];\r\n\r\nexport type AncestryComparison = {\r\n  /**\r\n   * common ancestors of `this` and`other`(may include`this` | `other`)\r\n   */\r\n  common: Ancestors;\r\n  /**\r\n   * ancestors that are of `this` only\r\n   */\r\n  fork: Ancestors;\r\n  /**\r\n   * ancestors that are of `other` only\r\n   */\r\n  otherFork: Ancestors;\r\n};\r\n\r\nexport class StackedObject<\r\n  EventSpec extends ObjectEvents = ObjectEvents\r\n> extends ObjectGeometry<EventSpec> {\r\n  /**\r\n   * A reference to the parent of the object\r\n   * Used to keep the original parent ref when the object has been added to an ActiveSelection, hence loosing the `group` ref\r\n   */\r\n  declare parent?: Group;\r\n\r\n  /**\r\n   * Checks if object is descendant of target\r\n   * Should be used instead of {@link Group.contains} or {@link StaticCanvas.contains} for performance reasons\r\n   * @param {TAncestor} target\r\n   * @returns {boolean}\r\n   */\r\n  isDescendantOf(target: TAncestor): boolean {\r\n    const { parent, group } = this;\r\n    return (\r\n      parent === target ||\r\n      group === target ||\r\n      this.canvas === target ||\r\n      // walk up\r\n      (!!parent && parent.isDescendantOf(target)) ||\r\n      (!!group && group !== parent && group.isDescendantOf(target))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @returns {Ancestors} ancestors (excluding `ActiveSelection`) from bottom to top\r\n   */\r\n  getAncestors(): Ancestors {\r\n    const ancestors: TAncestor[] = [];\r\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\r\n    let parent: TAncestor | undefined = this;\r\n    do {\r\n      parent = parent instanceof StackedObject ? parent.parent : undefined;\r\n      parent && ancestors.push(parent);\r\n    } while (parent);\r\n    return ancestors as Ancestors;\r\n  }\r\n\r\n  /**\r\n   * Compare ancestors\r\n   *\r\n   * @param {StackedObject} other\r\n   * @returns {AncestryComparison} an object that represent the ancestry situation.\r\n   */\r\n  findCommonAncestors<T extends this>(other: T): AncestryComparison {\r\n    if (this === other) {\r\n      return {\r\n        fork: [],\r\n        otherFork: [],\r\n        common: [this, ...this.getAncestors()],\r\n      } as AncestryComparison;\r\n    }\r\n    const ancestors = this.getAncestors();\r\n    const otherAncestors = other.getAncestors();\r\n    //  if `this` has no ancestors and `this` is top ancestor of `other` we must handle the following case\r\n    if (\r\n      ancestors.length === 0 &&\r\n      otherAncestors.length > 0 &&\r\n      this === otherAncestors[otherAncestors.length - 1]\r\n    ) {\r\n      return {\r\n        fork: [],\r\n        otherFork: [\r\n          other,\r\n          ...otherAncestors.slice(0, otherAncestors.length - 1),\r\n        ],\r\n        common: [this],\r\n      } as AncestryComparison;\r\n    }\r\n    //  compare ancestors\r\n    for (let i = 0, ancestor; i < ancestors.length; i++) {\r\n      ancestor = ancestors[i];\r\n      if (ancestor === other) {\r\n        return {\r\n          fork: [this, ...ancestors.slice(0, i)],\r\n          otherFork: [],\r\n          common: ancestors.slice(i),\r\n        } as AncestryComparison;\r\n      }\r\n      for (let j = 0; j < otherAncestors.length; j++) {\r\n        if (this === otherAncestors[j]) {\r\n          return {\r\n            fork: [],\r\n            otherFork: [other, ...otherAncestors.slice(0, j)],\r\n            common: [this, ...ancestors],\r\n          } as AncestryComparison;\r\n        }\r\n        if (ancestor === otherAncestors[j]) {\r\n          return {\r\n            fork: [this, ...ancestors.slice(0, i)],\r\n            otherFork: [other, ...otherAncestors.slice(0, j)],\r\n            common: ancestors.slice(i),\r\n          } as AncestryComparison;\r\n        }\r\n      }\r\n    }\r\n    // nothing shared\r\n    return {\r\n      fork: [this, ...ancestors],\r\n      otherFork: [other, ...otherAncestors],\r\n      common: [],\r\n    } as AncestryComparison;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {StackedObject} other\r\n   * @returns {boolean}\r\n   */\r\n  hasCommonAncestors<T extends this>(other: T): boolean {\r\n    const commonAncestors = this.findCommonAncestors(other);\r\n    return commonAncestors && !!commonAncestors.common.length;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {FabricObject} other object to compare against\r\n   * @returns {boolean | undefined} if objects do not share a common ancestor or they are strictly equal it is impossible to determine which is in front of the other; in such cases the function returns `undefined`\r\n   */\r\n  isInFrontOf<T extends this>(other: T): boolean | undefined {\r\n    if (this === other) {\r\n      return undefined;\r\n    }\r\n    const ancestorData = this.findCommonAncestors(other);\r\n\r\n    if (ancestorData.fork.includes(other as any)) {\r\n      return true;\r\n    }\r\n    if (ancestorData.otherFork.includes(this as any)) {\r\n      return false;\r\n    }\r\n    // if there isn't a common ancestor, we take the canvas.\r\n    // if there is no canvas, there is nothing to compare\r\n    const firstCommonAncestor = ancestorData.common[0] || this.canvas;\r\n    if (!firstCommonAncestor) {\r\n      return undefined;\r\n    }\r\n    const headOfFork = ancestorData.fork.pop(),\r\n      headOfOtherFork = ancestorData.otherFork.pop(),\r\n      thisIndex = (firstCommonAncestor as TCollection)._objects.indexOf(\r\n        headOfFork as any\r\n      ),\r\n      otherIndex = (firstCommonAncestor as TCollection)._objects.indexOf(\r\n        headOfOtherFork as any\r\n      );\r\n    return thisIndex > -1 && thisIndex > otherIndex;\r\n  }\r\n}\r\n","import type { TColorArg } from '../../color/typedefs';\r\nimport { FILL, STROKE } from '../../constants';\r\nimport type { ObjectEvents } from '../../EventTypeDefs';\r\nimport type { TAnimation } from '../../util/animation/animate';\r\nimport { animate, animateColor } from '../../util/animation/animate';\r\nimport type {\r\n  AnimationOptions,\r\n  ArrayAnimationOptions,\r\n  ColorAnimationOptions,\r\n  ValueAnimationOptions,\r\n} from '../../util/animation/types';\r\nimport { StackedObject } from './StackedObject';\r\n\r\nexport abstract class AnimatableObject<\r\n  EventSpec extends ObjectEvents = ObjectEvents\r\n> extends StackedObject<EventSpec> {\r\n  /**\r\n   * List of properties to consider for animating colors.\r\n   * @type String[]\r\n   */\r\n  static colorProperties: string[] = [FILL, STROKE, 'backgroundColor'];\r\n\r\n  /**\r\n   * Animates object's properties\r\n   * @param {Record<string, number | number[] | TColorArg>} animatable map of keys and end values\r\n   * @param {Partial<AnimationOptions<T>>} options\r\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#animation}\r\n   * @return {Record<string, TAnimation<T>>} map of animation contexts\r\n   *\r\n   * As object — multiple properties\r\n   *\r\n   * object.animate({ left: ..., top: ... });\r\n   * object.animate({ left: ..., top: ... }, { duration: ... });\r\n   */\r\n  animate<T extends number | number[] | TColorArg>(\r\n    animatable: Record<string, T>,\r\n    options?: Partial<AnimationOptions<T>>\r\n  ): Record<string, TAnimation<T>> {\r\n    return Object.entries(animatable).reduce((acc, [key, endValue]) => {\r\n      acc[key] = this._animate(key, endValue, options);\r\n      return acc;\r\n    }, {} as Record<string, TAnimation<T>>);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {String} key Property to animate\r\n   * @param {String} to Value to animate to\r\n   * @param {Object} [options] Options object\r\n   */\r\n  _animate<T extends number | number[] | TColorArg>(\r\n    key: string,\r\n    endValue: T,\r\n    options: Partial<AnimationOptions<T>> = {}\r\n  ): TAnimation<T> {\r\n    const path = key.split('.');\r\n    const propIsColor = (\r\n      this.constructor as typeof AnimatableObject\r\n    ).colorProperties.includes(path[path.length - 1]);\r\n    const { abort, startValue, onChange, onComplete } = options;\r\n    const animationOptions = {\r\n      ...options,\r\n      target: this,\r\n      // path.reduce... is the current value in case start value isn't provided\r\n      startValue:\r\n        startValue ?? path.reduce((deep: any, key) => deep[key], this),\r\n      endValue,\r\n      abort: abort?.bind(this),\r\n      onChange: (\r\n        value: number | number[] | string,\r\n        valueProgress: number,\r\n        durationProgress: number\r\n      ) => {\r\n        path.reduce((deep: Record<string, any>, key, index) => {\r\n          if (index === path.length - 1) {\r\n            deep[key] = value;\r\n          }\r\n          return deep[key];\r\n        }, this);\r\n        onChange &&\r\n          // @ts-expect-error generic callback arg0 is wrong\r\n          onChange(value, valueProgress, durationProgress);\r\n      },\r\n      onComplete: (\r\n        value: number | number[] | string,\r\n        valueProgress: number,\r\n        durationProgress: number\r\n      ) => {\r\n        this.setCoords();\r\n        onComplete &&\r\n          // @ts-expect-error generic callback arg0 is wrong\r\n          onComplete(value, valueProgress, durationProgress);\r\n      },\r\n    } as AnimationOptions<T>;\r\n\r\n    return (\r\n      propIsColor\r\n        ? animateColor(animationOptions as ColorAnimationOptions)\r\n        : animate(\r\n            animationOptions as ValueAnimationOptions | ArrayAnimationOptions\r\n          )\r\n    ) as TAnimation<T>;\r\n  }\r\n}\r\n","export function getSvgRegex(arr: string[]) {\r\n  return new RegExp('^(' + arr.join('|') + ')\\\\b', 'i');\r\n}\r\n","import { getSvgRegex } from './getSvgRegex';\r\nimport { LEFT, TOP } from '../constants';\r\n\r\nexport const reNum = String.raw`(?:[-+]?(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][-+]?\\d+)?)`;\r\n\r\nexport const svgNS = 'http://www.w3.org/2000/svg';\r\n\r\nexport const commaWsp = String.raw`(?:\\s+,?\\s*|,\\s*|$)`;\r\n\r\nexport const reFontDeclaration = new RegExp(\r\n  '(normal|italic)?\\\\s*(normal|small-caps)?\\\\s*' +\r\n    '(normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900)?\\\\s*(' +\r\n    reNum +\r\n    '(?:px|cm|mm|em|pt|pc|in)*)(?:\\\\/(normal|' +\r\n    reNum +\r\n    '))?\\\\s+(.*)'\r\n);\r\n\r\nexport const svgValidTagNames = [\r\n    'path',\r\n    'circle',\r\n    'polygon',\r\n    'polyline',\r\n    'ellipse',\r\n    'rect',\r\n    'line',\r\n    'image',\r\n    'text',\r\n  ],\r\n  svgViewBoxElements = ['symbol', 'image', 'marker', 'pattern', 'view', 'svg'],\r\n  svgInvalidAncestors = [\r\n    'pattern',\r\n    'defs',\r\n    'symbol',\r\n    'metadata',\r\n    'clipPath',\r\n    'mask',\r\n    'desc',\r\n  ],\r\n  svgValidParents = ['symbol', 'g', 'a', 'svg', 'clipPath', 'defs'],\r\n  attributesMap = {\r\n    cx: LEFT,\r\n    x: LEFT,\r\n    r: 'radius',\r\n    cy: TOP,\r\n    y: TOP,\r\n    display: 'visible',\r\n    visibility: 'visible',\r\n    transform: 'transformMatrix',\r\n    'fill-opacity': 'fillOpacity',\r\n    'fill-rule': 'fillRule',\r\n    'font-family': 'fontFamily',\r\n    'font-size': 'fontSize',\r\n    'font-style': 'fontStyle',\r\n    'font-weight': 'fontWeight',\r\n    'letter-spacing': 'charSpacing',\r\n    'paint-order': 'paintFirst',\r\n    'stroke-dasharray': 'strokeDashArray',\r\n    'stroke-dashoffset': 'strokeDashOffset',\r\n    'stroke-linecap': 'strokeLineCap',\r\n    'stroke-linejoin': 'strokeLineJoin',\r\n    'stroke-miterlimit': 'strokeMiterLimit',\r\n    'stroke-opacity': 'strokeOpacity',\r\n    'stroke-width': 'strokeWidth',\r\n    'text-decoration': 'textDecoration',\r\n    'text-anchor': 'textAnchor',\r\n    opacity: 'opacity',\r\n    'clip-path': 'clipPath',\r\n    'clip-rule': 'clipRule',\r\n    'vector-effect': 'strokeUniform',\r\n    'image-rendering': 'imageSmoothing',\r\n  },\r\n  fSize = 'font-size',\r\n  cPath = 'clip-path';\r\n\r\nexport const svgValidTagNamesRegEx = getSvgRegex(svgValidTagNames);\r\n\r\nexport const svgViewBoxElementsRegEx = getSvgRegex(svgViewBoxElements);\r\n\r\nexport const svgValidParentsRegEx = getSvgRegex(svgValidParents);\r\n\r\n// http://www.w3.org/TR/SVG/coords.html#ViewBoxAttribute\r\n// matches, e.g.: +14.56e-12, etc.\r\nexport const reViewBoxAttrValue = new RegExp(\r\n  '^' +\r\n    '\\\\s*(' +\r\n    reNum +\r\n    '+)\\\\s*,?' +\r\n    '\\\\s*(' +\r\n    reNum +\r\n    '+)\\\\s*,?' +\r\n    '\\\\s*(' +\r\n    reNum +\r\n    '+)\\\\s*,?' +\r\n    '\\\\s*(' +\r\n    reNum +\r\n    '+)\\\\s*' +\r\n    '$'\r\n);\r\n","import { classRegistry } from './ClassRegistry';\r\nimport { Color } from './color/Color';\r\nimport { config } from './config';\r\nimport { reNum } from './parser/constants';\r\nimport { Point } from './Point';\r\nimport type { FabricObject } from './shapes/Object/FabricObject';\r\nimport type { TClassProperties } from './typedefs';\r\nimport { uid } from './util/internals/uid';\r\nimport { pickBy } from './util/misc/pick';\r\nimport { degreesToRadians } from './util/misc/radiansDegreesConversion';\r\nimport { toFixed } from './util/misc/toFixed';\r\nimport { rotateVector } from './util/misc/vectors';\r\n\r\n/**\r\n   * Regex matching shadow offsetX, offsetY and blur (ex: \"2px 2px 10px rgba(0,0,0,0.2)\", \"rgb(0,255,0) 2px 2px\")\r\n   * - (?:\\s|^): This part captures either a whitespace character (\\s) or the beginning of a line (^). It's non-capturing (due to (?:...)), meaning it doesn't create a capturing group.\r\n   * - (-?\\d+(?:\\.\\d*)?(?:px)?(?:\\s?|$))?: This captures the first component of the shadow, which is the horizontal offset. Breaking it down:\r\n   *   - (-?\\d+): Captures an optional minus sign followed by one or more digits (integer part of the number).\r\n   *   - (?:\\.\\d*)?: Optionally captures a decimal point followed by zero or more digits (decimal part of the number).\r\n   *   - (?:px)?: Optionally captures the \"px\" unit.\r\n   *   - (?:\\s?|$): Captures either an optional whitespace or the end of the line. This whole part is wrapped in a non-capturing group and marked as optional with ?.\r\n   * - (-?\\d+(?:\\.\\d*)?(?:px)?(?:\\s?|$))?: Similar to the previous step, this captures the vertical offset.\r\n\r\n(\\d+(?:\\.\\d*)?(?:px)?)?: This captures the blur radius. It's similar to the horizontal offset but without the optional minus sign.\r\n\r\n(?:\\s+(-?\\d+(?:\\.\\d*)?(?:px)?(?:\\s?|$))?){0,1}: This captures an optional part for the color. It allows for whitespace followed by a component with an optional minus sign, digits, decimal point, and \"px\" unit.\r\n\r\n(?:$|\\s): This captures either the end of the line or a whitespace character. It ensures that the match ends either at the end of the string or with a whitespace character.\r\n   */\r\n// eslint-disable-next-line max-len\r\n\r\nconst shadowOffsetRegex = '(-?\\\\d+(?:\\\\.\\\\d*)?(?:px)?(?:\\\\s?|$))?';\r\n\r\nconst reOffsetsAndBlur = new RegExp(\r\n  '(?:\\\\s|^)' +\r\n    shadowOffsetRegex +\r\n    shadowOffsetRegex +\r\n    '(' +\r\n    reNum +\r\n    '?(?:px)?)?(?:\\\\s?|$)(?:$|\\\\s)'\r\n);\r\n\r\nexport const shadowDefaultValues: Partial<TClassProperties<Shadow>> = {\r\n  color: 'rgb(0,0,0)',\r\n  blur: 0,\r\n  offsetX: 0,\r\n  offsetY: 0,\r\n  affectStroke: false,\r\n  includeDefaultValues: true,\r\n  nonScaling: false,\r\n};\r\n\r\nexport type SerializedShadowOptions = {\r\n  color: string;\r\n  blur: number;\r\n  offsetX: number;\r\n  offsetY: number;\r\n  affectStroke: boolean;\r\n  nonScaling: boolean;\r\n  type: string;\r\n};\r\n\r\nexport class Shadow {\r\n  /**\r\n   * Shadow color\r\n   * @type String\r\n   * @default\r\n   */\r\n  declare color: string;\r\n\r\n  /**\r\n   * Shadow blur\r\n   * @type Number\r\n   */\r\n  declare blur: number;\r\n\r\n  /**\r\n   * Shadow horizontal offset\r\n   * @type Number\r\n   * @default\r\n   */\r\n  declare offsetX: number;\r\n\r\n  /**\r\n   * Shadow vertical offset\r\n   * @type Number\r\n   * @default\r\n   */\r\n  declare offsetY: number;\r\n\r\n  /**\r\n   * Whether the shadow should affect stroke operations\r\n   * @type Boolean\r\n   * @default\r\n   */\r\n  declare affectStroke: boolean;\r\n\r\n  /**\r\n   * Indicates whether toObject should include default values\r\n   * @type Boolean\r\n   * @default\r\n   */\r\n  declare includeDefaultValues: boolean;\r\n\r\n  /**\r\n   * When `false`, the shadow will scale with the object.\r\n   * When `true`, the shadow's offsetX, offsetY, and blur will not be affected by the object's scale.\r\n   * default to false\r\n   * @type Boolean\r\n   * @default\r\n   */\r\n  declare nonScaling: boolean;\r\n\r\n  declare id: number;\r\n\r\n  static ownDefaults = shadowDefaultValues;\r\n\r\n  static type = 'shadow';\r\n\r\n  /**\r\n   * @see {@link http://fabricjs.com/shadows|Shadow demo}\r\n   * @param {Object|String} [options] Options object with any of color, blur, offsetX, offsetY properties or string (e.g. \"rgba(0,0,0,0.2) 2px 2px 10px\")\r\n   */\r\n  constructor(options: Partial<TClassProperties<Shadow>>);\r\n  constructor(svgAttribute: string);\r\n  constructor(arg0: string | Partial<TClassProperties<Shadow>>) {\r\n    const options: Partial<TClassProperties<Shadow>> =\r\n      typeof arg0 === 'string' ? Shadow.parseShadow(arg0) : arg0;\r\n    Object.assign(this, Shadow.ownDefaults);\r\n    for (const prop in options) {\r\n      // @ts-expect-error for loops are so messy in TS\r\n      this[prop] = options[prop];\r\n    }\r\n\r\n    this.id = uid();\r\n  }\r\n\r\n  /**\r\n   * @param {String} value Shadow value to parse\r\n   * @return {Object} Shadow object with color, offsetX, offsetY and blur\r\n   */\r\n  static parseShadow(value: string) {\r\n    const shadowStr = value.trim(),\r\n      [, offsetX = 0, offsetY = 0, blur = 0] = (\r\n        reOffsetsAndBlur.exec(shadowStr) || []\r\n      ).map((value) => parseFloat(value) || 0),\r\n      color = (shadowStr.replace(reOffsetsAndBlur, '') || 'rgb(0,0,0)').trim();\r\n\r\n    return {\r\n      color,\r\n      offsetX,\r\n      offsetY,\r\n      blur,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Returns a string representation of an instance\r\n   * @see http://www.w3.org/TR/css-text-decor-3/#text-shadow\r\n   * @return {String} Returns CSS3 text-shadow declaration\r\n   */\r\n  toString() {\r\n    return [this.offsetX, this.offsetY, this.blur, this.color].join('px ');\r\n  }\r\n\r\n  /**\r\n   * Returns SVG representation of a shadow\r\n   * @param {FabricObject} object\r\n   * @return {String} SVG representation of a shadow\r\n   */\r\n  toSVG(object: FabricObject) {\r\n    const offset = rotateVector(\r\n        new Point(this.offsetX, this.offsetY),\r\n        degreesToRadians(-object.angle)\r\n      ),\r\n      BLUR_BOX = 20,\r\n      color = new Color(this.color);\r\n    let fBoxX = 40,\r\n      fBoxY = 40;\r\n\r\n    if (object.width && object.height) {\r\n      //http://www.w3.org/TR/SVG/filters.html#FilterEffectsRegion\r\n      // we add some extra space to filter box to contain the blur ( 20 )\r\n      fBoxX =\r\n        toFixed(\r\n          (Math.abs(offset.x) + this.blur) / object.width,\r\n          config.NUM_FRACTION_DIGITS\r\n        ) *\r\n          100 +\r\n        BLUR_BOX;\r\n      fBoxY =\r\n        toFixed(\r\n          (Math.abs(offset.y) + this.blur) / object.height,\r\n          config.NUM_FRACTION_DIGITS\r\n        ) *\r\n          100 +\r\n        BLUR_BOX;\r\n    }\r\n    if (object.flipX) {\r\n      offset.x *= -1;\r\n    }\r\n    if (object.flipY) {\r\n      offset.y *= -1;\r\n    }\r\n\r\n    return `<filter id=\"SVGID_${this.id}\" y=\"-${fBoxY}%\" height=\"${\r\n      100 + 2 * fBoxY\r\n    }%\" x=\"-${fBoxX}%\" width=\"${\r\n      100 + 2 * fBoxX\r\n    }%\" >\\n\\t<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"${toFixed(\r\n      this.blur ? this.blur / 2 : 0,\r\n      config.NUM_FRACTION_DIGITS\r\n    )}\"></feGaussianBlur>\\n\\t<feOffset dx=\"${toFixed(\r\n      offset.x,\r\n      config.NUM_FRACTION_DIGITS\r\n    )}\" dy=\"${toFixed(\r\n      offset.y,\r\n      config.NUM_FRACTION_DIGITS\r\n    )}\" result=\"oBlur\" ></feOffset>\\n\\t<feFlood flood-color=\"${color.toRgb()}\" flood-opacity=\"${color.getAlpha()}\"/>\\n\\t<feComposite in2=\"oBlur\" operator=\"in\" />\\n\\t<feMerge>\\n\\t\\t<feMergeNode></feMergeNode>\\n\\t\\t<feMergeNode in=\"SourceGraphic\"></feMergeNode>\\n\\t</feMerge>\\n</filter>\\n`;\r\n  }\r\n\r\n  /**\r\n   * Returns object representation of a shadow\r\n   * @return {Object} Object representation of a shadow instance\r\n   */\r\n  toObject() {\r\n    const data: SerializedShadowOptions = {\r\n      color: this.color,\r\n      blur: this.blur,\r\n      offsetX: this.offsetX,\r\n      offsetY: this.offsetY,\r\n      affectStroke: this.affectStroke,\r\n      nonScaling: this.nonScaling,\r\n      type: (this.constructor as typeof Shadow).type,\r\n    };\r\n    const defaults = Shadow.ownDefaults as SerializedShadowOptions;\r\n    return !this.includeDefaultValues\r\n      ? pickBy(data, (value, key) => value !== defaults[key])\r\n      : data;\r\n  }\r\n\r\n  static async fromObject(options: Partial<TClassProperties<Shadow>>) {\r\n    return new this(options);\r\n  }\r\n}\r\n\r\nclassRegistry.setClass(Shadow, 'shadow');\r\n","export const cloneDeep = <T extends object>(object: T): T =>\r\n  JSON.parse(JSON.stringify(object));\r\n","import {\r\n  TOP,\r\n  LEFT,\r\n  SCALE_Y,\r\n  SCALE_X,\r\n  SKEW_X,\r\n  SKEW_Y,\r\n  FILL,\r\n  STROKE,\r\n} from '../../constants';\r\nimport type { TClassProperties } from '../../typedefs';\r\nimport type { InteractiveFabricObject } from './InteractiveObject';\r\nimport type { FabricObject } from './Object';\r\n\r\nexport const stateProperties = [\r\n  TOP,\r\n  LEFT,\r\n  SCALE_X,\r\n  SCALE_Y,\r\n  'flipX',\r\n  'flipY',\r\n  'originX',\r\n  'originY',\r\n  'angle',\r\n  'opacity',\r\n  'globalCompositeOperation',\r\n  'shadow',\r\n  'visible',\r\n  SKEW_X,\r\n  SKEW_Y,\r\n];\r\n\r\nexport const cacheProperties = [\r\n  FILL,\r\n  STROKE,\r\n  'strokeWidth',\r\n  'strokeDashArray',\r\n  'width',\r\n  'height',\r\n  'paintFirst',\r\n  'strokeUniform',\r\n  'strokeLineCap',\r\n  'strokeDashOffset',\r\n  'strokeLineJoin',\r\n  'strokeMiterLimit',\r\n  'backgroundColor',\r\n  'clipPath',\r\n];\r\n\r\nexport const fabricObjectDefaultValues: Partial<\r\n  TClassProperties<FabricObject>\r\n> = {\r\n  // see composeMatrix() to see order of transforms. First defaults listed based on this\r\n  top: 0,\r\n  left: 0,\r\n  width: 0,\r\n  height: 0,\r\n  angle: 0,\r\n  flipX: false,\r\n  flipY: false,\r\n  scaleX: 1,\r\n  scaleY: 1,\r\n  minScaleLimit: 0,\r\n  skewX: 0,\r\n  skewY: 0,\r\n  originX: LEFT,\r\n  originY: TOP,\r\n  strokeWidth: 1,\r\n  strokeUniform: false,\r\n  padding: 0,\r\n  opacity: 1,\r\n  paintFirst: FILL,\r\n  fill: 'rgb(0,0,0)',\r\n  fillRule: 'nonzero',\r\n  stroke: null,\r\n  strokeDashArray: null,\r\n  strokeDashOffset: 0,\r\n  strokeLineCap: 'butt',\r\n  strokeLineJoin: 'miter',\r\n  strokeMiterLimit: 4,\r\n  globalCompositeOperation: 'source-over',\r\n  backgroundColor: '',\r\n  shadow: null,\r\n  visible: true,\r\n  includeDefaultValues: true,\r\n  excludeFromExport: false,\r\n  objectCaching: true,\r\n  clipPath: undefined,\r\n  inverted: false,\r\n  absolutePositioned: false,\r\n  centeredRotation: true,\r\n  centeredScaling: false,\r\n  dirty: true,\r\n} as const;\r\n\r\nexport const interactiveObjectDefaultValues: Partial<\r\n  TClassProperties<InteractiveFabricObject>\r\n> = {\r\n  noScaleCache: true,\r\n  lockMovementX: false,\r\n  lockMovementY: false,\r\n  lockRotation: false,\r\n  lockScalingX: false,\r\n  lockScalingY: false,\r\n  lockSkewingX: false,\r\n  lockSkewingY: false,\r\n  lockScalingFlip: false,\r\n  cornerSize: 13,\r\n  touchCornerSize: 24,\r\n  transparentCorners: true,\r\n  cornerColor: 'rgb(178,204,255)',\r\n  cornerStrokeColor: '',\r\n  cornerStyle: 'rect',\r\n  cornerDashArray: null,\r\n  hasControls: true,\r\n  borderColor: 'rgb(178,204,255)',\r\n  borderDashArray: null,\r\n  borderOpacityWhenMoving: 0.4,\r\n  borderScaleFactor: 1,\r\n  hasBorders: true,\r\n  selectionBackgroundColor: '',\r\n  selectable: true,\r\n  evented: true,\r\n  perPixelTargetFind: false,\r\n  activeOn: 'down',\r\n  hoverCursor: null,\r\n  moveCursor: null,\r\n};\r\n","import { cache } from '../../cache';\r\nimport { config } from '../../config';\r\nimport {\r\n  ALIASING_LIMIT,\r\n  CENTER,\r\n  iMatrix,\r\n  LEFT,\r\n  SCALE_X,\r\n  SCALE_Y,\r\n  STROKE,\r\n  TOP,\r\n  VERSION,\r\n} from '../../constants';\r\nimport type { ObjectEvents } from '../../EventTypeDefs';\r\nimport { AnimatableObject } from './AnimatableObject';\r\nimport { Point } from '../../Point';\r\nimport { Shadow } from '../../Shadow';\r\nimport type {\r\n  TDegree,\r\n  TFiller,\r\n  TSize,\r\n  TCacheCanvasDimensions,\r\n  Abortable,\r\n  TOptions,\r\n  ImageFormat,\r\n} from '../../typedefs';\r\nimport { classRegistry } from '../../ClassRegistry';\r\nimport { runningAnimations } from '../../util/animation/AnimationRegistry';\r\nimport { cloneDeep } from '../../util/internals/cloneDeep';\r\nimport { capValue } from '../../util/misc/capValue';\r\nimport { createCanvasElement, toDataURL } from '../../util/misc/dom';\r\nimport { invertTransform, qrDecompose } from '../../util/misc/matrix';\r\nimport { enlivenObjectEnlivables } from '../../util/misc/objectEnlive';\r\nimport {\r\n  resetObjectTransform,\r\n  saveObjectTransform,\r\n} from '../../util/misc/objectTransforms';\r\nimport { sendObjectToPlane } from '../../util/misc/planeChange';\r\nimport { pick, pickBy } from '../../util/misc/pick';\r\nimport { toFixed } from '../../util/misc/toFixed';\r\nimport type { Group } from '../Group';\r\nimport { StaticCanvas } from '../../canvas/StaticCanvas';\r\nimport {\r\n  isFiller,\r\n  isSerializableFiller,\r\n  isTextObject,\r\n} from '../../util/typeAssertions';\r\nimport type { FabricImage } from '../Image';\r\nimport {\r\n  cacheProperties,\r\n  fabricObjectDefaultValues,\r\n  stateProperties,\r\n} from './defaultValues';\r\nimport type { Gradient } from '../../gradient/Gradient';\r\nimport type { Pattern } from '../../Pattern';\r\nimport type { Canvas } from '../../canvas/Canvas';\r\nimport type { SerializedObjectProps } from './types/SerializedObjectProps';\r\nimport type { ObjectProps } from './types/ObjectProps';\r\nimport { getDevicePixelRatio, getEnv } from '../../env';\r\nimport { log } from '../../util/internals/console';\r\n\r\nexport type TCachedFabricObject<T extends FabricObject = FabricObject> = T &\r\n  Required<\r\n    Pick<\r\n      T,\r\n      | 'zoomX'\r\n      | 'zoomY'\r\n      | '_cacheCanvas'\r\n      | '_cacheContext'\r\n      | 'cacheTranslationX'\r\n      | 'cacheTranslationY'\r\n    >\r\n  > & {\r\n    _cacheContext: CanvasRenderingContext2D;\r\n  };\r\n\r\nexport type ObjectToCanvasElementOptions = {\r\n  format?: ImageFormat;\r\n  /** Multiplier to scale by */\r\n  multiplier?: number;\r\n  /** Cropping left offset. Introduced in v1.2.14 */\r\n  left?: number;\r\n  /** Cropping top offset. Introduced in v1.2.14 */\r\n  top?: number;\r\n  /** Cropping width. Introduced in v1.2.14 */\r\n  width?: number;\r\n  /** Cropping height. Introduced in v1.2.14 */\r\n  height?: number;\r\n  /** Enable retina scaling for clone image. Introduce in 1.6.4 */\r\n  enableRetinaScaling?: boolean;\r\n  /** Remove current object transform ( no scale , no angle, no flip, no skew ). Introduced in 2.3.4 */\r\n  withoutTransform?: boolean;\r\n  /** Remove current object shadow. Introduced in 2.4.2 */\r\n  withoutShadow?: boolean;\r\n  /** Account for canvas viewport transform */\r\n  viewportTransform?: boolean;\r\n  /** Function to create the output canvas to export onto */\r\n  canvasProvider?: <T extends StaticCanvas>(el?: HTMLCanvasElement) => T;\r\n};\r\n\r\ntype toDataURLOptions = ObjectToCanvasElementOptions & {\r\n  quality?: number;\r\n};\r\n\r\n/**\r\n * Root object class from which all 2d shape classes inherit from\r\n * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#objects}\r\n *\r\n * @fires added\r\n * @fires removed\r\n *\r\n * @fires selected\r\n * @fires deselected\r\n *\r\n * @fires rotating\r\n * @fires scaling\r\n * @fires moving\r\n * @fires skewing\r\n * @fires modified\r\n *\r\n * @fires mousedown\r\n * @fires mouseup\r\n * @fires mouseover\r\n * @fires mouseout\r\n * @fires mousewheel\r\n * @fires mousedblclick\r\n *\r\n * @fires dragover\r\n * @fires dragenter\r\n * @fires dragleave\r\n * @fires drop\r\n */\r\nexport class FabricObject<\r\n    Props extends TOptions<ObjectProps> = Partial<ObjectProps>,\r\n    SProps extends SerializedObjectProps = SerializedObjectProps,\r\n    EventSpec extends ObjectEvents = ObjectEvents\r\n  >\r\n  extends AnimatableObject<EventSpec>\r\n  implements ObjectProps\r\n{\r\n  declare minScaleLimit: number;\r\n\r\n  declare opacity: number;\r\n\r\n  declare paintFirst: 'fill' | 'stroke';\r\n  declare fill: string | TFiller | null;\r\n  declare fillRule: CanvasFillRule;\r\n  declare stroke: string | TFiller | null;\r\n  declare strokeDashArray: number[] | null;\r\n  declare strokeDashOffset: number;\r\n  declare strokeLineCap: CanvasLineCap;\r\n  declare strokeLineJoin: CanvasLineJoin;\r\n  declare strokeMiterLimit: number;\r\n\r\n  declare globalCompositeOperation: GlobalCompositeOperation;\r\n  declare backgroundColor: string;\r\n\r\n  declare shadow: Shadow | null;\r\n\r\n  declare visible: boolean;\r\n\r\n  declare includeDefaultValues: boolean;\r\n  declare excludeFromExport: boolean;\r\n\r\n  declare objectCaching: boolean;\r\n\r\n  declare clipPath?: FabricObject;\r\n  declare inverted: boolean;\r\n  declare absolutePositioned: boolean;\r\n  declare centeredRotation: boolean;\r\n  declare centeredScaling: boolean;\r\n\r\n  /**\r\n   * This list of properties is used to check if the state of an object is changed.\r\n   * This state change now is only used for children of groups to understand if a group\r\n   * needs its cache regenerated during a .set call\r\n   * @type Array\r\n   */\r\n  static stateProperties: string[] = stateProperties;\r\n\r\n  /**\r\n   * List of properties to consider when checking if cache needs refresh\r\n   * Those properties are checked by\r\n   * calls to Object.set(key, value). If the key is in this list, the object is marked as dirty\r\n   * and refreshed at the next render\r\n   * @type Array\r\n   */\r\n  static cacheProperties: string[] = cacheProperties;\r\n\r\n  /**\r\n   * When set to `true`, object's cache will be rerendered next render call.\r\n   * since 1.7.0\r\n   * @type Boolean\r\n   * @default true\r\n   */\r\n  declare dirty: boolean;\r\n\r\n  /**\r\n   * Quick access for the _cacheCanvas rendering context\r\n   * This is part of the objectCaching feature\r\n   * since 1.7.0\r\n   * @type boolean\r\n   * @default undefined\r\n   * @private\r\n   */\r\n  _cacheContext: CanvasRenderingContext2D | null = null;\r\n\r\n  /**\r\n   * A reference to the HTMLCanvasElement that is used to contain the cache of the object\r\n   * this canvas element is resized and cleared as needed\r\n   * Is marked private, you can read it, don't use it since it is handled by fabric\r\n   * since 1.7.0\r\n   * @type HTMLCanvasElement\r\n   * @default undefined\r\n   * @private\r\n   */\r\n  declare _cacheCanvas?: HTMLCanvasElement;\r\n\r\n  /**\r\n   * zoom level used on the cacheCanvas to draw the cache, X axe\r\n   * since 1.7.0\r\n   * @type number\r\n   * @default undefined\r\n   * @private\r\n   */\r\n  declare zoomX?: number;\r\n\r\n  /**\r\n   * zoom level used on the cacheCanvas to draw the cache, Y axe\r\n   * since 1.7.0\r\n   * @type number\r\n   * @default undefined\r\n   * @private\r\n   */\r\n  declare zoomY?: number;\r\n\r\n  /**\r\n   * zoom level used on the cacheCanvas to draw the cache, Y axe\r\n   * since 1.7.0\r\n   * @type number\r\n   * @default undefined\r\n   * @private\r\n   */\r\n  declare cacheTranslationX?: number;\r\n\r\n  /**\r\n   * translation of the cacheCanvas away from the center, for subpixel accuracy and crispness\r\n   * since 1.7.0\r\n   * @type number\r\n   * @default undefined\r\n   * @private\r\n   */\r\n  declare cacheTranslationY?: number;\r\n\r\n  /**\r\n   * A reference to the parent of the object, usually a Group\r\n   * @type number\r\n   * @default undefined\r\n   * @private\r\n   */\r\n  declare group?: Group;\r\n\r\n  /**\r\n   * Indicate if the object is sitting on a cache dedicated to it\r\n   * or is part of a larger cache for many object ( a group for example)\r\n   * @type number\r\n   * @default undefined\r\n   * @private\r\n   */\r\n  declare ownCaching?: boolean;\r\n\r\n  /**\r\n   * Private. indicates if the object inside a group is on a transformed context or not\r\n   * or is part of a larger cache for many object ( a group for example)\r\n   * @type boolean\r\n   * @default undefined\r\n   * @private\r\n   */\r\n  declare _transformDone?: boolean;\r\n\r\n  static ownDefaults = fabricObjectDefaultValues;\r\n\r\n  static getDefaults(): Record<string, any> {\r\n    return FabricObject.ownDefaults;\r\n  }\r\n\r\n  /**\r\n   * The class type.\r\n   * This is used for serialization and deserialization purposes and internally it can be used\r\n   * to identify classes.\r\n   * When we transform a class in a plain JS object we need a way to recognize which class it was,\r\n   * and the type is the way we do that. It has no other purposes and you should not give one.\r\n   * Hard to reach on instances and please do not use to drive instance's logic (this.constructor.type).\r\n   * To idenfity a class use instanceof class ( instanceof Rect ).\r\n   * We do not do that in fabricJS code because we want to try to have code splitting possible.\r\n   */\r\n  static type = 'FabricObject';\r\n\r\n  /**\r\n   * Legacy identifier of the class. Prefer using utils like isType or instanceOf\r\n   * Will be removed in fabric 7 or 8.\r\n   * The setter exists to avoid type errors in old code and possibly current deserialization code.\r\n   * @TODO add sustainable warning message\r\n   * @type string\r\n   * @deprecated\r\n   */\r\n  get type() {\r\n    const name = (this.constructor as typeof FabricObject).type;\r\n    if (name === 'FabricObject') {\r\n      return 'object';\r\n    }\r\n    return name.toLowerCase();\r\n  }\r\n\r\n  set type(value) {\r\n    log('warn', 'Setting type has no effect', value);\r\n  }\r\n\r\n  /**\r\n   * Constructor\r\n   * @param {Object} [options] Options object\r\n   */\r\n  constructor(options?: Props) {\r\n    super();\r\n    Object.assign(this, FabricObject.ownDefaults);\r\n    this.setOptions(options);\r\n  }\r\n\r\n  /**\r\n   * Create a the canvas used to keep the cached copy of the object\r\n   * @private\r\n   */\r\n  _createCacheCanvas() {\r\n    this._cacheCanvas = createCanvasElement();\r\n    this._cacheContext = this._cacheCanvas.getContext('2d');\r\n    this._updateCacheCanvas();\r\n    // if canvas gets created, is empty, so dirty.\r\n    this.dirty = true;\r\n  }\r\n\r\n  /**\r\n   * Limit the cache dimensions so that X * Y do not cross config.perfLimitSizeTotal\r\n   * and each side do not cross fabric.cacheSideLimit\r\n   * those numbers are configurable so that you can get as much detail as you want\r\n   * making bargain with performances.\r\n   * @param {Object} dims\r\n   * @param {Object} dims.width width of canvas\r\n   * @param {Object} dims.height height of canvas\r\n   * @param {Object} dims.zoomX zoomX zoom value to unscale the canvas before drawing cache\r\n   * @param {Object} dims.zoomY zoomY zoom value to unscale the canvas before drawing cache\r\n   * @return {Object}.width width of canvas\r\n   * @return {Object}.height height of canvas\r\n   * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\r\n   * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\r\n   */\r\n  _limitCacheSize(\r\n    dims: TSize & { zoomX: number; zoomY: number; capped: boolean } & any\r\n  ) {\r\n    const width = dims.width,\r\n      height = dims.height,\r\n      max = config.maxCacheSideLimit,\r\n      min = config.minCacheSideLimit;\r\n    if (\r\n      width <= max &&\r\n      height <= max &&\r\n      width * height <= config.perfLimitSizeTotal\r\n    ) {\r\n      if (width < min) {\r\n        dims.width = min;\r\n      }\r\n      if (height < min) {\r\n        dims.height = min;\r\n      }\r\n      return dims;\r\n    }\r\n    const ar = width / height,\r\n      [limX, limY] = cache.limitDimsByArea(ar),\r\n      x = capValue(min, limX, max),\r\n      y = capValue(min, limY, max);\r\n    if (width > x) {\r\n      dims.zoomX /= width / x;\r\n      dims.width = x;\r\n      dims.capped = true;\r\n    }\r\n    if (height > y) {\r\n      dims.zoomY /= height / y;\r\n      dims.height = y;\r\n      dims.capped = true;\r\n    }\r\n    return dims;\r\n  }\r\n\r\n  /**\r\n   * Return the dimension and the zoom level needed to create a cache canvas\r\n   * big enough to host the object to be cached.\r\n   * @private\r\n   * @return {Object}.x width of object to be cached\r\n   * @return {Object}.y height of object to be cached\r\n   * @return {Object}.width width of canvas\r\n   * @return {Object}.height height of canvas\r\n   * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\r\n   * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\r\n   */\r\n  _getCacheCanvasDimensions(): TCacheCanvasDimensions {\r\n    const objectScale = this.getTotalObjectScaling(),\r\n      // calculate dimensions without skewing\r\n      dim = this._getTransformedDimensions({ skewX: 0, skewY: 0 }),\r\n      neededX = (dim.x * objectScale.x) / this.scaleX,\r\n      neededY = (dim.y * objectScale.y) / this.scaleY;\r\n    return {\r\n      // for sure this ALIASING_LIMIT is slightly creating problem\r\n      // in situation in which the cache canvas gets an upper limit\r\n      // also objectScale contains already scaleX and scaleY\r\n      width: neededX + ALIASING_LIMIT,\r\n      height: neededY + ALIASING_LIMIT,\r\n      zoomX: objectScale.x,\r\n      zoomY: objectScale.y,\r\n      x: neededX,\r\n      y: neededY,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Update width and height of the canvas for cache\r\n   * returns true or false if canvas needed resize.\r\n   * @private\r\n   * @return {Boolean} true if the canvas has been resized\r\n   */\r\n  _updateCacheCanvas() {\r\n    const canvas = this._cacheCanvas!,\r\n      context = this._cacheContext,\r\n      dims = this._limitCacheSize(this._getCacheCanvasDimensions()),\r\n      minCacheSize = config.minCacheSideLimit,\r\n      width = dims.width,\r\n      height = dims.height,\r\n      zoomX = dims.zoomX,\r\n      zoomY = dims.zoomY,\r\n      dimensionsChanged = width !== canvas.width || height !== canvas.height,\r\n      zoomChanged = this.zoomX !== zoomX || this.zoomY !== zoomY;\r\n\r\n    if (!canvas || !context) {\r\n      return false;\r\n    }\r\n\r\n    let drawingWidth,\r\n      drawingHeight,\r\n      shouldRedraw = dimensionsChanged || zoomChanged,\r\n      additionalWidth = 0,\r\n      additionalHeight = 0,\r\n      shouldResizeCanvas = false;\r\n\r\n    if (dimensionsChanged) {\r\n      const canvasWidth = (this._cacheCanvas as HTMLCanvasElement).width,\r\n        canvasHeight = (this._cacheCanvas as HTMLCanvasElement).height,\r\n        sizeGrowing = width > canvasWidth || height > canvasHeight,\r\n        sizeShrinking =\r\n          (width < canvasWidth * 0.9 || height < canvasHeight * 0.9) &&\r\n          canvasWidth > minCacheSize &&\r\n          canvasHeight > minCacheSize;\r\n      shouldResizeCanvas = sizeGrowing || sizeShrinking;\r\n      if (\r\n        sizeGrowing &&\r\n        !dims.capped &&\r\n        (width > minCacheSize || height > minCacheSize)\r\n      ) {\r\n        additionalWidth = width * 0.1;\r\n        additionalHeight = height * 0.1;\r\n      }\r\n    }\r\n    if (isTextObject(this) && this.path) {\r\n      shouldRedraw = true;\r\n      shouldResizeCanvas = true;\r\n      // IMHO in those lines we are using zoomX and zoomY not the this version.\r\n      additionalWidth += this.getHeightOfLine(0) * this.zoomX!;\r\n      additionalHeight += this.getHeightOfLine(0) * this.zoomY!;\r\n    }\r\n    if (shouldRedraw) {\r\n      if (shouldResizeCanvas) {\r\n        canvas.width = Math.ceil(width + additionalWidth);\r\n        canvas.height = Math.ceil(height + additionalHeight);\r\n      } else {\r\n        context.setTransform(1, 0, 0, 1, 0, 0);\r\n        context.clearRect(0, 0, canvas.width, canvas.height);\r\n      }\r\n      drawingWidth = dims.x / 2;\r\n      drawingHeight = dims.y / 2;\r\n      this.cacheTranslationX =\r\n        Math.round(canvas.width / 2 - drawingWidth) + drawingWidth;\r\n      this.cacheTranslationY =\r\n        Math.round(canvas.height / 2 - drawingHeight) + drawingHeight;\r\n      context.translate(this.cacheTranslationX, this.cacheTranslationY);\r\n      context.scale(zoomX, zoomY);\r\n      this.zoomX = zoomX;\r\n      this.zoomY = zoomY;\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Sets object's properties from options, for class constructor only.\r\n   * Needs to be overridden for different defaults.\r\n   * @protected\r\n   * @param {Object} [options] Options object\r\n   */\r\n  protected setOptions(options: Record<string, any> = {}) {\r\n    this._setOptions(options);\r\n  }\r\n\r\n  /**\r\n   * Transforms context when rendering an object\r\n   * @param {CanvasRenderingContext2D} ctx Context\r\n   */\r\n  transform(ctx: CanvasRenderingContext2D) {\r\n    const needFullTransform =\r\n      (this.group && !this.group._transformDone) ||\r\n      (this.group && this.canvas && ctx === (this.canvas as Canvas).contextTop);\r\n    const m = this.calcTransformMatrix(!needFullTransform);\r\n    ctx.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\r\n  }\r\n\r\n  /**\r\n   * Returns an object representation of an instance\r\n   * @param {string[]} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n   * @return {Object} Object representation of an instance\r\n   */\r\n  toObject(propertiesToInclude: any[] = []): any {\r\n    const NUM_FRACTION_DIGITS = config.NUM_FRACTION_DIGITS,\r\n      clipPathData =\r\n        this.clipPath && !this.clipPath.excludeFromExport\r\n          ? {\r\n              ...this.clipPath.toObject(propertiesToInclude),\r\n              inverted: this.clipPath.inverted,\r\n              absolutePositioned: this.clipPath.absolutePositioned,\r\n            }\r\n          : null,\r\n      object = {\r\n        ...pick(this, propertiesToInclude as (keyof this)[]),\r\n        type: (this.constructor as typeof FabricObject).type,\r\n        version: VERSION,\r\n        originX: this.originX,\r\n        originY: this.originY,\r\n        left: toFixed(this.left, NUM_FRACTION_DIGITS),\r\n        top: toFixed(this.top, NUM_FRACTION_DIGITS),\r\n        width: toFixed(this.width, NUM_FRACTION_DIGITS),\r\n        height: toFixed(this.height, NUM_FRACTION_DIGITS),\r\n        fill: isSerializableFiller(this.fill)\r\n          ? this.fill.toObject()\r\n          : this.fill,\r\n        stroke: isSerializableFiller(this.stroke)\r\n          ? this.stroke.toObject()\r\n          : this.stroke,\r\n        strokeWidth: toFixed(this.strokeWidth, NUM_FRACTION_DIGITS),\r\n        strokeDashArray: this.strokeDashArray\r\n          ? this.strokeDashArray.concat()\r\n          : this.strokeDashArray,\r\n        strokeLineCap: this.strokeLineCap,\r\n        strokeDashOffset: this.strokeDashOffset,\r\n        strokeLineJoin: this.strokeLineJoin,\r\n        strokeUniform: this.strokeUniform,\r\n        strokeMiterLimit: toFixed(this.strokeMiterLimit, NUM_FRACTION_DIGITS),\r\n        scaleX: toFixed(this.scaleX, NUM_FRACTION_DIGITS),\r\n        scaleY: toFixed(this.scaleY, NUM_FRACTION_DIGITS),\r\n        angle: toFixed(this.angle, NUM_FRACTION_DIGITS),\r\n        flipX: this.flipX,\r\n        flipY: this.flipY,\r\n        opacity: toFixed(this.opacity, NUM_FRACTION_DIGITS),\r\n        shadow:\r\n          this.shadow && this.shadow.toObject\r\n            ? this.shadow.toObject()\r\n            : this.shadow,\r\n        visible: this.visible,\r\n        backgroundColor: this.backgroundColor,\r\n        fillRule: this.fillRule,\r\n        paintFirst: this.paintFirst,\r\n        globalCompositeOperation: this.globalCompositeOperation,\r\n        skewX: toFixed(this.skewX, NUM_FRACTION_DIGITS),\r\n        skewY: toFixed(this.skewY, NUM_FRACTION_DIGITS),\r\n        ...(clipPathData ? { clipPath: clipPathData } : null),\r\n      };\r\n\r\n    return !this.includeDefaultValues\r\n      ? this._removeDefaultValues(object)\r\n      : object;\r\n  }\r\n\r\n  /**\r\n   * Returns (dataless) object representation of an instance\r\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n   * @return {Object} Object representation of an instance\r\n   */\r\n  toDatalessObject(propertiesToInclude?: any[]): any {\r\n    // will be overwritten by subclasses\r\n    return this.toObject(propertiesToInclude);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {Object} object\r\n   */\r\n  _removeDefaultValues<T extends object>(object: T): Partial<T> {\r\n    // getDefaults() ( get from static ownDefaults ) should win over prototype since anyway they get assigned to instance\r\n    // ownDefault vs prototype is swappable only if you change all the fabric objects consistently.\r\n    const defaults = (this.constructor as typeof FabricObject).getDefaults();\r\n    const hasStaticDefaultValues = Object.keys(defaults).length > 0;\r\n    const baseValues = hasStaticDefaultValues\r\n      ? defaults\r\n      : Object.getPrototypeOf(this);\r\n\r\n    return pickBy(object, (value, key) => {\r\n      if (key === LEFT || key === TOP || key === 'type') {\r\n        return true;\r\n      }\r\n      const baseValue = baseValues[key];\r\n      return (\r\n        value !== baseValue &&\r\n        // basically a check for [] === []\r\n        !(\r\n          Array.isArray(value) &&\r\n          Array.isArray(baseValue) &&\r\n          value.length === 0 &&\r\n          baseValue.length === 0\r\n        )\r\n      );\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Returns a string representation of an instance\r\n   * @return {String}\r\n   */\r\n  toString() {\r\n    return `#<${(this.constructor as typeof FabricObject).type}>`;\r\n  }\r\n\r\n  /**\r\n   * Return the object scale factor counting also the group scaling\r\n   * @return {Point}\r\n   */\r\n  getObjectScaling() {\r\n    // if the object is a top level one, on the canvas, we go for simple aritmetic\r\n    // otherwise the complex method with angles will return approximations and decimals\r\n    // and will likely kill the cache when not needed\r\n    // https://github.com/fabricjs/fabric.js/issues/7157\r\n    if (!this.group) {\r\n      return new Point(Math.abs(this.scaleX), Math.abs(this.scaleY));\r\n    }\r\n    // if we are inside a group total zoom calculation is complex, we defer to generic matrices\r\n    const options = qrDecompose(this.calcTransformMatrix());\r\n    return new Point(Math.abs(options.scaleX), Math.abs(options.scaleY));\r\n  }\r\n\r\n  /**\r\n   * Return the object scale factor counting also the group scaling, zoom and retina\r\n   * @return {Object} object with scaleX and scaleY properties\r\n   */\r\n  getTotalObjectScaling() {\r\n    const scale = this.getObjectScaling();\r\n    if (this.canvas) {\r\n      const zoom = this.canvas.getZoom();\r\n      const retina = this.getCanvasRetinaScaling();\r\n      return scale.scalarMultiply(zoom * retina);\r\n    }\r\n    return scale;\r\n  }\r\n\r\n  /**\r\n   * Return the object opacity counting also the group property\r\n   * @return {Number}\r\n   */\r\n  getObjectOpacity() {\r\n    let opacity = this.opacity;\r\n    if (this.group) {\r\n      opacity *= this.group.getObjectOpacity();\r\n    }\r\n    return opacity;\r\n  }\r\n\r\n  /**\r\n   * Makes sure the scale is valid and modifies it if necessary\r\n   * @todo: this is a control action issue, not a geometry one\r\n   * @private\r\n   * @param {Number} value, unconstrained\r\n   * @return {Number} constrained value;\r\n   */\r\n  _constrainScale(value: number): number {\r\n    if (Math.abs(value) < this.minScaleLimit) {\r\n      if (value < 0) {\r\n        return -this.minScaleLimit;\r\n      } else {\r\n        return this.minScaleLimit;\r\n      }\r\n    } else if (value === 0) {\r\n      return 0.0001;\r\n    }\r\n    return value;\r\n  }\r\n\r\n  /**\r\n   * Handles setting values on the instance and handling internal side effects\r\n   * @protected\r\n   * @param {String} key\r\n   * @param {*} value\r\n   */\r\n  _set(key: string, value: any) {\r\n    if (key === SCALE_X || key === SCALE_Y) {\r\n      value = this._constrainScale(value);\r\n    }\r\n    if (key === SCALE_X && value < 0) {\r\n      this.flipX = !this.flipX;\r\n      value *= -1;\r\n    } else if (key === 'scaleY' && value < 0) {\r\n      this.flipY = !this.flipY;\r\n      value *= -1;\r\n      // i don't like this automatic initialization here\r\n    } else if (key === 'shadow' && value && !(value instanceof Shadow)) {\r\n      value = new Shadow(value);\r\n    }\r\n\r\n    const isChanged = this[key as keyof this] !== value;\r\n    this[key as keyof this] = value;\r\n\r\n    // invalidate caches\r\n    if (\r\n      isChanged &&\r\n      (this.constructor as typeof FabricObject).cacheProperties.includes(key)\r\n    ) {\r\n      this.dirty = true;\r\n    }\r\n    // a dirty child makes the parent dirty.\r\n    // but a non dirty child does not make the parent not dirty.\r\n    // the parent could be dirty for some other reason.\r\n    this.parent &&\r\n      (this.dirty ||\r\n        (isChanged &&\r\n          (this.constructor as typeof FabricObject).stateProperties.includes(\r\n            key\r\n          ))) &&\r\n      this.parent._set('dirty', true);\r\n\r\n    return this;\r\n  }\r\n\r\n  /*\r\n   * @private\r\n   * return if the object would be visible in rendering\r\n   * @memberOf FabricObject.prototype\r\n   * @return {Boolean}\r\n   */\r\n  isNotVisible() {\r\n    return (\r\n      this.opacity === 0 ||\r\n      (!this.width && !this.height && this.strokeWidth === 0) ||\r\n      !this.visible\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Renders an object on a specified context\r\n   * @param {CanvasRenderingContext2D} ctx Context to render on\r\n   */\r\n  render(ctx: CanvasRenderingContext2D) {\r\n    // do not render if width/height are zeros or object is not visible\r\n    if (this.isNotVisible()) {\r\n      return;\r\n    }\r\n    if (\r\n      this.canvas &&\r\n      this.canvas.skipOffscreen &&\r\n      !this.group &&\r\n      !this.isOnScreen()\r\n    ) {\r\n      return;\r\n    }\r\n    ctx.save();\r\n    this._setupCompositeOperation(ctx);\r\n    this.drawSelectionBackground(ctx);\r\n    this.transform(ctx);\r\n    this._setOpacity(ctx);\r\n    this._setShadow(ctx);\r\n    if (this.shouldCache()) {\r\n      this.renderCache();\r\n      (this as TCachedFabricObject).drawCacheOnCanvas(ctx);\r\n    } else {\r\n      this._removeCacheCanvas();\r\n      this.drawObject(ctx);\r\n      this.dirty = false;\r\n    }\r\n    ctx.restore();\r\n  }\r\n\r\n  drawSelectionBackground(ctx: CanvasRenderingContext2D) {\r\n    /* no op */\r\n  }\r\n\r\n  renderCache(options?: any) {\r\n    options = options || {};\r\n    if (!this._cacheCanvas || !this._cacheContext) {\r\n      this._createCacheCanvas();\r\n    }\r\n    if (this.isCacheDirty() && this._cacheContext) {\r\n      this.drawObject(this._cacheContext, options.forClipping);\r\n      this.dirty = false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove cacheCanvas and its dimensions from the objects\r\n   */\r\n  _removeCacheCanvas() {\r\n    this._cacheCanvas = undefined;\r\n    this._cacheContext = null;\r\n  }\r\n\r\n  /**\r\n   * return true if the object will draw a stroke\r\n   * Does not consider text styles. This is just a shortcut used at rendering time\r\n   * We want it to be an approximation and be fast.\r\n   * wrote to avoid extra caching, it has to return true when stroke happens,\r\n   * can guess when it will not happen at 100% chance, does not matter if it misses\r\n   * some use case where the stroke is invisible.\r\n   * @since 3.0.0\r\n   * @returns Boolean\r\n   */\r\n  hasStroke() {\r\n    return (\r\n      this.stroke && this.stroke !== 'transparent' && this.strokeWidth !== 0\r\n    );\r\n  }\r\n\r\n  /**\r\n   * return true if the object will draw a fill\r\n   * Does not consider text styles. This is just a shortcut used at rendering time\r\n   * We want it to be an approximation and be fast.\r\n   * wrote to avoid extra caching, it has to return true when fill happens,\r\n   * can guess when it will not happen at 100% chance, does not matter if it misses\r\n   * some use case where the fill is invisible.\r\n   * @since 3.0.0\r\n   * @returns Boolean\r\n   */\r\n  hasFill() {\r\n    return this.fill && this.fill !== 'transparent';\r\n  }\r\n\r\n  /**\r\n   * When set to `true`, force the object to have its own cache, even if it is inside a group\r\n   * it may be needed when your object behave in a particular way on the cache and always needs\r\n   * its own isolated canvas to render correctly.\r\n   * Created to be overridden\r\n   * since 1.7.12\r\n   * @returns Boolean\r\n   */\r\n  needsItsOwnCache() {\r\n    if (\r\n      this.paintFirst === STROKE &&\r\n      this.hasFill() &&\r\n      this.hasStroke() &&\r\n      !!this.shadow\r\n    ) {\r\n      return true;\r\n    }\r\n    if (this.clipPath) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Decide if the object should cache or not. Create its own cache level\r\n   * objectCaching is a global flag, wins over everything\r\n   * needsItsOwnCache should be used when the object drawing method requires\r\n   * a cache step. None of the fabric classes requires it.\r\n   * Generally you do not cache objects in groups because the group outside is cached.\r\n   * Read as: cache if is needed, or if the feature is enabled but we are not already caching.\r\n   * @return {Boolean}\r\n   */\r\n  shouldCache() {\r\n    this.ownCaching =\r\n      this.needsItsOwnCache() ||\r\n      (this.objectCaching && (!this.parent || !this.parent.isOnACache()));\r\n    return this.ownCaching;\r\n  }\r\n\r\n  /**\r\n   * Check if this object will cast a shadow with an offset.\r\n   * used by Group.shouldCache to know if child has a shadow recursively\r\n   * @return {Boolean}\r\n   * @deprecated\r\n   */\r\n  willDrawShadow() {\r\n    return (\r\n      !!this.shadow && (this.shadow.offsetX !== 0 || this.shadow.offsetY !== 0)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Execute the drawing operation for an object clipPath\r\n   * @param {CanvasRenderingContext2D} ctx Context to render on\r\n   * @param {FabricObject} clipPath\r\n   */\r\n  drawClipPathOnCache(\r\n    ctx: CanvasRenderingContext2D,\r\n    clipPath: TCachedFabricObject\r\n  ) {\r\n    ctx.save();\r\n    // DEBUG: uncomment this line, comment the following\r\n    // ctx.globalAlpha = 0.4\r\n    if (clipPath.inverted) {\r\n      ctx.globalCompositeOperation = 'destination-out';\r\n    } else {\r\n      ctx.globalCompositeOperation = 'destination-in';\r\n    }\r\n    //ctx.scale(1 / 2, 1 / 2);\r\n    if (clipPath.absolutePositioned) {\r\n      const m = invertTransform(this.calcTransformMatrix());\r\n      ctx.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\r\n    }\r\n    clipPath.transform(ctx);\r\n    ctx.scale(1 / clipPath.zoomX, 1 / clipPath.zoomY);\r\n    ctx.drawImage(\r\n      clipPath._cacheCanvas,\r\n      -clipPath.cacheTranslationX,\r\n      -clipPath.cacheTranslationY\r\n    );\r\n    ctx.restore();\r\n  }\r\n\r\n  /**\r\n   * Execute the drawing operation for an object on a specified context\r\n   * @param {CanvasRenderingContext2D} ctx Context to render on\r\n   * @param {boolean} forClipping apply clipping styles\r\n   */\r\n  drawObject(ctx: CanvasRenderingContext2D, forClipping?: boolean) {\r\n    const originalFill = this.fill,\r\n      originalStroke = this.stroke;\r\n    if (forClipping) {\r\n      this.fill = 'black';\r\n      this.stroke = '';\r\n      this._setClippingProperties(ctx);\r\n    } else {\r\n      this._renderBackground(ctx);\r\n    }\r\n    this._render(ctx);\r\n    this._drawClipPath(ctx, this.clipPath);\r\n    this.fill = originalFill;\r\n    this.stroke = originalStroke;\r\n  }\r\n\r\n  /**\r\n   * Prepare clipPath state and cache and draw it on instance's cache\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {FabricObject} clipPath\r\n   */\r\n  _drawClipPath(ctx: CanvasRenderingContext2D, clipPath?: FabricObject) {\r\n    if (!clipPath) {\r\n      return;\r\n    }\r\n    // needed to setup a couple of variables\r\n    // path canvas gets overridden with this one.\r\n    // TODO find a better solution?\r\n    clipPath._set('canvas', this.canvas);\r\n    clipPath.shouldCache();\r\n    clipPath._transformDone = true;\r\n    clipPath.renderCache({ forClipping: true });\r\n    this.drawClipPathOnCache(ctx, clipPath as TCachedFabricObject);\r\n  }\r\n\r\n  /**\r\n   * Paint the cached copy of the object on the target context.\r\n   * @param {CanvasRenderingContext2D} ctx Context to render on\r\n   */\r\n  drawCacheOnCanvas(this: TCachedFabricObject, ctx: CanvasRenderingContext2D) {\r\n    ctx.scale(1 / this.zoomX, 1 / this.zoomY);\r\n    ctx.drawImage(\r\n      this._cacheCanvas,\r\n      -this.cacheTranslationX,\r\n      -this.cacheTranslationY\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Check if cache is dirty\r\n   * @param {Boolean} skipCanvas skip canvas checks because this object is painted\r\n   * on parent canvas.\r\n   */\r\n  isCacheDirty(skipCanvas = false) {\r\n    if (this.isNotVisible()) {\r\n      return false;\r\n    }\r\n    const canvas = this._cacheCanvas;\r\n    const ctx = this._cacheContext;\r\n    if (canvas && ctx && !skipCanvas && this._updateCacheCanvas()) {\r\n      // in this case the context is already cleared.\r\n      return true;\r\n    } else {\r\n      if (this.dirty || (this.clipPath && this.clipPath.absolutePositioned)) {\r\n        if (canvas && ctx && !skipCanvas) {\r\n          ctx.save();\r\n          ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n          ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n          ctx.restore();\r\n        }\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Draws a background for the object big as its untransformed dimensions\r\n   * @private\r\n   * @param {CanvasRenderingContext2D} ctx Context to render on\r\n   */\r\n  _renderBackground(ctx: CanvasRenderingContext2D) {\r\n    if (!this.backgroundColor) {\r\n      return;\r\n    }\r\n    const dim = this._getNonTransformedDimensions();\r\n    ctx.fillStyle = this.backgroundColor;\r\n\r\n    ctx.fillRect(-dim.x / 2, -dim.y / 2, dim.x, dim.y);\r\n    // if there is background color no other shadows\r\n    // should be casted\r\n    this._removeShadow(ctx);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {CanvasRenderingContext2D} ctx Context to render on\r\n   */\r\n  _setOpacity(ctx: CanvasRenderingContext2D) {\r\n    if (this.group && !this.group._transformDone) {\r\n      ctx.globalAlpha = this.getObjectOpacity();\r\n    } else {\r\n      ctx.globalAlpha *= this.opacity;\r\n    }\r\n  }\r\n\r\n  _setStrokeStyles(\r\n    ctx: CanvasRenderingContext2D,\r\n    decl: Pick<\r\n      this,\r\n      | 'stroke'\r\n      | 'strokeWidth'\r\n      | 'strokeLineCap'\r\n      | 'strokeDashOffset'\r\n      | 'strokeLineJoin'\r\n      | 'strokeMiterLimit'\r\n    >\r\n  ) {\r\n    const stroke = decl.stroke;\r\n    if (stroke) {\r\n      ctx.lineWidth = decl.strokeWidth;\r\n      ctx.lineCap = decl.strokeLineCap;\r\n      ctx.lineDashOffset = decl.strokeDashOffset;\r\n      ctx.lineJoin = decl.strokeLineJoin;\r\n      ctx.miterLimit = decl.strokeMiterLimit;\r\n      if (isFiller(stroke)) {\r\n        if (\r\n          (stroke as Gradient<'linear'>).gradientUnits === 'percentage' ||\r\n          (stroke as Gradient<'linear'>).gradientTransform ||\r\n          (stroke as Pattern).patternTransform\r\n        ) {\r\n          // need to transform gradient in a pattern.\r\n          // this is a slow process. If you are hitting this codepath, and the object\r\n          // is not using caching, you should consider switching it on.\r\n          // we need a canvas as big as the current object caching canvas.\r\n          this._applyPatternForTransformedGradient(ctx, stroke);\r\n        } else {\r\n          // is a simple gradient or pattern\r\n          ctx.strokeStyle = stroke.toLive(ctx)!;\r\n          this._applyPatternGradientTransform(ctx, stroke);\r\n        }\r\n      } else {\r\n        // is a color\r\n        ctx.strokeStyle = decl.stroke as string;\r\n      }\r\n    }\r\n  }\r\n\r\n  _setFillStyles(ctx: CanvasRenderingContext2D, { fill }: Pick<this, 'fill'>) {\r\n    if (fill) {\r\n      if (isFiller(fill)) {\r\n        ctx.fillStyle = fill.toLive(ctx)!;\r\n        this._applyPatternGradientTransform(ctx, fill);\r\n      } else {\r\n        ctx.fillStyle = fill;\r\n      }\r\n    }\r\n  }\r\n\r\n  _setClippingProperties(ctx: CanvasRenderingContext2D) {\r\n    ctx.globalAlpha = 1;\r\n    ctx.strokeStyle = 'transparent';\r\n    ctx.fillStyle = '#000000';\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * Sets line dash\r\n   * @param {CanvasRenderingContext2D} ctx Context to set the dash line on\r\n   * @param {Array} dashArray array representing dashes\r\n   */\r\n  _setLineDash(ctx: CanvasRenderingContext2D, dashArray?: number[] | null) {\r\n    if (!dashArray || dashArray.length === 0) {\r\n      return;\r\n    }\r\n    // Spec requires the concatenation of two copies of the dash array when the number of elements is odd\r\n    if (1 & dashArray.length) {\r\n      dashArray.push(...dashArray);\r\n    }\r\n    ctx.setLineDash(dashArray);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {CanvasRenderingContext2D} ctx Context to render on\r\n   */\r\n  _setShadow(ctx: CanvasRenderingContext2D) {\r\n    if (!this.shadow) {\r\n      return;\r\n    }\r\n\r\n    const shadow = this.shadow,\r\n      canvas = this.canvas,\r\n      retinaScaling = this.getCanvasRetinaScaling(),\r\n      [sx, , , sy] = canvas?.viewportTransform || iMatrix,\r\n      multX = sx * retinaScaling,\r\n      multY = sy * retinaScaling,\r\n      scaling = shadow.nonScaling ? new Point(1, 1) : this.getObjectScaling();\r\n    ctx.shadowColor = shadow.color;\r\n    ctx.shadowBlur =\r\n      (shadow.blur *\r\n        config.browserShadowBlurConstant *\r\n        (multX + multY) *\r\n        (scaling.x + scaling.y)) /\r\n      4;\r\n    ctx.shadowOffsetX = shadow.offsetX * multX * scaling.x;\r\n    ctx.shadowOffsetY = shadow.offsetY * multY * scaling.y;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {CanvasRenderingContext2D} ctx Context to render on\r\n   */\r\n  _removeShadow(ctx: CanvasRenderingContext2D) {\r\n    if (!this.shadow) {\r\n      return;\r\n    }\r\n\r\n    ctx.shadowColor = '';\r\n    ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {CanvasRenderingContext2D} ctx Context to render on\r\n   * @param {TFiller} filler {@link Pattern} or {@link Gradient}\r\n   */\r\n  _applyPatternGradientTransform(\r\n    ctx: CanvasRenderingContext2D,\r\n    filler: TFiller\r\n  ) {\r\n    if (!isFiller(filler)) {\r\n      return { offsetX: 0, offsetY: 0 };\r\n    }\r\n    const t =\r\n      (filler as Gradient<'linear'>).gradientTransform ||\r\n      (filler as Pattern).patternTransform;\r\n    const offsetX = -this.width / 2 + filler.offsetX || 0,\r\n      offsetY = -this.height / 2 + filler.offsetY || 0;\r\n\r\n    if ((filler as Gradient<'linear'>).gradientUnits === 'percentage') {\r\n      ctx.transform(this.width, 0, 0, this.height, offsetX, offsetY);\r\n    } else {\r\n      ctx.transform(1, 0, 0, 1, offsetX, offsetY);\r\n    }\r\n    if (t) {\r\n      ctx.transform(t[0], t[1], t[2], t[3], t[4], t[5]);\r\n    }\r\n    return { offsetX: offsetX, offsetY: offsetY };\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {CanvasRenderingContext2D} ctx Context to render on\r\n   */\r\n  _renderPaintInOrder(ctx: CanvasRenderingContext2D) {\r\n    if (this.paintFirst === STROKE) {\r\n      this._renderStroke(ctx);\r\n      this._renderFill(ctx);\r\n    } else {\r\n      this._renderFill(ctx);\r\n      this._renderStroke(ctx);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * function that actually render something on the context.\r\n   * empty here to allow Obects to work on tests to benchmark fabric functionalites\r\n   * not related to rendering\r\n   * @param {CanvasRenderingContext2D} ctx Context to render on\r\n   */\r\n  _render(ctx: CanvasRenderingContext2D) {\r\n    // placeholder to be overridden\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {CanvasRenderingContext2D} ctx Context to render on\r\n   */\r\n  _renderFill(ctx: CanvasRenderingContext2D) {\r\n    if (!this.fill) {\r\n      return;\r\n    }\r\n\r\n    ctx.save();\r\n    this._setFillStyles(ctx, this);\r\n    if (this.fillRule === 'evenodd') {\r\n      ctx.fill('evenodd');\r\n    } else {\r\n      ctx.fill();\r\n    }\r\n    ctx.restore();\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {CanvasRenderingContext2D} ctx Context to render on\r\n   */\r\n  _renderStroke(ctx: CanvasRenderingContext2D) {\r\n    if (!this.stroke || this.strokeWidth === 0) {\r\n      return;\r\n    }\r\n\r\n    if (this.shadow && !this.shadow.affectStroke) {\r\n      this._removeShadow(ctx);\r\n    }\r\n\r\n    ctx.save();\r\n    if (this.strokeUniform) {\r\n      const scaling = this.getObjectScaling();\r\n      ctx.scale(1 / scaling.x, 1 / scaling.y);\r\n    }\r\n    this._setLineDash(ctx, this.strokeDashArray);\r\n    this._setStrokeStyles(ctx, this);\r\n    ctx.stroke();\r\n    ctx.restore();\r\n  }\r\n\r\n  /**\r\n   * This function try to patch the missing gradientTransform on canvas gradients.\r\n   * transforming a context to transform the gradient, is going to transform the stroke too.\r\n   * we want to transform the gradient but not the stroke operation, so we create\r\n   * a transformed gradient on a pattern and then we use the pattern instead of the gradient.\r\n   * this method has drawbacks: is slow, is in low resolution, needs a patch for when the size\r\n   * is limited.\r\n   * @private\r\n   * @param {CanvasRenderingContext2D} ctx Context to render on\r\n   * @param {Gradient} filler\r\n   */\r\n  _applyPatternForTransformedGradient(\r\n    ctx: CanvasRenderingContext2D,\r\n    filler: TFiller\r\n  ) {\r\n    const dims = this._limitCacheSize(this._getCacheCanvasDimensions()),\r\n      pCanvas = createCanvasElement(),\r\n      retinaScaling = this.getCanvasRetinaScaling(),\r\n      width = dims.x / this.scaleX / retinaScaling,\r\n      height = dims.y / this.scaleY / retinaScaling;\r\n    // in case width and height are less than 1px, we have to round up.\r\n    // since the pattern is no-repeat, this is fine\r\n    pCanvas.width = Math.ceil(width);\r\n    pCanvas.height = Math.ceil(height);\r\n    const pCtx = pCanvas.getContext('2d');\r\n    if (!pCtx) {\r\n      return;\r\n    }\r\n    pCtx.beginPath();\r\n    pCtx.moveTo(0, 0);\r\n    pCtx.lineTo(width, 0);\r\n    pCtx.lineTo(width, height);\r\n    pCtx.lineTo(0, height);\r\n    pCtx.closePath();\r\n    pCtx.translate(width / 2, height / 2);\r\n    pCtx.scale(\r\n      dims.zoomX / this.scaleX / retinaScaling,\r\n      dims.zoomY / this.scaleY / retinaScaling\r\n    );\r\n    this._applyPatternGradientTransform(pCtx, filler);\r\n    pCtx.fillStyle = filler.toLive(ctx)!;\r\n    pCtx.fill();\r\n    ctx.translate(\r\n      -this.width / 2 - this.strokeWidth / 2,\r\n      -this.height / 2 - this.strokeWidth / 2\r\n    );\r\n    ctx.scale(\r\n      (retinaScaling * this.scaleX) / dims.zoomX,\r\n      (retinaScaling * this.scaleY) / dims.zoomY\r\n    );\r\n    ctx.strokeStyle = pCtx.createPattern(pCanvas, 'no-repeat') ?? '';\r\n  }\r\n\r\n  /**\r\n   * This function is an helper for svg import. it returns the center of the object in the svg\r\n   * untransformed coordinates\r\n   * @private\r\n   * @return {Point} center point from element coordinates\r\n   */\r\n  _findCenterFromElement() {\r\n    return new Point(this.left + this.width / 2, this.top + this.height / 2);\r\n  }\r\n\r\n  /**\r\n   * Clones an instance.\r\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n   * @returns {Promise<FabricObject>}\r\n   */\r\n  clone(propertiesToInclude?: string[]): Promise<this> {\r\n    const objectForm = this.toObject(propertiesToInclude);\r\n    return (this.constructor as typeof FabricObject).fromObject(\r\n      objectForm\r\n    ) as unknown as Promise<this>;\r\n  }\r\n\r\n  /**\r\n   * Creates an instance of Image out of an object\r\n   * makes use of toCanvasElement.\r\n   * Once this method was based on toDataUrl and loadImage, so it also had a quality\r\n   * and format option. toCanvasElement is faster and produce no loss of quality.\r\n   * If you need to get a real Jpeg or Png from an object, using toDataURL is the right way to do it.\r\n   * toCanvasElement and then toBlob from the obtained canvas is also a good option.\r\n   * @todo fix the export type, it could not be Image but the type that getClass return for 'image'.\r\n   * @param {ObjectToCanvasElementOptions} [options] for clone as image, passed to toDataURL\r\n   * @param {Number} [options.multiplier=1] Multiplier to scale by\r\n   * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\r\n   * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\r\n   * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\r\n   * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\r\n   * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 1.6.4\r\n   * @param {Boolean} [options.withoutTransform] Remove current object transform ( no scale , no angle, no flip, no skew ). Introduced in 2.3.4\r\n   * @param {Boolean} [options.withoutShadow] Remove current object shadow. Introduced in 2.4.2\r\n   * @return {FabricImage} Object cloned as image.\r\n   */\r\n  cloneAsImage(options: ObjectToCanvasElementOptions): FabricImage {\r\n    const canvasEl = this.toCanvasElement(options);\r\n    // TODO: how to import Image w/o an import cycle?\r\n    const ImageClass = classRegistry.getClass<typeof FabricImage>('image');\r\n    return new ImageClass(canvasEl);\r\n  }\r\n\r\n  /**\r\n   * Converts an object into a HTMLCanvas element\r\n   * @param {ObjectToCanvasElementOptions} options Options object\r\n   * @param {Number} [options.multiplier=1] Multiplier to scale by\r\n   * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\r\n   * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\r\n   * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\r\n   * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\r\n   * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 1.6.4\r\n   * @param {Boolean} [options.withoutTransform] Remove current object transform ( no scale , no angle, no flip, no skew ). Introduced in 2.3.4\r\n   * @param {Boolean} [options.withoutShadow] Remove current object shadow. Introduced in 2.4.2\r\n   * @param {Boolean} [options.viewportTransform] Account for canvas viewport transform\r\n   * @param {(el?: HTMLCanvasElement) => StaticCanvas} [options.canvasProvider] Create the output canvas\r\n   * @return {HTMLCanvasElement} Returns DOM element <canvas> with the FabricObject\r\n   */\r\n  toCanvasElement(options: ObjectToCanvasElementOptions = {}) {\r\n    const origParams = saveObjectTransform(this),\r\n      originalGroup = this.group,\r\n      originalShadow = this.shadow,\r\n      abs = Math.abs,\r\n      retinaScaling = options.enableRetinaScaling ? getDevicePixelRatio() : 1,\r\n      multiplier = (options.multiplier || 1) * retinaScaling,\r\n      canvasProvider: (el: HTMLCanvasElement) => StaticCanvas =\r\n        options.canvasProvider ||\r\n        ((el: HTMLCanvasElement) =>\r\n          new StaticCanvas(el, {\r\n            enableRetinaScaling: false,\r\n            renderOnAddRemove: false,\r\n            skipOffscreen: false,\r\n          }));\r\n    delete this.group;\r\n    if (options.withoutTransform) {\r\n      resetObjectTransform(this);\r\n    }\r\n    if (options.withoutShadow) {\r\n      this.shadow = null;\r\n    }\r\n    if (options.viewportTransform) {\r\n      sendObjectToPlane(this, this.getViewportTransform());\r\n    }\r\n\r\n    this.setCoords();\r\n    const el = createCanvasElement(),\r\n      boundingRect = this.getBoundingRect(),\r\n      shadow = this.shadow,\r\n      shadowOffset = new Point();\r\n\r\n    if (shadow) {\r\n      const shadowBlur = shadow.blur;\r\n      const scaling = shadow.nonScaling\r\n        ? new Point(1, 1)\r\n        : this.getObjectScaling();\r\n      // consider non scaling shadow.\r\n      shadowOffset.x =\r\n        2 * Math.round(abs(shadow.offsetX) + shadowBlur) * abs(scaling.x);\r\n      shadowOffset.y =\r\n        2 * Math.round(abs(shadow.offsetY) + shadowBlur) * abs(scaling.y);\r\n    }\r\n    const width = boundingRect.width + shadowOffset.x,\r\n      height = boundingRect.height + shadowOffset.y;\r\n    // if the current width/height is not an integer\r\n    // we need to make it so.\r\n    el.width = Math.ceil(width);\r\n    el.height = Math.ceil(height);\r\n    const canvas = canvasProvider(el);\r\n    if (options.format === 'jpeg') {\r\n      canvas.backgroundColor = '#fff';\r\n    }\r\n    this.setPositionByOrigin(\r\n      new Point(canvas.width / 2, canvas.height / 2),\r\n      CENTER,\r\n      CENTER\r\n    );\r\n    const originalCanvas = this.canvas;\r\n    // static canvas and canvas have both an array of InteractiveObjects\r\n    // @ts-expect-error this needs to be fixed somehow, or ignored globally\r\n    canvas._objects = [this];\r\n    this.set('canvas', canvas);\r\n    this.setCoords();\r\n    const canvasEl = canvas.toCanvasElement(multiplier || 1, options);\r\n    this.set('canvas', originalCanvas);\r\n    this.shadow = originalShadow;\r\n    if (originalGroup) {\r\n      this.group = originalGroup;\r\n    }\r\n    this.set(origParams);\r\n    this.setCoords();\r\n    // canvas.dispose will call image.dispose that will nullify the elements\r\n    // since this canvas is a simple element for the process, we remove references\r\n    // to objects in this way in order to avoid object trashing.\r\n    canvas._objects = [];\r\n    // since render has settled it is safe to destroy canvas\r\n    canvas.destroy();\r\n    return canvasEl;\r\n  }\r\n\r\n  /**\r\n   * Converts an object into a data-url-like string\r\n   * @param {Object} options Options object\r\n   * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\r\n   * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\r\n   * @param {Number} [options.multiplier=1] Multiplier to scale by\r\n   * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\r\n   * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\r\n   * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\r\n   * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\r\n   * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 1.6.4\r\n   * @param {Boolean} [options.withoutTransform] Remove current object transform ( no scale , no angle, no flip, no skew ). Introduced in 2.3.4\r\n   * @param {Boolean} [options.withoutShadow] Remove current object shadow. Introduced in 2.4.2\r\n   * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\r\n   */\r\n  toDataURL(options: toDataURLOptions = {}) {\r\n    return toDataURL(\r\n      this.toCanvasElement(options),\r\n      options.format || 'png',\r\n      options.quality || 1\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Returns true if any of the specified types is identical to the type of an instance\r\n   * @param {String} type Type to check against\r\n   * @return {Boolean}\r\n   */\r\n  isType(...types: string[]) {\r\n    return (\r\n      types.includes((this.constructor as typeof FabricObject).type) ||\r\n      types.includes(this.type)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Returns complexity of an instance\r\n   * @return {Number} complexity of this instance (is 1 unless subclassed)\r\n   */\r\n  complexity() {\r\n    return 1;\r\n  }\r\n\r\n  /**\r\n   * Returns a JSON representation of an instance\r\n   * @return {Object} JSON\r\n   */\r\n  toJSON() {\r\n    // delegate, not alias\r\n    return this.toObject();\r\n  }\r\n\r\n  /**\r\n   * Sets \"angle\" of an instance with centered rotation\r\n   * @param {TDegree} angle Angle value (in degrees)\r\n   */\r\n  rotate(angle: TDegree) {\r\n    const { centeredRotation, originX, originY } = this;\r\n\r\n    if (centeredRotation) {\r\n      const { x, y } = this.getRelativeCenterPoint();\r\n      this.originX = CENTER;\r\n      this.originY = CENTER;\r\n      this.left = x;\r\n      this.top = y;\r\n    }\r\n\r\n    this.set('angle', angle);\r\n\r\n    if (centeredRotation) {\r\n      const { x, y } = this.translateToOriginPoint(\r\n        this.getRelativeCenterPoint(),\r\n        originX,\r\n        originY\r\n      );\r\n      this.left = x;\r\n      this.top = y;\r\n      this.originX = originX;\r\n      this.originY = originY;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This callback function is called by the parent group of an object every\r\n   * time a non-delegated property changes on the group. It is passed the key\r\n   * and value as parameters. Not adding in this function's signature to avoid\r\n   * Travis build error about unused variables.\r\n   */\r\n  setOnGroup() {\r\n    // implemented by sub-classes, as needed.\r\n  }\r\n\r\n  /**\r\n   * Sets canvas globalCompositeOperation for specific object\r\n   * custom composition operation for the particular object can be specified using globalCompositeOperation property\r\n   * @param {CanvasRenderingContext2D} ctx Rendering canvas context\r\n   */\r\n  _setupCompositeOperation(ctx: CanvasRenderingContext2D) {\r\n    if (this.globalCompositeOperation) {\r\n      ctx.globalCompositeOperation = this.globalCompositeOperation;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * cancel instance's running animations\r\n   * override if necessary to dispose artifacts such as `clipPath`\r\n   */\r\n  dispose() {\r\n    runningAnimations.cancelByTarget(this);\r\n    this.off();\r\n    this._set('canvas', undefined);\r\n    // clear caches\r\n    this._cacheCanvas && getEnv().dispose(this._cacheCanvas);\r\n    this._cacheCanvas = undefined;\r\n    this._cacheContext = null;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Function} klass\r\n   * @param {object} object\r\n   * @param {object} [options]\r\n   * @param {string} [options.extraParam] property to pass as first argument to the constructor\r\n   * @param {AbortSignal} [options.signal] handle aborting, see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\r\n   * @returns {Promise<FabricObject>}\r\n   */\r\n  static _fromObject<S extends FabricObject>(\r\n    { type, ...object }: Record<string, unknown>,\r\n    { extraParam, ...options }: Abortable & { extraParam?: string } = {}\r\n  ): Promise<S> {\r\n    return enlivenObjectEnlivables<any>(cloneDeep(object), options).then(\r\n      (enlivedMap) => {\r\n        const allOptions = { ...options, ...enlivedMap };\r\n        // from the resulting enlived options, extract options.extraParam to arg0\r\n        // to avoid accidental overrides later\r\n        if (extraParam) {\r\n          const { [extraParam]: arg0, ...rest } = allOptions;\r\n          // @ts-expect-error different signature\r\n          return new this(arg0, rest);\r\n        } else {\r\n          return new this(allOptions);\r\n        }\r\n      }\r\n    ) as Promise<S>;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {object} object\r\n   * @param {object} [options]\r\n   * @param {AbortSignal} [options.signal] handle aborting, see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\r\n   * @returns {Promise<FabricObject>}\r\n   */\r\n  static fromObject<T extends TOptions<SerializedObjectProps>>(\r\n    object: T,\r\n    options?: Abortable\r\n  ) {\r\n    return this._fromObject(object, options);\r\n  }\r\n}\r\n\r\nclassRegistry.setClass(FabricObject);\r\nclassRegistry.setClass(FabricObject, 'object');\r\n","import type {\r\n  TModificationEvents,\r\n  Transform,\r\n  TransformActionHandler,\r\n} from '../EventTypeDefs';\r\nimport { fireEvent } from './fireEvent';\r\nimport { commonEventInfo } from './util';\r\n\r\n/**\r\n * Wrap an action handler with firing an event if the action is performed\r\n * @param {Function} actionHandler the function to wrap\r\n * @return {Function} a function with an action handler signature\r\n */\r\nexport const wrapWithFireEvent = <T extends Transform>(\r\n  eventName: TModificationEvents,\r\n  actionHandler: TransformActionHandler<T>\r\n) => {\r\n  return ((eventData, transform, x, y) => {\r\n    const actionPerformed = actionHandler(eventData, transform, x, y);\r\n    if (actionPerformed) {\r\n      fireEvent(eventName, commonEventInfo(eventData, transform, x, y));\r\n    }\r\n    return actionPerformed;\r\n  }) as TransformActionHandler<T>;\r\n};\r\n","import type { Transform, TransformActionHandler } from '../EventTypeDefs';\r\n\r\n/**\r\n * Wrap an action handler with saving/restoring object position on the transform.\r\n * this is the code that permits to objects to keep their position while transforming.\r\n * @param {Function} actionHandler the function to wrap\r\n * @return {Function} a function with an action handler signature\r\n */\r\nexport function wrapWithFixedAnchor<T extends Transform>(\r\n  actionHandler: TransformActionHandler<T>\r\n) {\r\n  return ((eventData, transform, x, y) => {\r\n    const { target, originX, originY } = transform,\r\n      centerPoint = target.getRelativeCenterPoint(),\r\n      constraint = target.translateToOriginPoint(centerPoint, originX, originY),\r\n      actionPerformed = actionHandler(eventData, transform, x, y);\r\n    // flipping requires to change the transform origin, so we read from the mutated transform\r\n    // instead of leveraging the one destructured before\r\n    target.setPositionByOrigin(\r\n      constraint,\r\n      transform.originX,\r\n      transform.originY\r\n    );\r\n    return actionPerformed;\r\n  }) as TransformActionHandler<T>;\r\n}\r\n","import type { TransformActionHandler } from '../EventTypeDefs';\r\nimport { CENTER, LEFT, RESIZING, RIGHT } from '../constants';\r\nimport { resolveOrigin } from '../util/misc/resolveOrigin';\r\nimport { getLocalPoint, isTransformCentered } from './util';\r\nimport { wrapWithFireEvent } from './wrapWithFireEvent';\r\nimport { wrapWithFixedAnchor } from './wrapWithFixedAnchor';\r\n\r\n/**\r\n * Action handler to change object's width\r\n * Needs to be wrapped with `wrapWithFixedAnchor` to be effective\r\n * @param {Event} eventData javascript event that is doing the transform\r\n * @param {Object} transform javascript object containing a series of information around the current transform\r\n * @param {number} x current mouse x position, canvas normalized\r\n * @param {number} y current mouse y position, canvas normalized\r\n * @return {Boolean} true if some change happened\r\n */\r\nexport const changeObjectWidth: TransformActionHandler = (\r\n  eventData,\r\n  transform,\r\n  x,\r\n  y\r\n) => {\r\n  const localPoint = getLocalPoint(\r\n    transform,\r\n    transform.originX,\r\n    transform.originY,\r\n    x,\r\n    y\r\n  );\r\n  //  make sure the control changes width ONLY from it's side of target\r\n  if (\r\n    resolveOrigin(transform.originX) === resolveOrigin(CENTER) ||\r\n    (resolveOrigin(transform.originX) === resolveOrigin(RIGHT) &&\r\n      localPoint.x < 0) ||\r\n    (resolveOrigin(transform.originX) === resolveOrigin(LEFT) &&\r\n      localPoint.x > 0)\r\n  ) {\r\n    const { target } = transform,\r\n      strokePadding =\r\n        target.strokeWidth / (target.strokeUniform ? target.scaleX : 1),\r\n      multiplier = isTransformCentered(transform) ? 2 : 1,\r\n      oldWidth = target.width,\r\n      newWidth = Math.ceil(\r\n        Math.abs((localPoint.x * multiplier) / target.scaleX) - strokePadding\r\n      );\r\n    target.set('width', Math.max(newWidth, 0));\r\n    //  check against actual target width in case `newWidth` was rejected\r\n    return oldWidth !== target.width;\r\n  }\r\n  return false;\r\n};\r\n\r\nexport const changeWidth = wrapWithFireEvent(\r\n  RESIZING,\r\n  wrapWithFixedAnchor(changeObjectWidth)\r\n);\r\n","import { FILL, STROKE, twoMathPi } from '../constants';\r\nimport type { InteractiveFabricObject } from '../shapes/Object/InteractiveObject';\r\nimport { degreesToRadians } from '../util/misc/radiansDegreesConversion';\r\nimport type { Control } from './Control';\r\n\r\nexport type ControlRenderingStyleOverride = Partial<\r\n  Pick<\r\n    InteractiveFabricObject,\r\n    | 'cornerStyle'\r\n    | 'cornerSize'\r\n    | 'cornerColor'\r\n    | 'cornerStrokeColor'\r\n    | 'cornerDashArray'\r\n    | 'transparentCorners'\r\n  >\r\n>;\r\n\r\nexport type ControlRenderer = (\r\n  ctx: CanvasRenderingContext2D,\r\n  left: number,\r\n  top: number,\r\n  styleOverride: ControlRenderingStyleOverride,\r\n  fabricObject: InteractiveFabricObject\r\n) => void;\r\n\r\n/**\r\n * Render a round control, as per fabric features.\r\n * This function is written to respect object properties like transparentCorners, cornerSize\r\n * cornerColor, cornerStrokeColor\r\n * plus the addition of offsetY and offsetX.\r\n * @param {CanvasRenderingContext2D} ctx context to render on\r\n * @param {Number} left x coordinate where the control center should be\r\n * @param {Number} top y coordinate where the control center should be\r\n * @param {Object} styleOverride override for FabricObject controls style\r\n * @param {FabricObject} fabricObject the fabric object for which we are rendering controls\r\n */\r\nexport function renderCircleControl(\r\n  this: Control,\r\n  ctx: CanvasRenderingContext2D,\r\n  left: number,\r\n  top: number,\r\n  styleOverride: ControlRenderingStyleOverride,\r\n  fabricObject: InteractiveFabricObject\r\n) {\r\n  styleOverride = styleOverride || {};\r\n  const xSize =\r\n      this.sizeX || styleOverride.cornerSize || fabricObject.cornerSize,\r\n    ySize = this.sizeY || styleOverride.cornerSize || fabricObject.cornerSize,\r\n    transparentCorners =\r\n      typeof styleOverride.transparentCorners !== 'undefined'\r\n        ? styleOverride.transparentCorners\r\n        : fabricObject.transparentCorners,\r\n    methodName = transparentCorners ? STROKE : FILL,\r\n    stroke =\r\n      !transparentCorners &&\r\n      (styleOverride.cornerStrokeColor || fabricObject.cornerStrokeColor);\r\n  let myLeft = left,\r\n    myTop = top,\r\n    size;\r\n  ctx.save();\r\n  ctx.fillStyle = styleOverride.cornerColor || fabricObject.cornerColor || '';\r\n  ctx.strokeStyle =\r\n    styleOverride.cornerStrokeColor || fabricObject.cornerStrokeColor || '';\r\n  // TODO: use proper ellipse code.\r\n  if (xSize > ySize) {\r\n    size = xSize;\r\n    ctx.scale(1.0, ySize / xSize);\r\n    myTop = (top * xSize) / ySize;\r\n  } else if (ySize > xSize) {\r\n    size = ySize;\r\n    ctx.scale(xSize / ySize, 1.0);\r\n    myLeft = (left * ySize) / xSize;\r\n  } else {\r\n    size = xSize;\r\n  }\r\n  // this is still wrong\r\n  ctx.lineWidth = 1;\r\n  ctx.beginPath();\r\n  ctx.arc(myLeft, myTop, size / 2, 0, twoMathPi, false);\r\n  ctx[methodName]();\r\n  if (stroke) {\r\n    ctx.stroke();\r\n  }\r\n  ctx.restore();\r\n}\r\n\r\n/**\r\n * Render a square control, as per fabric features.\r\n * This function is written to respect object properties like transparentCorners, cornerSize\r\n * cornerColor, cornerStrokeColor\r\n * plus the addition of offsetY and offsetX.\r\n * @param {CanvasRenderingContext2D} ctx context to render on\r\n * @param {Number} left x coordinate where the control center should be\r\n * @param {Number} top y coordinate where the control center should be\r\n * @param {Object} styleOverride override for FabricObject controls style\r\n * @param {FabricObject} fabricObject the fabric object for which we are rendering controls\r\n */\r\nexport function renderSquareControl(\r\n  this: Control,\r\n  ctx: CanvasRenderingContext2D,\r\n  left: number,\r\n  top: number,\r\n  styleOverride: ControlRenderingStyleOverride,\r\n  fabricObject: InteractiveFabricObject\r\n) {\r\n  styleOverride = styleOverride || {};\r\n  const xSize =\r\n      this.sizeX || styleOverride.cornerSize || fabricObject.cornerSize,\r\n    ySize = this.sizeY || styleOverride.cornerSize || fabricObject.cornerSize,\r\n    transparentCorners =\r\n      typeof styleOverride.transparentCorners !== 'undefined'\r\n        ? styleOverride.transparentCorners\r\n        : fabricObject.transparentCorners,\r\n    methodName = transparentCorners ? STROKE : FILL,\r\n    stroke =\r\n      !transparentCorners &&\r\n      (styleOverride.cornerStrokeColor || fabricObject.cornerStrokeColor),\r\n    xSizeBy2 = xSize / 2,\r\n    ySizeBy2 = ySize / 2;\r\n  ctx.save();\r\n  ctx.fillStyle = styleOverride.cornerColor || fabricObject.cornerColor || '';\r\n  ctx.strokeStyle =\r\n    styleOverride.cornerStrokeColor || fabricObject.cornerStrokeColor || '';\r\n  // this is still wrong\r\n  ctx.lineWidth = 1;\r\n  ctx.translate(left, top);\r\n  //  angle is relative to canvas plane\r\n  const angle = fabricObject.getTotalAngle();\r\n  ctx.rotate(degreesToRadians(angle));\r\n  // this does not work, and fixed with ( && ) does not make sense.\r\n  // to have real transparent corners we need the controls on upperCanvas\r\n  // transparentCorners || ctx.clearRect(-xSizeBy2, -ySizeBy2, xSize, ySize);\r\n  ctx[`${methodName}Rect`](-xSizeBy2, -ySizeBy2, xSize, ySize);\r\n  if (stroke) {\r\n    ctx.strokeRect(-xSizeBy2, -ySizeBy2, xSize, ySize);\r\n  }\r\n  ctx.restore();\r\n}\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport type {\r\n  ControlActionHandler,\r\n  TPointerEvent,\r\n  TransformActionHandler,\r\n} from '../EventTypeDefs';\r\nimport { Intersection } from '../Intersection';\r\nimport { Point } from '../Point';\r\nimport { SCALE } from '../constants';\r\nimport type { InteractiveFabricObject } from '../shapes/Object/InteractiveObject';\r\nimport type { TCornerPoint, TDegree, TMat2D } from '../typedefs';\r\nimport {\r\n  createRotateMatrix,\r\n  createScaleMatrix,\r\n  createTranslateMatrix,\r\n  multiplyTransformMatrixArray,\r\n} from '../util/misc/matrix';\r\nimport type { ControlRenderingStyleOverride } from './controlRendering';\r\nimport { renderCircleControl, renderSquareControl } from './controlRendering';\r\n\r\nexport class Control {\r\n  /**\r\n   * keep track of control visibility.\r\n   * mainly for backward compatibility.\r\n   * if you do not want to see a control, you can remove it\r\n   * from the control set.\r\n   * @type {Boolean}\r\n   * @default true\r\n   */\r\n  visible = true;\r\n\r\n  /**\r\n   * Name of the action that the control will likely execute.\r\n   * This is optional. FabricJS uses to identify what the user is doing for some\r\n   * extra optimizations. If you are writing a custom control and you want to know\r\n   * somewhere else in the code what is going on, you can use this string here.\r\n   * you can also provide a custom getActionName if your control run multiple actions\r\n   * depending on some external state.\r\n   * default to scale since is the most common, used on 4 corners by default\r\n   * @type {String}\r\n   * @default 'scale'\r\n   */\r\n  actionName = SCALE;\r\n\r\n  /**\r\n   * Drawing angle of the control.\r\n   * NOT used for now, but name marked as needed for internal logic\r\n   * example: to reuse the same drawing function for different rotated controls\r\n   * @type {Number}\r\n   * @default 0\r\n   */\r\n  angle = 0;\r\n\r\n  /**\r\n   * Relative position of the control. X\r\n   * 0,0 is the center of the Object, while -0.5 (left) or 0.5 (right) are the extremities\r\n   * of the bounding box.\r\n   * @type {Number}\r\n   * @default 0\r\n   */\r\n  x = 0;\r\n\r\n  /**\r\n   * Relative position of the control. Y\r\n   * 0,0 is the center of the Object, while -0.5 (top) or 0.5 (bottom) are the extremities\r\n   * of the bounding box.\r\n   * @type {Number}\r\n   * @default 0\r\n   */\r\n  y = 0;\r\n\r\n  /**\r\n   * Horizontal offset of the control from the defined position. In pixels\r\n   * Positive offset moves the control to the right, negative to the left.\r\n   * It used when you want to have position of control that does not scale with\r\n   * the bounding box. Example: rotation control is placed at x:0, y: 0.5 on\r\n   * the boundind box, with an offset of 30 pixels vertically. Those 30 pixels will\r\n   * stay 30 pixels no matter how the object is big. Another example is having 2\r\n   * controls in the corner, that stay in the same position when the object scale.\r\n   * of the bounding box.\r\n   * @type {Number}\r\n   * @default 0\r\n   */\r\n  offsetX = 0;\r\n\r\n  /**\r\n   * Vertical offset of the control from the defined position. In pixels\r\n   * Positive offset moves the control to the bottom, negative to the top.\r\n   * @type {Number}\r\n   * @default 0\r\n   */\r\n  offsetY = 0;\r\n\r\n  /**\r\n   * Sets the length of the control. If null, defaults to object's cornerSize.\r\n   * Expects both sizeX and sizeY to be set when set.\r\n   * @type {?Number}\r\n   * @default null\r\n   */\r\n  sizeX = 0;\r\n\r\n  /**\r\n   * Sets the height of the control. If null, defaults to object's cornerSize.\r\n   * Expects both sizeX and sizeY to be set when set.\r\n   * @type {?Number}\r\n   * @default null\r\n   */\r\n  sizeY = 0;\r\n\r\n  /**\r\n   * Sets the length of the touch area of the control. If null, defaults to object's touchCornerSize.\r\n   * Expects both touchSizeX and touchSizeY to be set when set.\r\n   * @type {?Number}\r\n   * @default null\r\n   */\r\n  touchSizeX = 0;\r\n\r\n  /**\r\n   * Sets the height of the touch area of the control. If null, defaults to object's touchCornerSize.\r\n   * Expects both touchSizeX and touchSizeY to be set when set.\r\n   * @type {?Number}\r\n   * @default null\r\n   */\r\n  touchSizeY = 0;\r\n\r\n  /**\r\n   * Css cursor style to display when the control is hovered.\r\n   * if the method `cursorStyleHandler` is provided, this property is ignored.\r\n   * @type {String}\r\n   * @default 'crosshair'\r\n   */\r\n  cursorStyle = 'crosshair';\r\n\r\n  /**\r\n   * If controls has an offsetY or offsetX, draw a line that connects\r\n   * the control to the bounding box\r\n   * @type {Boolean}\r\n   * @default false\r\n   */\r\n  withConnection = false;\r\n\r\n  constructor(options?: Partial<Control>) {\r\n    Object.assign(this, options);\r\n  }\r\n\r\n  /**\r\n   * The control actionHandler, provide one to handle action ( control being moved )\r\n   * @param {Event} eventData the native mouse event\r\n   * @param {Transform} transformData properties of the current transform\r\n   * @param {Number} x x position of the cursor\r\n   * @param {Number} y y position of the cursor\r\n   * @return {Boolean} true if the action/event modified the object\r\n   */\r\n  declare actionHandler: TransformActionHandler;\r\n\r\n  /**\r\n   * The control handler for mouse down, provide one to handle mouse down on control\r\n   * @param {Event} eventData the native mouse event\r\n   * @param {Transform} transformData properties of the current transform\r\n   * @param {Number} x x position of the cursor\r\n   * @param {Number} y y position of the cursor\r\n   * @return {Boolean} true if the action/event modified the object\r\n   */\r\n  declare mouseDownHandler?: ControlActionHandler;\r\n\r\n  /**\r\n   * The control mouseUpHandler, provide one to handle an effect on mouse up.\r\n   * @param {Event} eventData the native mouse event\r\n   * @param {Transform} transformData properties of the current transform\r\n   * @param {Number} x x position of the cursor\r\n   * @param {Number} y y position of the cursor\r\n   * @return {Boolean} true if the action/event modified the object\r\n   */\r\n  declare mouseUpHandler?: ControlActionHandler;\r\n\r\n  shouldActivate(\r\n    controlKey: string,\r\n    fabricObject: InteractiveFabricObject,\r\n    pointer: Point,\r\n    { tl, tr, br, bl }: TCornerPoint\r\n  ) {\r\n    // TODO: locking logic can be handled here instead of in the control handler logic\r\n    return (\r\n      fabricObject.canvas?.getActiveObject() === fabricObject &&\r\n      fabricObject.isControlVisible(controlKey) &&\r\n      Intersection.isPointInPolygon(pointer, [tl, tr, br, bl])\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Returns control actionHandler\r\n   * @param {Event} eventData the native mouse event\r\n   * @param {FabricObject} fabricObject on which the control is displayed\r\n   * @param {Control} control control for which the action handler is being asked\r\n   * @return {Function} the action handler\r\n   */\r\n  getActionHandler(\r\n    eventData: TPointerEvent,\r\n    fabricObject: InteractiveFabricObject,\r\n    control: Control\r\n  ): TransformActionHandler | undefined {\r\n    return this.actionHandler;\r\n  }\r\n\r\n  /**\r\n   * Returns control mouseDown handler\r\n   * @param {Event} eventData the native mouse event\r\n   * @param {FabricObject} fabricObject on which the control is displayed\r\n   * @param {Control} control control for which the action handler is being asked\r\n   * @return {Function} the action handler\r\n   */\r\n  getMouseDownHandler(\r\n    eventData: TPointerEvent,\r\n    fabricObject: InteractiveFabricObject,\r\n    control: Control\r\n  ): ControlActionHandler | undefined {\r\n    return this.mouseDownHandler;\r\n  }\r\n\r\n  /**\r\n   * Returns control mouseUp handler.\r\n   * During actions the fabricObject or the control can be of different obj\r\n   * @param {Event} eventData the native mouse event\r\n   * @param {FabricObject} fabricObject on which the control is displayed\r\n   * @param {Control} control control for which the action handler is being asked\r\n   * @return {Function} the action handler\r\n   */\r\n  getMouseUpHandler(\r\n    eventData: TPointerEvent,\r\n    fabricObject: InteractiveFabricObject,\r\n    control: Control\r\n  ): ControlActionHandler | undefined {\r\n    return this.mouseUpHandler;\r\n  }\r\n\r\n  /**\r\n   * Returns control cursorStyle for css using cursorStyle. If you need a more elaborate\r\n   * function you can pass one in the constructor\r\n   * the cursorStyle property\r\n   * @param {Event} eventData the native mouse event\r\n   * @param {Control} control the current control ( likely this)\r\n   * @param {FabricObject} object on which the control is displayed\r\n   * @return {String}\r\n   */\r\n  cursorStyleHandler(\r\n    eventData: TPointerEvent,\r\n    control: Control,\r\n    fabricObject: InteractiveFabricObject\r\n  ) {\r\n    return control.cursorStyle;\r\n  }\r\n\r\n  /**\r\n   * Returns the action name. The basic implementation just return the actionName property.\r\n   * @param {Event} eventData the native mouse event\r\n   * @param {Control} control the current control ( likely this)\r\n   * @param {FabricObject} object on which the control is displayed\r\n   * @return {String}\r\n   */\r\n  getActionName(\r\n    eventData: TPointerEvent,\r\n    control: Control,\r\n    fabricObject: InteractiveFabricObject\r\n  ) {\r\n    return control.actionName;\r\n  }\r\n\r\n  /**\r\n   * Returns controls visibility\r\n   * @param {FabricObject} object on which the control is displayed\r\n   * @param {String} controlKey key where the control is memorized on the\r\n   * @return {Boolean}\r\n   */\r\n  getVisibility(fabricObject: InteractiveFabricObject, controlKey: string) {\r\n    return fabricObject._controlsVisibility?.[controlKey] ?? this.visible;\r\n  }\r\n\r\n  /**\r\n   * Sets controls visibility\r\n   * @param {Boolean} visibility for the object\r\n   * @return {Void}\r\n   */\r\n  setVisibility(\r\n    visibility: boolean,\r\n    name: string,\r\n    fabricObject: InteractiveFabricObject\r\n  ) {\r\n    this.visible = visibility;\r\n  }\r\n\r\n  positionHandler(\r\n    dim: Point,\r\n    finalMatrix: TMat2D,\r\n    fabricObject: InteractiveFabricObject,\r\n    currentControl: Control\r\n  ) {\r\n    return new Point(\r\n      this.x * dim.x + this.offsetX,\r\n      this.y * dim.y + this.offsetY\r\n    ).transform(finalMatrix);\r\n  }\r\n\r\n  /**\r\n   * Returns the coords for this control based on object values.\r\n   * @param {Number} objectAngle angle from the fabric object holding the control\r\n   * @param {Number} objectCornerSize cornerSize from the fabric object holding the control (or touchCornerSize if\r\n   *   isTouch is true)\r\n   * @param {Number} centerX x coordinate where the control center should be\r\n   * @param {Number} centerY y coordinate where the control center should be\r\n   * @param {boolean} isTouch true if touch corner, false if normal corner\r\n   */\r\n  calcCornerCoords(\r\n    angle: TDegree,\r\n    objectCornerSize: number,\r\n    centerX: number,\r\n    centerY: number,\r\n    isTouch: boolean,\r\n    fabricObject: InteractiveFabricObject\r\n  ) {\r\n    const t = multiplyTransformMatrixArray([\r\n      createTranslateMatrix(centerX, centerY),\r\n      createRotateMatrix({ angle }),\r\n      createScaleMatrix(\r\n        (isTouch ? this.touchSizeX : this.sizeX) || objectCornerSize,\r\n        (isTouch ? this.touchSizeY : this.sizeY) || objectCornerSize\r\n      ),\r\n    ]);\r\n    return {\r\n      tl: new Point(-0.5, -0.5).transform(t),\r\n      tr: new Point(0.5, -0.5).transform(t),\r\n      br: new Point(0.5, 0.5).transform(t),\r\n      bl: new Point(-0.5, 0.5).transform(t),\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Render function for the control.\r\n   * When this function runs the context is unscaled. unrotate. Just retina scaled.\r\n   * all the functions will have to translate to the point left,top before starting Drawing\r\n   * if they want to draw a control where the position is detected.\r\n   * left and top are the result of the positionHandler function\r\n   * @param {RenderingContext2D} ctx the context where the control will be drawn\r\n   * @param {Number} left position of the canvas where we are about to render the control.\r\n   * @param {Number} top position of the canvas where we are about to render the control.\r\n   * @param {Object} styleOverride\r\n   * @param {FabricObject} fabricObject the object where the control is about to be rendered\r\n   */\r\n  render(\r\n    ctx: CanvasRenderingContext2D,\r\n    left: number,\r\n    top: number,\r\n    styleOverride: ControlRenderingStyleOverride | undefined,\r\n    fabricObject: InteractiveFabricObject\r\n  ) {\r\n    styleOverride = styleOverride || {};\r\n    switch (styleOverride.cornerStyle || fabricObject.cornerStyle) {\r\n      case 'circle':\r\n        renderCircleControl.call(\r\n          this,\r\n          ctx,\r\n          left,\r\n          top,\r\n          styleOverride,\r\n          fabricObject\r\n        );\r\n        break;\r\n      default:\r\n        renderSquareControl.call(\r\n          this,\r\n          ctx,\r\n          left,\r\n          top,\r\n          styleOverride,\r\n          fabricObject\r\n        );\r\n    }\r\n  }\r\n}\r\n","import type {\r\n  ControlCursorCallback,\r\n  TransformActionHandler,\r\n} from '../EventTypeDefs';\r\nimport { ROTATING } from '../constants';\r\nimport { radiansToDegrees } from '../util/misc/radiansDegreesConversion';\r\nimport { isLocked, NOT_ALLOWED_CURSOR } from './util';\r\nimport { wrapWithFireEvent } from './wrapWithFireEvent';\r\nimport { wrapWithFixedAnchor } from './wrapWithFixedAnchor';\r\n\r\n/**\r\n * Find the correct style for the control that is used for rotation.\r\n * this function is very simple and it just take care of not-allowed or standard cursor\r\n * @param {Event} eventData the javascript event that is causing the scale\r\n * @param {Control} control the control that is interested in the action\r\n * @param {FabricObject} fabricObject the fabric object that is interested in the action\r\n * @return {String} a valid css string for the cursor\r\n */\r\nexport const rotationStyleHandler: ControlCursorCallback = (\r\n  eventData,\r\n  control,\r\n  fabricObject\r\n) => {\r\n  if (fabricObject.lockRotation) {\r\n    return NOT_ALLOWED_CURSOR;\r\n  }\r\n  return control.cursorStyle;\r\n};\r\n\r\n/**\r\n * Action handler for rotation and snapping, without anchor point.\r\n * Needs to be wrapped with `wrapWithFixedAnchor` to be effective\r\n * @param {Event} eventData javascript event that is doing the transform\r\n * @param {Object} transform javascript object containing a series of information around the current transform\r\n * @param {number} x current mouse x position, canvas normalized\r\n * @param {number} y current mouse y position, canvas normalized\r\n * @return {Boolean} true if some change happened\r\n * @private\r\n */\r\nconst rotateObjectWithSnapping: TransformActionHandler = (\r\n  eventData,\r\n  { target, ex, ey, theta, originX, originY },\r\n  x,\r\n  y\r\n) => {\r\n  const pivotPoint = target.translateToOriginPoint(\r\n    target.getRelativeCenterPoint(),\r\n    originX,\r\n    originY\r\n  );\r\n\r\n  if (isLocked(target, 'lockRotation')) {\r\n    return false;\r\n  }\r\n\r\n  const lastAngle = Math.atan2(ey - pivotPoint.y, ex - pivotPoint.x),\r\n    curAngle = Math.atan2(y - pivotPoint.y, x - pivotPoint.x);\r\n  let angle = radiansToDegrees(curAngle - lastAngle + theta);\r\n\r\n  if (target.snapAngle && target.snapAngle > 0) {\r\n    const snapAngle = target.snapAngle,\r\n      snapThreshold = target.snapThreshold || snapAngle,\r\n      rightAngleLocked = Math.ceil(angle / snapAngle) * snapAngle,\r\n      leftAngleLocked = Math.floor(angle / snapAngle) * snapAngle;\r\n\r\n    if (Math.abs(angle - leftAngleLocked) < snapThreshold) {\r\n      angle = leftAngleLocked;\r\n    } else if (Math.abs(angle - rightAngleLocked) < snapThreshold) {\r\n      angle = rightAngleLocked;\r\n    }\r\n  }\r\n\r\n  // normalize angle to positive value\r\n  if (angle < 0) {\r\n    angle = 360 + angle;\r\n  }\r\n  angle %= 360;\r\n\r\n  const hasRotated = target.angle !== angle;\r\n  // TODO: why aren't we using set?\r\n  target.angle = angle;\r\n  return hasRotated;\r\n};\r\n\r\nexport const rotationWithSnapping = wrapWithFireEvent(\r\n  ROTATING,\r\n  wrapWithFixedAnchor(rotateObjectWithSnapping)\r\n);\r\n","import type {\r\n  ControlCursorCallback,\r\n  TPointerEvent,\r\n  Transform,\r\n  TransformActionHandler,\r\n} from '../EventTypeDefs';\r\nimport type { FabricObject } from '../shapes/Object/FabricObject';\r\nimport type { TAxis } from '../typedefs';\r\nimport type { Canvas } from '../canvas/Canvas';\r\nimport {\r\n  findCornerQuadrant,\r\n  getLocalPoint,\r\n  invertOrigin,\r\n  isLocked,\r\n  isTransformCentered,\r\n  NOT_ALLOWED_CURSOR,\r\n} from './util';\r\nimport { wrapWithFireEvent } from './wrapWithFireEvent';\r\nimport { wrapWithFixedAnchor } from './wrapWithFixedAnchor';\r\nimport { SCALE_X, SCALE_Y, SCALING } from '../constants';\r\n\r\ntype ScaleTransform = Transform & {\r\n  gestureScale?: number;\r\n  signX?: number;\r\n  signY?: number;\r\n};\r\n\r\ntype ScaleBy = TAxis | 'equally' | '' | undefined;\r\n\r\n/**\r\n * Inspect event and fabricObject properties to understand if the scaling action\r\n * @param {Event} eventData from the user action\r\n * @param {FabricObject} fabricObject the fabric object about to scale\r\n * @return {Boolean} true if scale is proportional\r\n */\r\nexport function scaleIsProportional(\r\n  eventData: TPointerEvent,\r\n  fabricObject: FabricObject\r\n): boolean {\r\n  const canvas = fabricObject.canvas as Canvas,\r\n    uniformIsToggled = eventData[canvas.uniScaleKey!];\r\n  return (\r\n    (canvas.uniformScaling && !uniformIsToggled) ||\r\n    (!canvas.uniformScaling && uniformIsToggled)\r\n  );\r\n}\r\n\r\n/**\r\n * Inspect fabricObject to understand if the current scaling action is allowed\r\n * @param {FabricObject} fabricObject the fabric object about to scale\r\n * @param {String} by 'x' or 'y' or ''\r\n * @param {Boolean} scaleProportionally true if we are trying to scale proportionally\r\n * @return {Boolean} true if scaling is not allowed at current conditions\r\n */\r\nexport function scalingIsForbidden(\r\n  fabricObject: FabricObject,\r\n  by: ScaleBy,\r\n  scaleProportionally: boolean\r\n) {\r\n  const lockX = isLocked(fabricObject, 'lockScalingX'),\r\n    lockY = isLocked(fabricObject, 'lockScalingY');\r\n  if (lockX && lockY) {\r\n    return true;\r\n  }\r\n  if (!by && (lockX || lockY) && scaleProportionally) {\r\n    return true;\r\n  }\r\n  if (lockX && by === 'x') {\r\n    return true;\r\n  }\r\n  if (lockY && by === 'y') {\r\n    return true;\r\n  }\r\n  // code crashes because of a division by 0 if a 0 sized object is scaled\r\n  // forbid to prevent scaling to happen. ISSUE-9475\r\n  const { width, height, strokeWidth } = fabricObject;\r\n  if (width === 0 && strokeWidth === 0 && by !== 'y') {\r\n    return true;\r\n  }\r\n  if (height === 0 && strokeWidth === 0 && by !== 'x') {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nconst scaleMap = ['e', 'se', 's', 'sw', 'w', 'nw', 'n', 'ne', 'e'];\r\n\r\n/**\r\n * return the correct cursor style for the scale action\r\n * @param {Event} eventData the javascript event that is causing the scale\r\n * @param {Control} control the control that is interested in the action\r\n * @param {FabricObject} fabricObject the fabric object that is interested in the action\r\n * @return {String} a valid css string for the cursor\r\n */\r\nexport const scaleCursorStyleHandler: ControlCursorCallback = (\r\n  eventData,\r\n  control,\r\n  fabricObject\r\n) => {\r\n  const scaleProportionally = scaleIsProportional(eventData, fabricObject),\r\n    by =\r\n      control.x !== 0 && control.y === 0\r\n        ? 'x'\r\n        : control.x === 0 && control.y !== 0\r\n        ? 'y'\r\n        : '';\r\n  if (scalingIsForbidden(fabricObject, by, scaleProportionally)) {\r\n    return NOT_ALLOWED_CURSOR;\r\n  }\r\n  const n = findCornerQuadrant(fabricObject, control);\r\n  return `${scaleMap[n]}-resize`;\r\n};\r\n\r\n/**\r\n * Basic scaling logic, reused with different constrain for scaling X,Y, freely or equally.\r\n * Needs to be wrapped with `wrapWithFixedAnchor` to be effective\r\n * @param {Event} eventData javascript event that is doing the transform\r\n * @param {Object} transform javascript object containing a series of information around the current transform\r\n * @param {number} x current mouse x position, canvas normalized\r\n * @param {number} y current mouse y position, canvas normalized\r\n * @param {Object} options additional information for scaling\r\n * @param {String} options.by 'x', 'y', 'equally' or '' to indicate type of scaling\r\n * @return {Boolean} true if some change happened\r\n * @private\r\n */\r\nfunction scaleObject(\r\n  eventData: TPointerEvent,\r\n  transform: ScaleTransform,\r\n  x: number,\r\n  y: number,\r\n  options: { by?: ScaleBy } = {}\r\n) {\r\n  const target = transform.target,\r\n    by = options.by,\r\n    scaleProportionally = scaleIsProportional(eventData, target),\r\n    forbidScaling = scalingIsForbidden(target, by, scaleProportionally);\r\n  let newPoint, scaleX, scaleY, dim, signX, signY;\r\n\r\n  if (forbidScaling) {\r\n    return false;\r\n  }\r\n  if (transform.gestureScale) {\r\n    scaleX = transform.scaleX * transform.gestureScale;\r\n    scaleY = transform.scaleY * transform.gestureScale;\r\n  } else {\r\n    newPoint = getLocalPoint(\r\n      transform,\r\n      transform.originX,\r\n      transform.originY,\r\n      x,\r\n      y\r\n    );\r\n    // use of sign: We use sign to detect change of direction of an action. sign usually change when\r\n    // we cross the origin point with the mouse. So a scale flip for example. There is an issue when scaling\r\n    // by center and scaling using one middle control ( default: mr, mt, ml, mb), the mouse movement can easily\r\n    // cross many time the origin point and flip the object. so we need a way to filter out the noise.\r\n    // This ternary here should be ok to filter out X scaling when we want Y only and vice versa.\r\n    signX = by !== 'y' ? Math.sign(newPoint.x || transform.signX || 1) : 1;\r\n    signY = by !== 'x' ? Math.sign(newPoint.y || transform.signY || 1) : 1;\r\n    if (!transform.signX) {\r\n      transform.signX = signX;\r\n    }\r\n    if (!transform.signY) {\r\n      transform.signY = signY;\r\n    }\r\n\r\n    if (\r\n      isLocked(target, 'lockScalingFlip') &&\r\n      (transform.signX !== signX || transform.signY !== signY)\r\n    ) {\r\n      return false;\r\n    }\r\n\r\n    dim = target._getTransformedDimensions();\r\n    // missing detection of flip and logic to switch the origin\r\n    if (scaleProportionally && !by) {\r\n      // uniform scaling\r\n      const distance = Math.abs(newPoint.x) + Math.abs(newPoint.y),\r\n        { original } = transform,\r\n        originalDistance =\r\n          Math.abs((dim.x * original.scaleX) / target.scaleX) +\r\n          Math.abs((dim.y * original.scaleY) / target.scaleY),\r\n        scale = distance / originalDistance;\r\n      scaleX = original.scaleX * scale;\r\n      scaleY = original.scaleY * scale;\r\n    } else {\r\n      scaleX = Math.abs((newPoint.x * target.scaleX) / dim.x);\r\n      scaleY = Math.abs((newPoint.y * target.scaleY) / dim.y);\r\n    }\r\n    // if we are scaling by center, we need to double the scale\r\n    if (isTransformCentered(transform)) {\r\n      scaleX *= 2;\r\n      scaleY *= 2;\r\n    }\r\n    if (transform.signX !== signX && by !== 'y') {\r\n      transform.originX = invertOrigin(transform.originX);\r\n      scaleX *= -1;\r\n      transform.signX = signX;\r\n    }\r\n    if (transform.signY !== signY && by !== 'x') {\r\n      transform.originY = invertOrigin(transform.originY);\r\n      scaleY *= -1;\r\n      transform.signY = signY;\r\n    }\r\n  }\r\n  // minScale is taken care of in the setter.\r\n  const oldScaleX = target.scaleX,\r\n    oldScaleY = target.scaleY;\r\n  if (!by) {\r\n    !isLocked(target, 'lockScalingX') && target.set(SCALE_X, scaleX);\r\n    !isLocked(target, 'lockScalingY') && target.set(SCALE_Y, scaleY);\r\n  } else {\r\n    // forbidden cases already handled on top here.\r\n    by === 'x' && target.set(SCALE_X, scaleX);\r\n    by === 'y' && target.set(SCALE_Y, scaleY);\r\n  }\r\n  return oldScaleX !== target.scaleX || oldScaleY !== target.scaleY;\r\n}\r\n\r\n/**\r\n * Generic scaling logic, to scale from corners either equally or freely.\r\n * Needs to be wrapped with `wrapWithFixedAnchor` to be effective\r\n * @param {Event} eventData javascript event that is doing the transform\r\n * @param {Object} transform javascript object containing a series of information around the current transform\r\n * @param {number} x current mouse x position, canvas normalized\r\n * @param {number} y current mouse y position, canvas normalized\r\n * @return {Boolean} true if some change happened\r\n */\r\nexport const scaleObjectFromCorner: TransformActionHandler<ScaleTransform> = (\r\n  eventData,\r\n  transform,\r\n  x,\r\n  y\r\n) => {\r\n  return scaleObject(eventData, transform, x, y);\r\n};\r\n\r\n/**\r\n * Scaling logic for the X axis.\r\n * Needs to be wrapped with `wrapWithFixedAnchor` to be effective\r\n * @param {Event} eventData javascript event that is doing the transform\r\n * @param {Object} transform javascript object containing a series of information around the current transform\r\n * @param {number} x current mouse x position, canvas normalized\r\n * @param {number} y current mouse y position, canvas normalized\r\n * @return {Boolean} true if some change happened\r\n */\r\nconst scaleObjectX: TransformActionHandler<ScaleTransform> = (\r\n  eventData,\r\n  transform,\r\n  x,\r\n  y\r\n) => {\r\n  return scaleObject(eventData, transform, x, y, { by: 'x' });\r\n};\r\n\r\n/**\r\n * Scaling logic for the Y axis.\r\n * Needs to be wrapped with `wrapWithFixedAnchor` to be effective\r\n * @param {Event} eventData javascript event that is doing the transform\r\n * @param {Object} transform javascript object containing a series of information around the current transform\r\n * @param {number} x current mouse x position, canvas normalized\r\n * @param {number} y current mouse y position, canvas normalized\r\n * @return {Boolean} true if some change happened\r\n */\r\nconst scaleObjectY: TransformActionHandler<ScaleTransform> = (\r\n  eventData,\r\n  transform,\r\n  x,\r\n  y\r\n) => {\r\n  return scaleObject(eventData, transform, x, y, { by: 'y' });\r\n};\r\n\r\nexport const scalingEqually = wrapWithFireEvent(\r\n  SCALING,\r\n  wrapWithFixedAnchor(scaleObjectFromCorner)\r\n);\r\n\r\nexport const scalingX = wrapWithFireEvent(\r\n  SCALING,\r\n  wrapWithFixedAnchor(scaleObjectX)\r\n);\r\n\r\nexport const scalingY = wrapWithFireEvent(\r\n  SCALING,\r\n  wrapWithFixedAnchor(scaleObjectY)\r\n);\r\n","import type {\r\n  ControlCursorCallback,\r\n  TPointerEvent,\r\n  Transform,\r\n  TransformActionHandler,\r\n} from '../EventTypeDefs';\r\nimport { resolveOrigin } from '../util/misc/resolveOrigin';\r\nimport { Point } from '../Point';\r\nimport type { TAxis, TAxisKey } from '../typedefs';\r\nimport {\r\n  degreesToRadians,\r\n  radiansToDegrees,\r\n} from '../util/misc/radiansDegreesConversion';\r\nimport {\r\n  findCornerQuadrant,\r\n  getLocalPoint,\r\n  isLocked,\r\n  NOT_ALLOWED_CURSOR,\r\n} from './util';\r\nimport { wrapWithFireEvent } from './wrapWithFireEvent';\r\nimport { wrapWithFixedAnchor } from './wrapWithFixedAnchor';\r\nimport {\r\n  CENTER,\r\n  SCALE_X,\r\n  SCALE_Y,\r\n  SKEWING,\r\n  SKEW_X,\r\n  SKEW_Y,\r\n} from '../constants';\r\n\r\nexport type SkewTransform = Transform & { skewingSide: -1 | 1 };\r\n\r\nconst AXIS_KEYS: Record<\r\n  TAxis,\r\n  {\r\n    counterAxis: TAxis;\r\n    scale: TAxisKey<'scale'>;\r\n    skew: TAxisKey<'skew'>;\r\n    lockSkewing: TAxisKey<'lockSkewing'>;\r\n    origin: TAxisKey<'origin'>;\r\n    flip: TAxisKey<'flip'>;\r\n  }\r\n> = {\r\n  x: {\r\n    counterAxis: 'y',\r\n    scale: SCALE_X,\r\n    skew: SKEW_X,\r\n    lockSkewing: 'lockSkewingX',\r\n    origin: 'originX',\r\n    flip: 'flipX',\r\n  },\r\n  y: {\r\n    counterAxis: 'x',\r\n    scale: SCALE_Y,\r\n    skew: SKEW_Y,\r\n    lockSkewing: 'lockSkewingY',\r\n    origin: 'originY',\r\n    flip: 'flipY',\r\n  },\r\n};\r\n\r\nconst skewMap = ['ns', 'nesw', 'ew', 'nwse'];\r\n\r\n/**\r\n * return the correct cursor style for the skew action\r\n * @param {Event} eventData the javascript event that is causing the scale\r\n * @param {Control} control the control that is interested in the action\r\n * @param {FabricObject} fabricObject the fabric object that is interested in the action\r\n * @return {String} a valid css string for the cursor\r\n */\r\nexport const skewCursorStyleHandler: ControlCursorCallback = (\r\n  eventData,\r\n  control,\r\n  fabricObject\r\n) => {\r\n  if (control.x !== 0 && isLocked(fabricObject, 'lockSkewingY')) {\r\n    return NOT_ALLOWED_CURSOR;\r\n  }\r\n  if (control.y !== 0 && isLocked(fabricObject, 'lockSkewingX')) {\r\n    return NOT_ALLOWED_CURSOR;\r\n  }\r\n  const n = findCornerQuadrant(fabricObject, control) % 4;\r\n  return `${skewMap[n]}-resize`;\r\n};\r\n\r\n/**\r\n * Since skewing is applied before scaling, calculations are done in a scaleless plane\r\n * @see https://github.com/fabricjs/fabric.js/pull/8380\r\n */\r\nfunction skewObject(\r\n  axis: TAxis,\r\n  { target, ex, ey, skewingSide, ...transform }: SkewTransform,\r\n  pointer: Point\r\n) {\r\n  const { skew: skewKey } = AXIS_KEYS[axis],\r\n    offset = pointer\r\n      .subtract(new Point(ex, ey))\r\n      .divide(new Point(target.scaleX, target.scaleY))[axis],\r\n    skewingBefore = target[skewKey],\r\n    skewingStart = transform[skewKey],\r\n    shearingStart = Math.tan(degreesToRadians(skewingStart)),\r\n    // let a, b be the size of target\r\n    // let a' be the value of a after applying skewing\r\n    // then:\r\n    // a' = a + b * skewA => skewA = (a' - a) / b\r\n    // the value b is tricky since skewY is applied before skewX\r\n    b =\r\n      axis === 'y'\r\n        ? target._getTransformedDimensions({\r\n            scaleX: 1,\r\n            scaleY: 1,\r\n            // since skewY is applied before skewX, b (=width) is not affected by skewX\r\n            skewX: 0,\r\n          }).x\r\n        : target._getTransformedDimensions({\r\n            scaleX: 1,\r\n            scaleY: 1,\r\n          }).y;\r\n\r\n  const shearing =\r\n    (2 * offset * skewingSide) /\r\n      // we max out fractions to safeguard from asymptotic behavior\r\n      Math.max(b, 1) +\r\n    // add starting state\r\n    shearingStart;\r\n\r\n  const skewing = radiansToDegrees(Math.atan(shearing));\r\n\r\n  target.set(skewKey, skewing);\r\n  const changed = skewingBefore !== target[skewKey];\r\n\r\n  if (changed && axis === 'y') {\r\n    // we don't want skewing to affect scaleX\r\n    // so we factor it by the inverse skewing diff to make it seem unchanged to the viewer\r\n    const { skewX, scaleX } = target,\r\n      dimBefore = target._getTransformedDimensions({ skewY: skewingBefore }),\r\n      dimAfter = target._getTransformedDimensions(),\r\n      compensationFactor = skewX !== 0 ? dimBefore.x / dimAfter.x : 1;\r\n    compensationFactor !== 1 &&\r\n      target.set(SCALE_X, compensationFactor * scaleX);\r\n  }\r\n\r\n  return changed;\r\n}\r\n\r\n/**\r\n * Wrapped Action handler for skewing on a given axis, takes care of the\r\n * skew direction and determines the correct transform origin for the anchor point\r\n * @param {Event} eventData javascript event that is doing the transform\r\n * @param {Object} transform javascript object containing a series of information around the current transform\r\n * @param {number} x current mouse x position, canvas normalized\r\n * @param {number} y current mouse y position, canvas normalized\r\n * @return {Boolean} true if some change happened\r\n */\r\nfunction skewHandler(\r\n  axis: TAxis,\r\n  eventData: TPointerEvent,\r\n  transform: Transform,\r\n  x: number,\r\n  y: number\r\n) {\r\n  const { target } = transform,\r\n    {\r\n      counterAxis,\r\n      origin: originKey,\r\n      lockSkewing: lockSkewingKey,\r\n      skew: skewKey,\r\n      flip: flipKey,\r\n    } = AXIS_KEYS[axis];\r\n  if (isLocked(target, lockSkewingKey)) {\r\n    return false;\r\n  }\r\n\r\n  const { origin: counterOriginKey, flip: counterFlipKey } =\r\n      AXIS_KEYS[counterAxis],\r\n    counterOriginFactor =\r\n      resolveOrigin(transform[counterOriginKey]) *\r\n      (target[counterFlipKey] ? -1 : 1),\r\n    // if the counter origin is top/left (= -0.5) then we are skewing x/y values on the bottom/right side of target respectively.\r\n    // if the counter origin is bottom/right (= 0.5) then we are skewing x/y values on the top/left side of target respectively.\r\n    // skewing direction on the top/left side of target is OPPOSITE to the direction of the movement of the pointer,\r\n    // so we factor skewing direction by this value.\r\n    skewingSide = (-Math.sign(counterOriginFactor) *\r\n      (target[flipKey] ? -1 : 1)) as 1 | -1,\r\n    skewingDirection =\r\n      ((target[skewKey] === 0 &&\r\n        // in case skewing equals 0 we use the pointer offset from target center to determine the direction of skewing\r\n        getLocalPoint(transform, CENTER, CENTER, x, y)[axis] > 0) ||\r\n      // in case target has skewing we use that as the direction\r\n      target[skewKey] > 0\r\n        ? 1\r\n        : -1) * skewingSide,\r\n    // anchor to the opposite side of the skewing direction\r\n    // normalize value from [-1, 1] to origin value [0, 1]\r\n    origin = -skewingDirection * 0.5 + 0.5;\r\n\r\n  const finalHandler = wrapWithFireEvent<SkewTransform>(\r\n    SKEWING,\r\n    wrapWithFixedAnchor((eventData, transform, x, y) =>\r\n      skewObject(axis, transform, new Point(x, y))\r\n    )\r\n  );\r\n\r\n  return finalHandler(\r\n    eventData,\r\n    {\r\n      ...transform,\r\n      [originKey]: origin,\r\n      skewingSide,\r\n    },\r\n    x,\r\n    y\r\n  );\r\n}\r\n\r\n/**\r\n * Wrapped Action handler for skewing on the X axis, takes care of the\r\n * skew direction and determines the correct transform origin for the anchor point\r\n * @param {Event} eventData javascript event that is doing the transform\r\n * @param {Object} transform javascript object containing a series of information around the current transform\r\n * @param {number} x current mouse x position, canvas normalized\r\n * @param {number} y current mouse y position, canvas normalized\r\n * @return {Boolean} true if some change happened\r\n */\r\nexport const skewHandlerX: TransformActionHandler = (\r\n  eventData,\r\n  transform,\r\n  x,\r\n  y\r\n) => {\r\n  return skewHandler('x', eventData, transform, x, y);\r\n};\r\n\r\n/**\r\n * Wrapped Action handler for skewing on the Y axis, takes care of the\r\n * skew direction and determines the correct transform origin for the anchor point\r\n * @param {Event} eventData javascript event that is doing the transform\r\n * @param {Object} transform javascript object containing a series of information around the current transform\r\n * @param {number} x current mouse x position, canvas normalized\r\n * @param {number} y current mouse y position, canvas normalized\r\n * @return {Boolean} true if some change happened\r\n */\r\nexport const skewHandlerY: TransformActionHandler = (\r\n  eventData,\r\n  transform,\r\n  x,\r\n  y\r\n) => {\r\n  return skewHandler('y', eventData, transform, x, y);\r\n};\r\n","import type {\r\n  ControlCallback,\r\n  ControlCursorCallback,\r\n  TPointerEvent,\r\n  TransformActionHandler,\r\n} from '../EventTypeDefs';\r\nimport { SCALE_X, SCALE_Y, SKEW_X, SKEW_Y } from '../constants';\r\nimport type { FabricObject } from '../shapes/Object/FabricObject';\r\nimport type { TAxisKey } from '../typedefs';\r\nimport { scaleCursorStyleHandler, scalingX, scalingY } from './scale';\r\nimport { skewCursorStyleHandler, skewHandlerX, skewHandlerY } from './skew';\r\n\r\nfunction isAltAction(eventData: TPointerEvent, target: FabricObject) {\r\n  return eventData[target.canvas!.altActionKey!];\r\n}\r\n\r\n/**\r\n * Inspect event, control and fabricObject to return the correct action name\r\n * @param {Event} eventData the javascript event that is causing the scale\r\n * @param {Control} control the control that is interested in the action\r\n * @param {FabricObject} fabricObject the fabric object that is interested in the action\r\n * @return {String} an action name\r\n */\r\nexport const scaleOrSkewActionName: ControlCallback<\r\n  TAxisKey<'skew' | 'scale'> | ''\r\n> = (eventData, control, fabricObject) => {\r\n  const isAlternative = isAltAction(eventData, fabricObject);\r\n  if (control.x === 0) {\r\n    // then is scaleY or skewX\r\n    return isAlternative ? SKEW_X : SCALE_Y;\r\n  }\r\n  if (control.y === 0) {\r\n    // then is scaleY or skewX\r\n    return isAlternative ? SKEW_Y : SCALE_X;\r\n  }\r\n  return '';\r\n};\r\n\r\n/**\r\n * Combine skew and scale style handlers to cover fabric standard use case\r\n * @param {Event} eventData the javascript event that is causing the scale\r\n * @param {Control} control the control that is interested in the action\r\n * @param {FabricObject} fabricObject the fabric object that is interested in the action\r\n * @return {String} a valid css string for the cursor\r\n */\r\nexport const scaleSkewCursorStyleHandler: ControlCursorCallback = (\r\n  eventData,\r\n  control,\r\n  fabricObject\r\n) => {\r\n  return isAltAction(eventData, fabricObject)\r\n    ? skewCursorStyleHandler(eventData, control, fabricObject)\r\n    : scaleCursorStyleHandler(eventData, control, fabricObject);\r\n};\r\n/**\r\n * Composed action handler to either scale X or skew Y\r\n * Needs to be wrapped with `wrapWithFixedAnchor` to be effective\r\n * @param {Event} eventData javascript event that is doing the transform\r\n * @param {Object} transform javascript object containing a series of information around the current transform\r\n * @param {number} x current mouse x position, canvas normalized\r\n * @param {number} y current mouse y position, canvas normalized\r\n * @return {Boolean} true if some change happened\r\n */\r\nexport const scalingXOrSkewingY: TransformActionHandler = (\r\n  eventData,\r\n  transform,\r\n  x,\r\n  y\r\n) => {\r\n  return isAltAction(eventData, transform.target)\r\n    ? skewHandlerY(eventData, transform, x, y)\r\n    : scalingX(eventData, transform, x, y);\r\n};\r\n\r\n/**\r\n * Composed action handler to either scale Y or skew X\r\n * Needs to be wrapped with `wrapWithFixedAnchor` to be effective\r\n * @param {Event} eventData javascript event that is doing the transform\r\n * @param {Object} transform javascript object containing a series of information around the current transform\r\n * @param {number} x current mouse x position, canvas normalized\r\n * @param {number} y current mouse y position, canvas normalized\r\n * @return {Boolean} true if some change happened\r\n */\r\nexport const scalingYOrSkewingX: TransformActionHandler = (\r\n  eventData,\r\n  transform,\r\n  x,\r\n  y\r\n) => {\r\n  return isAltAction(eventData, transform.target)\r\n    ? skewHandlerX(eventData, transform, x, y)\r\n    : scalingY(eventData, transform, x, y);\r\n};\r\n","import { RESIZING, ROTATE } from '../constants';\r\nimport { changeWidth } from './changeWidth';\r\nimport { Control } from './Control';\r\nimport { rotationStyleHandler, rotationWithSnapping } from './rotate';\r\nimport { scaleCursorStyleHandler, scalingEqually } from './scale';\r\nimport {\r\n  scaleOrSkewActionName,\r\n  scaleSkewCursorStyleHandler,\r\n  scalingXOrSkewingY,\r\n  scalingYOrSkewingX,\r\n} from './scaleSkew';\r\n\r\n// use this function if you want to generate new controls for every instance\r\nexport const createObjectDefaultControls = () => ({\r\n  ml: new Control({\r\n    x: -0.5,\r\n    y: 0,\r\n    cursorStyleHandler: scaleSkewCursorStyleHandler,\r\n    actionHandler: scalingXOrSkewingY,\r\n    getActionName: scaleOrSkewActionName,\r\n  }),\r\n\r\n  mr: new Control({\r\n    x: 0.5,\r\n    y: 0,\r\n    cursorStyleHandler: scaleSkewCursorStyleHandler,\r\n    actionHandler: scalingXOrSkewingY,\r\n    getActionName: scaleOrSkewActionName,\r\n  }),\r\n\r\n  mb: new Control({\r\n    x: 0,\r\n    y: 0.5,\r\n    cursorStyleHandler: scaleSkewCursorStyleHandler,\r\n    actionHandler: scalingYOrSkewingX,\r\n    getActionName: scaleOrSkewActionName,\r\n  }),\r\n\r\n  mt: new Control({\r\n    x: 0,\r\n    y: -0.5,\r\n    cursorStyleHandler: scaleSkewCursorStyleHandler,\r\n    actionHandler: scalingYOrSkewingX,\r\n    getActionName: scaleOrSkewActionName,\r\n  }),\r\n\r\n  tl: new Control({\r\n    x: -0.5,\r\n    y: -0.5,\r\n    cursorStyleHandler: scaleCursorStyleHandler,\r\n    actionHandler: scalingEqually,\r\n  }),\r\n\r\n  tr: new Control({\r\n    x: 0.5,\r\n    y: -0.5,\r\n    cursorStyleHandler: scaleCursorStyleHandler,\r\n    actionHandler: scalingEqually,\r\n  }),\r\n\r\n  bl: new Control({\r\n    x: -0.5,\r\n    y: 0.5,\r\n    cursorStyleHandler: scaleCursorStyleHandler,\r\n    actionHandler: scalingEqually,\r\n  }),\r\n\r\n  br: new Control({\r\n    x: 0.5,\r\n    y: 0.5,\r\n    cursorStyleHandler: scaleCursorStyleHandler,\r\n    actionHandler: scalingEqually,\r\n  }),\r\n\r\n  mtr: new Control({\r\n    x: 0,\r\n    y: -0.5,\r\n    actionHandler: rotationWithSnapping,\r\n    cursorStyleHandler: rotationStyleHandler,\r\n    offsetY: -40,\r\n    withConnection: true,\r\n    actionName: ROTATE,\r\n  }),\r\n});\r\n\r\nexport const createResizeControls = () => ({\r\n  mr: new Control({\r\n    x: 0.5,\r\n    y: 0,\r\n    actionHandler: changeWidth,\r\n    cursorStyleHandler: scaleSkewCursorStyleHandler,\r\n    actionName: RESIZING,\r\n  }),\r\n  ml: new Control({\r\n    x: -0.5,\r\n    y: 0,\r\n    actionHandler: changeWidth,\r\n    cursorStyleHandler: scaleSkewCursorStyleHandler,\r\n    actionName: RESIZING,\r\n  }),\r\n});\r\n\r\nexport const createTextboxDefaultControls = () => ({\r\n  ...createObjectDefaultControls(),\r\n  ...createResizeControls(),\r\n});\r\n","import { Point, ZERO } from '../../Point';\r\nimport type { TCornerPoint, TDegree } from '../../typedefs';\r\nimport { FabricObject } from './Object';\r\nimport { degreesToRadians } from '../../util/misc/radiansDegreesConversion';\r\nimport type { TQrDecomposeOut } from '../../util/misc/matrix';\r\nimport {\r\n  calcDimensionsMatrix,\r\n  createRotateMatrix,\r\n  createTranslateMatrix,\r\n  multiplyTransformMatrices,\r\n  qrDecompose,\r\n} from '../../util/misc/matrix';\r\nimport type { Control } from '../../controls/Control';\r\nimport { sizeAfterTransform } from '../../util/misc/objectTransforms';\r\nimport type { ObjectEvents, TPointerEvent } from '../../EventTypeDefs';\r\nimport type { Canvas } from '../../canvas/Canvas';\r\nimport type { ControlRenderingStyleOverride } from '../../controls/controlRendering';\r\nimport type { FabricObjectProps } from './types/FabricObjectProps';\r\nimport type { TFabricObjectProps, SerializedObjectProps } from './types';\r\nimport { createObjectDefaultControls } from '../../controls/commonControls';\r\nimport { interactiveObjectDefaultValues } from './defaultValues';\r\nimport { SCALE } from '../../constants';\r\n\r\nexport type TOCoord = Point & {\r\n  corner: TCornerPoint;\r\n  touchCorner: TCornerPoint;\r\n};\r\n\r\nexport type TControlSet = Record<string, Control>;\r\n\r\nexport type TBorderRenderingStyleOverride = Partial<\r\n  Pick<InteractiveFabricObject, 'borderColor' | 'borderDashArray'>\r\n>;\r\n\r\nexport type TStyleOverride = ControlRenderingStyleOverride &\r\n  TBorderRenderingStyleOverride &\r\n  Partial<\r\n    Pick<InteractiveFabricObject, 'hasBorders' | 'hasControls'> & {\r\n      forActiveSelection: boolean;\r\n    }\r\n  >;\r\n\r\nexport class InteractiveFabricObject<\r\n    Props extends TFabricObjectProps = Partial<FabricObjectProps>,\r\n    SProps extends SerializedObjectProps = SerializedObjectProps,\r\n    EventSpec extends ObjectEvents = ObjectEvents\r\n  >\r\n  extends FabricObject<Props, SProps, EventSpec>\r\n  implements FabricObjectProps\r\n{\r\n  declare noScaleCache: boolean;\r\n\r\n  declare snapAngle?: TDegree;\r\n  declare snapThreshold?: TDegree;\r\n\r\n  declare lockMovementX: boolean;\r\n  declare lockMovementY: boolean;\r\n  declare lockRotation: boolean;\r\n  declare lockScalingX: boolean;\r\n  declare lockScalingY: boolean;\r\n  declare lockSkewingX: boolean;\r\n  declare lockSkewingY: boolean;\r\n  declare lockScalingFlip: boolean;\r\n\r\n  declare cornerSize: number;\r\n  declare touchCornerSize: number;\r\n  declare transparentCorners: boolean;\r\n  declare cornerColor: string;\r\n  declare cornerStrokeColor: string;\r\n  declare cornerStyle: 'rect' | 'circle';\r\n  declare cornerDashArray: number[] | null;\r\n  declare hasControls: boolean;\r\n\r\n  declare borderColor: string;\r\n  declare borderDashArray: number[] | null;\r\n  declare borderOpacityWhenMoving: number;\r\n  declare borderScaleFactor: number;\r\n  declare hasBorders: boolean;\r\n  declare selectionBackgroundColor: string;\r\n\r\n  declare selectable: boolean;\r\n  declare evented: boolean;\r\n  declare perPixelTargetFind: boolean;\r\n  declare activeOn: 'down' | 'up';\r\n\r\n  declare hoverCursor: CSSStyleDeclaration['cursor'] | null;\r\n  declare moveCursor: CSSStyleDeclaration['cursor'] | null;\r\n\r\n  /**\r\n   * The object's controls' position in viewport coordinates\r\n   * Calculated by {@link Control#positionHandler} and {@link Control#calcCornerCoords}, depending on {@link padding}.\r\n   * `corner/touchCorner` describe the 4 points forming the interactive area of the corner.\r\n   * Used to draw and locate controls.\r\n   */\r\n  declare oCoords: Record<string, TOCoord>;\r\n\r\n  /**\r\n   * keeps the value of the last hovered corner during mouse move.\r\n   * 0 is no corner, or 'mt', 'ml', 'mtr' etc..\r\n   * It should be private, but there is no harm in using it as\r\n   * a read-only property.\r\n   * this isn't cleaned automatically. Non selected objects may have wrong values\r\n   * @type [string]\r\n   */\r\n  declare __corner?: string;\r\n\r\n  /**\r\n   * a map of control visibility for this object.\r\n   * this was left when controls were introduced to not break the api too much\r\n   * this takes priority over the generic control visibility\r\n   */\r\n  declare _controlsVisibility: Record<string, boolean>;\r\n\r\n  /**\r\n   * holds the controls for the object.\r\n   * controls are added by default_controls.js\r\n   */\r\n  declare controls: TControlSet;\r\n\r\n  /**\r\n   * internal boolean to signal the code that the object is\r\n   * part of the move action.\r\n   */\r\n  declare isMoving?: boolean;\r\n\r\n  /**\r\n   * A boolean used from the gesture module to keep tracking of a scaling\r\n   * action when there is no scaling transform in place.\r\n   * This is an edge case and is used twice in all codebase.\r\n   * Probably added to keep track of some performance issues\r\n   * @TODO use git blame to investigate why it was added\r\n   * DON'T USE IT. WE WILL TRY TO REMOVE IT\r\n   */\r\n  declare _scaling?: boolean;\r\n\r\n  declare canvas?: Canvas;\r\n\r\n  static ownDefaults = interactiveObjectDefaultValues;\r\n\r\n  static getDefaults(): Record<string, any> {\r\n    return {\r\n      ...super.getDefaults(),\r\n      ...InteractiveFabricObject.ownDefaults,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Constructor\r\n   * @param {Object} [options] Options object\r\n   */\r\n  constructor(options?: Props) {\r\n    super();\r\n    Object.assign(\r\n      this,\r\n      (this.constructor as typeof InteractiveFabricObject).createControls(),\r\n      InteractiveFabricObject.ownDefaults\r\n    );\r\n    this.setOptions(options);\r\n  }\r\n\r\n  /**\r\n   * Creates the default control object.\r\n   * If you prefer to have on instance of controls shared among all objects\r\n   * make this function return an empty object and add controls to the ownDefaults\r\n   * @param {Object} [options] Options object\r\n   */\r\n  static createControls(): { controls: Record<string, Control> } {\r\n    return { controls: createObjectDefaultControls() };\r\n  }\r\n\r\n  /**\r\n   * Update width and height of the canvas for cache\r\n   * returns true or false if canvas needed resize.\r\n   * @private\r\n   * @return {Boolean} true if the canvas has been resized\r\n   */\r\n  _updateCacheCanvas() {\r\n    const targetCanvas = this.canvas;\r\n    if (this.noScaleCache && targetCanvas && targetCanvas._currentTransform) {\r\n      const transform = targetCanvas._currentTransform,\r\n        target = transform.target,\r\n        action = transform.action;\r\n      if (\r\n        this === (target as unknown as this) &&\r\n        action &&\r\n        action.startsWith(SCALE)\r\n      ) {\r\n        return false;\r\n      }\r\n    }\r\n    return super._updateCacheCanvas();\r\n  }\r\n\r\n  getActiveControl() {\r\n    const key = this.__corner;\r\n    return key\r\n      ? {\r\n          key,\r\n          control: this.controls[key],\r\n          coord: this.oCoords[key],\r\n        }\r\n      : undefined;\r\n  }\r\n\r\n  /**\r\n   * Determines which corner is under the mouse cursor, represented by `pointer`.\r\n   * This function is return a corner only if the object is the active one.\r\n   * This is done to avoid selecting corner of non active object and activating transformations\r\n   * rather than drag action. The default behavior of fabricJS is that if you want to transform\r\n   * an object, first you select it to show the control set\r\n   * @private\r\n   * @param {Object} pointer The pointer indicating the mouse position\r\n   * @param {boolean} forTouch indicates if we are looking for interaction area with a touch action\r\n   * @return {String|Boolean} corner code (tl, tr, bl, br, etc.), or 0 if nothing is found.\r\n   */\r\n  findControl(\r\n    pointer: Point,\r\n    forTouch = false\r\n  ): { key: string; control: Control; coord: TOCoord } | undefined {\r\n    if (!this.hasControls || !this.canvas) {\r\n      return undefined;\r\n    }\r\n\r\n    this.__corner = undefined;\r\n    const cornerEntries = Object.entries(this.oCoords);\r\n    for (let i = cornerEntries.length - 1; i >= 0; i--) {\r\n      const [key, corner] = cornerEntries[i];\r\n      const control = this.controls[key];\r\n\r\n      if (\r\n        control.shouldActivate(\r\n          key,\r\n          this,\r\n          pointer,\r\n          forTouch ? corner.touchCorner : corner.corner\r\n        )\r\n      ) {\r\n        // this.canvas.contextTop.fillRect(pointer.x - 1, pointer.y - 1, 2, 2);\r\n        this.__corner = key;\r\n\r\n        return { key, control, coord: this.oCoords[key] };\r\n      }\r\n    }\r\n\r\n    return undefined;\r\n  }\r\n\r\n  /**\r\n   * Calculates the coordinates of the center of each control plus the corners of the control itself\r\n   * This basically just delegates to each control positionHandler\r\n   * WARNING: changing what is passed to positionHandler is a breaking change, since position handler\r\n   * is a public api and should be done just if extremely necessary\r\n   * @return {Record<string, TOCoord>}\r\n   */\r\n  calcOCoords(): Record<string, TOCoord> {\r\n    const vpt = this.getViewportTransform(),\r\n      center = this.getCenterPoint(),\r\n      tMatrix = createTranslateMatrix(center.x, center.y),\r\n      rMatrix = createRotateMatrix({\r\n        angle: this.getTotalAngle() - (!!this.group && this.flipX ? 180 : 0),\r\n      }),\r\n      positionMatrix = multiplyTransformMatrices(tMatrix, rMatrix),\r\n      startMatrix = multiplyTransformMatrices(vpt, positionMatrix),\r\n      finalMatrix = multiplyTransformMatrices(startMatrix, [\r\n        1 / vpt[0],\r\n        0,\r\n        0,\r\n        1 / vpt[3],\r\n        0,\r\n        0,\r\n      ]),\r\n      transformOptions = this.group\r\n        ? qrDecompose(this.calcTransformMatrix())\r\n        : undefined;\r\n    // decomposing could bring negative scaling and `_calculateCurrentDimensions` can't take it\r\n    if (transformOptions) {\r\n      transformOptions.scaleX = Math.abs(transformOptions.scaleX);\r\n      transformOptions.scaleY = Math.abs(transformOptions.scaleY);\r\n    }\r\n    const dim = this._calculateCurrentDimensions(transformOptions),\r\n      coords: Record<string, TOCoord> = {};\r\n\r\n    this.forEachControl((control, key) => {\r\n      const position = control.positionHandler(dim, finalMatrix, this, control);\r\n      // coords[key] are sometimes used as points. Those are points to which we add\r\n      // the property corner and touchCorner from `_calcCornerCoords`.\r\n      // don't remove this assign for an object spread.\r\n      coords[key] = Object.assign(\r\n        position,\r\n        this._calcCornerCoords(control, position)\r\n      );\r\n    });\r\n\r\n    // debug code\r\n    /*\r\n      const canvas = this.canvas;\r\n      setTimeout(function () {\r\n      if (!canvas) return;\r\n        canvas.contextTop.clearRect(0, 0, 700, 700);\r\n        canvas.contextTop.fillStyle = 'green';\r\n        Object.keys(coords).forEach(function(key) {\r\n          const control = coords[key];\r\n          canvas.contextTop.fillRect(control.x, control.y, 3, 3);\r\n        });\r\n      } 50);\r\n    */\r\n    return coords;\r\n  }\r\n\r\n  /**\r\n   * Sets the coordinates that determine the interaction area of each control\r\n   * note: if we would switch to ROUND corner area, all of this would disappear.\r\n   * everything would resolve to a single point and a pythagorean theorem for the distance\r\n   * @todo evaluate simplification of code switching to circle interaction area at runtime\r\n   * @private\r\n   */\r\n  private _calcCornerCoords(control: Control, position: Point) {\r\n    const angle = this.getTotalAngle();\r\n    const corner = control.calcCornerCoords(\r\n      angle,\r\n      this.cornerSize,\r\n      position.x,\r\n      position.y,\r\n      false,\r\n      this\r\n    );\r\n    const touchCorner = control.calcCornerCoords(\r\n      angle,\r\n      this.touchCornerSize,\r\n      position.x,\r\n      position.y,\r\n      true,\r\n      this\r\n    );\r\n    return { corner, touchCorner };\r\n  }\r\n\r\n  /**\r\n   * @override set controls' coordinates as well\r\n   * See {@link https://github.com/fabricjs/fabric.js/wiki/When-to-call-setCoords} and {@link http://fabricjs.com/fabric-gotchas}\r\n   * @return {void}\r\n   */\r\n  setCoords(): void {\r\n    super.setCoords();\r\n    this.canvas && (this.oCoords = this.calcOCoords());\r\n  }\r\n\r\n  /**\r\n   * Calls a function for each control. The function gets called,\r\n   * with the control, the control's key and the object that is calling the iterator\r\n   * @param {Function} fn function to iterate over the controls over\r\n   */\r\n  forEachControl(\r\n    fn: (\r\n      control: Control,\r\n      key: string,\r\n      fabricObject: InteractiveFabricObject\r\n    ) => any\r\n  ) {\r\n    for (const i in this.controls) {\r\n      fn(this.controls[i], i, this);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Draws a colored layer behind the object, inside its selection borders.\r\n   * Requires public options: padding, selectionBackgroundColor\r\n   * this function is called when the context is transformed\r\n   * has checks to be skipped when the object is on a staticCanvas\r\n   * @todo evaluate if make this disappear in favor of a pre-render hook for objects\r\n   * this was added by Andrea Bogazzi to make possible some feature for work reasons\r\n   * it seemed a good option, now is an edge case\r\n   * @param {CanvasRenderingContext2D} ctx Context to draw on\r\n   */\r\n  drawSelectionBackground(ctx: CanvasRenderingContext2D): void {\r\n    if (\r\n      !this.selectionBackgroundColor ||\r\n      (this.canvas && (this.canvas._activeObject as unknown as this) !== this)\r\n    ) {\r\n      return;\r\n    }\r\n    ctx.save();\r\n    const center = this.getRelativeCenterPoint(),\r\n      wh = this._calculateCurrentDimensions(),\r\n      vpt = this.getViewportTransform();\r\n    ctx.translate(center.x, center.y);\r\n    ctx.scale(1 / vpt[0], 1 / vpt[3]);\r\n    ctx.rotate(degreesToRadians(this.angle));\r\n    ctx.fillStyle = this.selectionBackgroundColor;\r\n    ctx.fillRect(-wh.x / 2, -wh.y / 2, wh.x, wh.y);\r\n    ctx.restore();\r\n  }\r\n\r\n  /**\r\n   * @public override this function in order to customize the drawing of the control box, e.g. rounded corners, different border style.\r\n   * @param {CanvasRenderingContext2D} ctx ctx is rotated and translated so that (0,0) is at object's center\r\n   * @param {Point} size the control box size used\r\n   */\r\n  strokeBorders(ctx: CanvasRenderingContext2D, size: Point): void {\r\n    ctx.strokeRect(-size.x / 2, -size.y / 2, size.x, size.y);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {CanvasRenderingContext2D} ctx Context to draw on\r\n   * @param {Point} size\r\n   * @param {TStyleOverride} styleOverride object to override the object style\r\n   */\r\n  _drawBorders(\r\n    ctx: CanvasRenderingContext2D,\r\n    size: Point,\r\n    styleOverride: TStyleOverride = {}\r\n  ): void {\r\n    const options = {\r\n      hasControls: this.hasControls,\r\n      borderColor: this.borderColor,\r\n      borderDashArray: this.borderDashArray,\r\n      ...styleOverride,\r\n    };\r\n    ctx.save();\r\n    ctx.strokeStyle = options.borderColor;\r\n    this._setLineDash(ctx, options.borderDashArray);\r\n    this.strokeBorders(ctx, size);\r\n    options.hasControls && this.drawControlsConnectingLines(ctx, size);\r\n    ctx.restore();\r\n  }\r\n\r\n  /**\r\n   * Renders controls and borders for the object\r\n   * the context here is not transformed\r\n   * @todo move to interactivity\r\n   * @param {CanvasRenderingContext2D} ctx Context to render on\r\n   * @param {TStyleOverride} [styleOverride] properties to override the object style\r\n   */\r\n  _renderControls(\r\n    ctx: CanvasRenderingContext2D,\r\n    styleOverride: TStyleOverride = {}\r\n  ) {\r\n    const { hasBorders, hasControls } = this;\r\n    const styleOptions = {\r\n      hasBorders,\r\n      hasControls,\r\n      ...styleOverride,\r\n    };\r\n    const vpt = this.getViewportTransform(),\r\n      shouldDrawBorders = styleOptions.hasBorders,\r\n      shouldDrawControls = styleOptions.hasControls;\r\n    const matrix = multiplyTransformMatrices(vpt, this.calcTransformMatrix());\r\n    const options = qrDecompose(matrix);\r\n    ctx.save();\r\n    ctx.translate(options.translateX, options.translateY);\r\n    ctx.lineWidth = 1 * this.borderScaleFactor;\r\n    // since interactive groups have been introduced, an object could be inside a group and needing controls\r\n    // the following equality check `this.group === this.parent` covers:\r\n    // object without a group ( undefined === undefined )\r\n    // object inside a group\r\n    // excludes object inside a group but multi selected since group and parent will differ in value\r\n    if (this.group === this.parent) {\r\n      ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\r\n    }\r\n    if (this.flipX) {\r\n      options.angle -= 180;\r\n    }\r\n    ctx.rotate(degreesToRadians(this.group ? options.angle : this.angle));\r\n    shouldDrawBorders && this.drawBorders(ctx, options, styleOverride);\r\n    shouldDrawControls && this.drawControls(ctx, styleOverride);\r\n    ctx.restore();\r\n  }\r\n\r\n  /**\r\n   * Draws borders of an object's bounding box.\r\n   * Requires public properties: width, height\r\n   * Requires public options: padding, borderColor\r\n   * @param {CanvasRenderingContext2D} ctx Context to draw on\r\n   * @param {object} options object representing current object parameters\r\n   * @param {TStyleOverride} [styleOverride] object to override the object style\r\n   */\r\n  drawBorders(\r\n    ctx: CanvasRenderingContext2D,\r\n    options: TQrDecomposeOut,\r\n    styleOverride: TStyleOverride\r\n  ): void {\r\n    let size;\r\n    if ((styleOverride && styleOverride.forActiveSelection) || this.group) {\r\n      const bbox = sizeAfterTransform(\r\n          this.width,\r\n          this.height,\r\n          calcDimensionsMatrix(options)\r\n        ),\r\n        stroke = !this.isStrokeAccountedForInDimensions()\r\n          ? (this.strokeUniform\r\n              ? new Point().scalarAdd(this.canvas ? this.canvas.getZoom() : 1)\r\n              : // this is extremely confusing. options comes from the upper function\r\n                // and is the qrDecompose of a matrix that takes in account zoom too\r\n                new Point(options.scaleX, options.scaleY)\r\n            ).scalarMultiply(this.strokeWidth)\r\n          : ZERO;\r\n      size = bbox\r\n        .add(stroke)\r\n        .scalarAdd(this.borderScaleFactor)\r\n        .scalarAdd(this.padding * 2);\r\n    } else {\r\n      size = this._calculateCurrentDimensions().scalarAdd(\r\n        this.borderScaleFactor\r\n      );\r\n    }\r\n    this._drawBorders(ctx, size, styleOverride);\r\n  }\r\n\r\n  /**\r\n   * Draws lines from a borders of an object's bounding box to controls that have `withConnection` property set.\r\n   * Requires public properties: width, height\r\n   * Requires public options: padding, borderColor\r\n   * @param {CanvasRenderingContext2D} ctx Context to draw on\r\n   * @param {Point} size object size x = width, y = height\r\n   */\r\n  drawControlsConnectingLines(\r\n    ctx: CanvasRenderingContext2D,\r\n    size: Point\r\n  ): void {\r\n    let shouldStroke = false;\r\n\r\n    ctx.beginPath();\r\n    this.forEachControl((control, key) => {\r\n      // in this moment, the ctx is centered on the object.\r\n      // width and height of the above function are the size of the bbox.\r\n      if (control.withConnection && control.getVisibility(this, key)) {\r\n        // reset movement for each control\r\n        shouldStroke = true;\r\n        ctx.moveTo(control.x * size.x, control.y * size.y);\r\n        ctx.lineTo(\r\n          control.x * size.x + control.offsetX,\r\n          control.y * size.y + control.offsetY\r\n        );\r\n      }\r\n    });\r\n    shouldStroke && ctx.stroke();\r\n  }\r\n\r\n  /**\r\n   * Draws corners of an object's bounding box.\r\n   * Requires public properties: width, height\r\n   * Requires public options: cornerSize, padding\r\n   * Be aware that since fabric 6.0 this function does not call setCoords anymore.\r\n   * setCoords needs to be called manually if the object of which we are rendering controls\r\n   * is outside the standard selection and transform process.\r\n   * @param {CanvasRenderingContext2D} ctx Context to draw on\r\n   * @param {ControlRenderingStyleOverride} styleOverride object to override the object style\r\n   */\r\n  drawControls(\r\n    ctx: CanvasRenderingContext2D,\r\n    styleOverride: ControlRenderingStyleOverride = {}\r\n  ) {\r\n    ctx.save();\r\n    const retinaScaling = this.getCanvasRetinaScaling();\r\n    const { cornerStrokeColor, cornerDashArray, cornerColor } = this;\r\n    const options = {\r\n      cornerStrokeColor,\r\n      cornerDashArray,\r\n      cornerColor,\r\n      ...styleOverride,\r\n    };\r\n    ctx.setTransform(retinaScaling, 0, 0, retinaScaling, 0, 0);\r\n    ctx.strokeStyle = ctx.fillStyle = options.cornerColor;\r\n    if (!this.transparentCorners) {\r\n      ctx.strokeStyle = options.cornerStrokeColor;\r\n    }\r\n    this._setLineDash(ctx, options.cornerDashArray);\r\n    this.forEachControl((control, key) => {\r\n      if (control.getVisibility(this, key)) {\r\n        const p = this.oCoords[key];\r\n        control.render(ctx, p.x, p.y, options, this);\r\n      }\r\n    });\r\n    ctx.restore();\r\n  }\r\n\r\n  /**\r\n   * Returns true if the specified control is visible, false otherwise.\r\n   * @param {string} controlKey The key of the control. Possible values are usually 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr',\r\n   * but since the control api allow for any control name, can be any string.\r\n   * @returns {boolean} true if the specified control is visible, false otherwise\r\n   */\r\n  isControlVisible(controlKey: string): boolean {\r\n    return (\r\n      this.controls[controlKey] &&\r\n      this.controls[controlKey].getVisibility(this, controlKey)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Sets the visibility of the specified control.\r\n   * please do not use.\r\n   * @param {String} controlKey The key of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.\r\n   * but since the control api allow for any control name, can be any string.\r\n   * @param {Boolean} visible true to set the specified control visible, false otherwise\r\n   * @todo discuss this overlap of priority here with the team. Andrea Bogazzi for details\r\n   */\r\n  setControlVisible(controlKey: string, visible: boolean) {\r\n    if (!this._controlsVisibility) {\r\n      this._controlsVisibility = {};\r\n    }\r\n    this._controlsVisibility[controlKey] = visible;\r\n  }\r\n\r\n  /**\r\n   * Sets the visibility state of object controls, this is just a bulk option for setControlVisible;\r\n   * @param {Record<string, boolean>} [options] with an optional key per control\r\n   * example: {Boolean} [options.bl] true to enable the bottom-left control, false to disable it\r\n   */\r\n  setControlsVisibility(options: Record<string, boolean> = {}) {\r\n    Object.entries(options).forEach(([controlKey, visibility]) =>\r\n      this.setControlVisible(controlKey, visibility)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Clears the canvas.contextTop in a specific area that corresponds to the object's bounding box\r\n   * that is in the canvas.contextContainer.\r\n   * This function is used to clear pieces of contextTop where we render ephemeral effects on top of the object.\r\n   * Example: blinking cursor text selection, drag effects.\r\n   * @todo discuss swapping restoreManually with a renderCallback, but think of async issues\r\n   * @param {Boolean} [restoreManually] When true won't restore the context after clear, in order to draw something else.\r\n   * @return {CanvasRenderingContext2D|undefined} canvas.contextTop that is either still transformed\r\n   * with the object transformMatrix, or restored to neutral transform\r\n   */\r\n  clearContextTop(\r\n    restoreManually?: boolean\r\n  ): CanvasRenderingContext2D | undefined {\r\n    if (!this.canvas) {\r\n      return;\r\n    }\r\n    const ctx = this.canvas.contextTop;\r\n    if (!ctx) {\r\n      return;\r\n    }\r\n    const v = this.canvas.viewportTransform;\r\n    ctx.save();\r\n    ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\r\n    this.transform(ctx);\r\n    // we add 4 pixel, to be sure to do not leave any pixel out\r\n    const width = this.width + 4,\r\n      height = this.height + 4;\r\n    ctx.clearRect(-width / 2, -height / 2, width, height);\r\n\r\n    restoreManually || ctx.restore();\r\n    return ctx;\r\n  }\r\n\r\n  /**\r\n   * This callback function is called every time _discardActiveObject or _setActiveObject\r\n   * try to to deselect this object. If the function returns true, the process is cancelled\r\n   * @param {Object} [options] options sent from the upper functions\r\n   * @param {TPointerEvent} [options.e] event if the process is generated by an event\r\n   * @param {FabricObject} [options.object] next object we are setting as active, and reason why\r\n   * this is being deselected\r\n   */\r\n  onDeselect(options?: {\r\n    e?: TPointerEvent;\r\n    object?: InteractiveFabricObject;\r\n  }): boolean {\r\n    // implemented by sub-classes, as needed.\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * This callback function is called every time _discardActiveObject or _setActiveObject\r\n   * try to to select this object. If the function returns true, the process is cancelled\r\n   * @param {Object} [options] options sent from the upper functions\r\n   * @param {Event} [options.e] event if the process is generated by an event\r\n   */\r\n  onSelect(options?: { e?: TPointerEvent }): boolean {\r\n    // implemented by sub-classes, as needed.\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Override to customize Drag behavior\r\n   * Fired from {@link Canvas#_onMouseMove}\r\n   * @returns true in order for the window to start a drag session\r\n   */\r\n  shouldStartDragging(e: TPointerEvent) {\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Override to customize Drag behavior\\\r\n   * Fired once a drag session has started\r\n   * @returns true to handle the drag event\r\n   */\r\n  onDragStart(e: DragEvent) {\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Override to customize drag and drop behavior\r\n   * @public\r\n   * @param {DragEvent} e\r\n   * @returns {boolean} true if the object currently dragged can be dropped on the target\r\n   */\r\n  canDrop(e: DragEvent): boolean {\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Override to customize drag and drop behavior\r\n   * render a specific effect when an object is the source of a drag event\r\n   * example: render the selection status for the part of text that is being dragged from a text object\r\n   * @public\r\n   * @param {DragEvent} e\r\n   */\r\n  renderDragSourceEffect(e: DragEvent) {\r\n    // for subclasses\r\n  }\r\n\r\n  /**\r\n   * Override to customize drag and drop behavior\r\n   * render a specific effect when an object is the target of a drag event\r\n   * used to show that the underly object can receive a drop, or to show how the\r\n   * object will change when dropping. example: show the cursor where the text is about to be dropped\r\n   * @public\r\n   * @param {DragEvent} e\r\n   */\r\n  renderDropTargetEffect(e: DragEvent) {\r\n    // for subclasses\r\n  }\r\n}\r\n","import type { Constructor } from '../typedefs';\r\n\r\n/***\r\n * https://www.typescriptlang.org/docs/handbook/mixins.html#alternative-pattern\r\n */\r\nexport function applyMixins<T extends Constructor, S extends Constructor>(\r\n  derivedCtor: T,\r\n  constructors: S[]\r\n) {\r\n  constructors.forEach((baseCtor) => {\r\n    Object.getOwnPropertyNames(baseCtor.prototype).forEach((name) => {\r\n      name !== 'constructor' &&\r\n        Object.defineProperty(\r\n          derivedCtor.prototype,\r\n          name,\r\n          Object.getOwnPropertyDescriptor(baseCtor.prototype, name) ||\r\n            Object.create(null)\r\n        );\r\n    });\r\n  });\r\n  return derivedCtor as T & { prototype: InstanceType<T & S> };\r\n}\r\n","import type { ObjectEvents } from '../../EventTypeDefs';\r\nimport { FabricObjectSVGExportMixin } from './FabricObjectSVGExportMixin';\r\nimport { InteractiveFabricObject } from './InteractiveObject';\r\nimport { applyMixins } from '../../util/applyMixins';\r\nimport type { FabricObjectProps } from './types/FabricObjectProps';\r\nimport type { TFabricObjectProps, SerializedObjectProps } from './types';\r\nimport { classRegistry } from '../../ClassRegistry';\r\n\r\n// TODO somehow we have to make a tree-shakeable import\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-empty-interface, @typescript-eslint/no-unused-vars\r\nexport interface FabricObject<\r\n  Props extends TFabricObjectProps = Partial<FabricObjectProps>,\r\n  SProps extends SerializedObjectProps = SerializedObjectProps,\r\n  EventSpec extends ObjectEvents = ObjectEvents\r\n> extends FabricObjectSVGExportMixin {}\r\n\r\nexport class FabricObject<\r\n  Props extends TFabricObjectProps = Partial<FabricObjectProps>,\r\n  SProps extends SerializedObjectProps = SerializedObjectProps,\r\n  EventSpec extends ObjectEvents = ObjectEvents\r\n> extends InteractiveFabricObject<Props, SProps, EventSpec> {}\r\n\r\napplyMixins(FabricObject, [FabricObjectSVGExportMixin]);\r\n\r\nclassRegistry.setClass(FabricObject);\r\nclassRegistry.setClass(FabricObject, 'object');\r\n\r\nexport { cacheProperties } from './defaultValues';\r\n","/**\r\n * Returns true if context has transparent pixel\r\n * at specified location (taking tolerance into account)\r\n * @param {CanvasRenderingContext2D} ctx context\r\n * @param {Number} x x coordinate in canvasElementCoordinate, not fabric space. integer\r\n * @param {Number} y y coordinate in canvasElementCoordinate, not fabric space. integer\r\n * @param {Number} tolerance Tolerance pixels around the point, not alpha tolerance, integer\r\n * @return {boolean} true if transparent\r\n */\r\nexport const isTransparent = (\r\n  ctx: CanvasRenderingContext2D,\r\n  x: number,\r\n  y: number,\r\n  tolerance: number\r\n): boolean => {\r\n  tolerance = Math.round(tolerance);\r\n  const size = tolerance * 2 + 1;\r\n  const { data } = ctx.getImageData(x - tolerance, y - tolerance, size, size);\r\n\r\n  // Split image data - for tolerance > 1, pixelDataSize = 4;\r\n  for (let i = 3; i < data.length; i += 4) {\r\n    const alphaChannel = data[i];\r\n    if (alphaChannel > 0) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n};\r\n","import type { XY } from '../../../Point';\r\nimport { Point } from '../../../Point';\r\nimport { degreesToRadians } from '../radiansDegreesConversion';\r\nimport { createVector } from '../vectors';\r\nimport type { TProjectStrokeOnPointsOptions, TProjection } from './types';\r\n\r\n/**\r\n * @see https://github.com/fabricjs/fabric.js/pull/8344\r\n * @todo consider removing skewing from points before calculating stroke projection,\r\n * see https://github.com/fabricjs/fabric.js/commit/494a10ee2f8c2278ae9a55b20bf50cf6ee25b064#commitcomment-94751537\r\n */\r\nexport abstract class StrokeProjectionsBase {\r\n  declare options: TProjectStrokeOnPointsOptions;\r\n  declare scale: Point;\r\n  declare strokeUniformScalar: Point;\r\n  declare strokeProjectionMagnitude: number;\r\n\r\n  constructor(options: TProjectStrokeOnPointsOptions) {\r\n    this.options = options;\r\n    this.strokeProjectionMagnitude = this.options.strokeWidth / 2;\r\n    this.scale = new Point(this.options.scaleX, this.options.scaleY);\r\n    this.strokeUniformScalar = this.options.strokeUniform\r\n      ? new Point(1 / this.options.scaleX, 1 / this.options.scaleY)\r\n      : new Point(1, 1);\r\n  }\r\n\r\n  /**\r\n   * When the stroke is uniform, scaling affects the arrangement of points. So we must take it into account.\r\n   */\r\n  protected createSideVector(from: XY, to: XY) {\r\n    const v = createVector(from, to);\r\n    return this.options.strokeUniform ? v.multiply(this.scale) : v;\r\n  }\r\n\r\n  protected abstract calcOrthogonalProjection(\r\n    from: Point,\r\n    to: Point,\r\n    magnitude?: number\r\n  ): Point;\r\n\r\n  protected projectOrthogonally(from: Point, to: Point, magnitude?: number) {\r\n    return this.applySkew(\r\n      from.add(this.calcOrthogonalProjection(from, to, magnitude))\r\n    );\r\n  }\r\n\r\n  protected isSkewed() {\r\n    return this.options.skewX !== 0 || this.options.skewY !== 0;\r\n  }\r\n\r\n  protected applySkew(point: Point) {\r\n    const p = new Point(point);\r\n    // skewY must be applied before skewX as this distortion affects skewX calculation\r\n    p.y += p.x * Math.tan(degreesToRadians(this.options.skewY));\r\n    p.x += p.y * Math.tan(degreesToRadians(this.options.skewX));\r\n    return p;\r\n  }\r\n\r\n  protected scaleUnitVector(unitVector: Point, scalar: number) {\r\n    return unitVector.multiply(this.strokeUniformScalar).scalarMultiply(scalar);\r\n  }\r\n\r\n  protected abstract projectPoints(): Point[];\r\n\r\n  public abstract project(): TProjection[];\r\n}\r\n","import type { XY } from '../../../Point';\r\nimport { Point } from '../../../Point';\r\nimport { halfPI, twoMathPi } from '../../../constants';\r\nimport type { TRadian } from '../../../typedefs';\r\nimport { degreesToRadians } from '../radiansDegreesConversion';\r\nimport {\r\n  calcAngleBetweenVectors,\r\n  calcVectorRotation,\r\n  crossProduct,\r\n  getOrthonormalVector,\r\n  getUnitVector,\r\n  isBetweenVectors,\r\n  magnitude,\r\n  rotateVector,\r\n} from '../vectors';\r\nimport { StrokeProjectionsBase } from './StrokeProjectionsBase';\r\nimport type { TProjection, TProjectStrokeOnPointsOptions } from './types';\r\n\r\nconst zeroVector = new Point();\r\n\r\n/**\r\n * class in charge of finding projections for each type of line join\r\n * @see {@link [Closed path projections at #8344](https://github.com/fabricjs/fabric.js/pull/8344#2-closed-path)}\r\n *\r\n * - MDN:\r\n *   - https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/lineJoin\r\n *   - https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linejoin\r\n * - Spec: https://svgwg.org/svg2-draft/painting.html#StrokeLinejoinProperty\r\n * - Playground to understand how the line joins works: https://hypertolosana.github.io/efficient-webgl-stroking/index.html\r\n * - View the calculated projections for each of the control points: https://codesandbox.io/s/project-stroke-points-with-context-to-trace-b8jc4j?file=/src/index.js\r\n *\r\n */\r\nexport class StrokeLineJoinProjections extends StrokeProjectionsBase {\r\n  /**\r\n   * The point being projected (the angle ∠BAC)\r\n   */\r\n  declare A: Point;\r\n  /**\r\n   * The point before A\r\n   */\r\n  declare B: Point;\r\n  /**\r\n   * The point after A\r\n   */\r\n  declare C: Point;\r\n  /**\r\n   * The AB vector\r\n   */\r\n  AB: Point;\r\n  /**\r\n   * The AC vector\r\n   */\r\n  AC: Point;\r\n  /**\r\n   * The angle of A (∠BAC)\r\n   */\r\n  alpha: TRadian;\r\n  /**\r\n   * The bisector of A (∠BAC)\r\n   */\r\n  bisector: Point;\r\n\r\n  static getOrthogonalRotationFactor(vector1: Point, vector2?: Point) {\r\n    const angle = vector2\r\n      ? calcAngleBetweenVectors(vector1, vector2)\r\n      : calcVectorRotation(vector1);\r\n    return Math.abs(angle) < halfPI ? -1 : 1;\r\n  }\r\n\r\n  constructor(A: XY, B: XY, C: XY, options: TProjectStrokeOnPointsOptions) {\r\n    super(options);\r\n    this.A = new Point(A);\r\n    this.B = new Point(B);\r\n    this.C = new Point(C);\r\n    this.AB = this.createSideVector(this.A, this.B);\r\n    this.AC = this.createSideVector(this.A, this.C);\r\n    this.alpha = calcAngleBetweenVectors(this.AB, this.AC);\r\n    this.bisector = getUnitVector(\r\n      // if AC is also the zero vector nothing will be projected\r\n      // in that case the next point will handle the projection\r\n      rotateVector(this.AB.eq(zeroVector) ? this.AC : this.AB, this.alpha / 2)\r\n    );\r\n  }\r\n\r\n  calcOrthogonalProjection(\r\n    from: Point,\r\n    to: Point,\r\n    magnitude: number = this.strokeProjectionMagnitude\r\n  ) {\r\n    const vector = this.createSideVector(from, to);\r\n    const orthogonalProjection = getOrthonormalVector(vector);\r\n    const correctSide = StrokeLineJoinProjections.getOrthogonalRotationFactor(\r\n      orthogonalProjection,\r\n      this.bisector\r\n    );\r\n    return this.scaleUnitVector(orthogonalProjection, magnitude * correctSide);\r\n  }\r\n\r\n  /**\r\n   * BEVEL\r\n   * Calculation: the projection points are formed by the vector orthogonal to the vertex.\r\n   *\r\n   * @see https://github.com/fabricjs/fabric.js/pull/8344#2-2-bevel\r\n   */\r\n  projectBevel() {\r\n    const projections: Point[] = [];\r\n    // if `alpha` equals 0 or 2*PI, the projections are the same for `B` and `C`\r\n    (this.alpha % twoMathPi === 0 ? [this.B] : [this.B, this.C]).forEach(\r\n      (to) => {\r\n        projections.push(this.projectOrthogonally(this.A, to));\r\n        projections.push(\r\n          this.projectOrthogonally(this.A, to, -this.strokeProjectionMagnitude)\r\n        );\r\n      }\r\n    );\r\n    return projections;\r\n  }\r\n\r\n  /**\r\n   * MITER\r\n   * Calculation: the corner is formed by extending the outer edges of the stroke\r\n   * at the tangents of the path segments until they intersect.\r\n   *\r\n   * @see https://github.com/fabricjs/fabric.js/pull/8344#2-1-miter\r\n   */\r\n  projectMiter() {\r\n    const projections: Point[] = [],\r\n      alpha = Math.abs(this.alpha),\r\n      hypotUnitScalar = 1 / Math.sin(alpha / 2),\r\n      miterVector = this.scaleUnitVector(\r\n        this.bisector,\r\n        -this.strokeProjectionMagnitude * hypotUnitScalar\r\n      );\r\n\r\n    // When two line segments meet at a sharp angle, it is possible for the join to extend,\r\n    // far beyond the thickness of the line stroking the path. The stroke-miterlimit imposes\r\n    // a limit on the extent of the line join.\r\n    // MDN: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-miterlimit\r\n    // When the stroke is uniform, scaling changes the arrangement of points, this changes the miter-limit\r\n    const strokeMiterLimit = this.options.strokeUniform\r\n      ? magnitude(\r\n          this.scaleUnitVector(this.bisector, this.options.strokeMiterLimit)\r\n        )\r\n      : this.options.strokeMiterLimit;\r\n\r\n    if (\r\n      magnitude(miterVector) / this.strokeProjectionMagnitude <=\r\n      strokeMiterLimit\r\n    ) {\r\n      projections.push(this.applySkew(this.A.add(miterVector)));\r\n    }\r\n    /* when the miter-limit is reached, the stroke line join becomes of type bevel.\r\n      We always need two orthogonal projections which are basically bevel-type projections,\r\n      so regardless of whether the miter-limit was reached or not, we include these projections.\r\n    */\r\n    projections.push(...this.projectBevel());\r\n\r\n    return projections;\r\n  }\r\n\r\n  /**\r\n   * ROUND (without skew)\r\n   * Calculation: the projections are the two vectors parallel to X and Y axes\r\n   *\r\n   * @see https://github.com/fabricjs/fabric.js/pull/8344#2-3-1-round-without-skew\r\n   */\r\n  private projectRoundNoSkew(startCircle: Point, endCircle: Point) {\r\n    const projections: Point[] = [],\r\n      // correctSide is used to only consider projecting for the outer side\r\n      correctSide = new Point(\r\n        StrokeLineJoinProjections.getOrthogonalRotationFactor(this.bisector),\r\n        StrokeLineJoinProjections.getOrthogonalRotationFactor(\r\n          new Point(this.bisector.y, this.bisector.x)\r\n        )\r\n      ),\r\n      radiusOnAxisX = new Point(1, 0)\r\n        .scalarMultiply(this.strokeProjectionMagnitude)\r\n        .multiply(this.strokeUniformScalar)\r\n        .multiply(correctSide),\r\n      radiusOnAxisY = new Point(0, 1)\r\n        .scalarMultiply(this.strokeProjectionMagnitude)\r\n        .multiply(this.strokeUniformScalar)\r\n        .multiply(correctSide);\r\n\r\n    [radiusOnAxisX, radiusOnAxisY].forEach((vector) => {\r\n      if (isBetweenVectors(vector, startCircle, endCircle)) {\r\n        projections.push(this.A.add(vector));\r\n      }\r\n    });\r\n    return projections;\r\n  }\r\n\r\n  /**\r\n   * ROUND (with skew)\r\n   * Calculation: the projections are the points furthest from the vertex in\r\n   * the direction of the X and Y axes after distortion.\r\n   *\r\n   * @see https://github.com/fabricjs/fabric.js/pull/8344#2-3-2-round-skew\r\n   */\r\n  private projectRoundWithSkew(startCircle: Point, endCircle: Point) {\r\n    const projections: Point[] = [];\r\n\r\n    const { skewX, skewY, scaleX, scaleY, strokeUniform } = this.options,\r\n      shearing = new Point(\r\n        Math.tan(degreesToRadians(skewX)),\r\n        Math.tan(degreesToRadians(skewY))\r\n      );\r\n    // The points furthest from the vertex in the direction of the X and Y axes after distortion\r\n    const circleRadius = this.strokeProjectionMagnitude,\r\n      newY = strokeUniform\r\n        ? circleRadius /\r\n          scaleY /\r\n          Math.sqrt(1 / scaleY ** 2 + (1 / scaleX ** 2) * shearing.y ** 2)\r\n        : circleRadius / Math.sqrt(1 + shearing.y ** 2),\r\n      furthestY = new Point(\r\n        // Safe guard due to floating point precision. In some situations the square root\r\n        // was returning NaN because of a negative number close to zero.\r\n        Math.sqrt(Math.max(circleRadius ** 2 - newY ** 2, 0)),\r\n        newY\r\n      ),\r\n      newX = strokeUniform\r\n        ? circleRadius /\r\n          Math.sqrt(\r\n            1 +\r\n              (shearing.x ** 2 * (1 / scaleY) ** 2) /\r\n                (1 / scaleX + (1 / scaleX) * shearing.x * shearing.y) ** 2\r\n          )\r\n        : circleRadius /\r\n          Math.sqrt(1 + shearing.x ** 2 / (1 + shearing.x * shearing.y) ** 2),\r\n      furthestX = new Point(\r\n        newX,\r\n        Math.sqrt(Math.max(circleRadius ** 2 - newX ** 2, 0))\r\n      );\r\n\r\n    [\r\n      furthestX,\r\n      furthestX.scalarMultiply(-1),\r\n      furthestY,\r\n      furthestY.scalarMultiply(-1),\r\n    ]\r\n      // We need to skew the vector here as this information is used to check if\r\n      // it is between the start and end of the circle segment\r\n      .map((vector) =>\r\n        this.applySkew(\r\n          strokeUniform ? vector.multiply(this.strokeUniformScalar) : vector\r\n        )\r\n      )\r\n      .forEach((vector) => {\r\n        if (isBetweenVectors(vector, startCircle, endCircle)) {\r\n          projections.push(this.applySkew(this.A).add(vector));\r\n        }\r\n      });\r\n\r\n    return projections;\r\n  }\r\n\r\n  projectRound() {\r\n    const projections: Point[] = [];\r\n    /* Include the start and end points of the circle segment, so that only\r\n      the projections contained within it are included */\r\n    // add the orthogonal projections (start and end points of circle segment)\r\n    projections.push(...this.projectBevel());\r\n    // let's determines which one of the orthogonal projection is the beginning and end of the circle segment.\r\n    // when `alpha` equals 0 or 2*PI, we have a straight line, so the way to find the start/end is different.\r\n    const isStraightLine = this.alpha % twoMathPi === 0,\r\n      // change the origin of the projections to point A\r\n      // so that the cross product calculation is correct\r\n      newOrigin = this.applySkew(this.A),\r\n      proj0 = projections[isStraightLine ? 0 : 2].subtract(newOrigin),\r\n      proj1 = projections[isStraightLine ? 1 : 0].subtract(newOrigin),\r\n      // when `isStraightLine` === true, we compare with the vector opposite AB, otherwise we compare with the bisector.\r\n      comparisonVector = isStraightLine\r\n        ? this.applySkew(this.AB.scalarMultiply(-1))\r\n        : this.applySkew(\r\n            this.bisector.multiply(this.strokeUniformScalar).scalarMultiply(-1)\r\n          ),\r\n      // the beginning of the circle segment is always to the right of the comparison vector (cross product > 0)\r\n      isProj0Start = crossProduct(proj0, comparisonVector) > 0,\r\n      startCircle = isProj0Start ? proj0 : proj1,\r\n      endCircle = isProj0Start ? proj1 : proj0;\r\n    if (!this.isSkewed()) {\r\n      projections.push(...this.projectRoundNoSkew(startCircle, endCircle));\r\n    } else {\r\n      projections.push(...this.projectRoundWithSkew(startCircle, endCircle));\r\n    }\r\n    return projections;\r\n  }\r\n\r\n  /**\r\n   * Project stroke width on points returning projections for each point as follows:\r\n   * - `miter`: 1 point corresponding to the outer boundary. If the miter limit is exceeded, it will be 2 points (becomes bevel)\r\n   * - `bevel`: 2 points corresponding to the bevel possible boundaries, orthogonal to the stroke.\r\n   * - `round`: same as `bevel` when it has no skew, with skew are 4 points.\r\n   */\r\n  protected projectPoints() {\r\n    switch (this.options.strokeLineJoin) {\r\n      case 'miter':\r\n        return this.projectMiter();\r\n      case 'round':\r\n        return this.projectRound();\r\n      default:\r\n        return this.projectBevel();\r\n    }\r\n  }\r\n\r\n  public project(): TProjection[] {\r\n    return this.projectPoints().map((point) => ({\r\n      originPoint: this.A,\r\n      projectedPoint: point,\r\n      angle: this.alpha,\r\n      bisector: this.bisector,\r\n    }));\r\n  }\r\n}\r\n","import type { XY } from '../../../Point';\r\nimport { Point } from '../../../Point';\r\nimport { getOrthonormalVector, getUnitVector } from '../vectors';\r\nimport { StrokeLineJoinProjections } from './StrokeLineJoinProjections';\r\nimport { StrokeProjectionsBase } from './StrokeProjectionsBase';\r\nimport type { TProjection, TProjectStrokeOnPointsOptions } from './types';\r\n\r\n/**\r\n * class in charge of finding projections for each type of line cap for start/end of an open path\r\n * @see {@link [Open path projections at #8344](https://github.com/fabricjs/fabric.js/pull/8344#1-open-path)}\r\n *\r\n * Reference:\r\n * - MDN:\r\n *   - https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/lineCap\r\n *   - https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linecap\r\n * - Spec: https://html.spec.whatwg.org/multipage/canvas.html#dom-context-2d-linecap-dev\r\n * - Playground to understand how the line joins works: https://hypertolosana.github.io/efficient-webgl-stroking/index.html\r\n * - View the calculated projections for each of the control points: https://codesandbox.io/s/project-stroke-points-with-context-to-trace-b8jc4j?file=/src/index.js\r\n */\r\nexport class StrokeLineCapProjections extends StrokeProjectionsBase {\r\n  /**\r\n   * edge point\r\n   */\r\n  declare A: Point;\r\n  /**\r\n   * point next to edge point\r\n   */\r\n  declare T: Point;\r\n\r\n  constructor(A: XY, T: XY, options: TProjectStrokeOnPointsOptions) {\r\n    super(options);\r\n    this.A = new Point(A);\r\n    this.T = new Point(T);\r\n  }\r\n\r\n  calcOrthogonalProjection(\r\n    from: Point,\r\n    to: Point,\r\n    magnitude: number = this.strokeProjectionMagnitude\r\n  ) {\r\n    const vector = this.createSideVector(from, to);\r\n    return this.scaleUnitVector(getOrthonormalVector(vector), magnitude);\r\n  }\r\n\r\n  /**\r\n   * OPEN PATH START/END - Line cap: Butt\r\n   * Calculation: to find the projections, just find the points orthogonal to the stroke\r\n   *\r\n   * @see https://github.com/fabricjs/fabric.js/pull/8344#1-1-butt\r\n   */\r\n  projectButt() {\r\n    return [\r\n      this.projectOrthogonally(this.A, this.T, this.strokeProjectionMagnitude),\r\n      this.projectOrthogonally(this.A, this.T, -this.strokeProjectionMagnitude),\r\n    ];\r\n  }\r\n\r\n  /**\r\n   * OPEN PATH START/END - Line cap: Round\r\n   * Calculation: same as stroke line join `round`\r\n   *\r\n   * @see https://github.com/fabricjs/fabric.js/pull/8344#1-2-round\r\n   */\r\n  projectRound() {\r\n    const projections: Point[] = [];\r\n\r\n    if (!this.isSkewed() && this.A.eq(this.T)) {\r\n      /* 1 point case without `skew`\r\n        When `strokeUniform` is true, scaling has no effect.\r\n        So we divide by scale, to remove its effect.\r\n      */\r\n      const projection = new Point(1, 1)\r\n        .scalarMultiply(this.strokeProjectionMagnitude)\r\n        .multiply(this.strokeUniformScalar);\r\n      projections.push(\r\n        this.applySkew(this.A.add(projection)),\r\n        this.applySkew(this.A.subtract(projection))\r\n      );\r\n    } else {\r\n      projections.push(\r\n        ...new StrokeLineJoinProjections(\r\n          this.A,\r\n          this.T,\r\n          this.T,\r\n          this.options\r\n        ).projectRound()\r\n      );\r\n    }\r\n\r\n    return projections;\r\n  }\r\n\r\n  /**\r\n   * OPEN PATH START/END - Line cap: Square\r\n   * Calculation: project a rectangle of points on the stroke in the opposite direction of the vector `AT`\r\n   *\r\n   * @see https://github.com/fabricjs/fabric.js/pull/8344#1-3-square\r\n   */\r\n  projectSquare() {\r\n    const projections: Point[] = [];\r\n\r\n    if (this.A.eq(this.T)) {\r\n      /* 1 point case without `skew`\r\n        When `strokeUniform` is true, scaling has no effect.\r\n        So we divide by scale, to remove its effect.\r\n      */\r\n      const projection = new Point(1, 1)\r\n        .scalarMultiply(this.strokeProjectionMagnitude)\r\n        .multiply(this.strokeUniformScalar);\r\n      projections.push(this.A.add(projection), this.A.subtract(projection));\r\n    } else {\r\n      const orthogonalProjection = this.calcOrthogonalProjection(\r\n        this.A,\r\n        this.T,\r\n        this.strokeProjectionMagnitude\r\n      );\r\n      const strokePointingOut = this.scaleUnitVector(\r\n        getUnitVector(this.createSideVector(this.A, this.T)),\r\n        -this.strokeProjectionMagnitude\r\n      );\r\n      const projectedA = this.A.add(strokePointingOut);\r\n      projections.push(\r\n        projectedA.add(orthogonalProjection),\r\n        projectedA.subtract(orthogonalProjection)\r\n      );\r\n    }\r\n\r\n    return projections.map((p) => this.applySkew(p));\r\n  }\r\n\r\n  protected projectPoints() {\r\n    switch (this.options.strokeLineCap) {\r\n      case 'round':\r\n        return this.projectRound();\r\n      case 'square':\r\n        return this.projectSquare();\r\n      default:\r\n        return this.projectButt();\r\n    }\r\n  }\r\n\r\n  public project(): TProjection[] {\r\n    return this.projectPoints().map((point) => ({\r\n      originPoint: this.A,\r\n      projectedPoint: point,\r\n    }));\r\n  }\r\n}\r\n","import { Point, type XY } from '../../../Point';\r\nimport { findIndexRight } from '../../internals';\r\nimport { StrokeLineCapProjections } from './StrokeLineCapProjections';\r\nimport { StrokeLineJoinProjections } from './StrokeLineJoinProjections';\r\nimport type { TProjection, TProjectStrokeOnPointsOptions } from './types';\r\n\r\nexport * from './types';\r\n\r\n/**\r\n *\r\n * Used to calculate object's bounding box\r\n *\r\n * @see https://github.com/fabricjs/fabric.js/pull/8344\r\n *\r\n */\r\nexport const projectStrokeOnPoints = (\r\n  points: XY[],\r\n  options: TProjectStrokeOnPointsOptions,\r\n  openPath = false\r\n): TProjection[] => {\r\n  const projections: TProjection[] = [];\r\n\r\n  if (points.length === 0) {\r\n    return projections;\r\n  }\r\n\r\n  // first we remove duplicate neighboring points\r\n  const reduced = points.reduce(\r\n    (reduced, point) => {\r\n      if (!reduced[reduced.length - 1].eq(point)) {\r\n        reduced.push(new Point(point));\r\n      }\r\n      return reduced;\r\n    },\r\n    [new Point(points[0])]\r\n  );\r\n\r\n  if (reduced.length === 1) {\r\n    openPath = true;\r\n  } else if (!openPath) {\r\n    // remove points from end in case they equal the first point\r\n    // in order to correctly project the first point\r\n    const start = reduced[0];\r\n    const index = findIndexRight(reduced, (point) => !point.eq(start));\r\n    reduced.splice(index + 1);\r\n  }\r\n\r\n  reduced.forEach((A, index, points) => {\r\n    let B: XY, C: XY;\r\n    if (index === 0) {\r\n      C = points[1];\r\n      B = openPath ? A : points[points.length - 1];\r\n    } else if (index === points.length - 1) {\r\n      B = points[index - 1];\r\n      C = openPath ? A : points[0];\r\n    } else {\r\n      B = points[index - 1];\r\n      C = points[index + 1];\r\n    }\r\n\r\n    if (openPath && points.length === 1) {\r\n      projections.push(\r\n        ...new StrokeLineCapProjections(A, A, options).project()\r\n      );\r\n    } else if (openPath && (index === 0 || index === points.length - 1)) {\r\n      projections.push(\r\n        ...new StrokeLineCapProjections(\r\n          A,\r\n          index === 0 ? C : B,\r\n          options\r\n        ).project()\r\n      );\r\n    } else {\r\n      projections.push(\r\n        ...new StrokeLineJoinProjections(A, B, C, options).project()\r\n      );\r\n    }\r\n  });\r\n\r\n  return projections;\r\n};\r\n","/**\r\n * Capitalizes a string\r\n * @param {String} string String to capitalize\r\n * @param {Boolean} [firstLetterOnly] If true only first letter is capitalized\r\n * and other letters stay untouched, if false first letter is capitalized\r\n * and other letters are converted to lowercase.\r\n * @return {String} Capitalized version of a string\r\n */\r\nexport const capitalize = (string: string, firstLetterOnly = false): string =>\r\n  `${string.charAt(0).toUpperCase()}${\r\n    firstLetterOnly ? string.slice(1) : string.slice(1).toLowerCase()\r\n  }`;\r\n\r\n/**\r\n * Escapes XML in a string\r\n * @param {String} string String to escape\r\n * @return {String} Escaped version of a string\r\n */\r\nexport const escapeXml = (string: string): string =>\r\n  string\r\n    .replace(/&/g, '&amp;')\r\n    .replace(/\"/g, '&quot;')\r\n    .replace(/'/g, '&apos;')\r\n    .replace(/</g, '&lt;')\r\n    .replace(/>/g, '&gt;');\r\n\r\n/**\r\n * Divide a string in the user perceived single units\r\n * @param {String} textstring String to escape\r\n * @return {Array} array containing the graphemes\r\n */\r\nexport const graphemeSplit = (textstring: string): string[] => {\r\n  const graphemes = [];\r\n  for (let i = 0, chr; i < textstring.length; i++) {\r\n    if ((chr = getWholeChar(textstring, i)) === false) {\r\n      continue;\r\n    }\r\n    graphemes.push(chr as string);\r\n  }\r\n  return graphemes;\r\n};\r\n\r\n// taken from mdn in the charAt doc page.\r\nconst getWholeChar = (str: string, i: number): string | boolean => {\r\n  const code = str.charCodeAt(i);\r\n  if (isNaN(code)) {\r\n    return ''; // Position not found\r\n  }\r\n  if (code < 0xd800 || code > 0xdfff) {\r\n    return str.charAt(i);\r\n  }\r\n\r\n  // High surrogate (could change last hex to 0xDB7F to treat high private\r\n  // surrogates as single characters)\r\n  if (0xd800 <= code && code <= 0xdbff) {\r\n    if (str.length <= i + 1) {\r\n      throw 'High surrogate without following low surrogate';\r\n    }\r\n    const next = str.charCodeAt(i + 1);\r\n    if (0xdc00 > next || next > 0xdfff) {\r\n      throw 'High surrogate without following low surrogate';\r\n    }\r\n    return str.charAt(i) + str.charAt(i + 1);\r\n  }\r\n  // Low surrogate (0xDC00 <= code && code <= 0xDFFF)\r\n  if (i === 0) {\r\n    throw 'Low surrogate without preceding high surrogate';\r\n  }\r\n  const prev = str.charCodeAt(i - 1);\r\n\r\n  // (could change last hex to 0xDB7F to treat high private\r\n  // surrogates as single characters)\r\n  if (0xd800 > prev || prev > 0xdbff) {\r\n    throw 'Low surrogate without preceding high surrogate';\r\n  }\r\n  // We can pass over low surrogates now as the second component\r\n  // in a pair which we have already processed\r\n  return false;\r\n};\r\n","import { reNewline } from '../../constants';\r\nimport type {\r\n  TextStyle,\r\n  TextStyleDeclaration,\r\n} from '../../shapes/Text/StyledText';\r\nimport { cloneDeep } from '../internals/cloneDeep';\r\nimport { graphemeSplit } from '../lang_string';\r\n\r\nexport type TextStyleArray = {\r\n  start: number;\r\n  end: number;\r\n  style: TextStyleDeclaration;\r\n}[];\r\n\r\n/**\r\n * @param {Object} prevStyle first style to compare\r\n * @param {Object} thisStyle second style to compare\r\n * @param {boolean} forTextSpans whether to check overline, underline, and line-through properties\r\n * @return {boolean} true if the style changed\r\n */\r\nexport const hasStyleChanged = (\r\n  prevStyle: TextStyleDeclaration,\r\n  thisStyle: TextStyleDeclaration,\r\n  forTextSpans = false\r\n) =>\r\n  prevStyle.fill !== thisStyle.fill ||\r\n  prevStyle.stroke !== thisStyle.stroke ||\r\n  prevStyle.strokeWidth !== thisStyle.strokeWidth ||\r\n  prevStyle.fontSize !== thisStyle.fontSize ||\r\n  prevStyle.fontFamily !== thisStyle.fontFamily ||\r\n  prevStyle.fontWeight !== thisStyle.fontWeight ||\r\n  prevStyle.fontStyle !== thisStyle.fontStyle ||\r\n  prevStyle.textBackgroundColor !== thisStyle.textBackgroundColor ||\r\n  prevStyle.deltaY !== thisStyle.deltaY ||\r\n  (forTextSpans &&\r\n    (prevStyle.overline !== thisStyle.overline ||\r\n      prevStyle.underline !== thisStyle.underline ||\r\n      prevStyle.linethrough !== thisStyle.linethrough));\r\n\r\n/**\r\n * Returns the array form of a text object's inline styles property with styles grouped in ranges\r\n * rather than per character. This format is less verbose, and is better suited for storage\r\n * so it is used in serialization (not during runtime).\r\n * @param {object} styles per character styles for a text object\r\n * @param {String} text the text string that the styles are applied to\r\n * @return {{start: number, end: number, style: object}[]}\r\n */\r\nexport const stylesToArray = (\r\n  styles: TextStyle,\r\n  text: string\r\n): TextStyleArray => {\r\n  const textLines = text.split('\\n'),\r\n    stylesArray = [];\r\n  let charIndex = -1,\r\n    prevStyle = {};\r\n  // clone style structure to prevent mutation\r\n  styles = cloneDeep(styles);\r\n\r\n  //loop through each textLine\r\n  for (let i = 0; i < textLines.length; i++) {\r\n    const chars = graphemeSplit(textLines[i]);\r\n    if (!styles[i]) {\r\n      //no styles exist for this line, so add the line's length to the charIndex total and reset prevStyle\r\n      charIndex += chars.length;\r\n      prevStyle = {};\r\n      continue;\r\n    }\r\n    //loop through each character of the current line\r\n    for (let c = 0; c < chars.length; c++) {\r\n      charIndex++;\r\n      const thisStyle = styles[i][c];\r\n      //check if style exists for this character\r\n      if (thisStyle && Object.keys(thisStyle).length > 0) {\r\n        if (hasStyleChanged(prevStyle, thisStyle, true)) {\r\n          stylesArray.push({\r\n            start: charIndex,\r\n            end: charIndex + 1,\r\n            style: thisStyle,\r\n          });\r\n        } else {\r\n          //if style is the same as previous character, increase end index\r\n          stylesArray[stylesArray.length - 1].end++;\r\n        }\r\n      }\r\n      prevStyle = thisStyle || {};\r\n    }\r\n  }\r\n  return stylesArray;\r\n};\r\n\r\n/**\r\n * Returns the object form of the styles property with styles that are assigned per\r\n * character rather than grouped by range. This format is more verbose, and is\r\n * only used during runtime (not for serialization/storage)\r\n * @param {Array} styles the serialized form of a text object's styles\r\n * @param {String} text the text string that the styles are applied to\r\n * @return {Object}\r\n */\r\nexport const stylesFromArray = (\r\n  styles: TextStyleArray | TextStyle,\r\n  text: string\r\n): TextStyle => {\r\n  if (!Array.isArray(styles)) {\r\n    // clone to prevent mutation\r\n    return cloneDeep(styles);\r\n  }\r\n  const textLines = text.split(reNewline),\r\n    stylesObject: TextStyle = {};\r\n  let charIndex = -1,\r\n    styleIndex = 0;\r\n  //loop through each textLine\r\n  for (let i = 0; i < textLines.length; i++) {\r\n    const chars = graphemeSplit(textLines[i]);\r\n\r\n    //loop through each character of the current line\r\n    for (let c = 0; c < chars.length; c++) {\r\n      charIndex++;\r\n      //check if there's a style collection that includes the current character\r\n      if (\r\n        styles[styleIndex] &&\r\n        styles[styleIndex].start <= charIndex &&\r\n        charIndex < styles[styleIndex].end\r\n      ) {\r\n        //create object for line index if it doesn't exist\r\n        stylesObject[i] = stylesObject[i] || {};\r\n        //assign a style at this character's index\r\n        stylesObject[i][c] = { ...styles[styleIndex].style };\r\n        //if character is at the end of the current style collection, move to the next\r\n        if (charIndex === styles[styleIndex].end - 1) {\r\n          styleIndex++;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return stylesObject;\r\n};\r\n","import { FILL, STROKE } from '../constants';\r\n\r\n/**\r\n * Attributes parsed from all SVG elements\r\n * @type array\r\n */\r\nexport const SHARED_ATTRIBUTES = [\r\n  'display',\r\n  'transform',\r\n  FILL,\r\n  'fill-opacity',\r\n  'fill-rule',\r\n  'opacity',\r\n  STROKE,\r\n  'stroke-dasharray',\r\n  'stroke-linecap',\r\n  'stroke-dashoffset',\r\n  'stroke-linejoin',\r\n  'stroke-miterlimit',\r\n  'stroke-opacity',\r\n  'stroke-width',\r\n  'id',\r\n  'paint-order',\r\n  'vector-effect',\r\n  'instantiated_by_use',\r\n  'clip-path',\r\n];\r\n","export function selectorMatches(element: HTMLElement, selector: string) {\r\n  const nodeName = element.nodeName;\r\n  const classNames = element.getAttribute('class');\r\n  const id = element.getAttribute('id');\r\n  const azAz = '(?![a-zA-Z\\\\-]+)';\r\n  let matcher;\r\n  // i check if a selector matches slicing away part from it.\r\n  // if i get empty string i should match\r\n  matcher = new RegExp('^' + nodeName, 'i');\r\n  selector = selector.replace(matcher, '');\r\n  if (id && selector.length) {\r\n    matcher = new RegExp('#' + id + azAz, 'i');\r\n    selector = selector.replace(matcher, '');\r\n  }\r\n  if (classNames && selector.length) {\r\n    const splitClassNames = classNames.split(' ');\r\n    for (let i = splitClassNames.length; i--; ) {\r\n      matcher = new RegExp('\\\\.' + splitClassNames[i] + azAz, 'i');\r\n      selector = selector.replace(matcher, '');\r\n    }\r\n  }\r\n  return selector.length === 0;\r\n}\r\n","import { selectorMatches } from './selectorMatches';\r\nimport { doesSomeParentMatch } from './doesSomeParentMatch';\r\n\r\n/**\r\n * @private\r\n */\r\n\r\nexport function elementMatchesRule(element: HTMLElement, selectors: string[]) {\r\n  let parentMatching = true;\r\n  // start from rightmost selector.\r\n  const firstMatching = selectorMatches(element, selectors.pop()!);\r\n  if (firstMatching && selectors.length) {\r\n    parentMatching = doesSomeParentMatch(element, selectors);\r\n  }\r\n  return firstMatching && parentMatching && selectors.length === 0;\r\n}\r\n","import { selectorMatches } from './selectorMatches';\r\n\r\nexport function doesSomeParentMatch(element: HTMLElement, selectors: string[]) {\r\n  let selector: string,\r\n    parentMatching = true;\r\n  while (\r\n    element.parentElement &&\r\n    element.parentElement.nodeType === 1 &&\r\n    selectors.length\r\n  ) {\r\n    if (parentMatching) {\r\n      selector = selectors.pop()!;\r\n    }\r\n    element = element.parentElement;\r\n    parentMatching = selectorMatches(element, selector!);\r\n  }\r\n  return selectors.length === 0;\r\n}\r\n","import { attributesMap } from './constants';\r\n\r\nexport const normalizeAttr = (\r\n  attr: keyof typeof attributesMap | string\r\n): string => attributesMap[attr as keyof typeof attributesMap] ?? attr;\r\n","import { reNum } from '../../parser/constants';\r\n\r\nconst regex = new RegExp(`(${reNum})`, 'gi');\r\n\r\nexport const cleanupSvgAttribute = (attributeValue: string) =>\r\n  attributeValue\r\n    .replace(regex, ' $1 ')\r\n    // replace annoying commas and arbitrary whitespace with single spaces\r\n    .replace(/,/gi, ' ')\r\n    .replace(/\\s+/gi, ' ');\r\n","import { ROTATE, SCALE, SKEW_X, SKEW_Y, iMatrix } from '../constants';\r\nimport { reNum } from './constants';\r\nimport type { TMat2D } from '../typedefs';\r\nimport { cleanupSvgAttribute } from '../util/internals/cleanupSvgAttribute';\r\nimport {\r\n  createRotateMatrix,\r\n  createScaleMatrix,\r\n  createSkewXMatrix,\r\n  createSkewYMatrix,\r\n  createTranslateMatrix,\r\n  multiplyTransformMatrixArray,\r\n} from '../util/misc/matrix';\r\n\r\n// == begin transform regexp\r\nconst p = `(${reNum})`;\r\nconst skewX = String.raw`(skewX)\\(${p}\\)`;\r\nconst skewY = String.raw`(skewY)\\(${p}\\)`;\r\nconst rotate = String.raw`(rotate)\\(${p}(?: ${p} ${p})?\\)`;\r\nconst scale = String.raw`(scale)\\(${p}(?: ${p})?\\)`;\r\nconst translate = String.raw`(translate)\\(${p}(?: ${p})?\\)`;\r\nconst matrix = String.raw`(matrix)\\(${p} ${p} ${p} ${p} ${p} ${p}\\)`;\r\nconst transform = `(?:${matrix}|${translate}|${rotate}|${scale}|${skewX}|${skewY})`;\r\nconst transforms = `(?:${transform}*)`;\r\nconst transformList = String.raw`^\\s*(?:${transforms}?)\\s*$`;\r\n// http://www.w3.org/TR/SVG/coords.html#TransformAttribute\r\nconst reTransformList = new RegExp(transformList);\r\nconst reTransform = new RegExp(transform);\r\nconst reTransformAll = new RegExp(transform, 'g');\r\n// == end transform regexp\r\n\r\n/**\r\n * Parses \"transform\" attribute, returning an array of values\r\n * @static\r\n * @function\r\n * @memberOf fabric\r\n * @param {String} attributeValue String containing attribute value\r\n * @return {TTransformMatrix} Array of 6 elements representing transformation matrix\r\n */\r\nexport function parseTransformAttribute(attributeValue: string): TMat2D {\r\n  // first we clean the string\r\n  attributeValue = cleanupSvgAttribute(attributeValue)\r\n    // remove spaces around front parentheses\r\n    .replace(/\\s*([()])\\s*/gi, '$1');\r\n\r\n  // start with identity matrix\r\n  const matrices: TMat2D[] = [];\r\n\r\n  // return if no argument was given or\r\n  // an argument does not match transform attribute regexp\r\n  if (\r\n    !attributeValue ||\r\n    (attributeValue && !reTransformList.test(attributeValue))\r\n  ) {\r\n    return [...iMatrix];\r\n  }\r\n\r\n  for (const match of attributeValue.matchAll(reTransformAll)) {\r\n    const transformMatch = reTransform.exec(match[0]);\r\n    if (!transformMatch) {\r\n      continue;\r\n    }\r\n    let matrix: TMat2D = iMatrix;\r\n    const matchedParams = transformMatch.filter((m) => !!m);\r\n    const [, operation, ...rawArgs] = matchedParams;\r\n    const [arg0, arg1, arg2, arg3, arg4, arg5] = rawArgs.map((arg) =>\r\n      parseFloat(arg)\r\n    );\r\n\r\n    switch (operation) {\r\n      case 'translate':\r\n        matrix = createTranslateMatrix(arg0, arg1);\r\n        break;\r\n      case ROTATE:\r\n        matrix = createRotateMatrix({ angle: arg0 }, { x: arg1, y: arg2 });\r\n        break;\r\n      case SCALE:\r\n        matrix = createScaleMatrix(arg0, arg1);\r\n        break;\r\n      case SKEW_X:\r\n        matrix = createSkewXMatrix(arg0);\r\n        break;\r\n      case SKEW_Y:\r\n        matrix = createSkewYMatrix(arg0);\r\n        break;\r\n      case 'matrix':\r\n        matrix = [arg0, arg1, arg2, arg3, arg4, arg5];\r\n        break;\r\n    }\r\n\r\n    // snapshot current matrix into matrices array\r\n    matrices.push(matrix);\r\n  }\r\n\r\n  return multiplyTransformMatrixArray(matrices);\r\n}\r\n","import { multiplyTransformMatrices } from '../util/misc/matrix';\r\nimport { parseUnit } from '../util/misc/svgParsing';\r\nimport { parseTransformAttribute } from './parseTransformAttribute';\r\nimport { CENTER, LEFT, RIGHT, NONE, FILL, STROKE } from '../constants';\r\n\r\nexport function normalizeValue(\r\n  attr: string,\r\n  value: any,\r\n  parentAttributes: Record<string, any>,\r\n  fontSize: number\r\n): string | null | boolean | number[] | number {\r\n  const isArray = Array.isArray(value);\r\n  let parsed: number | number[];\r\n  let ouputValue: string | null | boolean | number[] | number = value;\r\n  if ((attr === FILL || attr === STROKE) && value === NONE) {\r\n    ouputValue = '';\r\n  } else if (attr === 'strokeUniform') {\r\n    return value === 'non-scaling-stroke';\r\n  } else if (attr === 'strokeDashArray') {\r\n    if (value === NONE) {\r\n      ouputValue = null;\r\n    } else {\r\n      ouputValue = value.replace(/,/g, ' ').split(/\\s+/).map(parseFloat);\r\n    }\r\n  } else if (attr === 'transformMatrix') {\r\n    if (parentAttributes && parentAttributes.transformMatrix) {\r\n      ouputValue = multiplyTransformMatrices(\r\n        parentAttributes.transformMatrix,\r\n        parseTransformAttribute(value)\r\n      );\r\n    } else {\r\n      ouputValue = parseTransformAttribute(value);\r\n    }\r\n  } else if (attr === 'visible') {\r\n    ouputValue = value !== NONE && value !== 'hidden';\r\n    // display=none on parent element always takes precedence over child element\r\n    if (parentAttributes && parentAttributes.visible === false) {\r\n      ouputValue = false;\r\n    }\r\n  } else if (attr === 'opacity') {\r\n    ouputValue = parseFloat(value);\r\n    if (parentAttributes && typeof parentAttributes.opacity !== 'undefined') {\r\n      ouputValue *= parentAttributes.opacity as number;\r\n    }\r\n  } else if (attr === 'textAnchor' /* text-anchor */) {\r\n    ouputValue = value === 'start' ? LEFT : value === 'end' ? RIGHT : CENTER;\r\n  } else if (attr === 'charSpacing') {\r\n    // parseUnit returns px and we convert it to em\r\n    parsed = (parseUnit(value, fontSize) / fontSize) * 1000;\r\n  } else if (attr === 'paintFirst') {\r\n    const fillIndex = value.indexOf(FILL);\r\n    const strokeIndex = value.indexOf(STROKE);\r\n    ouputValue = FILL;\r\n    if (fillIndex > -1 && strokeIndex > -1 && strokeIndex < fillIndex) {\r\n      ouputValue = STROKE;\r\n    } else if (fillIndex === -1 && strokeIndex > -1) {\r\n      ouputValue = STROKE;\r\n    }\r\n  } else if (attr === 'href' || attr === 'xlink:href' || attr === 'font') {\r\n    return value;\r\n  } else if (attr === 'imageSmoothing') {\r\n    return value === 'optimizeQuality';\r\n  } else {\r\n    parsed = isArray\r\n      ? (value as string[]).map(parseUnit)\r\n      : parseUnit(value, fontSize);\r\n  }\r\n\r\n  return !isArray && isNaN(parsed! as number) ? ouputValue : parsed!;\r\n}\r\n","import { parseUnit } from '../util/misc/svgParsing';\r\nimport { reFontDeclaration } from './constants';\r\n\r\n/**\r\n * Parses a short font declaration, building adding its properties to a style object\r\n * @static\r\n * @function\r\n * @memberOf fabric\r\n * @param {String} value font declaration\r\n * @param {Object} oStyle definition\r\n */\r\nexport function parseFontDeclaration(\r\n  value: string,\r\n  oStyle: Record<string, any>\r\n): void {\r\n  const match = value.match(reFontDeclaration);\r\n\r\n  if (!match) {\r\n    return;\r\n  }\r\n  const fontStyle = match[1],\r\n    // font variant is not used\r\n    // fontVariant = match[2],\r\n    fontWeight = match[3],\r\n    fontSize = match[4],\r\n    lineHeight = match[5],\r\n    fontFamily = match[6];\r\n\r\n  if (fontStyle) {\r\n    oStyle.fontStyle = fontStyle;\r\n  }\r\n  if (fontWeight) {\r\n    oStyle.fontWeight = isNaN(parseFloat(fontWeight))\r\n      ? fontWeight\r\n      : parseFloat(fontWeight);\r\n  }\r\n  if (fontSize) {\r\n    oStyle.fontSize = parseUnit(fontSize);\r\n  }\r\n  if (fontFamily) {\r\n    oStyle.fontFamily = fontFamily;\r\n  }\r\n  if (lineHeight) {\r\n    oStyle.lineHeight = lineHeight === 'normal' ? 1 : lineHeight;\r\n  }\r\n}\r\n","import { parseStyleObject } from './parseStyleObject';\r\nimport { parseStyleString } from './parseStyleString';\r\n\r\n/**\r\n * Parses \"style\" attribute, retuning an object with values\r\n * @static\r\n * @memberOf fabric\r\n * @param {SVGElement} element Element to parse\r\n * @return {Object} Objects with values parsed from style attribute of an element\r\n */\r\nexport function parseStyleAttribute(element: HTMLElement): Record<string, any> {\r\n  const oStyle: Record<string, any> = {},\r\n    style = element.getAttribute('style');\r\n\r\n  if (!style) {\r\n    return oStyle;\r\n  }\r\n\r\n  if (typeof style === 'string') {\r\n    parseStyleString(style, oStyle);\r\n  } else {\r\n    parseStyleObject(style, oStyle);\r\n  }\r\n\r\n  return oStyle;\r\n}\r\n","/**\r\n * Takes a style string and parses it in one that has only defined values\r\n * and lowercases properties\r\n * @param style\r\n * @param oStyle\r\n */\r\nexport function parseStyleString(\r\n  style: string,\r\n  oStyle: Record<string, any>\r\n): void {\r\n  style\r\n    .replace(/;\\s*$/, '')\r\n    .split(';')\r\n    .forEach((chunk) => {\r\n      const [attr, value] = chunk.split(':');\r\n      oStyle[attr.trim().toLowerCase()] = value.trim();\r\n    });\r\n}\r\n","/**\r\n * Takes a style object and parses it in one that has only defined values\r\n * and lowercases properties\r\n * @param style\r\n * @param oStyle\r\n */\r\nexport function parseStyleObject(\r\n  style: Record<string, any>,\r\n  oStyle: Record<string, any>\r\n): void {\r\n  Object.entries(style).forEach(([prop, value]) => {\r\n    if (value === undefined) {\r\n      return;\r\n    }\r\n    oStyle[prop.toLowerCase()] = value;\r\n  });\r\n}\r\n","import { Color } from '../color/Color';\r\nimport { toFixed } from '../util/misc/toFixed';\r\nimport { FabricObject } from '../shapes/Object/FabricObject';\r\n\r\nconst colorAttributesMap = {\r\n  stroke: 'strokeOpacity',\r\n  fill: 'fillOpacity',\r\n};\r\n\r\n/**\r\n * @private\r\n * @param {Object} attributes Array of attributes to parse\r\n */\r\n\r\nexport function setStrokeFillOpacity(\r\n  attributes: Record<string, any>\r\n): Record<string, any> {\r\n  const defaults = FabricObject.getDefaults();\r\n  Object.entries(colorAttributesMap).forEach(([attr, colorAttr]) => {\r\n    if (\r\n      typeof attributes[colorAttr] === 'undefined' ||\r\n      attributes[attr] === ''\r\n    ) {\r\n      return;\r\n    }\r\n    if (typeof attributes[attr] === 'undefined') {\r\n      if (!defaults[attr]) {\r\n        return;\r\n      }\r\n      attributes[attr] = defaults[attr];\r\n    }\r\n    if (attributes[attr].indexOf('url(') === 0) {\r\n      return;\r\n    }\r\n    const color = new Color(attributes[attr]);\r\n    attributes[attr] = color\r\n      .setAlpha(toFixed(color.getAlpha() * attributes[colorAttr], 2))\r\n      .toRgba();\r\n  });\r\n  return attributes;\r\n}\r\n","import { DEFAULT_SVG_FONT_SIZE } from '../constants';\r\nimport { parseUnit } from '../util/misc/svgParsing';\r\nimport { cPath, fSize, svgValidParentsRegEx } from './constants';\r\nimport { getGlobalStylesForElement } from './getGlobalStylesForElement';\r\nimport { normalizeAttr } from './normalizeAttr';\r\nimport { normalizeValue } from './normalizeValue';\r\nimport { parseFontDeclaration } from './parseFontDeclaration';\r\nimport { parseStyleAttribute } from './parseStyleAttribute';\r\nimport { setStrokeFillOpacity } from './setStrokeFillOpacity';\r\nimport type { CSSRules } from './typedefs';\r\n\r\n/**\r\n * Returns an object of attributes' name/value, given element and an array of attribute names;\r\n * Parses parent \"g\" nodes recursively upwards.\r\n * @param {SVGElement | HTMLElement} element Element to parse\r\n * @param {Array} attributes Array of attributes to parse\r\n * @return {Object} object containing parsed attributes' names/values\r\n */\r\nexport function parseAttributes(\r\n  element: HTMLElement | null,\r\n  attributes: string[],\r\n  cssRules?: CSSRules\r\n): Record<string, any> {\r\n  if (!element) {\r\n    return {};\r\n  }\r\n\r\n  let parentAttributes: Record<string, string> = {},\r\n    fontSize: number,\r\n    parentFontSize = DEFAULT_SVG_FONT_SIZE;\r\n\r\n  // if there's a parent container (`g` or `a` or `symbol` node), parse its attributes recursively upwards\r\n  if (\r\n    element.parentNode &&\r\n    svgValidParentsRegEx.test(element.parentNode.nodeName)\r\n  ) {\r\n    parentAttributes = parseAttributes(\r\n      element.parentElement,\r\n      attributes,\r\n      cssRules\r\n    );\r\n    if (parentAttributes.fontSize) {\r\n      fontSize = parentFontSize = parseUnit(parentAttributes.fontSize);\r\n    }\r\n  }\r\n\r\n  const ownAttributes: Record<string, string> = {\r\n    ...attributes.reduce<Record<string, string>>((memo, attr) => {\r\n      const value = element.getAttribute(attr);\r\n      if (value) {\r\n        memo[attr] = value;\r\n      }\r\n      return memo;\r\n    }, {}),\r\n    // add values parsed from style, which take precedence over attributes\r\n    // (see: http://www.w3.org/TR/SVG/styling.html#UsingPresentationAttributes)\r\n    ...getGlobalStylesForElement(element, cssRules),\r\n    ...parseStyleAttribute(element),\r\n  };\r\n\r\n  if (ownAttributes[cPath]) {\r\n    element.setAttribute(cPath, ownAttributes[cPath]);\r\n  }\r\n  if (ownAttributes[fSize]) {\r\n    // looks like the minimum should be 9px when dealing with ems. this is what looks like in browsers.\r\n    fontSize = parseUnit(ownAttributes[fSize], parentFontSize);\r\n    ownAttributes[fSize] = `${fontSize}`;\r\n  }\r\n\r\n  // this should have its own complex type\r\n  const normalizedStyle: Record<\r\n    string,\r\n    string | boolean | number | number[] | null\r\n  > = {};\r\n  for (const attr in ownAttributes) {\r\n    const normalizedAttr = normalizeAttr(attr);\r\n    const normalizedValue = normalizeValue(\r\n      normalizedAttr,\r\n      ownAttributes[attr],\r\n      parentAttributes,\r\n      fontSize!\r\n    );\r\n    normalizedStyle[normalizedAttr] = normalizedValue;\r\n  }\r\n  if (normalizedStyle && normalizedStyle.font) {\r\n    parseFontDeclaration(normalizedStyle.font as string, normalizedStyle);\r\n  }\r\n  const mergedAttrs = { ...parentAttributes, ...normalizedStyle };\r\n  return svgValidParentsRegEx.test(element.nodeName)\r\n    ? mergedAttrs\r\n    : setStrokeFillOpacity(mergedAttrs);\r\n}\r\n","import { elementMatchesRule } from './elementMatchesRule';\r\nimport type { CSSRules } from './typedefs';\r\n\r\n/**\r\n * @private\r\n */\r\n\r\nexport function getGlobalStylesForElement(\r\n  element: HTMLElement,\r\n  cssRules: CSSRules = {}\r\n) {\r\n  let styles: Record<string, string> = {};\r\n  for (const rule in cssRules) {\r\n    if (elementMatchesRule(element, rule.split(' '))) {\r\n      styles = {\r\n        ...styles,\r\n        ...cssRules[rule],\r\n      };\r\n    }\r\n  }\r\n  return styles;\r\n}\r\n","import { kRect } from '../constants';\r\nimport { SHARED_ATTRIBUTES } from '../parser/attributes';\r\nimport { parseAttributes } from '../parser/parseAttributes';\r\nimport type { Abortable, TClassProperties, TOptions } from '../typedefs';\r\nimport { classRegistry } from '../ClassRegistry';\r\nimport { FabricObject, cacheProperties } from './Object/FabricObject';\r\nimport type { FabricObjectProps, SerializedObjectProps } from './Object/types';\r\nimport type { ObjectEvents } from '../EventTypeDefs';\r\nimport type { CSSRules } from '../parser/typedefs';\r\n\r\nexport const rectDefaultValues: Partial<TClassProperties<Rect>> = {\r\n  rx: 0,\r\n  ry: 0,\r\n};\r\n\r\ninterface UniqueRectProps {\r\n  rx: number;\r\n  ry: number;\r\n}\r\n\r\nexport interface SerializedRectProps\r\n  extends SerializedObjectProps,\r\n    UniqueRectProps {}\r\n\r\nexport interface RectProps extends FabricObjectProps, UniqueRectProps {}\r\n\r\nconst RECT_PROPS = ['rx', 'ry'] as const;\r\n\r\nexport class Rect<\r\n    Props extends TOptions<RectProps> = Partial<RectProps>,\r\n    SProps extends SerializedRectProps = SerializedRectProps,\r\n    EventSpec extends ObjectEvents = ObjectEvents\r\n  >\r\n  extends FabricObject<Props, SProps, EventSpec>\r\n  implements RectProps\r\n{\r\n  /**\r\n   * Horizontal border radius\r\n   * @type Number\r\n   * @default\r\n   */\r\n  declare rx: number;\r\n\r\n  /**\r\n   * Vertical border radius\r\n   * @type Number\r\n   * @default\r\n   */\r\n  declare ry: number;\r\n\r\n  static type = 'Rect';\r\n\r\n  static cacheProperties = [...cacheProperties, ...RECT_PROPS];\r\n\r\n  static ownDefaults = rectDefaultValues;\r\n\r\n  static getDefaults(): Record<string, any> {\r\n    return {\r\n      ...super.getDefaults(),\r\n      ...Rect.ownDefaults,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Constructor\r\n   * @param {Object} [options] Options object\r\n   */\r\n  constructor(options?: Props) {\r\n    super();\r\n    Object.assign(this, Rect.ownDefaults);\r\n    this.setOptions(options);\r\n    this._initRxRy();\r\n  }\r\n  /**\r\n   * Initializes rx/ry attributes\r\n   * @private\r\n   */\r\n  _initRxRy() {\r\n    const { rx, ry } = this;\r\n    if (rx && !ry) {\r\n      this.ry = rx;\r\n    } else if (ry && !rx) {\r\n      this.rx = ry;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {CanvasRenderingContext2D} ctx Context to render on\r\n   */\r\n  _render(ctx: CanvasRenderingContext2D) {\r\n    const { width: w, height: h } = this;\r\n    const x = -w / 2;\r\n    const y = -h / 2;\r\n    const rx = this.rx ? Math.min(this.rx, w / 2) : 0;\r\n    const ry = this.ry ? Math.min(this.ry, h / 2) : 0;\r\n    const isRounded = rx !== 0 || ry !== 0;\r\n\r\n    ctx.beginPath();\r\n\r\n    ctx.moveTo(x + rx, y);\r\n\r\n    ctx.lineTo(x + w - rx, y);\r\n    isRounded &&\r\n      ctx.bezierCurveTo(\r\n        x + w - kRect * rx,\r\n        y,\r\n        x + w,\r\n        y + kRect * ry,\r\n        x + w,\r\n        y + ry\r\n      );\r\n\r\n    ctx.lineTo(x + w, y + h - ry);\r\n    isRounded &&\r\n      ctx.bezierCurveTo(\r\n        x + w,\r\n        y + h - kRect * ry,\r\n        x + w - kRect * rx,\r\n        y + h,\r\n        x + w - rx,\r\n        y + h\r\n      );\r\n\r\n    ctx.lineTo(x + rx, y + h);\r\n    isRounded &&\r\n      ctx.bezierCurveTo(\r\n        x + kRect * rx,\r\n        y + h,\r\n        x,\r\n        y + h - kRect * ry,\r\n        x,\r\n        y + h - ry\r\n      );\r\n\r\n    ctx.lineTo(x, y + ry);\r\n    isRounded &&\r\n      ctx.bezierCurveTo(x, y + kRect * ry, x + kRect * rx, y, x + rx, y);\r\n\r\n    ctx.closePath();\r\n\r\n    this._renderPaintInOrder(ctx);\r\n  }\r\n\r\n  /**\r\n   * Returns object representation of an instance\r\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n   * @return {Object} object representation of an instance\r\n   */\r\n  toObject<\r\n    T extends Omit<Props & TClassProperties<this>, keyof SProps>,\r\n    K extends keyof T = never\r\n  >(propertiesToInclude: K[] = []): Pick<T, K> & SProps {\r\n    return super.toObject([...RECT_PROPS, ...propertiesToInclude]);\r\n  }\r\n\r\n  /**\r\n   * Returns svg representation of an instance\r\n   * @return {Array} an array of strings with the specific svg representation\r\n   * of the instance\r\n   */\r\n  _toSVG() {\r\n    const { width, height, rx, ry } = this;\r\n    return [\r\n      '<rect ',\r\n      'COMMON_PARTS',\r\n      `x=\"${-width / 2}\" y=\"${\r\n        -height / 2\r\n      }\" rx=\"${rx}\" ry=\"${ry}\" width=\"${width}\" height=\"${height}\" />\\n`,\r\n    ];\r\n  }\r\n\r\n  /**\r\n   * List of attribute names to account for when parsing SVG element (used by `Rect.fromElement`)\r\n   * @static\r\n   * @memberOf Rect\r\n   * @see: http://www.w3.org/TR/SVG/shapes.html#RectElement\r\n   */\r\n  static ATTRIBUTE_NAMES = [\r\n    ...SHARED_ATTRIBUTES,\r\n    'x',\r\n    'y',\r\n    'rx',\r\n    'ry',\r\n    'width',\r\n    'height',\r\n  ];\r\n\r\n  /* _FROM_SVG_START_ */\r\n\r\n  /**\r\n   * Returns {@link Rect} instance from an SVG element\r\n   * @static\r\n   * @memberOf Rect\r\n   * @param {HTMLElement} element Element to parse\r\n   * @param {Object} [options] Options object\r\n   */\r\n  static async fromElement(\r\n    element: HTMLElement,\r\n    options: Abortable,\r\n    cssRules?: CSSRules\r\n  ) {\r\n    const {\r\n      left = 0,\r\n      top = 0,\r\n      width = 0,\r\n      height = 0,\r\n      visible = true,\r\n      ...restOfparsedAttributes\r\n    } = parseAttributes(element, this.ATTRIBUTE_NAMES, cssRules);\r\n\r\n    return new this({\r\n      ...options,\r\n      ...restOfparsedAttributes,\r\n      left,\r\n      top,\r\n      width,\r\n      height,\r\n      visible: Boolean(visible && width && height),\r\n    });\r\n  }\r\n\r\n  /* _FROM_SVG_END_ */\r\n}\r\n\r\nclassRegistry.setClass(Rect);\r\nclassRegistry.setSVGClass(Rect);\r\n","export const LAYOUT_TYPE_INITIALIZATION = 'initialization';\r\nexport const LAYOUT_TYPE_ADDED = 'added';\r\nexport const LAYOUT_TYPE_REMOVED = 'removed';\r\nexport const LAYOUT_TYPE_IMPERATIVE = 'imperative';\r\nexport const LAYOUT_TYPE_OBJECT_MODIFIED = 'object_modified';\r\nexport const LAYOUT_TYPE_OBJECT_MODIFYING = 'object_modifying';\r\n","import { Point, ZERO } from '../../Point';\r\nimport type { Group } from '../../shapes/Group';\r\nimport type { FabricObject } from '../../shapes/Object/FabricObject';\r\nimport { multiplyTransformMatrixArray } from '../../util/misc/matrix';\r\nimport { sizeAfterTransform } from '../../util/misc/objectTransforms';\r\nimport {\r\n  calcPlaneChangeMatrix,\r\n  sendVectorToPlane,\r\n} from '../../util/misc/planeChange';\r\n\r\n/**\r\n * @returns 2 points, the tl and br corners of the non rotated bounding box of an object\r\n * in the {@link group} plane, taking into account objects that {@link group} is their parent\r\n * but also belong to the active selection.\r\n */\r\nexport const getObjectBounds = (\r\n  destinationGroup: Group,\r\n  object: FabricObject\r\n): Point[] => {\r\n  const {\r\n    strokeUniform,\r\n    strokeWidth,\r\n    width,\r\n    height,\r\n    group: currentGroup,\r\n  } = object;\r\n  const t =\r\n    currentGroup && currentGroup !== destinationGroup\r\n      ? calcPlaneChangeMatrix(\r\n          currentGroup.calcTransformMatrix(),\r\n          destinationGroup.calcTransformMatrix()\r\n        )\r\n      : null;\r\n  const objectCenter = t\r\n    ? object.getRelativeCenterPoint().transform(t)\r\n    : object.getRelativeCenterPoint();\r\n  const accountForStroke = !object['isStrokeAccountedForInDimensions']();\r\n  const strokeUniformVector =\r\n    strokeUniform && accountForStroke\r\n      ? sendVectorToPlane(\r\n          new Point(strokeWidth, strokeWidth),\r\n          undefined,\r\n          destinationGroup.calcTransformMatrix()\r\n        )\r\n      : ZERO;\r\n  const scalingStrokeWidth =\r\n    !strokeUniform && accountForStroke ? strokeWidth : 0;\r\n  const sizeVector = sizeAfterTransform(\r\n    width + scalingStrokeWidth,\r\n    height + scalingStrokeWidth,\r\n    multiplyTransformMatrixArray([t, object.calcOwnMatrix()], true)\r\n  )\r\n    .add(strokeUniformVector)\r\n    .scalarDivide(2);\r\n  return [objectCenter.subtract(sizeVector), objectCenter.add(sizeVector)];\r\n};\r\n","import { Point } from '../../Point';\r\nimport type { FabricObject } from '../../shapes/Object/FabricObject';\r\nimport { makeBoundingBoxFromPoints } from '../../util/misc/boundingBoxFromPoints';\r\nimport {\r\n  LAYOUT_TYPE_INITIALIZATION,\r\n  LAYOUT_TYPE_IMPERATIVE,\r\n} from '../constants';\r\nimport type {\r\n  InitializationLayoutContext,\r\n  LayoutStrategyResult,\r\n  StrictLayoutContext,\r\n} from '../types';\r\nimport { getObjectBounds } from './utils';\r\n\r\n/**\r\n * Exposes a main public method {@link calcLayoutResult} that is used by the `LayoutManager` to perform layout.\r\n * Returning `undefined` signals the `LayoutManager` to skip the layout.\r\n *\r\n * In charge of calculating the bounding box of the passed objects.\r\n */\r\nexport abstract class LayoutStrategy {\r\n  /**\r\n   * override by subclass for persistence (TS does not support `static abstract`)\r\n   */\r\n  static type = 'strategy';\r\n\r\n  /**\r\n   * Used by the `LayoutManager` to perform layout\r\n   * @TODO/fix: if this method is calcResult, should calc unconditionally.\r\n   * the condition to not calc should be evaluated by the layoutManager.\r\n   * @returns layout result **OR** `undefined` to skip layout\r\n   */\r\n  public calcLayoutResult(\r\n    context: StrictLayoutContext,\r\n    objects: FabricObject[]\r\n  ): LayoutStrategyResult | undefined {\r\n    if (this.shouldPerformLayout(context)) {\r\n      return this.calcBoundingBox(objects, context);\r\n    }\r\n  }\r\n\r\n  shouldPerformLayout({ type, prevStrategy, strategy }: StrictLayoutContext) {\r\n    return (\r\n      type === LAYOUT_TYPE_INITIALIZATION ||\r\n      type === LAYOUT_TYPE_IMPERATIVE ||\r\n      (!!prevStrategy && strategy !== prevStrategy)\r\n    );\r\n  }\r\n\r\n  shouldLayoutClipPath({ type, target: { clipPath } }: StrictLayoutContext) {\r\n    return (\r\n      type !== LAYOUT_TYPE_INITIALIZATION &&\r\n      clipPath &&\r\n      !clipPath.absolutePositioned\r\n    );\r\n  }\r\n\r\n  getInitialSize(\r\n    context: StrictLayoutContext & InitializationLayoutContext,\r\n    result: Pick<LayoutStrategyResult, 'center' | 'size'>\r\n  ) {\r\n    return result.size;\r\n  }\r\n\r\n  /**\r\n   * Override this method to customize layout.\r\n   */\r\n  calcBoundingBox(\r\n    objects: FabricObject[],\r\n    context: StrictLayoutContext\r\n  ): LayoutStrategyResult | undefined {\r\n    const { type, target } = context;\r\n    if (type === LAYOUT_TYPE_IMPERATIVE && context.overrides) {\r\n      return context.overrides;\r\n    }\r\n    if (objects.length === 0) {\r\n      return;\r\n    }\r\n    const { left, top, width, height } = makeBoundingBoxFromPoints(\r\n      objects\r\n        .map((object) => getObjectBounds(target, object))\r\n        .reduce<Point[]>((coords, curr) => coords.concat(curr), [])\r\n    );\r\n    const bboxSize = new Point(width, height);\r\n    const bboxLeftTop = new Point(left, top);\r\n    const bboxCenter = bboxLeftTop.add(bboxSize.scalarDivide(2));\r\n\r\n    if (type === LAYOUT_TYPE_INITIALIZATION) {\r\n      const actualSize = this.getInitialSize(context, {\r\n        size: bboxSize,\r\n        center: bboxCenter,\r\n      });\r\n      return {\r\n        // in `initialization` we do not account for target's transformation matrix\r\n        center: bboxCenter,\r\n        // TODO: investigate if this is still necessary\r\n        relativeCorrection: new Point(0, 0),\r\n        size: actualSize,\r\n      };\r\n    } else {\r\n      //  we send `relativeCenter` up to group's containing plane\r\n      const center = bboxCenter.transform(target.calcOwnMatrix());\r\n      return {\r\n        center,\r\n        size: bboxSize,\r\n      };\r\n    }\r\n  }\r\n}\r\n","import type { StrictLayoutContext } from '../types';\r\nimport { LayoutStrategy } from './LayoutStrategy';\r\nimport { classRegistry } from '../../ClassRegistry';\r\n\r\n/**\r\n * Layout will adjust the bounding box to fit target's objects.\r\n */\r\nexport class FitContentLayout extends LayoutStrategy {\r\n  static readonly type = 'fit-content';\r\n\r\n  /**\r\n   * @override layout on all triggers\r\n   * Override at will\r\n   */\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n  shouldPerformLayout(context: StrictLayoutContext) {\r\n    return true;\r\n  }\r\n}\r\n\r\nclassRegistry.setClass(FitContentLayout);\r\n","import { Point } from '../Point';\r\nimport {\r\n  CENTER,\r\n  CHANGED,\r\n  MODIFIED,\r\n  MODIFY_POLY,\r\n  MOVING,\r\n  RESIZING,\r\n  ROTATING,\r\n  SCALING,\r\n  SKEWING,\r\n  iMatrix,\r\n} from '../constants';\r\nimport type { Group } from '../shapes/Group';\r\nimport type { FabricObject } from '../shapes/Object/FabricObject';\r\nimport { invertTransform } from '../util/misc/matrix';\r\nimport { resolveOrigin } from '../util/misc/resolveOrigin';\r\nimport { FitContentLayout } from './LayoutStrategies/FitContentLayout';\r\nimport type { LayoutStrategy } from './LayoutStrategies/LayoutStrategy';\r\nimport {\r\n  LAYOUT_TYPE_INITIALIZATION,\r\n  LAYOUT_TYPE_ADDED,\r\n  LAYOUT_TYPE_REMOVED,\r\n  LAYOUT_TYPE_IMPERATIVE,\r\n  LAYOUT_TYPE_OBJECT_MODIFIED,\r\n  LAYOUT_TYPE_OBJECT_MODIFYING,\r\n} from './constants';\r\nimport type {\r\n  LayoutContext,\r\n  LayoutResult,\r\n  RegistrationContext,\r\n  StrictLayoutContext,\r\n} from './types';\r\nimport { classRegistry } from '../ClassRegistry';\r\nimport type { TModificationEvents } from '../EventTypeDefs';\r\n\r\nconst LAYOUT_MANAGER = 'layoutManager';\r\n\r\nexport type SerializedLayoutManager = {\r\n  type: string;\r\n  strategy: string;\r\n};\r\n\r\nexport class LayoutManager {\r\n  private declare _prevLayoutStrategy?: LayoutStrategy;\r\n  protected declare _subscriptions: Map<FabricObject, VoidFunction[]>;\r\n\r\n  strategy: LayoutStrategy;\r\n\r\n  constructor(strategy: LayoutStrategy = new FitContentLayout()) {\r\n    this.strategy = strategy;\r\n    this._subscriptions = new Map();\r\n  }\r\n\r\n  public performLayout(context: LayoutContext) {\r\n    const strictContext: StrictLayoutContext = {\r\n      bubbles: true,\r\n      strategy: this.strategy,\r\n      ...context,\r\n      prevStrategy: this._prevLayoutStrategy,\r\n      stopPropagation() {\r\n        this.bubbles = false;\r\n      },\r\n    };\r\n\r\n    this.onBeforeLayout(strictContext);\r\n\r\n    const layoutResult = this.getLayoutResult(strictContext);\r\n    if (layoutResult) {\r\n      this.commitLayout(strictContext, layoutResult);\r\n    }\r\n\r\n    this.onAfterLayout(strictContext, layoutResult);\r\n    this._prevLayoutStrategy = strictContext.strategy;\r\n  }\r\n\r\n  /**\r\n   * Attach handlers for events that we know will invalidate the layout when\r\n   * performed on child objects ( general transforms ).\r\n   * Returns the disposers for later unsubscribing and cleanup\r\n   * @param {FabricObject} object\r\n   * @param {RegistrationContext & Partial<StrictLayoutContext>} context\r\n   * @returns {VoidFunction[]} disposers remove the handlers\r\n   */\r\n  protected attachHandlers(\r\n    object: FabricObject,\r\n    context: RegistrationContext & Partial<StrictLayoutContext>\r\n  ): VoidFunction[] {\r\n    const { target } = context;\r\n    return (\r\n      [\r\n        MODIFIED,\r\n        MOVING,\r\n        RESIZING,\r\n        ROTATING,\r\n        SCALING,\r\n        SKEWING,\r\n        CHANGED,\r\n        MODIFY_POLY,\r\n      ] as (TModificationEvents & 'modified')[]\r\n    ).map((key) =>\r\n      object.on(key, (e) =>\r\n        this.performLayout(\r\n          key === MODIFIED\r\n            ? {\r\n                type: LAYOUT_TYPE_OBJECT_MODIFIED,\r\n                trigger: key,\r\n                e,\r\n                target,\r\n              }\r\n            : {\r\n                type: LAYOUT_TYPE_OBJECT_MODIFYING,\r\n                trigger: key,\r\n                e,\r\n                target,\r\n              }\r\n        )\r\n      )\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Subscribe an object to transform events that will trigger a layout change on the parent\r\n   * This is important only for interactive groups.\r\n   * @param object\r\n   * @param context\r\n   */\r\n  protected subscribe(\r\n    object: FabricObject,\r\n    context: RegistrationContext & Partial<StrictLayoutContext>\r\n  ) {\r\n    this.unsubscribe(object, context);\r\n    const disposers = this.attachHandlers(object, context);\r\n    this._subscriptions.set(object, disposers);\r\n  }\r\n\r\n  /**\r\n   * unsubscribe object layout triggers\r\n   */\r\n  protected unsubscribe(\r\n    object: FabricObject,\r\n    context?: RegistrationContext & Partial<StrictLayoutContext>\r\n  ) {\r\n    (this._subscriptions.get(object) || []).forEach((d) => d());\r\n    this._subscriptions.delete(object);\r\n  }\r\n\r\n  unsubscribeTargets(\r\n    context: RegistrationContext & Partial<StrictLayoutContext>\r\n  ) {\r\n    context.targets.forEach((object) => this.unsubscribe(object, context));\r\n  }\r\n\r\n  subscribeTargets(\r\n    context: RegistrationContext & Partial<StrictLayoutContext>\r\n  ) {\r\n    context.targets.forEach((object) => this.subscribe(object, context));\r\n  }\r\n\r\n  protected onBeforeLayout(context: StrictLayoutContext) {\r\n    const { target, type } = context;\r\n    const { canvas } = target;\r\n    // handle layout triggers subscription\r\n    // @TODO: gate the registration when the group is interactive\r\n    if (type === LAYOUT_TYPE_INITIALIZATION || type === LAYOUT_TYPE_ADDED) {\r\n      this.subscribeTargets(context);\r\n    } else if (type === LAYOUT_TYPE_REMOVED) {\r\n      this.unsubscribeTargets(context);\r\n    }\r\n    // fire layout event (event will fire only for layouts after initialization layout)\r\n    target.fire('layout:before', {\r\n      context,\r\n    });\r\n    canvas &&\r\n      canvas.fire('object:layout:before', {\r\n        target,\r\n        context,\r\n      });\r\n\r\n    if (type === LAYOUT_TYPE_IMPERATIVE && context.deep) {\r\n      const { strategy: _, ...tricklingContext } = context;\r\n      // traverse the tree\r\n      target.forEachObject(\r\n        (object) =>\r\n          (object as Group).layoutManager &&\r\n          (object as Group).layoutManager.performLayout({\r\n            ...tricklingContext,\r\n            bubbles: false,\r\n            target: object as Group,\r\n          })\r\n      );\r\n    }\r\n  }\r\n\r\n  protected getLayoutResult(\r\n    context: StrictLayoutContext\r\n  ): Required<LayoutResult> | undefined {\r\n    const { target, strategy, type } = context;\r\n\r\n    const result = strategy.calcLayoutResult(context, target.getObjects());\r\n\r\n    if (!result) {\r\n      return;\r\n    }\r\n\r\n    const prevCenter =\r\n      type === LAYOUT_TYPE_INITIALIZATION\r\n        ? new Point()\r\n        : target.getRelativeCenterPoint();\r\n\r\n    const {\r\n      center: nextCenter,\r\n      correction = new Point(),\r\n      relativeCorrection = new Point(),\r\n    } = result;\r\n    const offset = prevCenter\r\n      .subtract(nextCenter)\r\n      .add(correction)\r\n      .transform(\r\n        // in `initialization` we do not account for target's transformation matrix\r\n        type === LAYOUT_TYPE_INITIALIZATION\r\n          ? iMatrix\r\n          : invertTransform(target.calcOwnMatrix()),\r\n        true\r\n      )\r\n      .add(relativeCorrection);\r\n\r\n    return {\r\n      result,\r\n      prevCenter,\r\n      nextCenter,\r\n      offset,\r\n    };\r\n  }\r\n\r\n  protected commitLayout(\r\n    context: StrictLayoutContext,\r\n    layoutResult: Required<LayoutResult>\r\n  ) {\r\n    const { target } = context;\r\n    const {\r\n      result: { size },\r\n      nextCenter,\r\n    } = layoutResult;\r\n    // set dimensions\r\n    target.set({ width: size.x, height: size.y });\r\n    // layout descendants\r\n    this.layoutObjects(context, layoutResult);\r\n    //  set position\r\n    // in `initialization` we do not account for target's transformation matrix\r\n    if (context.type === LAYOUT_TYPE_INITIALIZATION) {\r\n      // TODO: what about strokeWidth?\r\n      target.set({\r\n        left:\r\n          context.x ?? nextCenter.x + size.x * resolveOrigin(target.originX),\r\n        top: context.y ?? nextCenter.y + size.y * resolveOrigin(target.originY),\r\n      });\r\n    } else {\r\n      target.setPositionByOrigin(nextCenter, CENTER, CENTER);\r\n      // invalidate\r\n      target.setCoords();\r\n      target.set('dirty', true);\r\n    }\r\n  }\r\n\r\n  protected layoutObjects(\r\n    context: StrictLayoutContext,\r\n    layoutResult: Required<LayoutResult>\r\n  ) {\r\n    const { target } = context;\r\n    //  adjust objects to account for new center\r\n    target.forEachObject((object) => {\r\n      object.group === target &&\r\n        this.layoutObject(context, layoutResult, object);\r\n    });\r\n    // adjust clip path to account for new center\r\n    context.strategy.shouldLayoutClipPath(context) &&\r\n      this.layoutObject(context, layoutResult, target.clipPath as FabricObject);\r\n  }\r\n\r\n  /**\r\n   * @param {FabricObject} object\r\n   * @param {Point} offset\r\n   */\r\n  protected layoutObject(\r\n    context: StrictLayoutContext,\r\n    { offset }: Required<LayoutResult>,\r\n    object: FabricObject\r\n  ) {\r\n    // TODO: this is here for cache invalidation.\r\n    // verify if this is necessary since we have explicit\r\n    // cache invalidation at the end of commitLayout\r\n    object.set({\r\n      left: object.left + offset.x,\r\n      top: object.top + offset.y,\r\n    });\r\n  }\r\n\r\n  protected onAfterLayout(\r\n    context: StrictLayoutContext,\r\n    layoutResult?: LayoutResult\r\n  ) {\r\n    const {\r\n      target,\r\n      strategy,\r\n      bubbles,\r\n      prevStrategy: _,\r\n      ...bubblingContext\r\n    } = context;\r\n    const { canvas } = target;\r\n\r\n    //  fire layout event (event will fire only for layouts after initialization layout)\r\n    target.fire('layout:after', {\r\n      context,\r\n      result: layoutResult,\r\n    });\r\n    canvas &&\r\n      canvas.fire('object:layout:after', {\r\n        context,\r\n        result: layoutResult,\r\n        target,\r\n      });\r\n\r\n    //  bubble\r\n    const parent = target.parent;\r\n    if (bubbles && parent?.layoutManager) {\r\n      //  add target to context#path\r\n      (bubblingContext.path || (bubblingContext.path = [])).push(target);\r\n      //  all parents should invalidate their layout\r\n      parent.layoutManager.performLayout({\r\n        ...bubblingContext,\r\n        target: parent,\r\n      });\r\n    }\r\n    target.set('dirty', true);\r\n  }\r\n\r\n  dispose() {\r\n    const { _subscriptions } = this;\r\n    _subscriptions.forEach((disposers) => disposers.forEach((d) => d()));\r\n    _subscriptions.clear();\r\n  }\r\n\r\n  toObject() {\r\n    return {\r\n      type: LAYOUT_MANAGER,\r\n      strategy: (this.strategy.constructor as typeof LayoutStrategy).type,\r\n    };\r\n  }\r\n\r\n  toJSON() {\r\n    return this.toObject();\r\n  }\r\n}\r\n\r\nclassRegistry.setClass(LayoutManager, LAYOUT_MANAGER);\r\n","import type { CollectionEvents, ObjectEvents } from '../EventTypeDefs';\r\nimport { createCollectionMixin } from '../Collection';\r\nimport type {\r\n  TClassProperties,\r\n  TSVGReviver,\r\n  TOptions,\r\n  Abortable,\r\n} from '../typedefs';\r\nimport {\r\n  invertTransform,\r\n  multiplyTransformMatrices,\r\n} from '../util/misc/matrix';\r\nimport {\r\n  enlivenObjectEnlivables,\r\n  enlivenObjects,\r\n} from '../util/misc/objectEnlive';\r\nimport { applyTransformToObject } from '../util/misc/objectTransforms';\r\nimport { FabricObject } from './Object/FabricObject';\r\nimport { Rect } from './Rect';\r\nimport { classRegistry } from '../ClassRegistry';\r\nimport type { FabricObjectProps, SerializedObjectProps } from './Object/types';\r\nimport { log } from '../util/internals/console';\r\nimport type {\r\n  ImperativeLayoutOptions,\r\n  LayoutBeforeEvent,\r\n  LayoutAfterEvent,\r\n} from '../LayoutManager/types';\r\nimport { LayoutManager } from '../LayoutManager/LayoutManager';\r\nimport {\r\n  LAYOUT_TYPE_ADDED,\r\n  LAYOUT_TYPE_IMPERATIVE,\r\n  LAYOUT_TYPE_INITIALIZATION,\r\n  LAYOUT_TYPE_REMOVED,\r\n} from '../LayoutManager/constants';\r\nimport type { SerializedLayoutManager } from '../LayoutManager/LayoutManager';\r\nimport type { FitContentLayout } from '../LayoutManager';\r\n\r\n/**\r\n * This class handles the specific case of creating a group using {@link Group#fromObject} and is not meant to be used in any other case.\r\n * We could have used a boolean in the constructor, as we did previously, but we think the boolean\r\n * would stay in the group's constructor interface and create confusion, therefore it was removed.\r\n * This layout manager doesn't do anything and therefore keeps the exact layout the group had when {@link Group#toObject} was called.\r\n */\r\nclass NoopLayoutManager extends LayoutManager {\r\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n  performLayout() {}\r\n}\r\n\r\nexport interface GroupEvents extends ObjectEvents, CollectionEvents {\r\n  'layout:before': LayoutBeforeEvent;\r\n  'layout:after': LayoutAfterEvent;\r\n}\r\n\r\nexport interface GroupOwnProps {\r\n  subTargetCheck: boolean;\r\n  interactive: boolean;\r\n}\r\n\r\nexport interface SerializedGroupProps\r\n  extends SerializedObjectProps,\r\n    GroupOwnProps {\r\n  objects: SerializedObjectProps[];\r\n  layoutManager: SerializedLayoutManager;\r\n}\r\n\r\nexport interface GroupProps extends FabricObjectProps, GroupOwnProps {\r\n  layoutManager: LayoutManager;\r\n}\r\n\r\nexport const groupDefaultValues: Partial<TClassProperties<Group>> = {\r\n  strokeWidth: 0,\r\n  subTargetCheck: false,\r\n  interactive: false,\r\n};\r\n\r\n/**\r\n * @fires object:added\r\n * @fires object:removed\r\n * @fires layout:before\r\n * @fires layout:after\r\n */\r\nexport class Group\r\n  extends createCollectionMixin(\r\n    FabricObject<GroupProps, SerializedGroupProps, GroupEvents>\r\n  )\r\n  implements GroupProps\r\n{\r\n  /**\r\n   * Used to optimize performance\r\n   * set to `false` if you don't need contained objects to be targets of events\r\n   * @default\r\n   * @type boolean\r\n   */\r\n  declare subTargetCheck: boolean;\r\n\r\n  /**\r\n   * Used to allow targeting of object inside groups.\r\n   * set to true if you want to select an object inside a group.\\\r\n   * **REQUIRES** `subTargetCheck` set to true\r\n   * This will be not removed but slowly replaced with a method setInteractive\r\n   * that will take care of enabling subTargetCheck and necessary object events.\r\n   * There is too much attached to group interactivity to just be evaluated by a\r\n   * boolean in the code\r\n   * @default\r\n   * @deprecated\r\n   * @type boolean\r\n   */\r\n  declare interactive: boolean;\r\n\r\n  declare layoutManager: LayoutManager;\r\n\r\n  /**\r\n   * Used internally to optimize performance\r\n   * Once an object is selected, instance is rendered without the selected object.\r\n   * This way instance is cached only once for the entire interaction with the selected object.\r\n   * @private\r\n   */\r\n  protected _activeObjects: FabricObject[] = [];\r\n\r\n  static type = 'Group';\r\n\r\n  static ownDefaults: Record<string, any> = groupDefaultValues;\r\n  private __objectSelectionTracker: (ev: ObjectEvents['selected']) => void;\r\n  private __objectSelectionDisposer: (ev: ObjectEvents['deselected']) => void;\r\n\r\n  static getDefaults(): Record<string, any> {\r\n    return {\r\n      ...super.getDefaults(),\r\n      ...Group.ownDefaults,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Constructor\r\n   *\r\n   * @param {FabricObject[]} [objects] instance objects\r\n   * @param {Object} [options] Options object\r\n   */\r\n  constructor(objects: FabricObject[] = [], options: Partial<GroupProps> = {}) {\r\n    super();\r\n    Object.assign(this, Group.ownDefaults);\r\n    this.setOptions(options);\r\n    this.groupInit(objects, options);\r\n  }\r\n\r\n  /**\r\n   * Shared code between group and active selection\r\n   * Meant to be used by the constructor.\r\n   */\r\n  protected groupInit(\r\n    objects: FabricObject[],\r\n    options: {\r\n      layoutManager?: LayoutManager;\r\n      top?: number;\r\n      left?: number;\r\n    }\r\n  ) {\r\n    this._objects = [...objects]; // Avoid unwanted mutations of Collection to affect the caller\r\n\r\n    this.__objectSelectionTracker = this.__objectSelectionMonitor.bind(\r\n      this,\r\n      true\r\n    );\r\n    this.__objectSelectionDisposer = this.__objectSelectionMonitor.bind(\r\n      this,\r\n      false\r\n    );\r\n\r\n    this.forEachObject((object) => {\r\n      this.enterGroup(object, false);\r\n    });\r\n\r\n    // perform initial layout\r\n    this.layoutManager = options.layoutManager ?? new LayoutManager();\r\n    this.layoutManager.performLayout({\r\n      type: LAYOUT_TYPE_INITIALIZATION,\r\n      target: this,\r\n      targets: [...objects],\r\n      // @TODO remove this concept from the layout manager.\r\n      // Layout manager will calculate the correct position,\r\n      // group options can override it later.\r\n      x: options.left,\r\n      y: options.top,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Checks if object can enter group and logs relevant warnings\r\n   * @private\r\n   * @param {FabricObject} object\r\n   * @returns\r\n   */\r\n  canEnterGroup(object: FabricObject) {\r\n    if (object === this || this.isDescendantOf(object)) {\r\n      //  prevent circular object tree\r\n      log(\r\n        'error',\r\n        'Group: circular object trees are not supported, this call has no effect'\r\n      );\r\n      return false;\r\n    } else if (this._objects.indexOf(object) !== -1) {\r\n      // is already in the objects array\r\n      log(\r\n        'error',\r\n        'Group: duplicate objects are not supported inside group, this call has no effect'\r\n      );\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Override this method to enhance performance (for groups with a lot of objects).\r\n   * If Overriding, be sure not pass illegal objects to group - it will break your app.\r\n   * @private\r\n   */\r\n  protected _filterObjectsBeforeEnteringGroup(objects: FabricObject[]) {\r\n    return objects.filter((object, index, array) => {\r\n      // can enter AND is the first occurrence of the object in the passed args (to prevent adding duplicates)\r\n      return this.canEnterGroup(object) && array.indexOf(object) === index;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Add objects\r\n   * @param {...FabricObject[]} objects\r\n   */\r\n  add(...objects: FabricObject[]) {\r\n    const allowedObjects = this._filterObjectsBeforeEnteringGroup(objects);\r\n    const size = super.add(...allowedObjects);\r\n    this._onAfterObjectsChange(LAYOUT_TYPE_ADDED, allowedObjects);\r\n    return size;\r\n  }\r\n\r\n  /**\r\n   * Inserts an object into collection at specified index\r\n   * @param {FabricObject[]} objects Object to insert\r\n   * @param {Number} index Index to insert object at\r\n   */\r\n  insertAt(index: number, ...objects: FabricObject[]) {\r\n    const allowedObjects = this._filterObjectsBeforeEnteringGroup(objects);\r\n    const size = super.insertAt(index, ...allowedObjects);\r\n    this._onAfterObjectsChange(LAYOUT_TYPE_ADDED, allowedObjects);\r\n    return size;\r\n  }\r\n\r\n  /**\r\n   * Remove objects\r\n   * @param {...FabricObject[]} objects\r\n   * @returns {FabricObject[]} removed objects\r\n   */\r\n  remove(...objects: FabricObject[]) {\r\n    const removed = super.remove(...objects);\r\n    this._onAfterObjectsChange(LAYOUT_TYPE_REMOVED, removed);\r\n    return removed;\r\n  }\r\n\r\n  _onObjectAdded(object: FabricObject) {\r\n    this.enterGroup(object, true);\r\n    this.fire('object:added', { target: object });\r\n    object.fire('added', { target: this });\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {FabricObject} object\r\n   * @param {boolean} [removeParentTransform] true if object should exit group without applying group's transform to it\r\n   */\r\n  _onObjectRemoved(object: FabricObject, removeParentTransform?: boolean) {\r\n    this.exitGroup(object, removeParentTransform);\r\n    this.fire('object:removed', { target: object });\r\n    object.fire('removed', { target: this });\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {'added'|'removed'} type\r\n   * @param {FabricObject[]} targets\r\n   */\r\n  _onAfterObjectsChange(type: 'added' | 'removed', targets: FabricObject[]) {\r\n    this.layoutManager.performLayout({\r\n      type,\r\n      targets,\r\n      target: this,\r\n    });\r\n  }\r\n\r\n  _onStackOrderChanged() {\r\n    this._set('dirty', true);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {string} key\r\n   * @param {*} value\r\n   */\r\n  _set(key: string, value: any) {\r\n    const prev = this[key as keyof this];\r\n    super._set(key, value);\r\n    if (key === 'canvas' && prev !== value) {\r\n      (this._objects || []).forEach((object) => {\r\n        object._set(key, value);\r\n      });\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _shouldSetNestedCoords() {\r\n    return this.subTargetCheck;\r\n  }\r\n\r\n  /**\r\n   * Remove all objects\r\n   * @returns {FabricObject[]} removed objects\r\n   */\r\n  removeAll() {\r\n    this._activeObjects = [];\r\n    return this.remove(...this._objects);\r\n  }\r\n\r\n  /**\r\n   * keeps track of the selected objects\r\n   * @private\r\n   */\r\n  __objectSelectionMonitor<T extends boolean>(\r\n    selected: T,\r\n    { target: object }: ObjectEvents[T extends true ? 'selected' : 'deselected']\r\n  ) {\r\n    const activeObjects = this._activeObjects;\r\n    if (selected) {\r\n      activeObjects.push(object);\r\n      this._set('dirty', true);\r\n    } else if (activeObjects.length > 0) {\r\n      const index = activeObjects.indexOf(object);\r\n      if (index > -1) {\r\n        activeObjects.splice(index, 1);\r\n        this._set('dirty', true);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {boolean} watch\r\n   * @param {FabricObject} object\r\n   */\r\n  _watchObject(watch: boolean, object: FabricObject) {\r\n    //  make sure we listen only once\r\n    watch && this._watchObject(false, object);\r\n    if (watch) {\r\n      object.on('selected', this.__objectSelectionTracker);\r\n      object.on('deselected', this.__objectSelectionDisposer);\r\n    } else {\r\n      object.off('selected', this.__objectSelectionTracker);\r\n      object.off('deselected', this.__objectSelectionDisposer);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {FabricObject} object\r\n   * @param {boolean} [removeParentTransform] true if object is in canvas coordinate plane\r\n   */\r\n  enterGroup(object: FabricObject, removeParentTransform?: boolean) {\r\n    object.group && object.group.remove(object);\r\n    object._set('parent', this);\r\n    this._enterGroup(object, removeParentTransform);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {FabricObject} object\r\n   * @param {boolean} [removeParentTransform] true if object is in canvas coordinate plane\r\n   */\r\n  _enterGroup(object: FabricObject, removeParentTransform?: boolean) {\r\n    if (removeParentTransform) {\r\n      // can this be converted to utils (sendObjectToPlane)?\r\n      applyTransformToObject(\r\n        object,\r\n        multiplyTransformMatrices(\r\n          invertTransform(this.calcTransformMatrix()),\r\n          object.calcTransformMatrix()\r\n        )\r\n      );\r\n    }\r\n    this._shouldSetNestedCoords() && object.setCoords();\r\n    object._set('group', this);\r\n    object._set('canvas', this.canvas);\r\n    this._watchObject(true, object);\r\n    const activeObject =\r\n      this.canvas &&\r\n      this.canvas.getActiveObject &&\r\n      this.canvas.getActiveObject();\r\n    // if we are adding the activeObject in a group\r\n    if (\r\n      activeObject &&\r\n      (activeObject === object || object.isDescendantOf(activeObject))\r\n    ) {\r\n      this._activeObjects.push(object);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {FabricObject} object\r\n   * @param {boolean} [removeParentTransform] true if object should exit group without applying group's transform to it\r\n   */\r\n  exitGroup(object: FabricObject, removeParentTransform?: boolean) {\r\n    this._exitGroup(object, removeParentTransform);\r\n    object._set('parent', undefined);\r\n    object._set('canvas', undefined);\r\n  }\r\n\r\n  /**\r\n   * Executes the inner fabric logic of exiting a group.\r\n   * - Stop watching the object\r\n   * - Remove the object from the optimization map this._activeObjects\r\n   * - unset the group property of the object\r\n   * @protected\r\n   * @param {FabricObject} object\r\n   * @param {boolean} [removeParentTransform] true if object should exit group without applying group's transform to it\r\n   */\r\n  _exitGroup(object: FabricObject, removeParentTransform?: boolean) {\r\n    object._set('group', undefined);\r\n    if (!removeParentTransform) {\r\n      applyTransformToObject(\r\n        object,\r\n        multiplyTransformMatrices(\r\n          this.calcTransformMatrix(),\r\n          object.calcTransformMatrix()\r\n        )\r\n      );\r\n      object.setCoords();\r\n    }\r\n    this._watchObject(false, object);\r\n    const index =\r\n      this._activeObjects.length > 0 ? this._activeObjects.indexOf(object) : -1;\r\n    if (index > -1) {\r\n      this._activeObjects.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Decide if the object should cache or not. Create its own cache level\r\n   * needsItsOwnCache should be used when the object drawing method requires\r\n   * a cache step. None of the fabric classes requires it.\r\n   * Generally you do not cache objects in groups because the group is already cached.\r\n   * @return {Boolean}\r\n   */\r\n  shouldCache() {\r\n    const ownCache = FabricObject.prototype.shouldCache.call(this);\r\n    if (ownCache) {\r\n      for (let i = 0; i < this._objects.length; i++) {\r\n        if (this._objects[i].willDrawShadow()) {\r\n          this.ownCaching = false;\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n    return ownCache;\r\n  }\r\n\r\n  /**\r\n   * Check if this object or a child object will cast a shadow\r\n   * @return {Boolean}\r\n   */\r\n  willDrawShadow() {\r\n    if (super.willDrawShadow()) {\r\n      return true;\r\n    }\r\n    for (let i = 0; i < this._objects.length; i++) {\r\n      if (this._objects[i].willDrawShadow()) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Check if instance or its group are caching, recursively up\r\n   * @return {Boolean}\r\n   */\r\n  isOnACache(): boolean {\r\n    return this.ownCaching || (!!this.parent && this.parent.isOnACache());\r\n  }\r\n\r\n  /**\r\n   * Execute the drawing operation for an object on a specified context\r\n   * @param {CanvasRenderingContext2D} ctx Context to render on\r\n   */\r\n  drawObject(ctx: CanvasRenderingContext2D) {\r\n    this._renderBackground(ctx);\r\n    for (let i = 0; i < this._objects.length; i++) {\r\n      // TODO: handle rendering edge case somehow\r\n      if (\r\n        this.canvas?.preserveObjectStacking &&\r\n        this._objects[i].group !== this\r\n      ) {\r\n        ctx.save();\r\n        ctx.transform(...invertTransform(this.calcTransformMatrix()));\r\n        this._objects[i].render(ctx);\r\n        ctx.restore();\r\n      } else if (this._objects[i].group === this) {\r\n        this._objects[i].render(ctx);\r\n      }\r\n    }\r\n    this._drawClipPath(ctx, this.clipPath);\r\n  }\r\n\r\n  /**\r\n   * @override\r\n   * @return {Boolean}\r\n   */\r\n  setCoords() {\r\n    super.setCoords();\r\n    this._shouldSetNestedCoords() &&\r\n      this.forEachObject((object) => object.setCoords());\r\n  }\r\n\r\n  triggerLayout(options: ImperativeLayoutOptions = {}) {\r\n    this.layoutManager.performLayout({\r\n      target: this,\r\n      type: LAYOUT_TYPE_IMPERATIVE,\r\n      ...options,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Renders instance on a given context\r\n   * @param {CanvasRenderingContext2D} ctx context to render instance on\r\n   */\r\n  render(ctx: CanvasRenderingContext2D) {\r\n    this._transformDone = true;\r\n    super.render(ctx);\r\n    this._transformDone = false;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @private\r\n   * @param {'toObject'|'toDatalessObject'} [method]\r\n   * @param {string[]} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n   * @returns {FabricObject[]} serialized objects\r\n   */\r\n  __serializeObjects(\r\n    method: 'toObject' | 'toDatalessObject',\r\n    propertiesToInclude?: string[]\r\n  ) {\r\n    const _includeDefaultValues = this.includeDefaultValues;\r\n    return this._objects\r\n      .filter(function (obj) {\r\n        return !obj.excludeFromExport;\r\n      })\r\n      .map(function (obj) {\r\n        const originalDefaults = obj.includeDefaultValues;\r\n        obj.includeDefaultValues = _includeDefaultValues;\r\n        const data = obj[method || 'toObject'](propertiesToInclude);\r\n        obj.includeDefaultValues = originalDefaults;\r\n        // delete data.version;\r\n        return data;\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Returns object representation of an instance\r\n   * @param {string[]} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n   * @return {Object} object representation of an instance\r\n   */\r\n  toObject<\r\n    T extends Omit<\r\n      GroupProps & TClassProperties<this>,\r\n      keyof SerializedGroupProps\r\n    >,\r\n    K extends keyof T = never\r\n  >(propertiesToInclude: K[] = []): Pick<T, K> & SerializedGroupProps {\r\n    const layoutManager = this.layoutManager.toObject();\r\n\r\n    return {\r\n      ...super.toObject([\r\n        'subTargetCheck',\r\n        'interactive',\r\n        ...propertiesToInclude,\r\n      ]),\r\n      ...(layoutManager.strategy !== 'fit-content' || this.includeDefaultValues\r\n        ? { layoutManager }\r\n        : {}),\r\n      objects: this.__serializeObjects(\r\n        'toObject',\r\n        propertiesToInclude as string[]\r\n      ),\r\n    };\r\n  }\r\n\r\n  toString() {\r\n    return `#<Group: (${this.complexity()})>`;\r\n  }\r\n\r\n  dispose() {\r\n    this.layoutManager.unsubscribeTargets({\r\n      targets: this.getObjects(),\r\n      target: this,\r\n    });\r\n    this._activeObjects = [];\r\n    this.forEachObject((object) => {\r\n      this._watchObject(false, object);\r\n      object.dispose();\r\n    });\r\n    super.dispose();\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _createSVGBgRect(reviver?: TSVGReviver) {\r\n    if (!this.backgroundColor) {\r\n      return '';\r\n    }\r\n    const fillStroke = Rect.prototype._toSVG.call(this);\r\n    const commons = fillStroke.indexOf('COMMON_PARTS');\r\n    fillStroke[commons] = 'for=\"group\" ';\r\n    const markup = fillStroke.join('');\r\n    return reviver ? reviver(markup) : markup;\r\n  }\r\n\r\n  /**\r\n   * Returns svg representation of an instance\r\n   * @param {TSVGReviver} [reviver] Method for further parsing of svg representation.\r\n   * @return {String} svg representation of an instance\r\n   */\r\n  _toSVG(reviver?: TSVGReviver) {\r\n    const svgString = ['<g ', 'COMMON_PARTS', ' >\\n'];\r\n    const bg = this._createSVGBgRect(reviver);\r\n    bg && svgString.push('\\t\\t', bg);\r\n    for (let i = 0; i < this._objects.length; i++) {\r\n      svgString.push('\\t\\t', this._objects[i].toSVG(reviver));\r\n    }\r\n    svgString.push('</g>\\n');\r\n    return svgString;\r\n  }\r\n\r\n  /**\r\n   * Returns styles-string for svg-export, specific version for group\r\n   * @return {String}\r\n   */\r\n  getSvgStyles(): string {\r\n    const opacity =\r\n        typeof this.opacity !== 'undefined' && this.opacity !== 1\r\n          ? `opacity: ${this.opacity};`\r\n          : '',\r\n      visibility = this.visible ? '' : ' visibility: hidden;';\r\n    return [opacity, this.getSvgFilter(), visibility].join('');\r\n  }\r\n\r\n  /**\r\n   * Returns svg clipPath representation of an instance\r\n   * @param {Function} [reviver] Method for further parsing of svg representation.\r\n   * @return {String} svg representation of an instance\r\n   */\r\n  toClipPathSVG(reviver?: TSVGReviver): string {\r\n    const svgString = [];\r\n    const bg = this._createSVGBgRect(reviver);\r\n    bg && svgString.push('\\t', bg);\r\n    for (let i = 0; i < this._objects.length; i++) {\r\n      svgString.push('\\t', this._objects[i].toClipPathSVG(reviver));\r\n    }\r\n    return this._createBaseClipPathSVGMarkup(svgString, {\r\n      reviver,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @todo support loading from svg\r\n   * @private\r\n   * @static\r\n   * @memberOf Group\r\n   * @param {Object} object Object to create a group from\r\n   * @returns {Promise<Group>}\r\n   */\r\n  static fromObject<T extends TOptions<SerializedGroupProps>>(\r\n    { type, objects = [], layoutManager, ...options }: T,\r\n    abortable?: Abortable\r\n  ) {\r\n    return Promise.all([\r\n      enlivenObjects<FabricObject>(objects, abortable),\r\n      enlivenObjectEnlivables(options, abortable),\r\n    ]).then(([objects, hydratedOptions]) => {\r\n      const group = new this(objects, {\r\n        ...options,\r\n        ...hydratedOptions,\r\n        layoutManager: new NoopLayoutManager(),\r\n      });\r\n      if (layoutManager) {\r\n        const layoutClass = classRegistry.getClass<typeof LayoutManager>(\r\n          layoutManager.type\r\n        );\r\n        const strategyClass = classRegistry.getClass<typeof FitContentLayout>(\r\n          layoutManager.strategy\r\n        );\r\n        group.layoutManager = new layoutClass(new strategyClass());\r\n      } else {\r\n        group.layoutManager = new LayoutManager();\r\n      }\r\n      group.layoutManager.subscribeTargets({\r\n        type: LAYOUT_TYPE_INITIALIZATION,\r\n        target: group,\r\n        targets: group.getObjects(),\r\n      });\r\n      group.setCoords();\r\n      return group;\r\n    });\r\n  }\r\n}\r\n\r\nclassRegistry.setClass(Group);\r\n","import type { GroupProps } from '../../shapes/Group';\r\nimport { Group } from '../../shapes/Group';\r\nimport type { FabricObject } from '../../shapes/Object/FabricObject';\r\n\r\n/**\r\n * TODO experiment with different layout manager and svg results ( fixed fit content )\r\n * Groups SVG elements (usually those retrieved from SVG document)\r\n * @static\r\n * @param {FabricObject[]} elements FabricObject(s) parsed from svg, to group\r\n * @return {FabricObject | Group}\r\n */\r\nexport const groupSVGElements = (\r\n  elements: FabricObject[],\r\n  options?: Partial<GroupProps>\r\n) => {\r\n  if (elements && elements.length === 1) {\r\n    return elements[0];\r\n  }\r\n  return new Group(elements, options);\r\n};\r\n","import type { TSize } from '../../typedefs';\r\n\r\n/**\r\n * Finds the scale for the object source to fit inside the object destination,\r\n * keeping aspect ratio intact.\r\n * respect the total allowed area for the cache.\r\n * @param {TSize} source natural unscaled size of the object\r\n * @param {TSize} destination natural unscaled size of the object\r\n * @return {Number} scale factor to apply to source to fit into destination\r\n */\r\nexport const findScaleToFit = (source: TSize, destination: TSize) =>\r\n  Math.min(\r\n    destination.width / source.width,\r\n    destination.height / source.height\r\n  );\r\n\r\n/**\r\n * Finds the scale for the object source to cover entirely the object destination,\r\n * keeping aspect ratio intact.\r\n * respect the total allowed area for the cache.\r\n * @param {TSize} source natural unscaled size of the object\r\n * @param {TSize} destination natural unscaled size of the object\r\n * @return {Number} scale factor to apply to source to cover destination\r\n */\r\nexport const findScaleToCover = (source: TSize, destination: TSize) =>\r\n  Math.max(\r\n    destination.width / source.width,\r\n    destination.height / source.height\r\n  );\r\n","import { reNum } from '../../parser/constants';\r\n\r\n/**\r\n * p for param\r\n * using \"bad naming\" here because it makes the regex much easier to read\r\n */\r\nconst p = `(${reNum})`;\r\n\r\nconst reMoveToCommand = `(M) (?:${p} ${p} ?)+`;\r\n\r\nconst reLineCommand = `(L) (?:${p} ${p} ?)+`;\r\n\r\nconst reHorizontalLineCommand = `(H) (?:${p} ?)+`;\r\n\r\nconst reVerticalLineCommand = `(V) (?:${p} ?)+`;\r\n\r\nconst reClosePathCommand = String.raw`(Z)\\s*`;\r\n\r\nconst reCubicCurveCommand = `(C) (?:${p} ${p} ${p} ${p} ${p} ${p} ?)+`;\r\n\r\nconst reCubicCurveShortcutCommand = `(S) (?:${p} ${p} ${p} ${p} ?)+`;\r\n\r\nconst reQuadraticCurveCommand = `(Q) (?:${p} ${p} ${p} ${p} ?)+`;\r\n\r\nconst reQuadraticCurveShortcutCommand = `(T) (?:${p} ${p} ?)+`;\r\n\r\nconst reArcCommand = `(A) (?:${p} ${p} ${p} ([01]) ?([01]) ${p} ${p} ?)+`;\r\n\r\nexport const rePathCommand =\r\n  `(?:(?:${reMoveToCommand})` +\r\n  `|(?:${reLineCommand})` +\r\n  `|(?:${reHorizontalLineCommand})` +\r\n  `|(?:${reVerticalLineCommand})` +\r\n  `|(?:${reClosePathCommand})` +\r\n  `|(?:${reCubicCurveCommand})` +\r\n  `|(?:${reCubicCurveShortcutCommand})` +\r\n  `|(?:${reQuadraticCurveCommand})` +\r\n  `|(?:${reQuadraticCurveShortcutCommand})` +\r\n  `|(?:${reArcCommand}))`;\r\n","import { cache } from '../../cache';\r\nimport { config } from '../../config';\r\nimport { halfPI, PiBy180 } from '../../constants';\r\nimport type { TMat2D, TRadian, TRectBounds } from '../../typedefs';\r\nimport { cos } from '../misc/cos';\r\nimport { multiplyTransformMatrices, transformPoint } from '../misc/matrix';\r\nimport { sin } from '../misc/sin';\r\nimport { toFixed } from '../misc/toFixed';\r\nimport type {\r\n  TCurveInfo,\r\n  TComplexPathData,\r\n  TParsedAbsoluteCubicCurveCommand,\r\n  TParsedCubicCurveCommand,\r\n  TPathSegmentInfo,\r\n  TPointAngle,\r\n  TSimpleParsedCommand,\r\n  TSimplePathData,\r\n  TPathSegmentCommandInfo,\r\n  TComplexParsedCommand,\r\n  TPathSegmentInfoCommon,\r\n  TEndPathInfo,\r\n  TParsedArcCommand,\r\n} from './typedefs';\r\nimport type { XY } from '../../Point';\r\nimport { Point } from '../../Point';\r\nimport { rePathCommand } from './regex';\r\nimport { cleanupSvgAttribute } from '../internals/cleanupSvgAttribute';\r\n\r\n/**\r\n * Commands that may be repeated\r\n */\r\nconst repeatedCommands: Record<string, string | undefined> = {\r\n  m: 'l',\r\n  M: 'L',\r\n};\r\n\r\n/**\r\n * Convert an arc of a rotated ellipse to a Bezier Curve\r\n * @param {TRadian} theta1 start of the arc\r\n * @param {TRadian} theta2 end of the arc\r\n * @param cosTh cosine of the angle of rotation\r\n * @param sinTh sine of the angle of rotation\r\n * @param rx x-axis radius (before rotation)\r\n * @param ry y-axis radius (before rotation)\r\n * @param cx1 center x of the ellipse\r\n * @param cy1 center y of the ellipse\r\n * @param mT\r\n * @param fromX starting point of arc x\r\n * @param fromY starting point of arc y\r\n */\r\nconst segmentToBezier = (\r\n  theta1: TRadian,\r\n  theta2: TRadian,\r\n  cosTh: number,\r\n  sinTh: number,\r\n  rx: number,\r\n  ry: number,\r\n  cx1: number,\r\n  cy1: number,\r\n  mT: number,\r\n  fromX: number,\r\n  fromY: number\r\n): TParsedCubicCurveCommand => {\r\n  const costh1 = cos(theta1),\r\n    sinth1 = sin(theta1),\r\n    costh2 = cos(theta2),\r\n    sinth2 = sin(theta2),\r\n    toX = cosTh * rx * costh2 - sinTh * ry * sinth2 + cx1,\r\n    toY = sinTh * rx * costh2 + cosTh * ry * sinth2 + cy1,\r\n    cp1X = fromX + mT * (-cosTh * rx * sinth1 - sinTh * ry * costh1),\r\n    cp1Y = fromY + mT * (-sinTh * rx * sinth1 + cosTh * ry * costh1),\r\n    cp2X = toX + mT * (cosTh * rx * sinth2 + sinTh * ry * costh2),\r\n    cp2Y = toY + mT * (sinTh * rx * sinth2 - cosTh * ry * costh2);\r\n\r\n  return ['C', cp1X, cp1Y, cp2X, cp2Y, toX, toY];\r\n};\r\n\r\n/**\r\n * Adapted from {@link http://dxr.mozilla.org/mozilla-central/source/dom/svg/SVGPathDataParser.cpp}\r\n * by Andrea Bogazzi code is under MPL. if you don't have a copy of the license you can take it here\r\n * http://mozilla.org/MPL/2.0/\r\n * @param toX\r\n * @param toY\r\n * @param rx\r\n * @param ry\r\n * @param {number} large 0 or 1 flag\r\n * @param {number} sweep 0 or 1 flag\r\n * @param rotateX\r\n */\r\nconst arcToSegments = (\r\n  toX: number,\r\n  toY: number,\r\n  rx: number,\r\n  ry: number,\r\n  large: number,\r\n  sweep: number,\r\n  rotateX: TRadian\r\n): TParsedAbsoluteCubicCurveCommand[] => {\r\n  if (rx === 0 || ry === 0) {\r\n    return [];\r\n  }\r\n  let fromX = 0,\r\n    fromY = 0,\r\n    root = 0;\r\n  const PI = Math.PI,\r\n    theta = rotateX * PiBy180,\r\n    sinTheta = sin(theta),\r\n    cosTh = cos(theta),\r\n    px = 0.5 * (-cosTh * toX - sinTheta * toY),\r\n    py = 0.5 * (-cosTh * toY + sinTheta * toX),\r\n    rx2 = rx ** 2,\r\n    ry2 = ry ** 2,\r\n    py2 = py ** 2,\r\n    px2 = px ** 2,\r\n    pl = rx2 * ry2 - rx2 * py2 - ry2 * px2;\r\n  let _rx = Math.abs(rx);\r\n  let _ry = Math.abs(ry);\r\n\r\n  if (pl < 0) {\r\n    const s = Math.sqrt(1 - pl / (rx2 * ry2));\r\n    _rx *= s;\r\n    _ry *= s;\r\n  } else {\r\n    root =\r\n      (large === sweep ? -1.0 : 1.0) * Math.sqrt(pl / (rx2 * py2 + ry2 * px2));\r\n  }\r\n\r\n  const cx = (root * _rx * py) / _ry,\r\n    cy = (-root * _ry * px) / _rx,\r\n    cx1 = cosTh * cx - sinTheta * cy + toX * 0.5,\r\n    cy1 = sinTheta * cx + cosTh * cy + toY * 0.5;\r\n  let mTheta = calcVectorAngle(1, 0, (px - cx) / _rx, (py - cy) / _ry);\r\n  let dtheta = calcVectorAngle(\r\n    (px - cx) / _rx,\r\n    (py - cy) / _ry,\r\n    (-px - cx) / _rx,\r\n    (-py - cy) / _ry\r\n  );\r\n\r\n  if (sweep === 0 && dtheta > 0) {\r\n    dtheta -= 2 * PI;\r\n  } else if (sweep === 1 && dtheta < 0) {\r\n    dtheta += 2 * PI;\r\n  }\r\n\r\n  // Convert into cubic bezier segments <= 90deg\r\n  const segments = Math.ceil(Math.abs((dtheta / PI) * 2)),\r\n    result = new Array(segments),\r\n    mDelta = dtheta / segments,\r\n    mT =\r\n      ((8 / 3) * Math.sin(mDelta / 4) * Math.sin(mDelta / 4)) /\r\n      Math.sin(mDelta / 2);\r\n  let th3 = mTheta + mDelta;\r\n\r\n  for (let i = 0; i < segments; i++) {\r\n    result[i] = segmentToBezier(\r\n      mTheta,\r\n      th3,\r\n      cosTh,\r\n      sinTheta,\r\n      _rx,\r\n      _ry,\r\n      cx1,\r\n      cy1,\r\n      mT,\r\n      fromX,\r\n      fromY\r\n    );\r\n    fromX = result[i][5];\r\n    fromY = result[i][6];\r\n    mTheta = th3;\r\n    th3 += mDelta;\r\n  }\r\n  return result;\r\n};\r\n\r\n/**\r\n * @private\r\n * Calculate the angle between two vectors\r\n * @param ux u endpoint x\r\n * @param uy u endpoint y\r\n * @param vx v endpoint x\r\n * @param vy v endpoint y\r\n */\r\nconst calcVectorAngle = (\r\n  ux: number,\r\n  uy: number,\r\n  vx: number,\r\n  vy: number\r\n): TRadian => {\r\n  const ta = Math.atan2(uy, ux),\r\n    tb = Math.atan2(vy, vx);\r\n  if (tb >= ta) {\r\n    return tb - ta;\r\n  } else {\r\n    return 2 * Math.PI - (ta - tb);\r\n  }\r\n};\r\n\r\n// functions for the Cubic beizer\r\n// taken from: https://github.com/konvajs/konva/blob/7.0.5/src/shapes/Path.ts#L350\r\nconst CB1 = (t: number) => t ** 3;\r\nconst CB2 = (t: number) => 3 * t ** 2 * (1 - t);\r\nconst CB3 = (t: number) => 3 * t * (1 - t) ** 2;\r\nconst CB4 = (t: number) => (1 - t) ** 3;\r\n\r\n/**\r\n * Calculate bounding box of a cubic Bezier curve\r\n * Taken from http://jsbin.com/ivomiq/56/edit (no credits available)\r\n * TODO: can we normalize this with the starting points set at 0 and then translated the bbox?\r\n * @param {number} begx starting point\r\n * @param {number} begy\r\n * @param {number} cp1x first control point\r\n * @param {number} cp1y\r\n * @param {number} cp2x second control point\r\n * @param {number} cp2y\r\n * @param {number} endx end of bezier\r\n * @param {number} endy\r\n * @return {TRectBounds} the rectangular bounds\r\n */\r\nexport function getBoundsOfCurve(\r\n  begx: number,\r\n  begy: number,\r\n  cp1x: number,\r\n  cp1y: number,\r\n  cp2x: number,\r\n  cp2y: number,\r\n  endx: number,\r\n  endy: number\r\n): TRectBounds {\r\n  let argsString: string;\r\n  if (config.cachesBoundsOfCurve) {\r\n    // eslint-disable-next-line\r\n    argsString = [...arguments].join();\r\n    if (cache.boundsOfCurveCache[argsString]) {\r\n      return cache.boundsOfCurveCache[argsString];\r\n    }\r\n  }\r\n\r\n  const sqrt = Math.sqrt,\r\n    abs = Math.abs,\r\n    tvalues = [],\r\n    bounds: [[x: number, y: number], [x: number, y: number]] = [\r\n      [0, 0],\r\n      [0, 0],\r\n    ];\r\n\r\n  let b = 6 * begx - 12 * cp1x + 6 * cp2x;\r\n  let a = -3 * begx + 9 * cp1x - 9 * cp2x + 3 * endx;\r\n  let c = 3 * cp1x - 3 * begx;\r\n\r\n  for (let i = 0; i < 2; ++i) {\r\n    if (i > 0) {\r\n      b = 6 * begy - 12 * cp1y + 6 * cp2y;\r\n      a = -3 * begy + 9 * cp1y - 9 * cp2y + 3 * endy;\r\n      c = 3 * cp1y - 3 * begy;\r\n    }\r\n\r\n    if (abs(a) < 1e-12) {\r\n      if (abs(b) < 1e-12) {\r\n        continue;\r\n      }\r\n      const t = -c / b;\r\n      if (0 < t && t < 1) {\r\n        tvalues.push(t);\r\n      }\r\n      continue;\r\n    }\r\n    const b2ac = b * b - 4 * c * a;\r\n    if (b2ac < 0) {\r\n      continue;\r\n    }\r\n    const sqrtb2ac = sqrt(b2ac);\r\n    const t1 = (-b + sqrtb2ac) / (2 * a);\r\n    if (0 < t1 && t1 < 1) {\r\n      tvalues.push(t1);\r\n    }\r\n    const t2 = (-b - sqrtb2ac) / (2 * a);\r\n    if (0 < t2 && t2 < 1) {\r\n      tvalues.push(t2);\r\n    }\r\n  }\r\n\r\n  let j = tvalues.length;\r\n  const jlen = j;\r\n  const iterator = getPointOnCubicBezierIterator(\r\n    begx,\r\n    begy,\r\n    cp1x,\r\n    cp1y,\r\n    cp2x,\r\n    cp2y,\r\n    endx,\r\n    endy\r\n  );\r\n  while (j--) {\r\n    const { x, y } = iterator(tvalues[j]);\r\n    bounds[0][j] = x;\r\n    bounds[1][j] = y;\r\n  }\r\n\r\n  bounds[0][jlen] = begx;\r\n  bounds[1][jlen] = begy;\r\n  bounds[0][jlen + 1] = endx;\r\n  bounds[1][jlen + 1] = endy;\r\n  const result: TRectBounds = [\r\n    new Point(Math.min(...bounds[0]), Math.min(...bounds[1])),\r\n    new Point(Math.max(...bounds[0]), Math.max(...bounds[1])),\r\n  ];\r\n  if (config.cachesBoundsOfCurve) {\r\n    cache.boundsOfCurveCache[argsString!] = result;\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * Converts arc to a bunch of cubic Bezier curves\r\n * @param {number} fx starting point x\r\n * @param {number} fy starting point y\r\n * @param {TParsedArcCommand} coords Arc command\r\n */\r\nexport const fromArcToBeziers = (\r\n  fx: number,\r\n  fy: number,\r\n  [_, rx, ry, rot, large, sweep, tx, ty]: TParsedArcCommand\r\n): TParsedAbsoluteCubicCurveCommand[] => {\r\n  const segsNorm = arcToSegments(tx - fx, ty - fy, rx, ry, large, sweep, rot);\r\n\r\n  for (let i = 0, len = segsNorm.length; i < len; i++) {\r\n    segsNorm[i][1] += fx;\r\n    segsNorm[i][2] += fy;\r\n    segsNorm[i][3] += fx;\r\n    segsNorm[i][4] += fy;\r\n    segsNorm[i][5] += fx;\r\n    segsNorm[i][6] += fy;\r\n  }\r\n  return segsNorm;\r\n};\r\n\r\n/**\r\n * This function takes a parsed SVG path and makes it simpler for fabricJS logic.\r\n * Simplification consist of:\r\n * - All commands converted to absolute (lowercase to uppercase)\r\n * - S converted to C\r\n * - T converted to Q\r\n * - A converted to C\r\n * @param {TComplexPathData} path the array of commands of a parsed SVG path for `Path`\r\n * @return {TSimplePathData} the simplified array of commands of a parsed SVG path for `Path`\r\n * TODO: figure out how to remove the type assertions in a nice way\r\n */\r\nexport const makePathSimpler = (path: TComplexPathData): TSimplePathData => {\r\n  // x and y represent the last point of the path, AKA the previous command point.\r\n  // we add them to each relative command to make it an absolute comment.\r\n  // we also swap the v V h H with L, because are easier to transform.\r\n  let x = 0,\r\n    y = 0;\r\n  // x1 and y1 represent the last point of the subpath. the subpath is started with\r\n  // m or M command. When a z or Z command is drawn, x and y need to be resetted to\r\n  // the last x1 and y1.\r\n  let x1 = 0,\r\n    y1 = 0;\r\n  // previous will host the letter of the previous command, to handle S and T.\r\n  // controlX and controlY will host the previous reflected control point\r\n  const destinationPath: TSimplePathData = [];\r\n  let previous,\r\n    // placeholders\r\n    controlX = 0,\r\n    controlY = 0;\r\n  for (const parsedCommand of path) {\r\n    const current: TComplexParsedCommand = [...parsedCommand];\r\n    let converted: TSimpleParsedCommand | undefined;\r\n    switch (\r\n      current[0] // first letter\r\n    ) {\r\n      case 'l': // lineto, relative\r\n        current[1] += x;\r\n        current[2] += y;\r\n      // falls through\r\n      case 'L':\r\n        x = current[1];\r\n        y = current[2];\r\n        converted = ['L', x, y];\r\n        break;\r\n      case 'h': // horizontal lineto, relative\r\n        current[1] += x;\r\n      // falls through\r\n      case 'H':\r\n        x = current[1];\r\n        converted = ['L', x, y];\r\n        break;\r\n      case 'v': // vertical lineto, relative\r\n        current[1] += y;\r\n      // falls through\r\n      case 'V':\r\n        y = current[1];\r\n        converted = ['L', x, y];\r\n        break;\r\n      case 'm': // moveTo, relative\r\n        current[1] += x;\r\n        current[2] += y;\r\n      // falls through\r\n      case 'M':\r\n        x = current[1];\r\n        y = current[2];\r\n        x1 = current[1];\r\n        y1 = current[2];\r\n        converted = ['M', x, y];\r\n        break;\r\n      case 'c': // bezierCurveTo, relative\r\n        current[1] += x;\r\n        current[2] += y;\r\n        current[3] += x;\r\n        current[4] += y;\r\n        current[5] += x;\r\n        current[6] += y;\r\n      // falls through\r\n      case 'C':\r\n        controlX = current[3];\r\n        controlY = current[4];\r\n        x = current[5];\r\n        y = current[6];\r\n        converted = ['C', current[1], current[2], controlX, controlY, x, y];\r\n        break;\r\n      case 's': // shorthand cubic bezierCurveTo, relative\r\n        current[1] += x;\r\n        current[2] += y;\r\n        current[3] += x;\r\n        current[4] += y;\r\n      // falls through\r\n      case 'S':\r\n        // would be sScC but since we are swapping sSc for C, we check just that.\r\n        if (previous === 'C') {\r\n          // calculate reflection of previous control points\r\n          controlX = 2 * x - controlX;\r\n          controlY = 2 * y - controlY;\r\n        } else {\r\n          // If there is no previous command or if the previous command was not a C, c, S, or s,\r\n          // the control point is coincident with the current point\r\n          controlX = x;\r\n          controlY = y;\r\n        }\r\n        x = current[3];\r\n        y = current[4];\r\n        converted = ['C', controlX, controlY, current[1], current[2], x, y];\r\n        // converted[3] and converted[4] are NOW the second control point.\r\n        // we keep it for the next reflection.\r\n        controlX = converted[3];\r\n        controlY = converted[4];\r\n        break;\r\n      case 'q': // quadraticCurveTo, relative\r\n        current[1] += x;\r\n        current[2] += y;\r\n        current[3] += x;\r\n        current[4] += y;\r\n      // falls through\r\n      case 'Q':\r\n        controlX = current[1];\r\n        controlY = current[2];\r\n        x = current[3];\r\n        y = current[4];\r\n        converted = ['Q', controlX, controlY, x, y];\r\n        break;\r\n      case 't': // shorthand quadraticCurveTo, relative\r\n        current[1] += x;\r\n        current[2] += y;\r\n      // falls through\r\n      case 'T':\r\n        if (previous === 'Q') {\r\n          // calculate reflection of previous control point\r\n          controlX = 2 * x - controlX;\r\n          controlY = 2 * y - controlY;\r\n        } else {\r\n          // If there is no previous command or if the previous command was not a Q, q, T or t,\r\n          // assume the control point is coincident with the current point\r\n          controlX = x;\r\n          controlY = y;\r\n        }\r\n        x = current[1];\r\n        y = current[2];\r\n        converted = ['Q', controlX, controlY, x, y];\r\n        break;\r\n      case 'a':\r\n        current[6] += x;\r\n        current[7] += y;\r\n      // falls through\r\n      case 'A':\r\n        fromArcToBeziers(x, y, current).forEach((b) => destinationPath.push(b));\r\n        x = current[6];\r\n        y = current[7];\r\n        break;\r\n      case 'z':\r\n      case 'Z':\r\n        x = x1;\r\n        y = y1;\r\n        converted = ['Z'];\r\n        break;\r\n      default:\r\n    }\r\n    if (converted) {\r\n      destinationPath.push(converted);\r\n      previous = converted[0];\r\n    } else {\r\n      previous = '';\r\n    }\r\n  }\r\n  return destinationPath;\r\n};\r\n\r\n// todo verify if we can just use the point class here\r\n/**\r\n * Calc length from point x1,y1 to x2,y2\r\n * @param {number} x1 starting point x\r\n * @param {number} y1 starting point y\r\n * @param {number} x2 starting point x\r\n * @param {number} y2 starting point y\r\n * @return {number} length of segment\r\n */\r\nconst calcLineLength = (\r\n  x1: number,\r\n  y1: number,\r\n  x2: number,\r\n  y2: number\r\n): number => Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2);\r\n\r\n/**\r\n * Get an iterator that takes a percentage and returns a point\r\n * @param {number} begx\r\n * @param {number} begy\r\n * @param {number} cp1x\r\n * @param {number} cp1y\r\n * @param {number} cp2x\r\n * @param {number} cp2y\r\n * @param {number} endx\r\n * @param {number} endy\r\n */\r\nconst getPointOnCubicBezierIterator =\r\n  (\r\n    begx: number,\r\n    begy: number,\r\n    cp1x: number,\r\n    cp1y: number,\r\n    cp2x: number,\r\n    cp2y: number,\r\n    endx: number,\r\n    endy: number\r\n  ) =>\r\n  (pct: number) => {\r\n    const c1 = CB1(pct),\r\n      c2 = CB2(pct),\r\n      c3 = CB3(pct),\r\n      c4 = CB4(pct);\r\n    return new Point(\r\n      endx * c1 + cp2x * c2 + cp1x * c3 + begx * c4,\r\n      endy * c1 + cp2y * c2 + cp1y * c3 + begy * c4\r\n    );\r\n  };\r\n\r\nconst QB1 = (t: number) => t ** 2;\r\nconst QB2 = (t: number) => 2 * t * (1 - t);\r\nconst QB3 = (t: number) => (1 - t) ** 2;\r\n\r\nconst getTangentCubicIterator =\r\n  (\r\n    p1x: number,\r\n    p1y: number,\r\n    p2x: number,\r\n    p2y: number,\r\n    p3x: number,\r\n    p3y: number,\r\n    p4x: number,\r\n    p4y: number\r\n  ) =>\r\n  (pct: number) => {\r\n    const qb1 = QB1(pct),\r\n      qb2 = QB2(pct),\r\n      qb3 = QB3(pct),\r\n      tangentX =\r\n        3 * (qb3 * (p2x - p1x) + qb2 * (p3x - p2x) + qb1 * (p4x - p3x)),\r\n      tangentY =\r\n        3 * (qb3 * (p2y - p1y) + qb2 * (p3y - p2y) + qb1 * (p4y - p3y));\r\n    return Math.atan2(tangentY, tangentX);\r\n  };\r\n\r\nconst getPointOnQuadraticBezierIterator =\r\n  (\r\n    p1x: number,\r\n    p1y: number,\r\n    p2x: number,\r\n    p2y: number,\r\n    p3x: number,\r\n    p3y: number\r\n  ) =>\r\n  (pct: number) => {\r\n    const c1 = QB1(pct),\r\n      c2 = QB2(pct),\r\n      c3 = QB3(pct);\r\n    return new Point(\r\n      p3x * c1 + p2x * c2 + p1x * c3,\r\n      p3y * c1 + p2y * c2 + p1y * c3\r\n    );\r\n  };\r\n\r\nconst getTangentQuadraticIterator =\r\n  (\r\n    p1x: number,\r\n    p1y: number,\r\n    p2x: number,\r\n    p2y: number,\r\n    p3x: number,\r\n    p3y: number\r\n  ) =>\r\n  (pct: number) => {\r\n    const invT = 1 - pct,\r\n      tangentX = 2 * (invT * (p2x - p1x) + pct * (p3x - p2x)),\r\n      tangentY = 2 * (invT * (p2y - p1y) + pct * (p3y - p2y));\r\n    return Math.atan2(tangentY, tangentX);\r\n  };\r\n\r\n// this will run over a path segment (a cubic or quadratic segment) and approximate it\r\n// with 100 segments. This will good enough to calculate the length of the curve\r\nconst pathIterator = (\r\n  iterator: (pct: number) => Point,\r\n  x1: number,\r\n  y1: number\r\n) => {\r\n  let tempP = new Point(x1, y1),\r\n    tmpLen = 0;\r\n  for (let perc = 1; perc <= 100; perc += 1) {\r\n    const p = iterator(perc / 100);\r\n    tmpLen += calcLineLength(tempP.x, tempP.y, p.x, p.y);\r\n    tempP = p;\r\n  }\r\n  return tmpLen;\r\n};\r\n\r\n/**\r\n * Given a pathInfo, and a distance in pixels, find the percentage from 0 to 1\r\n * that correspond to that pixels run over the path.\r\n * The percentage will be then used to find the correct point on the canvas for the path.\r\n * @param {Array} segInfo fabricJS collection of information on a parsed path\r\n * @param {number} distance from starting point, in pixels.\r\n * @return {TPointAngle} info object with x and y ( the point on canvas ) and angle, the tangent on that point;\r\n */\r\nconst findPercentageForDistance = (\r\n  segInfo: TCurveInfo<'Q' | 'C'>,\r\n  distance: number\r\n): TPointAngle => {\r\n  let perc = 0,\r\n    tmpLen = 0,\r\n    tempP: XY = { x: segInfo.x, y: segInfo.y },\r\n    p: XY = { ...tempP },\r\n    nextLen: number,\r\n    nextStep = 0.01,\r\n    lastPerc = 0;\r\n  // nextStep > 0.0001 covers 0.00015625 that 1/64th of 1/100\r\n  // the path\r\n  const iterator = segInfo.iterator,\r\n    angleFinder = segInfo.angleFinder;\r\n  while (tmpLen < distance && nextStep > 0.0001) {\r\n    p = iterator(perc);\r\n    lastPerc = perc;\r\n    nextLen = calcLineLength(tempP.x, tempP.y, p.x, p.y);\r\n    // compare tmpLen each cycle with distance, decide next perc to test.\r\n    if (nextLen + tmpLen > distance) {\r\n      // we discard this step and we make smaller steps.\r\n      perc -= nextStep;\r\n      nextStep /= 2;\r\n    } else {\r\n      tempP = p;\r\n      perc += nextStep;\r\n      tmpLen += nextLen;\r\n    }\r\n  }\r\n  return { ...p, angle: angleFinder(lastPerc) };\r\n};\r\n\r\n/**\r\n * Run over a parsed and simplified path and extract some information (length of each command and starting point)\r\n * @param {TSimplePathData} path parsed path commands\r\n * @return {TPathSegmentInfo[]} path commands information\r\n */\r\nexport const getPathSegmentsInfo = (\r\n  path: TSimplePathData\r\n): TPathSegmentInfo[] => {\r\n  let totalLength = 0,\r\n    //x2 and y2 are the coords of segment start\r\n    //x1 and y1 are the coords of the current point\r\n    x1 = 0,\r\n    y1 = 0,\r\n    x2 = 0,\r\n    y2 = 0,\r\n    iterator,\r\n    tempInfo: TPathSegmentInfo;\r\n  const info: TPathSegmentInfo[] = [];\r\n  for (const current of path) {\r\n    const basicInfo: TPathSegmentInfoCommon<keyof TPathSegmentCommandInfo> = {\r\n      x: x1,\r\n      y: y1,\r\n      command: current[0],\r\n      length: 0,\r\n    };\r\n    switch (\r\n      current[0] //first letter\r\n    ) {\r\n      case 'M':\r\n        tempInfo = <TPathSegmentInfoCommon<'M'>>basicInfo;\r\n        tempInfo.x = x2 = x1 = current[1];\r\n        tempInfo.y = y2 = y1 = current[2];\r\n        break;\r\n      case 'L':\r\n        tempInfo = <TPathSegmentInfoCommon<'L'>>basicInfo;\r\n        tempInfo.length = calcLineLength(x1, y1, current[1], current[2]);\r\n        x1 = current[1];\r\n        y1 = current[2];\r\n        break;\r\n      case 'C':\r\n        iterator = getPointOnCubicBezierIterator(\r\n          x1,\r\n          y1,\r\n          current[1],\r\n          current[2],\r\n          current[3],\r\n          current[4],\r\n          current[5],\r\n          current[6]\r\n        );\r\n        tempInfo = <TCurveInfo<'C'>>basicInfo;\r\n        tempInfo.iterator = iterator;\r\n        tempInfo.angleFinder = getTangentCubicIterator(\r\n          x1,\r\n          y1,\r\n          current[1],\r\n          current[2],\r\n          current[3],\r\n          current[4],\r\n          current[5],\r\n          current[6]\r\n        );\r\n        tempInfo.length = pathIterator(iterator, x1, y1);\r\n\r\n        x1 = current[5];\r\n        y1 = current[6];\r\n        break;\r\n      case 'Q':\r\n        iterator = getPointOnQuadraticBezierIterator(\r\n          x1,\r\n          y1,\r\n          current[1],\r\n          current[2],\r\n          current[3],\r\n          current[4]\r\n        );\r\n        tempInfo = <TCurveInfo<'Q'>>basicInfo;\r\n        tempInfo.iterator = iterator;\r\n        tempInfo.angleFinder = getTangentQuadraticIterator(\r\n          x1,\r\n          y1,\r\n          current[1],\r\n          current[2],\r\n          current[3],\r\n          current[4]\r\n        );\r\n        tempInfo.length = pathIterator(iterator, x1, y1);\r\n        x1 = current[3];\r\n        y1 = current[4];\r\n        break;\r\n      case 'Z':\r\n        // we add those in order to ease calculations later\r\n        tempInfo = <TEndPathInfo>basicInfo;\r\n        tempInfo.destX = x2;\r\n        tempInfo.destY = y2;\r\n        tempInfo.length = calcLineLength(x1, y1, x2, y2);\r\n        x1 = x2;\r\n        y1 = y2;\r\n        break;\r\n    }\r\n    totalLength += tempInfo.length;\r\n    info.push(tempInfo);\r\n  }\r\n  info.push({ length: totalLength, x: x1, y: y1 });\r\n  return info;\r\n};\r\n\r\n/**\r\n * Get the point on the path that is distance along the path\r\n * @param path\r\n * @param distance\r\n * @param infos\r\n */\r\nexport const getPointOnPath = (\r\n  path: TSimplePathData,\r\n  distance: number,\r\n  infos: TPathSegmentInfo[] = getPathSegmentsInfo(path)\r\n): TPointAngle | undefined => {\r\n  let i = 0;\r\n  while (distance - infos[i].length > 0 && i < infos.length - 2) {\r\n    distance -= infos[i].length;\r\n    i++;\r\n  }\r\n  const segInfo = infos[i],\r\n    segPercent = distance / segInfo.length,\r\n    segment = path[i];\r\n\r\n  switch (segInfo.command) {\r\n    case 'M':\r\n      return { x: segInfo.x, y: segInfo.y, angle: 0 };\r\n    case 'Z':\r\n      return {\r\n        ...new Point(segInfo.x, segInfo.y).lerp(\r\n          new Point(segInfo.destX, segInfo.destY),\r\n          segPercent\r\n        ),\r\n        angle: Math.atan2(segInfo.destY - segInfo.y, segInfo.destX - segInfo.x),\r\n      };\r\n    case 'L':\r\n      return {\r\n        ...new Point(segInfo.x, segInfo.y).lerp(\r\n          new Point(segment[1]!, segment[2]!),\r\n          segPercent\r\n        ),\r\n        angle: Math.atan2(segment[2]! - segInfo.y, segment[1]! - segInfo.x),\r\n      };\r\n    case 'C':\r\n      return findPercentageForDistance(segInfo, distance);\r\n    case 'Q':\r\n      return findPercentageForDistance(segInfo, distance);\r\n    default:\r\n    // throw Error('Invalid command');\r\n  }\r\n};\r\n\r\nconst rePathCmdAll = new RegExp(rePathCommand, 'gi');\r\nconst rePathCmd = new RegExp(rePathCommand, 'i');\r\n\r\n/**\r\n *\r\n * @param {string} pathString\r\n * @return {TComplexPathData} An array of SVG path commands\r\n * @example <caption>Usage</caption>\r\n * parsePath('M 3 4 Q 3 5 2 1 4 0 Q 9 12 2 1 4 0') === [\r\n *   ['M', 3, 4],\r\n *   ['Q', 3, 5, 2, 1, 4, 0],\r\n *   ['Q', 9, 12, 2, 1, 4, 0],\r\n * ];\r\n *\r\n */\r\nexport const parsePath = (pathString: string): TComplexPathData => {\r\n  // clean the string\r\n  // add spaces around the numbers\r\n  pathString = cleanupSvgAttribute(pathString);\r\n\r\n  const res: TComplexPathData = [];\r\n  for (let [matchStr] of pathString.matchAll(rePathCmdAll)) {\r\n    const chain: TComplexPathData = [];\r\n    let paramArr: RegExpExecArray | null;\r\n    do {\r\n      paramArr = rePathCmd.exec(matchStr);\r\n      if (!paramArr) {\r\n        break;\r\n      }\r\n      // ignore undefined match groups\r\n      const filteredGroups = paramArr.filter((g) => g);\r\n      // remove the first element from the match array since it's just the whole command\r\n      filteredGroups.shift();\r\n      // if we can't parse the number, just interpret it as a string\r\n      // (since it's probably the path command)\r\n      const command = filteredGroups.map((g) => {\r\n        const numParse = Number.parseFloat(g);\r\n        if (Number.isNaN(numParse)) {\r\n          return g;\r\n        } else {\r\n          return numParse;\r\n        }\r\n      });\r\n      chain.push(command as any);\r\n      // stop now if it's a z command\r\n      if (filteredGroups.length <= 1) {\r\n        break;\r\n      }\r\n      // remove the last part of the chained command\r\n      filteredGroups.shift();\r\n      // ` ?` is to support commands with optional spaces between flags\r\n      matchStr = matchStr.replace(\r\n        new RegExp(`${filteredGroups.join(' ?')} ?$`),\r\n        ''\r\n      );\r\n    } while (paramArr);\r\n    // add the chain, convert multiple m's to l's in the process\r\n    chain.reverse().forEach((c, idx) => {\r\n      const transformed = repeatedCommands[c[0]];\r\n      if (idx > 0 && (transformed == 'l' || transformed == 'L')) {\r\n        c[0] = transformed;\r\n      }\r\n      res.push(c);\r\n    });\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n *\r\n * Converts points to a smooth SVG path\r\n * @param {XY[]} points Array of points\r\n * @param {number} [correction] Apply a correction to the path (usually we use `width / 1000`). If value is undefined 0 is used as the correction value.\r\n * @return {(string|number)[][]} An array of SVG path commands\r\n */\r\nexport const getSmoothPathFromPoints = (\r\n  points: Point[],\r\n  correction = 0\r\n): TSimplePathData => {\r\n  let p1 = new Point(points[0]),\r\n    p2 = new Point(points[1]),\r\n    multSignX = 1,\r\n    multSignY = 0;\r\n  const path: TSimplePathData = [],\r\n    len = points.length,\r\n    manyPoints = len > 2;\r\n\r\n  if (manyPoints) {\r\n    multSignX = points[2].x < p2.x ? -1 : points[2].x === p2.x ? 0 : 1;\r\n    multSignY = points[2].y < p2.y ? -1 : points[2].y === p2.y ? 0 : 1;\r\n  }\r\n  path.push([\r\n    'M',\r\n    p1.x - multSignX * correction,\r\n    p1.y - multSignY * correction,\r\n  ]);\r\n  let i;\r\n  for (i = 1; i < len; i++) {\r\n    if (!p1.eq(p2)) {\r\n      const midPoint = p1.midPointFrom(p2);\r\n      // p1 is our bezier control point\r\n      // midpoint is our endpoint\r\n      // start point is p(i-1) value.\r\n      path.push(['Q', p1.x, p1.y, midPoint.x, midPoint.y]);\r\n    }\r\n    p1 = points[i];\r\n    if (i + 1 < points.length) {\r\n      p2 = points[i + 1];\r\n    }\r\n  }\r\n  if (manyPoints) {\r\n    multSignX = p1.x > points[i - 2].x ? 1 : p1.x === points[i - 2].x ? 0 : -1;\r\n    multSignY = p1.y > points[i - 2].y ? 1 : p1.y === points[i - 2].y ? 0 : -1;\r\n  }\r\n  path.push([\r\n    'L',\r\n    p1.x + multSignX * correction,\r\n    p1.y + multSignY * correction,\r\n  ]);\r\n  return path;\r\n};\r\n\r\n/**\r\n * Transform a path by transforming each segment.\r\n * it has to be a simplified path or it won't work.\r\n * WARNING: this depends from pathOffset for correct operation\r\n * @param {TSimplePathData} path fabricJS parsed and simplified path commands\r\n * @param {TMat2D} transform matrix that represent the transformation\r\n * @param {Point} [pathOffset] `Path.pathOffset`\r\n * @returns {TSimplePathData} the transformed path\r\n */\r\nexport const transformPath = (\r\n  path: TSimplePathData,\r\n  transform: TMat2D,\r\n  pathOffset: Point\r\n): TSimplePathData => {\r\n  if (pathOffset) {\r\n    transform = multiplyTransformMatrices(transform, [\r\n      1,\r\n      0,\r\n      0,\r\n      1,\r\n      -pathOffset.x,\r\n      -pathOffset.y,\r\n    ]);\r\n  }\r\n  return path.map((pathSegment) => {\r\n    const newSegment: TSimpleParsedCommand = [...pathSegment];\r\n    for (let i = 1; i < pathSegment.length - 1; i += 2) {\r\n      // TODO: is there a way to get around casting to any?\r\n      const { x, y } = transformPoint(\r\n        {\r\n          x: pathSegment[i] as number,\r\n          y: pathSegment[i + 1] as number,\r\n        },\r\n        transform\r\n      );\r\n      newSegment[i] = x;\r\n      newSegment[i + 1] = y;\r\n    }\r\n    return newSegment;\r\n  });\r\n};\r\n\r\n/**\r\n * Returns an array of path commands to create a regular polygon\r\n * @param {number} numVertexes\r\n * @param {number} radius\r\n * @returns {TSimplePathData} An array of SVG path commands\r\n */\r\nexport const getRegularPolygonPath = (\r\n  numVertexes: number,\r\n  radius: number\r\n): TSimplePathData => {\r\n  const interiorAngle = (Math.PI * 2) / numVertexes;\r\n  // rotationAdjustment rotates the path by 1/2 the interior angle so that the polygon always has a flat side on the bottom\r\n  // This isn't strictly necessary, but it's how we tend to think of and expect polygons to be drawn\r\n  let rotationAdjustment = -halfPI;\r\n  if (numVertexes % 2 === 0) {\r\n    rotationAdjustment += interiorAngle / 2;\r\n  }\r\n  const d = new Array(numVertexes + 1);\r\n  for (let i = 0; i < numVertexes; i++) {\r\n    const rad = i * interiorAngle + rotationAdjustment;\r\n    const { x, y } = new Point(cos(rad), sin(rad)).scalarMultiply(radius);\r\n    d[i] = [i === 0 ? 'M' : 'L', x, y];\r\n  }\r\n  d[numVertexes] = ['Z'];\r\n  return d;\r\n};\r\n\r\n/**\r\n * Join path commands to go back to svg format\r\n * @param {TSimplePathData} pathData fabricJS parsed path commands\r\n * @param {number} fractionDigits number of fraction digits to \"leave\"\r\n * @return {String} joined path 'M 0 0 L 20 30'\r\n */\r\nexport const joinPath = (pathData: TSimplePathData, fractionDigits?: number) =>\r\n  pathData\r\n    .map((segment) => {\r\n      return segment\r\n        .map((arg, i) => {\r\n          if (i === 0) return arg;\r\n          return fractionDigits === undefined\r\n            ? arg\r\n            : toFixed(arg, fractionDigits);\r\n        })\r\n        .join(' ');\r\n    })\r\n    .join(' ');\r\n","import { getFabricWindow } from '../../env';\r\nimport { noop } from '../../constants';\r\nimport type { Abortable } from '../../typedefs';\r\nimport { SignalAbortedError } from './console';\r\n\r\ntype requestOptions = Abortable & {\r\n  onComplete?: (xhr: XMLHttpRequest) => void;\r\n};\r\n\r\n/**\r\n * Cross-browser abstraction for sending XMLHttpRequest\r\n * @deprecated this has to go away, we can use a modern browser method to do the same.\r\n * @param {String} url URL to send XMLHttpRequest to\r\n * @param {Object} [options] Options object\r\n * @param {AbortSignal} [options.signal] handle aborting, see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\r\n * @param {Function} options.onComplete Callback to invoke when request is completed\r\n * @return {XMLHttpRequest} request\r\n */\r\n\r\nexport function request(url: string, options: requestOptions = {}) {\r\n  const onComplete = options.onComplete || noop,\r\n    xhr = new (getFabricWindow().XMLHttpRequest)(),\r\n    signal = options.signal,\r\n    abort = function () {\r\n      xhr.abort();\r\n    },\r\n    removeListener = function () {\r\n      signal && signal.removeEventListener('abort', abort);\r\n      xhr.onerror = xhr.ontimeout = noop;\r\n    };\r\n\r\n  if (signal && signal.aborted) {\r\n    throw new SignalAbortedError('request');\r\n  } else if (signal) {\r\n    signal.addEventListener('abort', abort, { once: true });\r\n  }\r\n\r\n  /** @ignore */\r\n  xhr.onreadystatechange = function () {\r\n    if (xhr.readyState === 4) {\r\n      removeListener();\r\n      onComplete(xhr);\r\n      xhr.onreadystatechange = noop;\r\n    }\r\n  };\r\n\r\n  xhr.onerror = xhr.ontimeout = removeListener;\r\n\r\n  xhr.open('get', url, true);\r\n\r\n  xhr.send();\r\n  return xhr;\r\n}\r\n","import { CENTER, SCALE_X, SCALE_Y } from '../constants';\r\nimport type { FabricImage } from '../shapes/Image';\r\nimport type { FabricObject } from '../shapes/Object/FabricObject';\r\nimport type { TMat2D } from '../typedefs';\r\nimport { qrDecompose } from './misc/matrix';\r\n\r\ntype FabricObjectWithTransformMatrix = FabricObject & {\r\n  transformMatrix?: TMat2D;\r\n};\r\n\r\n/**\r\n * This function is an helper for svg import. it decompose the transformMatrix\r\n * and assign properties to object.\r\n * untransformed coordinates\r\n * @private\r\n */\r\nconst _assignTransformMatrixProps = (\r\n  object: FabricObjectWithTransformMatrix\r\n) => {\r\n  if (object.transformMatrix) {\r\n    const { scaleX, scaleY, angle, skewX } = qrDecompose(\r\n      object.transformMatrix\r\n    );\r\n    object.flipX = false;\r\n    object.flipY = false;\r\n    object.set(SCALE_X, scaleX);\r\n    object.set(SCALE_Y, scaleY);\r\n    object.angle = angle;\r\n    object.skewX = skewX;\r\n    object.skewY = 0;\r\n  }\r\n};\r\n\r\n/**\r\n * This function is an helper for svg import. it removes the transform matrix\r\n * and set to object properties that fabricjs can handle\r\n * @private\r\n * @param {Object} preserveAspectRatioOptions\r\n */\r\nexport const removeTransformMatrixForSvgParsing = (\r\n  object: FabricObjectWithTransformMatrix,\r\n  preserveAspectRatioOptions?: any\r\n) => {\r\n  let center = object._findCenterFromElement();\r\n  if (object.transformMatrix) {\r\n    _assignTransformMatrixProps(object);\r\n    center = center.transform(object.transformMatrix);\r\n  }\r\n  delete object.transformMatrix;\r\n  if (preserveAspectRatioOptions) {\r\n    object.scaleX *= preserveAspectRatioOptions.scaleX;\r\n    object.scaleY *= preserveAspectRatioOptions.scaleY;\r\n    (object as FabricImage).cropX = preserveAspectRatioOptions.cropX;\r\n    (object as FabricImage).cropY = preserveAspectRatioOptions.cropY;\r\n    center.x += preserveAspectRatioOptions.offsetLeft;\r\n    center.y += preserveAspectRatioOptions.offsetTop;\r\n    object.width = preserveAspectRatioOptions.width;\r\n    object.height = preserveAspectRatioOptions.height;\r\n  }\r\n  object.setPositionByOrigin(center, CENTER, CENTER);\r\n};\r\n","import type { FabricObject } from '../../shapes/Object/FabricObject';\r\nimport { sendObjectToPlane } from './planeChange';\r\nimport { Group } from '../../shapes/Group';\r\n/**\r\n * Merges 2 clip paths into one visually equal clip path\r\n *\r\n * **IMPORTANT**:\\\r\n * Does **NOT** clone the arguments, clone them proir if necessary.\r\n *\r\n * Creates a wrapper (group) that contains one clip path and is clipped by the other so content is kept where both overlap.\r\n * Use this method if both the clip paths may have nested clip paths of their own, so assigning one to the other's clip path property is not possible.\r\n *\r\n * In order to handle the `inverted` property we follow logic described in the following cases:\\\r\n * **(1)** both clip paths are inverted - the clip paths pass the inverted prop to the wrapper and loose it themselves.\\\r\n * **(2)** one is inverted and the other isn't - the wrapper shouldn't become inverted and the inverted clip path must clip the non inverted one to produce an identical visual effect.\\\r\n * **(3)** both clip paths are not inverted - wrapper and clip paths remain unchanged.\r\n *\r\n * @memberOf fabric.util\r\n * @param {fabric.Object} c1\r\n * @param {fabric.Object} c2\r\n * @returns {fabric.Object} merged clip path\r\n */\r\nexport const mergeClipPaths = (c1: FabricObject, c2: FabricObject) => {\r\n  let a = c1,\r\n    b = c2;\r\n  if (a.inverted && !b.inverted) {\r\n    //  case (2)\r\n    a = c2;\r\n    b = c1;\r\n  }\r\n  //  `b` becomes `a`'s clip path so we transform `b` to `a` coordinate plane\r\n  sendObjectToPlane(b, b.group?.calcTransformMatrix(), a.calcTransformMatrix());\r\n  //  assign the `inverted` prop to the wrapping group\r\n  const inverted = a.inverted && b.inverted;\r\n  if (inverted) {\r\n    //  case (1)\r\n    a.inverted = b.inverted = false;\r\n  }\r\n  return new Group([a], { clipPath: b, inverted });\r\n};\r\n","import type { Point } from '../../Point';\r\nimport type { TRadian } from '../../typedefs';\r\n/**\r\n * Rotates `point` around `origin` with `radians`\r\n * @deprecated use the Point.rotate\r\n * @param {Point} origin The origin of the rotation\r\n * @param {Point} origin The origin of the rotation\r\n * @param {TRadian} radians The radians of the angle for the rotation\r\n * @return {Point} The new rotated point\r\n */\r\nexport const rotatePoint = (\r\n  point: Point,\r\n  origin: Point,\r\n  radians: TRadian\r\n): Point => point.rotate(radians, origin);\r\n","import { getEnv, getFabricDocument } from '../../env';\r\nimport type { TSize } from '../../typedefs';\r\nimport { createCanvasElement, setStyle } from '../../util';\r\nimport type { CSSDimensions } from './util';\r\nimport {\r\n  allowTouchScrolling,\r\n  makeElementUnselectable,\r\n  setCSSDimensions,\r\n} from './util';\r\nimport type { CanvasItem } from './StaticCanvasDOMManager';\r\nimport { StaticCanvasDOMManager } from './StaticCanvasDOMManager';\r\nimport { setCanvasDimensions } from './util';\r\n\r\nexport class CanvasDOMManager extends StaticCanvasDOMManager {\r\n  upper: CanvasItem;\r\n  container: HTMLDivElement;\r\n\r\n  constructor(\r\n    arg0?: string | HTMLCanvasElement,\r\n    {\r\n      allowTouchScrolling = false,\r\n      containerClass = '',\r\n    }: {\r\n      allowTouchScrolling?: boolean;\r\n      /**\r\n       * @deprecated here only for backward compatibility\r\n       */\r\n      containerClass?: string;\r\n    } = {}\r\n  ) {\r\n    super(arg0);\r\n    const { el: lowerCanvasEl } = this.lower;\r\n    const upperCanvasEl = this.createUpperCanvas();\r\n    this.upper = { el: upperCanvasEl, ctx: upperCanvasEl.getContext('2d')! };\r\n    this.applyCanvasStyle(lowerCanvasEl, {\r\n      allowTouchScrolling,\r\n    });\r\n    this.applyCanvasStyle(upperCanvasEl, {\r\n      allowTouchScrolling,\r\n    });\r\n    const container = this.createContainerElement();\r\n    container.classList.add(containerClass);\r\n    if (lowerCanvasEl.parentNode) {\r\n      lowerCanvasEl.parentNode.replaceChild(container, lowerCanvasEl);\r\n    }\r\n    container.append(lowerCanvasEl, upperCanvasEl);\r\n    this.container = container;\r\n  }\r\n\r\n  protected createUpperCanvas() {\r\n    const { el: lowerCanvasEl } = this.lower;\r\n    const el = createCanvasElement();\r\n    // we assign the same classname of the lowerCanvas\r\n    el.className = lowerCanvasEl.className;\r\n    // but then we remove the lower-canvas specific className\r\n    el.classList.remove('lower-canvas');\r\n    // we add the specific upper-canvas class\r\n    el.classList.add('upper-canvas');\r\n    el.setAttribute('data-fabric', 'top');\r\n    el.style.cssText = lowerCanvasEl.style.cssText;\r\n    el.setAttribute('draggable', 'true');\r\n    return el;\r\n  }\r\n\r\n  protected createContainerElement() {\r\n    const container = getFabricDocument().createElement('div');\r\n    container.setAttribute('data-fabric', 'wrapper');\r\n    setStyle(container, {\r\n      position: 'relative',\r\n    });\r\n    makeElementUnselectable(container);\r\n    return container;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {HTMLCanvasElement} element canvas element to apply styles on\r\n   */\r\n  protected applyCanvasStyle(\r\n    element: HTMLCanvasElement,\r\n    { allowTouchScrolling: allow }: { allowTouchScrolling: boolean }\r\n  ) {\r\n    setStyle(element, {\r\n      position: 'absolute',\r\n      left: '0',\r\n      top: '0',\r\n    });\r\n    allowTouchScrolling(element, allow);\r\n    makeElementUnselectable(element);\r\n  }\r\n\r\n  setDimensions(size: TSize, retinaScaling: number) {\r\n    super.setDimensions(size, retinaScaling);\r\n    const { el, ctx } = this.upper;\r\n    setCanvasDimensions(el, ctx, size, retinaScaling);\r\n  }\r\n\r\n  setCSSDimensions(size: Partial<CSSDimensions>): void {\r\n    super.setCSSDimensions(size);\r\n    setCSSDimensions(this.upper.el, size);\r\n    setCSSDimensions(this.container, size);\r\n  }\r\n\r\n  cleanupDOM(size: TSize) {\r\n    const container = this.container,\r\n      { el: lowerCanvasEl } = this.lower,\r\n      { el: upperCanvasEl } = this.upper;\r\n    super.cleanupDOM(size);\r\n    container.removeChild(upperCanvasEl);\r\n    container.removeChild(lowerCanvasEl);\r\n    if (container.parentNode) {\r\n      container.parentNode.replaceChild(lowerCanvasEl, container);\r\n    }\r\n  }\r\n\r\n  dispose() {\r\n    super.dispose();\r\n    getEnv().dispose(this.upper.el);\r\n    // @ts-expect-error disposing\r\n    delete this.upper;\r\n    // @ts-expect-error disposing\r\n    delete this.container;\r\n  }\r\n}\r\n","import { dragHandler } from '../controls/drag';\r\nimport { getActionFromCorner } from '../controls/util';\r\nimport { Point } from '../Point';\r\nimport { FabricObject } from '../shapes/Object/FabricObject';\r\nimport type {\r\n  CanvasEvents,\r\n  ModifierKey,\r\n  TOptionalModifierKey,\r\n  TPointerEvent,\r\n  Transform,\r\n} from '../EventTypeDefs';\r\nimport {\r\n  addTransformToObject,\r\n  saveObjectTransform,\r\n} from '../util/misc/objectTransforms';\r\nimport type { TCanvasSizeOptions } from './StaticCanvas';\r\nimport { StaticCanvas } from './StaticCanvas';\r\nimport { isCollection } from '../Collection';\r\nimport { isTransparent } from '../util/misc/isTransparent';\r\nimport type {\r\n  TMat2D,\r\n  TOriginX,\r\n  TOriginY,\r\n  TSize,\r\n  TSVGReviver,\r\n} from '../typedefs';\r\nimport { degreesToRadians } from '../util/misc/radiansDegreesConversion';\r\nimport { getPointer, isTouchEvent } from '../util/dom_event';\r\nimport type { IText } from '../shapes/IText/IText';\r\nimport type { BaseBrush } from '../brushes/BaseBrush';\r\nimport { pick } from '../util/misc/pick';\r\nimport { sendPointToPlane } from '../util/misc/planeChange';\r\nimport { cos, createCanvasElement, sin } from '../util';\r\nimport { CanvasDOMManager } from './DOMManagers/CanvasDOMManager';\r\nimport {\r\n  BOTTOM,\r\n  CENTER,\r\n  LEFT,\r\n  MODIFIED,\r\n  RESIZING,\r\n  RIGHT,\r\n  ROTATE,\r\n  SCALE,\r\n  SCALE_X,\r\n  SCALE_Y,\r\n  SKEW_X,\r\n  SKEW_Y,\r\n  TOP,\r\n} from '../constants';\r\nimport type { CanvasOptions } from './CanvasOptions';\r\nimport { canvasDefaults } from './CanvasOptions';\r\nimport { Intersection } from '../Intersection';\r\nimport { isActiveSelection } from '../util/typeAssertions';\r\n\r\n/**\r\n * Canvas class\r\n * @class Canvas\r\n * @extends StaticCanvas\r\n * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#canvas}\r\n *\r\n * @fires object:modified at the end of a transform\r\n * @fires object:rotating while an object is being rotated from the control\r\n * @fires object:scaling while an object is being scaled by controls\r\n * @fires object:moving while an object is being dragged\r\n * @fires object:skewing while an object is being skewed from the controls\r\n *\r\n * @fires before:transform before a transform is is started\r\n * @fires before:selection:cleared\r\n * @fires selection:cleared\r\n * @fires selection:updated\r\n * @fires selection:created\r\n *\r\n * @fires path:created after a drawing operation ends and the path is added\r\n * @fires mouse:down\r\n * @fires mouse:move\r\n * @fires mouse:up\r\n * @fires mouse:down:before  on mouse down, before the inner fabric logic runs\r\n * @fires mouse:move:before on mouse move, before the inner fabric logic runs\r\n * @fires mouse:up:before on mouse up, before the inner fabric logic runs\r\n * @fires mouse:over\r\n * @fires mouse:out\r\n * @fires mouse:dblclick whenever a native dbl click event fires on the canvas.\r\n *\r\n * @fires dragover\r\n * @fires dragenter\r\n * @fires dragleave\r\n * @fires drag:enter object drag enter\r\n * @fires drag:leave object drag leave\r\n * @fires drop:before before drop event. Prepare for the drop event (same native event).\r\n * @fires drop\r\n * @fires drop:after after drop event. Run logic on canvas after event has been accepted/declined (same native event).\r\n * @example\r\n * let a: fabric.Object, b: fabric.Object;\r\n * let flag = false;\r\n * canvas.add(a, b);\r\n * a.on('drop:before', opt => {\r\n *  //  we want a to accept the drop even though it's below b in the stack\r\n *  flag = this.canDrop(opt.e);\r\n * });\r\n * b.canDrop = function(e) {\r\n *  !flag && this.draggableTextDelegate.canDrop(e);\r\n * }\r\n * b.on('dragover', opt => b.set('fill', opt.dropTarget === b ? 'pink' : 'black'));\r\n * a.on('drop', opt => {\r\n *  opt.e.defaultPrevented  //  drop occurred\r\n *  opt.didDrop             //  drop occurred on canvas\r\n *  opt.target              //  drop target\r\n *  opt.target !== a && a.set('text', 'I lost');\r\n * });\r\n * canvas.on('drop:after', opt => {\r\n *  //  inform user who won\r\n *  if(!opt.e.defaultPrevented) {\r\n *    // no winners\r\n *  }\r\n *  else if(!opt.didDrop) {\r\n *    //  my objects didn't win, some other lucky object\r\n *  }\r\n *  else {\r\n *    //  we have a winner it's opt.target!!\r\n *  }\r\n * })\r\n *\r\n * @fires after:render at the end of the render process, receives the context in the callback\r\n * @fires before:render at start the render process, receives the context in the callback\r\n *\r\n * @fires contextmenu:before\r\n * @fires contextmenu\r\n * @example\r\n * let handler;\r\n * targets.forEach(target => {\r\n *   target.on('contextmenu:before', opt => {\r\n *     //  decide which target should handle the event before canvas hijacks it\r\n *     if (someCaseHappens && opt.targets.includes(target)) {\r\n *       handler = target;\r\n *     }\r\n *   });\r\n *   target.on('contextmenu', opt => {\r\n *     //  do something fantastic\r\n *   });\r\n * });\r\n * canvas.on('contextmenu', opt => {\r\n *   if (!handler) {\r\n *     //  no one takes responsibility, it's always left to me\r\n *     //  let's show them how it's done!\r\n *   }\r\n * });\r\n *\r\n */\r\nexport class SelectableCanvas<EventSpec extends CanvasEvents = CanvasEvents>\r\n  extends StaticCanvas<EventSpec>\r\n  implements Omit<CanvasOptions, 'enablePointerEvents'>\r\n{\r\n  declare _objects: FabricObject[];\r\n\r\n  // transform config\r\n  declare uniformScaling: boolean;\r\n  declare uniScaleKey: TOptionalModifierKey;\r\n  declare centeredScaling: boolean;\r\n  declare centeredRotation: boolean;\r\n  declare centeredKey: TOptionalModifierKey;\r\n  declare altActionKey: TOptionalModifierKey;\r\n\r\n  // selection config\r\n  declare selection: boolean;\r\n  declare selectionKey: TOptionalModifierKey | ModifierKey[];\r\n  declare altSelectionKey: TOptionalModifierKey;\r\n  declare selectionColor: string;\r\n  declare selectionDashArray: number[];\r\n  declare selectionBorderColor: string;\r\n  declare selectionLineWidth: number;\r\n  declare selectionFullyContained: boolean;\r\n\r\n  // cursors\r\n  declare hoverCursor: CSSStyleDeclaration['cursor'];\r\n  declare moveCursor: CSSStyleDeclaration['cursor'];\r\n  declare defaultCursor: CSSStyleDeclaration['cursor'];\r\n  declare freeDrawingCursor: CSSStyleDeclaration['cursor'];\r\n  declare notAllowedCursor: CSSStyleDeclaration['cursor'];\r\n\r\n  declare containerClass: string;\r\n\r\n  // target find config\r\n  declare perPixelTargetFind: boolean;\r\n  declare targetFindTolerance: number;\r\n  declare skipTargetFind: boolean;\r\n\r\n  /**\r\n   * When true, mouse events on canvas (mousedown/mousemove/mouseup) result in free drawing.\r\n   * After mousedown, mousemove creates a shape,\r\n   * and then mouseup finalizes it and adds an instance of `fabric.Path` onto canvas.\r\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-4#free_drawing}\r\n   * @type Boolean\r\n   * @default\r\n   */\r\n  declare isDrawingMode: boolean;\r\n\r\n  declare preserveObjectStacking: boolean;\r\n\r\n  // event config\r\n  declare stopContextMenu: boolean;\r\n  declare fireRightClick: boolean;\r\n  declare fireMiddleClick: boolean;\r\n\r\n  /**\r\n   * Keep track of the subTargets for Mouse Events, ordered bottom up from innermost nested subTarget\r\n   * @type FabricObject[]\r\n   */\r\n  targets: FabricObject[] = [];\r\n\r\n  /**\r\n   * Keep track of the hovered target\r\n   * @type FabricObject | null\r\n   * @private\r\n   */\r\n  declare _hoveredTarget?: FabricObject;\r\n\r\n  /**\r\n   * hold the list of nested targets hovered\r\n   * @type FabricObject[]\r\n   * @private\r\n   */\r\n  _hoveredTargets: FabricObject[] = [];\r\n\r\n  /**\r\n   * hold the list of objects to render\r\n   * @type FabricObject[]\r\n   * @private\r\n   */\r\n  _objectsToRender?: FabricObject[];\r\n\r\n  /**\r\n   * hold a reference to a data structure that contains information\r\n   * on the current on going transform\r\n   * @type\r\n   * @private\r\n   */\r\n  _currentTransform: Transform | null = null;\r\n\r\n  /**\r\n   * hold a reference to a data structure used to track the selection\r\n   * box on canvas drag\r\n   * on the current on going transform\r\n   * x, y, deltaX and deltaY are in scene plane\r\n   * @type\r\n   * @private\r\n   */\r\n  protected _groupSelector: {\r\n    x: number;\r\n    y: number;\r\n    deltaX: number;\r\n    deltaY: number;\r\n  } | null = null;\r\n\r\n  /**\r\n   * internal flag used to understand if the context top requires a cleanup\r\n   * in case this is true, the contextTop will be cleared at the next render\r\n   * @type boolean\r\n   * @private\r\n   */\r\n  contextTopDirty = false;\r\n\r\n  /**\r\n   * During a mouse event we may need the pointer multiple times in multiple functions.\r\n   * _absolutePointer holds a reference to the pointer in fabricCanvas/design coordinates that is valid for the event\r\n   * lifespan. Every fabricJS mouse event create and delete the cache every time\r\n   * We do this because there are some HTML DOM inspection functions to get the actual pointer coordinates\r\n   * @type {Point}\r\n   */\r\n  protected declare _absolutePointer?: Point;\r\n\r\n  /**\r\n   * During a mouse event we may need the pointer multiple times in multiple functions.\r\n   * _pointer holds a reference to the pointer in html coordinates that is valid for the event\r\n   * lifespan. Every fabricJS mouse event create and delete the cache every time\r\n   * We do this because there are some HTML DOM inspection functions to get the actual pointer coordinates\r\n   * @type {Point}\r\n   */\r\n  protected declare _pointer?: Point;\r\n\r\n  /**\r\n   * During a mouse event we may need the target multiple times in multiple functions.\r\n   * _target holds a reference to the target that is valid for the event\r\n   * lifespan. Every fabricJS mouse event create and delete the cache every time\r\n   * @type {FabricObject}\r\n   */\r\n  protected declare _target?: FabricObject;\r\n\r\n  static ownDefaults = canvasDefaults;\r\n\r\n  static getDefaults(): Record<string, any> {\r\n    return { ...super.getDefaults(), ...SelectableCanvas.ownDefaults };\r\n  }\r\n\r\n  declare elements: CanvasDOMManager;\r\n  get upperCanvasEl() {\r\n    return this.elements.upper?.el;\r\n  }\r\n  get contextTop() {\r\n    return this.elements.upper?.ctx;\r\n  }\r\n  get wrapperEl() {\r\n    return this.elements.container;\r\n  }\r\n  private declare pixelFindCanvasEl: HTMLCanvasElement;\r\n  private declare pixelFindContext: CanvasRenderingContext2D;\r\n\r\n  protected declare _isCurrentlyDrawing: boolean;\r\n  declare freeDrawingBrush?: BaseBrush;\r\n  declare _activeObject?: FabricObject;\r\n\r\n  protected initElements(el?: string | HTMLCanvasElement) {\r\n    this.elements = new CanvasDOMManager(el, {\r\n      allowTouchScrolling: this.allowTouchScrolling,\r\n      containerClass: this.containerClass,\r\n    });\r\n    this._createCacheCanvas();\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {FabricObject} obj Object that was added\r\n   */\r\n  _onObjectAdded(obj: FabricObject) {\r\n    this._objectsToRender = undefined;\r\n    super._onObjectAdded(obj);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {FabricObject} obj Object that was removed\r\n   */\r\n  _onObjectRemoved(obj: FabricObject) {\r\n    this._objectsToRender = undefined;\r\n    // removing active object should fire \"selection:cleared\" events\r\n    if (obj === this._activeObject) {\r\n      this.fire('before:selection:cleared', { deselected: [obj] });\r\n      this._discardActiveObject();\r\n      this.fire('selection:cleared', { deselected: [obj] });\r\n      obj.fire('deselected', {\r\n        target: obj,\r\n      });\r\n    }\r\n    if (obj === this._hoveredTarget) {\r\n      this._hoveredTarget = undefined;\r\n      this._hoveredTargets = [];\r\n    }\r\n    super._onObjectRemoved(obj);\r\n  }\r\n\r\n  _onStackOrderChanged() {\r\n    this._objectsToRender = undefined;\r\n    super._onStackOrderChanged();\r\n  }\r\n\r\n  /**\r\n   * Divides objects in two groups, one to render immediately\r\n   * and one to render as activeGroup.\r\n   * @return {Array} objects to render immediately and pushes the other in the activeGroup.\r\n   */\r\n  _chooseObjectsToRender(): FabricObject[] {\r\n    const activeObject = this._activeObject;\r\n    return !this.preserveObjectStacking && activeObject\r\n      ? this._objects\r\n          .filter((object) => !object.group && object !== activeObject)\r\n          .concat(activeObject)\r\n      : this._objects;\r\n  }\r\n\r\n  /**\r\n   * Renders both the top canvas and the secondary container canvas.\r\n   */\r\n  renderAll() {\r\n    this.cancelRequestedRender();\r\n    if (this.destroyed) {\r\n      return;\r\n    }\r\n    if (this.contextTopDirty && !this._groupSelector && !this.isDrawingMode) {\r\n      this.clearContext(this.contextTop);\r\n      this.contextTopDirty = false;\r\n    }\r\n    if (this.hasLostContext) {\r\n      this.renderTopLayer(this.contextTop);\r\n      this.hasLostContext = false;\r\n    }\r\n    !this._objectsToRender &&\r\n      (this._objectsToRender = this._chooseObjectsToRender());\r\n    this.renderCanvas(this.getContext(), this._objectsToRender);\r\n  }\r\n\r\n  /**\r\n   * text selection is rendered by the active text instance during the rendering cycle\r\n   */\r\n  renderTopLayer(ctx: CanvasRenderingContext2D): void {\r\n    ctx.save();\r\n    if (this.isDrawingMode && this._isCurrentlyDrawing) {\r\n      this.freeDrawingBrush && this.freeDrawingBrush._render();\r\n      this.contextTopDirty = true;\r\n    }\r\n    // we render the top context - last object\r\n    if (this.selection && this._groupSelector) {\r\n      this._drawSelection(ctx);\r\n      this.contextTopDirty = true;\r\n    }\r\n    ctx.restore();\r\n  }\r\n\r\n  /**\r\n   * Method to render only the top canvas.\r\n   * Also used to render the group selection box.\r\n   * Does not render text selection.\r\n   */\r\n  renderTop() {\r\n    const ctx = this.contextTop;\r\n    this.clearContext(ctx);\r\n    this.renderTopLayer(ctx);\r\n    // todo: how do i know if the after:render is for the top or normal contex?\r\n    this.fire('after:render', { ctx });\r\n  }\r\n\r\n  /**\r\n   * Set the canvas tolerance value for pixel taret find.\r\n   * Use only integer numbers.\r\n   * @private\r\n   */\r\n  setTargetFindTolerance(value: number) {\r\n    value = Math.round(value);\r\n    this.targetFindTolerance = value;\r\n    const retina = this.getRetinaScaling();\r\n    const size = Math.ceil((value * 2 + 1) * retina);\r\n    this.pixelFindCanvasEl.width = this.pixelFindCanvasEl.height = size;\r\n    this.pixelFindContext.scale(retina, retina);\r\n  }\r\n\r\n  /**\r\n   * Returns true if object is transparent at a certain location\r\n   * Clarification: this is `is target transparent at location X or are controls there`\r\n   * @TODO this seems dumb that we treat controls with transparency. we can find controls\r\n   * programmatically without painting them, the cache canvas optimization is always valid\r\n   * @param {FabricObject} target Object to check\r\n   * @param {Number} x Left coordinate in viewport space\r\n   * @param {Number} y Top coordinate in viewport space\r\n   * @return {Boolean}\r\n   */\r\n  isTargetTransparent(target: FabricObject, x: number, y: number): boolean {\r\n    const tolerance = this.targetFindTolerance;\r\n    const ctx = this.pixelFindContext;\r\n    this.clearContext(ctx);\r\n    ctx.save();\r\n    ctx.translate(-x + tolerance, -y + tolerance);\r\n    ctx.transform(...this.viewportTransform);\r\n    const selectionBgc = target.selectionBackgroundColor;\r\n    target.selectionBackgroundColor = '';\r\n    target.render(ctx);\r\n    target.selectionBackgroundColor = selectionBgc;\r\n    ctx.restore();\r\n    // our canvas is square, and made around tolerance.\r\n    // so tolerance in this case also represent the center of the canvas.\r\n    const enhancedTolerance = Math.round(tolerance * this.getRetinaScaling());\r\n    return isTransparent(\r\n      ctx,\r\n      enhancedTolerance,\r\n      enhancedTolerance,\r\n      enhancedTolerance\r\n    );\r\n  }\r\n\r\n  /**\r\n   * takes an event and determines if selection key has been pressed\r\n   * @private\r\n   * @param {TPointerEvent} e Event object\r\n   */\r\n  _isSelectionKeyPressed(e: TPointerEvent): boolean {\r\n    const sKey = this.selectionKey;\r\n    if (!sKey) {\r\n      return false;\r\n    }\r\n    if (Array.isArray(sKey)) {\r\n      return !!sKey.find((key) => !!key && e[key] === true);\r\n    } else {\r\n      return e[sKey];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {TPointerEvent} e Event object\r\n   * @param {FabricObject} target\r\n   */\r\n  _shouldClearSelection(\r\n    e: TPointerEvent,\r\n    target?: FabricObject\r\n  ): target is undefined {\r\n    const activeObjects = this.getActiveObjects(),\r\n      activeObject = this._activeObject;\r\n\r\n    return !!(\r\n      !target ||\r\n      (target &&\r\n        activeObject &&\r\n        activeObjects.length > 1 &&\r\n        activeObjects.indexOf(target) === -1 &&\r\n        activeObject !== target &&\r\n        !this._isSelectionKeyPressed(e)) ||\r\n      (target && !target.evented) ||\r\n      (target && !target.selectable && activeObject && activeObject !== target)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * This method will take in consideration a modifier key pressed and the control we are\r\n   * about to drag, and try to guess the anchor point ( origin ) of the transormation.\r\n   * This should be really in the realm of controls, and we should remove specific code for legacy\r\n   * embedded actions.\r\n   * @TODO this probably deserve discussion/rediscovery and change/refactor\r\n   * @private\r\n   * @deprecated\r\n   * @param {FabricObject} target\r\n   * @param {string} action\r\n   * @param {boolean} altKey\r\n   * @returns {boolean} true if the transformation should be centered\r\n   */\r\n  private _shouldCenterTransform(\r\n    target: FabricObject,\r\n    action: string,\r\n    modifierKeyPressed: boolean\r\n  ) {\r\n    if (!target) {\r\n      return;\r\n    }\r\n\r\n    let centerTransform;\r\n\r\n    if (\r\n      action === SCALE ||\r\n      action === SCALE_X ||\r\n      action === SCALE_Y ||\r\n      action === RESIZING\r\n    ) {\r\n      centerTransform = this.centeredScaling || target.centeredScaling;\r\n    } else if (action === ROTATE) {\r\n      centerTransform = this.centeredRotation || target.centeredRotation;\r\n    }\r\n\r\n    return centerTransform ? !modifierKeyPressed : modifierKeyPressed;\r\n  }\r\n\r\n  /**\r\n   * Given the control clicked, determine the origin of the transform.\r\n   * This is bad because controls can totally have custom names\r\n   * should disappear before release 4.0\r\n   * @private\r\n   * @deprecated\r\n   */\r\n  _getOriginFromCorner(\r\n    target: FabricObject,\r\n    controlName: string\r\n  ): { x: TOriginX; y: TOriginY } {\r\n    const origin = {\r\n      x: target.originX,\r\n      y: target.originY,\r\n    };\r\n\r\n    if (!controlName) {\r\n      return origin;\r\n    }\r\n\r\n    // is a left control ?\r\n    if (['ml', 'tl', 'bl'].includes(controlName)) {\r\n      origin.x = RIGHT;\r\n      // is a right control ?\r\n    } else if (['mr', 'tr', 'br'].includes(controlName)) {\r\n      origin.x = LEFT;\r\n    }\r\n    // is a top control ?\r\n    if (['tl', 'mt', 'tr'].includes(controlName)) {\r\n      origin.y = BOTTOM;\r\n      // is a bottom control ?\r\n    } else if (['bl', 'mb', 'br'].includes(controlName)) {\r\n      origin.y = TOP;\r\n    }\r\n    return origin;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {Event} e Event object\r\n   * @param {FabricObject} target\r\n   * @param {boolean} [alreadySelected] pass true to setup the active control\r\n   */\r\n  _setupCurrentTransform(\r\n    e: TPointerEvent,\r\n    target: FabricObject,\r\n    alreadySelected: boolean\r\n  ): void {\r\n    const pointer = target.group\r\n      ? // transform pointer to target's containing coordinate plane\r\n        sendPointToPlane(\r\n          this.getScenePoint(e),\r\n          undefined,\r\n          target.group.calcTransformMatrix()\r\n        )\r\n      : this.getScenePoint(e);\r\n    const { key: corner = '', control } = target.getActiveControl() || {},\r\n      actionHandler =\r\n        alreadySelected && control\r\n          ? control.getActionHandler(e, target, control)?.bind(control)\r\n          : dragHandler,\r\n      action = getActionFromCorner(alreadySelected, corner, e, target),\r\n      altKey = e[this.centeredKey as ModifierKey],\r\n      origin = this._shouldCenterTransform(target, action, altKey)\r\n        ? ({ x: CENTER, y: CENTER } as const)\r\n        : this._getOriginFromCorner(target, corner),\r\n      /**\r\n       * relative to target's containing coordinate plane\r\n       * both agree on every point\r\n       **/\r\n      transform: Transform = {\r\n        target: target,\r\n        action,\r\n        actionHandler,\r\n        actionPerformed: false,\r\n        corner,\r\n        scaleX: target.scaleX,\r\n        scaleY: target.scaleY,\r\n        skewX: target.skewX,\r\n        skewY: target.skewY,\r\n        offsetX: pointer.x - target.left,\r\n        offsetY: pointer.y - target.top,\r\n        originX: origin.x,\r\n        originY: origin.y,\r\n        ex: pointer.x,\r\n        ey: pointer.y,\r\n        lastX: pointer.x,\r\n        lastY: pointer.y,\r\n        theta: degreesToRadians(target.angle),\r\n        width: target.width,\r\n        height: target.height,\r\n        shiftKey: e.shiftKey,\r\n        altKey,\r\n        original: {\r\n          ...saveObjectTransform(target),\r\n          originX: origin.x,\r\n          originY: origin.y,\r\n        },\r\n      };\r\n\r\n    this._currentTransform = transform;\r\n\r\n    this.fire('before:transform', {\r\n      e,\r\n      transform,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Set the cursor type of the canvas element\r\n   * @param {String} value Cursor type of the canvas element.\r\n   * @see http://www.w3.org/TR/css3-ui/#cursor\r\n   */\r\n  setCursor(value: CSSStyleDeclaration['cursor']): void {\r\n    this.upperCanvasEl.style.cursor = value;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {CanvasRenderingContext2D} ctx to draw the selection on\r\n   */\r\n  _drawSelection(ctx: CanvasRenderingContext2D): void {\r\n    const { x, y, deltaX, deltaY } = this._groupSelector!,\r\n      start = new Point(x, y).transform(this.viewportTransform),\r\n      extent = new Point(x + deltaX, y + deltaY).transform(\r\n        this.viewportTransform\r\n      ),\r\n      strokeOffset = this.selectionLineWidth / 2;\r\n    let minX = Math.min(start.x, extent.x),\r\n      minY = Math.min(start.y, extent.y),\r\n      maxX = Math.max(start.x, extent.x),\r\n      maxY = Math.max(start.y, extent.y);\r\n\r\n    if (this.selectionColor) {\r\n      ctx.fillStyle = this.selectionColor;\r\n      ctx.fillRect(minX, minY, maxX - minX, maxY - minY);\r\n    }\r\n\r\n    if (!this.selectionLineWidth || !this.selectionBorderColor) {\r\n      return;\r\n    }\r\n    ctx.lineWidth = this.selectionLineWidth;\r\n    ctx.strokeStyle = this.selectionBorderColor;\r\n\r\n    minX += strokeOffset;\r\n    minY += strokeOffset;\r\n    maxX -= strokeOffset;\r\n    maxY -= strokeOffset;\r\n    // selection border\r\n    // @TODO: is _setLineDash still necessary on modern canvas?\r\n    FabricObject.prototype._setLineDash.call(\r\n      this,\r\n      ctx,\r\n      this.selectionDashArray\r\n    );\r\n    ctx.strokeRect(minX, minY, maxX - minX, maxY - minY);\r\n  }\r\n\r\n  /**\r\n   * Method that determines what object we are clicking on\r\n   * 11/09/2018 TODO: would be cool if findTarget could discern between being a full target\r\n   * or the outside part of the corner.\r\n   * @param {Event} e mouse event\r\n   * @return {FabricObject | null} the target found\r\n   */\r\n  findTarget(e: TPointerEvent): FabricObject | undefined {\r\n    if (this.skipTargetFind) {\r\n      return undefined;\r\n    }\r\n\r\n    const pointer = this.getViewportPoint(e),\r\n      activeObject = this._activeObject,\r\n      aObjects = this.getActiveObjects();\r\n\r\n    this.targets = [];\r\n\r\n    if (activeObject && aObjects.length >= 1) {\r\n      if (activeObject.findControl(pointer, isTouchEvent(e))) {\r\n        // if we hit the corner of the active object, let's return that.\r\n        return activeObject;\r\n      } else if (\r\n        aObjects.length > 1 &&\r\n        // check pointer is over active selection and possibly perform `subTargetCheck`\r\n        this.searchPossibleTargets([activeObject], pointer)\r\n      ) {\r\n        // active selection does not select sub targets like normal groups\r\n        return activeObject;\r\n      } else if (\r\n        activeObject === this.searchPossibleTargets([activeObject], pointer)\r\n      ) {\r\n        // active object is not an active selection\r\n        if (!this.preserveObjectStacking) {\r\n          return activeObject;\r\n        } else {\r\n          const subTargets = this.targets;\r\n          this.targets = [];\r\n          const target = this.searchPossibleTargets(this._objects, pointer);\r\n          if (\r\n            e[this.altSelectionKey as ModifierKey] &&\r\n            target &&\r\n            target !== activeObject\r\n          ) {\r\n            // alt selection: select active object even though it is not the top most target\r\n            // restore targets\r\n            this.targets = subTargets;\r\n            return activeObject;\r\n          }\r\n          return target;\r\n        }\r\n      }\r\n    }\r\n\r\n    return this.searchPossibleTargets(this._objects, pointer);\r\n  }\r\n\r\n  /**\r\n   * Checks if the point is inside the object selection area including padding\r\n   * @param {FabricObject} obj Object to test against\r\n   * @param {Object} [pointer] point in scene coordinates\r\n   * @return {Boolean} true if point is contained within an area of given object\r\n   * @private\r\n   */\r\n  private _pointIsInObjectSelectionArea(obj: FabricObject, point: Point) {\r\n    // getCoords will already take care of group de-nesting\r\n    let coords = obj.getCoords();\r\n    const viewportZoom = this.getZoom();\r\n    const padding = obj.padding / viewportZoom;\r\n    if (padding) {\r\n      const [tl, tr, br, bl] = coords;\r\n      // what is the angle of the object?\r\n      // we could use getTotalAngle, but is way easier to look at it\r\n      // from how coords are oriented, since if something went wrong\r\n      // at least we are consistent.\r\n      const angleRadians = Math.atan2(tr.y - tl.y, tr.x - tl.x),\r\n        cosP = cos(angleRadians) * padding,\r\n        sinP = sin(angleRadians) * padding,\r\n        cosPSinP = cosP + sinP,\r\n        cosPMinusSinP = cosP - sinP;\r\n\r\n      coords = [\r\n        new Point(tl.x - cosPMinusSinP, tl.y - cosPSinP),\r\n        new Point(tr.x + cosPSinP, tr.y - cosPMinusSinP),\r\n        new Point(br.x + cosPMinusSinP, br.y + cosPSinP),\r\n        new Point(bl.x - cosPSinP, bl.y + cosPMinusSinP),\r\n      ];\r\n      // in case of padding we calculate the new coords on the fly.\r\n      // otherwise we have to maintain 2 sets of coordinates for everything.\r\n      // we can reiterate on storing them.\r\n      // if this is slow, for now the semplification is large and doesn't impact\r\n      // rendering.\r\n      // the idea behind this is that outside target check we don't need ot know\r\n      // where those coords are\r\n    }\r\n    return Intersection.isPointInPolygon(point, coords);\r\n  }\r\n\r\n  /**\r\n   * Checks point is inside the object selection condition. Either area with padding\r\n   * or over pixels if perPixelTargetFind is enabled\r\n   * @param {FabricObject} obj Object to test against\r\n   * @param {Object} [pointer] point from viewport.\r\n   * @return {Boolean} true if point is contained within an area of given object\r\n   * @private\r\n   */\r\n  _checkTarget(obj: FabricObject, pointer: Point): boolean {\r\n    if (\r\n      obj &&\r\n      obj.visible &&\r\n      obj.evented &&\r\n      this._pointIsInObjectSelectionArea(\r\n        obj,\r\n        sendPointToPlane(pointer, undefined, this.viewportTransform)\r\n      )\r\n    ) {\r\n      if (\r\n        (this.perPixelTargetFind || obj.perPixelTargetFind) &&\r\n        !(obj as unknown as IText).isEditing\r\n      ) {\r\n        if (!this.isTargetTransparent(obj, pointer.x, pointer.y)) {\r\n          return true;\r\n        }\r\n      } else {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Internal Function used to search inside objects an object that contains pointer in bounding box or that contains pointerOnCanvas when painted\r\n   * @param {Array} [objects] objects array to look into\r\n   * @param {Object} [pointer] x,y object of point coordinates we want to check.\r\n   * @return {FabricObject} **top most object from given `objects`** that contains pointer\r\n   * @private\r\n   */\r\n  _searchPossibleTargets(\r\n    objects: FabricObject[],\r\n    pointer: Point\r\n  ): FabricObject | undefined {\r\n    // Cache all targets where their bounding box contains point.\r\n    let i = objects.length;\r\n    // Do not check for currently grouped objects, since we check the parent group itself.\r\n    // until we call this function specifically to search inside the activeGroup\r\n    while (i--) {\r\n      const target = objects[i];\r\n      if (this._checkTarget(target, pointer)) {\r\n        if (isCollection(target) && target.subTargetCheck) {\r\n          const subTarget = this._searchPossibleTargets(\r\n            target._objects as FabricObject[],\r\n            pointer\r\n          );\r\n          subTarget && this.targets.push(subTarget);\r\n        }\r\n        return target;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Function used to search inside objects an object that contains pointer in bounding box or that contains pointerOnCanvas when painted\r\n   * @see {@link _searchPossibleTargets}\r\n   * @param {FabricObject[]} [objects] objects array to look into\r\n   * @param {Point} [pointer] coordinates from viewport to check.\r\n   * @return {FabricObject} **top most object on screen** that contains pointer\r\n   */\r\n  searchPossibleTargets(\r\n    objects: FabricObject[],\r\n    pointer: Point\r\n  ): FabricObject | undefined {\r\n    const target = this._searchPossibleTargets(objects, pointer);\r\n\r\n    // if we found something in this.targets, and the group is interactive, return the innermost subTarget\r\n    // that is still interactive\r\n    // TODO: reverify why interactive. the target should be returned always, but selected only\r\n    // if interactive.\r\n    if (\r\n      target &&\r\n      isCollection(target) &&\r\n      target.interactive &&\r\n      this.targets[0]\r\n    ) {\r\n      /** targets[0] is the innermost nested target, but it could be inside non interactive groups and so not a selection target */\r\n      const targets = this.targets;\r\n      for (let i = targets.length - 1; i > 0; i--) {\r\n        const t = targets[i];\r\n        if (!(isCollection(t) && t.interactive)) {\r\n          // one of the subtargets was not interactive. that is the last subtarget we can return.\r\n          // we can't dig more deep;\r\n          return t;\r\n        }\r\n      }\r\n      return targets[0];\r\n    }\r\n\r\n    return target;\r\n  }\r\n\r\n  /**\r\n   * @returns point existing in the same plane as the {@link HTMLCanvasElement},\r\n   * `(0, 0)` being the top left corner of the {@link HTMLCanvasElement}.\r\n   * This means that changes to the {@link viewportTransform} do not change the values of the point\r\n   * and it remains unchanged from the viewer's perspective.\r\n   *\r\n   * @example\r\n   * const scenePoint = sendPointToPlane(\r\n   *  this.getViewportPoint(e),\r\n   *  undefined,\r\n   *  canvas.viewportTransform\r\n   * );\r\n   *\r\n   */\r\n  getViewportPoint(e: TPointerEvent) {\r\n    if (this._pointer) {\r\n      return this._pointer;\r\n    }\r\n    return this.getPointer(e, true);\r\n  }\r\n\r\n  /**\r\n   * @returns point existing in the scene (the same plane as the plane {@link FabricObject#getCenterPoint} exists in).\r\n   * This means that changes to the {@link viewportTransform} do not change the values of the point,\r\n   * however, from the viewer's perspective, the point is changed.\r\n   *\r\n   * @example\r\n   * const viewportPoint = sendPointToPlane(\r\n   *  this.getScenePoint(e),\r\n   *  canvas.viewportTransform\r\n   * );\r\n   *\r\n   */\r\n  getScenePoint(e: TPointerEvent) {\r\n    if (this._absolutePointer) {\r\n      return this._absolutePointer;\r\n    }\r\n    return this.getPointer(e);\r\n  }\r\n\r\n  /**\r\n   * Returns pointer relative to canvas.\r\n   *\r\n   * @deprecated This method is deprecated since v6 to protect you from misuse.\r\n   * Use {@link getViewportPoint} or {@link getScenePoint} instead.\r\n   *\r\n   * @param {Event} e\r\n   * @param {Boolean} [fromViewport] whether to return the point from the viewport or in the scene\r\n   * @return {Point}\r\n   */\r\n  getPointer(e: TPointerEvent, fromViewport = false): Point {\r\n    const upperCanvasEl = this.upperCanvasEl,\r\n      bounds = upperCanvasEl.getBoundingClientRect();\r\n    let pointer = getPointer(e),\r\n      boundsWidth = bounds.width || 0,\r\n      boundsHeight = bounds.height || 0;\r\n\r\n    if (!boundsWidth || !boundsHeight) {\r\n      if (TOP in bounds && BOTTOM in bounds) {\r\n        boundsHeight = Math.abs(bounds.top - bounds.bottom);\r\n      }\r\n      if (RIGHT in bounds && LEFT in bounds) {\r\n        boundsWidth = Math.abs(bounds.right - bounds.left);\r\n      }\r\n    }\r\n\r\n    this.calcOffset();\r\n    pointer.x = pointer.x - this._offset.left;\r\n    pointer.y = pointer.y - this._offset.top;\r\n    if (!fromViewport) {\r\n      pointer = sendPointToPlane(pointer, undefined, this.viewportTransform);\r\n    }\r\n\r\n    const retinaScaling = this.getRetinaScaling();\r\n    if (retinaScaling !== 1) {\r\n      pointer.x /= retinaScaling;\r\n      pointer.y /= retinaScaling;\r\n    }\r\n\r\n    // If bounds are not available (i.e. not visible), do not apply scale.\r\n    const cssScale =\r\n      boundsWidth === 0 || boundsHeight === 0\r\n        ? new Point(1, 1)\r\n        : new Point(\r\n            upperCanvasEl.width / boundsWidth,\r\n            upperCanvasEl.height / boundsHeight\r\n          );\r\n\r\n    return pointer.multiply(cssScale);\r\n  }\r\n\r\n  /**\r\n   * Internal use only\r\n   * @protected\r\n   */\r\n  protected _setDimensionsImpl(\r\n    dimensions: TSize,\r\n    options?: TCanvasSizeOptions\r\n  ) {\r\n    // @ts-expect-error this method exists in the subclass - should be moved or declared as abstract\r\n    this._resetTransformEventData();\r\n    super._setDimensionsImpl(dimensions, options);\r\n    if (this._isCurrentlyDrawing) {\r\n      this.freeDrawingBrush &&\r\n        this.freeDrawingBrush._setBrushStyles(this.contextTop);\r\n    }\r\n  }\r\n\r\n  protected _createCacheCanvas() {\r\n    this.pixelFindCanvasEl = createCanvasElement();\r\n    this.pixelFindContext = this.pixelFindCanvasEl.getContext('2d', {\r\n      willReadFrequently: true,\r\n    })!;\r\n    this.setTargetFindTolerance(this.targetFindTolerance);\r\n  }\r\n\r\n  /**\r\n   * Returns context of top canvas where interactions are drawn\r\n   * @returns {CanvasRenderingContext2D}\r\n   */\r\n  getTopContext(): CanvasRenderingContext2D {\r\n    return this.elements.upper.ctx;\r\n  }\r\n\r\n  /**\r\n   * Returns context of canvas where object selection is drawn\r\n   * @alias\r\n   * @return {CanvasRenderingContext2D}\r\n   */\r\n  getSelectionContext(): CanvasRenderingContext2D {\r\n    return this.elements.upper.ctx;\r\n  }\r\n\r\n  /**\r\n   * Returns &lt;canvas> element on which object selection is drawn\r\n   * @return {HTMLCanvasElement}\r\n   */\r\n  getSelectionElement(): HTMLCanvasElement {\r\n    return this.elements.upper.el;\r\n  }\r\n\r\n  /**\r\n   * Returns currently active object\r\n   * @return {FabricObject | null} active object\r\n   */\r\n  getActiveObject(): FabricObject | undefined {\r\n    return this._activeObject;\r\n  }\r\n\r\n  /**\r\n   * Returns an array with the current selected objects\r\n   * @return {FabricObject[]} active objects array\r\n   */\r\n  getActiveObjects(): FabricObject[] {\r\n    const active = this._activeObject;\r\n    return isActiveSelection(active)\r\n      ? active.getObjects()\r\n      : active\r\n      ? [active]\r\n      : [];\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * Compares the old activeObject with the current one and fires correct events\r\n   * @param {FabricObject[]} oldObjects old activeObject\r\n   * @param {TPointerEvent} e mouse event triggering the selection events\r\n   */\r\n  _fireSelectionEvents(oldObjects: FabricObject[], e?: TPointerEvent) {\r\n    let somethingChanged = false,\r\n      invalidate = false;\r\n    const objects = this.getActiveObjects(),\r\n      added: FabricObject[] = [],\r\n      removed: FabricObject[] = [];\r\n\r\n    oldObjects.forEach((target) => {\r\n      if (!objects.includes(target)) {\r\n        somethingChanged = true;\r\n        target.fire('deselected', {\r\n          e,\r\n          target,\r\n        });\r\n        removed.push(target);\r\n      }\r\n    });\r\n\r\n    objects.forEach((target) => {\r\n      if (!oldObjects.includes(target)) {\r\n        somethingChanged = true;\r\n        target.fire('selected', {\r\n          e,\r\n          target,\r\n        });\r\n        added.push(target);\r\n      }\r\n    });\r\n\r\n    if (oldObjects.length > 0 && objects.length > 0) {\r\n      invalidate = true;\r\n      somethingChanged &&\r\n        this.fire('selection:updated', {\r\n          e,\r\n          selected: added,\r\n          deselected: removed,\r\n        });\r\n    } else if (objects.length > 0) {\r\n      invalidate = true;\r\n      this.fire('selection:created', {\r\n        e,\r\n        selected: added,\r\n      });\r\n    } else if (oldObjects.length > 0) {\r\n      invalidate = true;\r\n      this.fire('selection:cleared', {\r\n        e,\r\n        deselected: removed,\r\n      });\r\n    }\r\n    invalidate && (this._objectsToRender = undefined);\r\n  }\r\n\r\n  /**\r\n   * Sets given object as the only active object on canvas\r\n   * @param {FabricObject} object Object to set as an active one\r\n   * @param {TPointerEvent} [e] Event (passed along when firing \"object:selected\")\r\n   * @return {Boolean} true if the object has been selected\r\n   */\r\n  setActiveObject(object: FabricObject, e?: TPointerEvent) {\r\n    // we can't inline this, since _setActiveObject will change what getActiveObjects returns\r\n    const currentActives = this.getActiveObjects();\r\n    const selected = this._setActiveObject(object, e);\r\n    this._fireSelectionEvents(currentActives, e);\r\n    return selected;\r\n  }\r\n\r\n  /**\r\n   * This is supposed to be equivalent to setActiveObject but without firing\r\n   * any event. There is commitment to have this stay this way.\r\n   * This is the functional part of setActiveObject.\r\n   * @param {Object} object to set as active\r\n   * @param {Event} [e] Event (passed along when firing \"object:selected\")\r\n   * @return {Boolean} true if the object has been selected\r\n   */\r\n  _setActiveObject(object: FabricObject, e?: TPointerEvent) {\r\n    const prevActiveObject = this._activeObject;\r\n    if (prevActiveObject === object) {\r\n      return false;\r\n    }\r\n    // after calling this._discardActiveObject, this,_activeObject could be undefined\r\n    if (!this._discardActiveObject(e, object) && this._activeObject) {\r\n      // refused to deselect\r\n      return false;\r\n    }\r\n    if (object.onSelect({ e })) {\r\n      return false;\r\n    }\r\n\r\n    this._activeObject = object;\r\n\r\n    if (isActiveSelection(object) && prevActiveObject !== object) {\r\n      object.set('canvas', this);\r\n    }\r\n    object.setCoords();\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * This is supposed to be equivalent to discardActiveObject but without firing\r\n   * any selection events ( can still fire object transformation events ). There is commitment to have this stay this way.\r\n   * This is the functional part of discardActiveObject.\r\n   * @param {Event} [e] Event (passed along when firing \"object:deselected\")\r\n   * @param {Object} object the next object to set as active, reason why we are discarding this\r\n   * @return {Boolean} true if the active object has been discarded\r\n   */\r\n  _discardActiveObject(\r\n    e?: TPointerEvent,\r\n    object?: FabricObject\r\n  ): this is { _activeObject: undefined } {\r\n    const obj = this._activeObject;\r\n    if (obj) {\r\n      // onDeselect return TRUE to cancel selection;\r\n      if (obj.onDeselect({ e, object })) {\r\n        return false;\r\n      }\r\n      if (this._currentTransform && this._currentTransform.target === obj) {\r\n        this.endCurrentTransform(e);\r\n      }\r\n      this._activeObject = undefined;\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Discards currently active object and fire events. If the function is called by fabric\r\n   * as a consequence of a mouse event, the event is passed as a parameter and\r\n   * sent to the fire function for the custom events. When used as a method the\r\n   * e param does not have any application.\r\n   * @param {event} e\r\n   * @return {Boolean} true if the active object has been discarded\r\n   */\r\n  discardActiveObject(e?: TPointerEvent): this is { _activeObject: undefined } {\r\n    const currentActives = this.getActiveObjects(),\r\n      activeObject = this.getActiveObject();\r\n    if (currentActives.length) {\r\n      this.fire('before:selection:cleared', {\r\n        e,\r\n        deselected: [activeObject!],\r\n      });\r\n    }\r\n    const discarded = this._discardActiveObject(e);\r\n    this._fireSelectionEvents(currentActives, e);\r\n    return discarded;\r\n  }\r\n\r\n  /**\r\n   * End the current transform.\r\n   * You don't usually need to call this method unless you are interrupting a user initiated transform\r\n   * because of some other event ( a press of key combination, or something that block the user UX )\r\n   * @param {Event} [e] send the mouse event that generate the finalize down, so it can be used in the event\r\n   */\r\n  endCurrentTransform(e?: TPointerEvent) {\r\n    const transform = this._currentTransform;\r\n    this._finalizeCurrentTransform(e);\r\n    if (transform && transform.target) {\r\n      // this could probably go inside _finalizeCurrentTransform\r\n      transform.target.isMoving = false;\r\n    }\r\n    this._currentTransform = null;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {Event} e send the mouse event that generate the finalize down, so it can be used in the event\r\n   */\r\n  _finalizeCurrentTransform(e?: TPointerEvent) {\r\n    const transform = this._currentTransform!,\r\n      target = transform.target,\r\n      options = {\r\n        e,\r\n        target,\r\n        transform,\r\n        action: transform.action,\r\n      };\r\n\r\n    if (target._scaling) {\r\n      target._scaling = false;\r\n    }\r\n\r\n    target.setCoords();\r\n\r\n    if (transform.actionPerformed) {\r\n      this.fire('object:modified', options);\r\n      target.fire(MODIFIED, options);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sets viewport transformation of this canvas instance\r\n   * @param {Array} vpt a Canvas 2D API transform matrix\r\n   */\r\n  setViewportTransform(vpt: TMat2D) {\r\n    super.setViewportTransform(vpt);\r\n    const activeObject = this._activeObject;\r\n    if (activeObject) {\r\n      activeObject.setCoords();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @override clears active selection ref and interactive canvas elements and contexts\r\n   */\r\n  destroy() {\r\n    // dispose of active selection\r\n    const activeObject = this._activeObject;\r\n    if (isActiveSelection(activeObject)) {\r\n      activeObject.removeAll();\r\n      activeObject.dispose();\r\n    }\r\n\r\n    delete this._activeObject;\r\n\r\n    super.destroy();\r\n\r\n    // free resources\r\n\r\n    // pixel find canvas\r\n    // @ts-expect-error disposing\r\n    this.pixelFindContext = null;\r\n    // @ts-expect-error disposing\r\n    this.pixelFindCanvasEl = undefined;\r\n  }\r\n\r\n  /**\r\n   * Clears all contexts (background, main, top) of an instance\r\n   */\r\n  clear() {\r\n    // discard active object and fire events\r\n    this.discardActiveObject();\r\n    // make sure we clear the active object in case it refused to be discarded\r\n    this._activeObject = undefined;\r\n    this.clearContext(this.contextTop);\r\n    super.clear();\r\n  }\r\n\r\n  /**\r\n   * Draws objects' controls (borders/controls)\r\n   * @param {CanvasRenderingContext2D} ctx Context to render controls on\r\n   */\r\n  drawControls(ctx: CanvasRenderingContext2D) {\r\n    const activeObject = this._activeObject;\r\n\r\n    if (activeObject) {\r\n      activeObject._renderControls(ctx);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  protected _toObject(\r\n    instance: FabricObject,\r\n    methodName: 'toObject' | 'toDatalessObject',\r\n    propertiesToInclude: string[]\r\n  ): Record<string, any> {\r\n    // If the object is part of the current selection group, it should\r\n    // be transformed appropriately\r\n    // i.e. it should be serialised as it would appear if the selection group\r\n    // were to be destroyed.\r\n    const originalProperties = this._realizeGroupTransformOnObject(instance),\r\n      object = super._toObject(instance, methodName, propertiesToInclude);\r\n    //Undo the damage we did by changing all of its properties\r\n    instance.set(originalProperties);\r\n    return object;\r\n  }\r\n\r\n  /**\r\n   * Realizes an object's group transformation on it\r\n   * @private\r\n   * @param {FabricObject} [instance] the object to transform (gets mutated)\r\n   * @returns the original values of instance which were changed\r\n   */\r\n  private _realizeGroupTransformOnObject(\r\n    instance: FabricObject\r\n  ): Partial<typeof instance> {\r\n    const { group } = instance;\r\n    if (group && isActiveSelection(group) && this._activeObject === group) {\r\n      const layoutProps = [\r\n        'angle',\r\n        'flipX',\r\n        'flipY',\r\n        LEFT,\r\n        SCALE_X,\r\n        SCALE_Y,\r\n        SKEW_X,\r\n        SKEW_Y,\r\n        TOP,\r\n      ] as (keyof typeof instance)[];\r\n      const originalValues = pick<typeof instance>(instance, layoutProps);\r\n      addTransformToObject(instance, group.calcOwnMatrix());\r\n      return originalValues;\r\n    } else {\r\n      return {};\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _setSVGObject(\r\n    markup: string[],\r\n    instance: FabricObject,\r\n    reviver?: TSVGReviver\r\n  ) {\r\n    // If the object is in a selection group, simulate what would happen to that\r\n    // object when the group is deselected\r\n    const originalProperties = this._realizeGroupTransformOnObject(instance);\r\n    super._setSVGObject(markup, instance, reviver);\r\n    instance.set(originalProperties);\r\n  }\r\n}\r\n","import type { ModifierKey, TOptionalModifierKey } from '../EventTypeDefs';\r\nimport type { TOptions } from '../typedefs';\r\nimport type { StaticCanvasOptions } from './StaticCanvasOptions';\r\n\r\nexport interface CanvasTransformOptions {\r\n  /**\r\n   * When true, objects can be transformed by one side (unproportionately)\r\n   * when dragged on the corners that normally would not do that.\r\n   * @type Boolean\r\n   * @default\r\n   * @since fabric 4.0 // changed name and default value\r\n   */\r\n  uniformScaling: boolean;\r\n\r\n  /**\r\n   * Indicates which key switches uniform scaling.\r\n   * values: 'altKey', 'shiftKey', 'ctrlKey'.\r\n   * If `null` or 'none' or any other string that is not a modifier key\r\n   * feature is disabled.\r\n   * totally wrong named. this sounds like `uniform scaling`\r\n   * if Canvas.uniformScaling is true, pressing this will set it to false\r\n   * and viceversa.\r\n   * @since 1.6.2\r\n   * @type ModifierKey\r\n   * @default\r\n   */\r\n  uniScaleKey: TOptionalModifierKey;\r\n\r\n  /**\r\n   * When true, objects use center point as the origin of scale transformation.\r\n   * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\r\n   * @since 1.3.4\r\n   * @type Boolean\r\n   * @default\r\n   */\r\n  centeredScaling: boolean;\r\n\r\n  /**\r\n   * When true, objects use center point as the origin of rotate transformation.\r\n   * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\r\n   * @since 1.3.4\r\n   * @type Boolean\r\n   * @default\r\n   */\r\n  centeredRotation: boolean;\r\n\r\n  /**\r\n   * Indicates which key enable centered Transform\r\n   * values: 'altKey', 'shiftKey', 'ctrlKey'.\r\n   * If `null` or 'none' or any other string that is not a modifier key\r\n   * feature is disabled feature disabled.\r\n   * @since 1.6.2\r\n   * @type ModifierKey\r\n   * @default\r\n   */\r\n  centeredKey: TOptionalModifierKey;\r\n\r\n  /**\r\n   * Indicates which key enable alternate action on corner\r\n   * values: 'altKey', 'shiftKey', 'ctrlKey'.\r\n   * If `null` or 'none' or any other string that is not a modifier key\r\n   * feature is disabled feature disabled.\r\n   * @since 1.6.2\r\n   * @type ModifierKey\r\n   * @default\r\n   */\r\n  altActionKey: TOptionalModifierKey;\r\n}\r\n\r\nexport interface CanvasSelectionOptions {\r\n  /**\r\n   * Indicates whether group selection should be enabled\r\n   * @type Boolean\r\n   * @default\r\n   */\r\n  selection: boolean;\r\n\r\n  /**\r\n   * Indicates which key or keys enable multiple click selection\r\n   * Pass value as a string or array of strings\r\n   * values: 'altKey', 'shiftKey', 'ctrlKey'.\r\n   * If `null` or empty or containing any other string that is not a modifier key\r\n   * feature is disabled.\r\n   * @since 1.6.2\r\n   * @type ModifierKey|ModifierKey[]\r\n   * @default\r\n   */\r\n  selectionKey: TOptionalModifierKey | ModifierKey[];\r\n\r\n  /**\r\n   * Indicates which key enable alternative selection\r\n   * in case of target overlapping with active object\r\n   * values: 'altKey', 'shiftKey', 'ctrlKey'.\r\n   * For a series of reason that come from the general expectations on how\r\n   * things should work, this feature works only for preserveObjectStacking true.\r\n   * If `null` or 'none' or any other string that is not a modifier key\r\n   * feature is disabled.\r\n   * @since 1.6.5\r\n   * @type null|ModifierKey\r\n   * @default\r\n   */\r\n  altSelectionKey: TOptionalModifierKey;\r\n\r\n  /**\r\n   * Color of selection\r\n   * @type String\r\n   * @default\r\n   */\r\n  selectionColor: string;\r\n\r\n  /**\r\n   * Default dash array pattern\r\n   * If not empty the selection border is dashed\r\n   * @type Array\r\n   */\r\n  selectionDashArray: number[];\r\n\r\n  /**\r\n   * Color of the border of selection (usually slightly darker than color of selection itself)\r\n   * @type String\r\n   * @default\r\n   */\r\n  selectionBorderColor: string;\r\n\r\n  /**\r\n   * Width of a line used in object/group selection\r\n   * @type Number\r\n   * @default\r\n   */\r\n  selectionLineWidth: number;\r\n\r\n  /**\r\n   * Select only shapes that are fully contained in the dragged selection rectangle.\r\n   * @type Boolean\r\n   * @default\r\n   */\r\n  selectionFullyContained: boolean;\r\n}\r\n\r\nexport interface CanvasCursorOptions {\r\n  /**\r\n   * Default cursor value used when hovering over an object on canvas\r\n   * @type CSSStyleDeclaration['cursor']\r\n   * @default move\r\n   */\r\n  hoverCursor: CSSStyleDeclaration['cursor'];\r\n\r\n  /**\r\n   * Default cursor value used when moving an object on canvas\r\n   * @type CSSStyleDeclaration['cursor']\r\n   * @default move\r\n   */\r\n  moveCursor: CSSStyleDeclaration['cursor'];\r\n\r\n  /**\r\n   * Default cursor value used for the entire canvas\r\n   * @type String\r\n   * @default default\r\n   */\r\n  defaultCursor: CSSStyleDeclaration['cursor'];\r\n\r\n  /**\r\n   * Cursor value used during free drawing\r\n   * @type String\r\n   * @default crosshair\r\n   */\r\n  freeDrawingCursor: CSSStyleDeclaration['cursor'];\r\n\r\n  /**\r\n   * Cursor value used for disabled elements ( corners with disabled action )\r\n   * @type String\r\n   * @since 2.0.0\r\n   * @default not-allowed\r\n   */\r\n  notAllowedCursor: CSSStyleDeclaration['cursor'];\r\n}\r\n\r\nexport interface TargetFindOptions {\r\n  /**\r\n   * When true, object detection happens on per-pixel basis rather than on per-bounding-box\r\n   * @type Boolean\r\n   * @default\r\n   */\r\n  perPixelTargetFind: boolean;\r\n\r\n  /**\r\n   * Number of pixels around target pixel to tolerate (consider active) during object detection\r\n   * @type Number\r\n   * @default\r\n   */\r\n  targetFindTolerance: number;\r\n\r\n  /**\r\n   * When true, target detection is skipped. Target detection will return always undefined.\r\n   * click selection won't work anymore, events will fire with no targets.\r\n   * if something is selected before setting it to true, it will be deselected at the first click.\r\n   * area selection will still work. check the `selection` property too.\r\n   * if you deactivate both, you should look into staticCanvas.\r\n   * @type Boolean\r\n   * @default\r\n   */\r\n  skipTargetFind: boolean;\r\n}\r\n\r\nexport interface CanvasEventsOptions {\r\n  /**\r\n   * Indicates if the right click on canvas can output the context menu or not\r\n   * @type Boolean\r\n   * @since 1.6.5\r\n   * @default\r\n   */\r\n  stopContextMenu: boolean;\r\n\r\n  /**\r\n   * Indicates if the canvas can fire right click events\r\n   * @type Boolean\r\n   * @since 1.6.5\r\n   * @default\r\n   */\r\n  fireRightClick: boolean;\r\n\r\n  /**\r\n   * Indicates if the canvas can fire middle click events\r\n   * @type Boolean\r\n   * @since 1.7.8\r\n   * @default\r\n   */\r\n  fireMiddleClick: boolean;\r\n\r\n  /**\r\n   * When the option is enabled, PointerEvent is used instead of TPointerEvent.\r\n   * @type Boolean\r\n   * @default\r\n   */\r\n  enablePointerEvents: boolean;\r\n}\r\n\r\nexport interface CanvasOptions\r\n  extends StaticCanvasOptions,\r\n    CanvasTransformOptions,\r\n    CanvasSelectionOptions,\r\n    CanvasCursorOptions,\r\n    TargetFindOptions,\r\n    CanvasEventsOptions {\r\n  /**\r\n   * Default element class that's given to wrapper (div) element of canvas\r\n   * @type String\r\n   * @default\r\n   * @deprecated customize {@link CanvasDOMManager} instead or access {@link elements} directly\r\n   */\r\n  containerClass: string;\r\n\r\n  /**\r\n   * Indicates whether objects should remain in current stack position when selected.\r\n   * When false objects are brought to top and rendered as part of the selection group\r\n   * @type Boolean\r\n   * @default\r\n   */\r\n  preserveObjectStacking: boolean;\r\n}\r\n\r\nexport type TCanvasOptions = TOptions<CanvasOptions>;\r\n\r\nexport const canvasDefaults: TOptions<CanvasOptions> = {\r\n  uniformScaling: true,\r\n  uniScaleKey: 'shiftKey',\r\n  centeredScaling: false,\r\n  centeredRotation: false,\r\n  centeredKey: 'altKey',\r\n  altActionKey: 'shiftKey',\r\n\r\n  selection: true,\r\n  selectionKey: 'shiftKey',\r\n  selectionColor: 'rgba(100, 100, 255, 0.3)',\r\n  selectionDashArray: [],\r\n  selectionBorderColor: 'rgba(255, 255, 255, 0.3)',\r\n  selectionLineWidth: 1,\r\n  selectionFullyContained: false,\r\n\r\n  hoverCursor: 'move',\r\n  moveCursor: 'move',\r\n  defaultCursor: 'default',\r\n  freeDrawingCursor: 'crosshair',\r\n  notAllowedCursor: 'not-allowed',\r\n\r\n  perPixelTargetFind: false,\r\n  targetFindTolerance: 0,\r\n  skipTargetFind: false,\r\n\r\n  stopContextMenu: false,\r\n  fireRightClick: false,\r\n  fireMiddleClick: false,\r\n  enablePointerEvents: false,\r\n\r\n  containerClass: 'canvas-container',\r\n\r\n  preserveObjectStacking: false,\r\n};\r\n","import type { TPointerEvent } from '../EventTypeDefs';\r\nimport type { ITextBehavior } from '../shapes/IText/ITextBehavior';\r\nimport { removeFromArray } from '../util/internals';\r\nimport type { Canvas } from './Canvas';\r\n\r\n/**\r\n * In charge of synchronizing all interactive text instances of a canvas\r\n */\r\nexport class TextEditingManager {\r\n  private targets: ITextBehavior[] = [];\r\n  private declare target?: ITextBehavior;\r\n  private __disposer: VoidFunction;\r\n\r\n  constructor(canvas: Canvas) {\r\n    const cb = () => {\r\n      const { hiddenTextarea } =\r\n        (canvas.getActiveObject() as ITextBehavior) || {};\r\n      hiddenTextarea && hiddenTextarea.focus();\r\n    };\r\n    const el = canvas.upperCanvasEl;\r\n    el.addEventListener('click', cb);\r\n    this.__disposer = () => el.removeEventListener('click', cb);\r\n  }\r\n\r\n  exitTextEditing() {\r\n    this.target = undefined;\r\n    this.targets.forEach((target) => {\r\n      if (target.isEditing) {\r\n        target.exitEditing();\r\n      }\r\n    });\r\n  }\r\n\r\n  add(target: ITextBehavior) {\r\n    this.targets.push(target);\r\n  }\r\n\r\n  remove(target: ITextBehavior) {\r\n    this.unregister(target);\r\n    removeFromArray(this.targets, target);\r\n  }\r\n\r\n  register(target: ITextBehavior) {\r\n    this.target = target;\r\n  }\r\n\r\n  unregister(target: ITextBehavior) {\r\n    if (target === this.target) {\r\n      this.target = undefined;\r\n    }\r\n  }\r\n\r\n  onMouseMove(e: TPointerEvent) {\r\n    this.target?.isEditing && this.target.updateSelectionOnMouseMove(e);\r\n  }\r\n\r\n  clear() {\r\n    this.targets = [];\r\n    this.target = undefined;\r\n  }\r\n\r\n  dispose() {\r\n    this.clear();\r\n    this.__disposer();\r\n    // @ts-expect-error disposing\r\n    delete this.__disposer;\r\n  }\r\n}\r\n","import { classRegistry } from '../ClassRegistry';\r\nimport { NONE } from '../constants';\r\nimport type {\r\n  CanvasEvents,\r\n  DragEventData,\r\n  ObjectEvents,\r\n  TPointerEvent,\r\n  TPointerEventNames,\r\n  Transform,\r\n} from '../EventTypeDefs';\r\nimport { Point } from '../Point';\r\nimport type { ActiveSelection } from '../shapes/ActiveSelection';\r\nimport type { Group } from '../shapes/Group';\r\nimport type { IText } from '../shapes/IText/IText';\r\nimport type { FabricObject } from '../shapes/Object/FabricObject';\r\nimport { isTouchEvent, stopEvent } from '../util/dom_event';\r\nimport { getDocumentFromElement, getWindowFromElement } from '../util/dom_misc';\r\nimport { sendPointToPlane } from '../util/misc/planeChange';\r\nimport { isActiveSelection } from '../util/typeAssertions';\r\nimport type { CanvasOptions, TCanvasOptions } from './CanvasOptions';\r\nimport { SelectableCanvas } from './SelectableCanvas';\r\nimport { TextEditingManager } from './TextEditingManager';\r\n\r\nconst addEventOptions = { passive: false } as EventListenerOptions;\r\n\r\nconst getEventPoints = (canvas: Canvas, e: TPointerEvent) => {\r\n  const viewportPoint = canvas.getViewportPoint(e);\r\n  const scenePoint = canvas.getScenePoint(e);\r\n  return {\r\n    viewportPoint,\r\n    scenePoint,\r\n    pointer: viewportPoint,\r\n    absolutePointer: scenePoint,\r\n  };\r\n};\r\n\r\n// just to be clear, the utils are now deprecated and those are here exactly as minifier helpers\r\n// because el.addEventListener can't me be minified while a const yes and we use it 47 times in this file.\r\n// few bytes but why give it away.\r\nconst addListener = (\r\n  el: HTMLElement | Document,\r\n  ...args: Parameters<HTMLElement['addEventListener']>\r\n) => el.addEventListener(...args);\r\nconst removeListener = (\r\n  el: HTMLElement | Document,\r\n  ...args: Parameters<HTMLElement['removeEventListener']>\r\n) => el.removeEventListener(...args);\r\n\r\nconst syntheticEventConfig = {\r\n  mouse: {\r\n    in: 'over',\r\n    out: 'out',\r\n    targetIn: 'mouseover',\r\n    targetOut: 'mouseout',\r\n    canvasIn: 'mouse:over',\r\n    canvasOut: 'mouse:out',\r\n  },\r\n  drag: {\r\n    in: 'enter',\r\n    out: 'leave',\r\n    targetIn: 'dragenter',\r\n    targetOut: 'dragleave',\r\n    canvasIn: 'drag:enter',\r\n    canvasOut: 'drag:leave',\r\n  },\r\n} as const;\r\n\r\ntype TSyntheticEventContext = {\r\n  mouse: { e: TPointerEvent };\r\n  drag: DragEventData;\r\n};\r\n\r\nexport class Canvas extends SelectableCanvas implements CanvasOptions {\r\n  /**\r\n   * Contains the id of the touch event that owns the fabric transform\r\n   * @type Number\r\n   * @private\r\n   */\r\n  declare mainTouchId?: number;\r\n\r\n  declare enablePointerEvents: boolean;\r\n\r\n  /**\r\n   * Holds a reference to a setTimeout timer for event synchronization\r\n   * @type number\r\n   * @private\r\n   */\r\n  private declare _willAddMouseDown: number;\r\n\r\n  /**\r\n   * Holds a reference to an object on the canvas that is receiving the drag over event.\r\n   * @type FabricObject\r\n   * @private\r\n   */\r\n  private declare _draggedoverTarget?: FabricObject;\r\n\r\n  /**\r\n   * Holds a reference to an object on the canvas from where the drag operation started\r\n   * @type FabricObject\r\n   * @private\r\n   */\r\n  private declare _dragSource?: FabricObject;\r\n\r\n  /**\r\n   * Holds a reference to an object on the canvas that is the current drop target\r\n   * May differ from {@link _draggedoverTarget}\r\n   * @todo inspect whether {@link _draggedoverTarget} and {@link _dropTarget} should be merged somehow\r\n   * @type FabricObject\r\n   * @private\r\n   */\r\n  private declare _dropTarget: FabricObject<ObjectEvents> | undefined;\r\n\r\n  private _isClick: boolean;\r\n\r\n  textEditingManager = new TextEditingManager(this);\r\n\r\n  constructor(el?: string | HTMLCanvasElement, options: TCanvasOptions = {}) {\r\n    super(el, options);\r\n    // bind event handlers\r\n    (\r\n      [\r\n        '_onMouseDown',\r\n        '_onTouchStart',\r\n        '_onMouseMove',\r\n        '_onMouseUp',\r\n        '_onTouchEnd',\r\n        '_onResize',\r\n        // '_onGesture',\r\n        // '_onDrag',\r\n        // '_onShake',\r\n        // '_onLongPress',\r\n        // '_onOrientationChange',\r\n        '_onMouseWheel',\r\n        '_onMouseOut',\r\n        '_onMouseEnter',\r\n        '_onContextMenu',\r\n        '_onDoubleClick',\r\n        '_onDragStart',\r\n        '_onDragEnd',\r\n        '_onDragProgress',\r\n        '_onDragOver',\r\n        '_onDragEnter',\r\n        '_onDragLeave',\r\n        '_onDrop',\r\n      ] as (keyof this)[]\r\n    ).forEach((eventHandler) => {\r\n      this[eventHandler] = (this[eventHandler] as Function).bind(this);\r\n    });\r\n    // register event handlers\r\n    this.addOrRemove(addListener, 'add');\r\n  }\r\n\r\n  /**\r\n   * return an event prefix pointer or mouse.\r\n   * @private\r\n   */\r\n  private _getEventPrefix() {\r\n    return this.enablePointerEvents ? 'pointer' : 'mouse';\r\n  }\r\n\r\n  addOrRemove(functor: any, eventjsFunctor: 'add' | 'remove') {\r\n    const canvasElement = this.upperCanvasEl,\r\n      eventTypePrefix = this._getEventPrefix();\r\n    functor(getWindowFromElement(canvasElement), 'resize', this._onResize);\r\n    functor(canvasElement, eventTypePrefix + 'down', this._onMouseDown);\r\n    functor(\r\n      canvasElement,\r\n      `${eventTypePrefix}move`,\r\n      this._onMouseMove,\r\n      addEventOptions\r\n    );\r\n    functor(canvasElement, `${eventTypePrefix}out`, this._onMouseOut);\r\n    functor(canvasElement, `${eventTypePrefix}enter`, this._onMouseEnter);\r\n    functor(canvasElement, 'wheel', this._onMouseWheel);\r\n    functor(canvasElement, 'contextmenu', this._onContextMenu);\r\n    functor(canvasElement, 'dblclick', this._onDoubleClick);\r\n    functor(canvasElement, 'dragstart', this._onDragStart);\r\n    functor(canvasElement, 'dragend', this._onDragEnd);\r\n    functor(canvasElement, 'dragover', this._onDragOver);\r\n    functor(canvasElement, 'dragenter', this._onDragEnter);\r\n    functor(canvasElement, 'dragleave', this._onDragLeave);\r\n    functor(canvasElement, 'drop', this._onDrop);\r\n    if (!this.enablePointerEvents) {\r\n      functor(canvasElement, 'touchstart', this._onTouchStart, addEventOptions);\r\n    }\r\n    // if (typeof eventjs !== 'undefined' && eventjsFunctor in eventjs) {\r\n    //   eventjs[eventjsFunctor](canvasElement, 'gesture', this._onGesture);\r\n    //   eventjs[eventjsFunctor](canvasElement, 'drag', this._onDrag);\r\n    //   eventjs[eventjsFunctor](\r\n    //     canvasElement,\r\n    //     'orientation',\r\n    //     this._onOrientationChange\r\n    //   );\r\n    //   eventjs[eventjsFunctor](canvasElement, 'shake', this._onShake);\r\n    //   eventjs[eventjsFunctor](canvasElement, 'longpress', this._onLongPress);\r\n    // }\r\n  }\r\n\r\n  /**\r\n   * Removes all event listeners\r\n   */\r\n  removeListeners() {\r\n    this.addOrRemove(removeListener, 'remove');\r\n    // if you dispose on a mouseDown, before mouse up, you need to clean document to...\r\n    const eventTypePrefix = this._getEventPrefix();\r\n    const doc = getDocumentFromElement(this.upperCanvasEl);\r\n    removeListener(\r\n      doc,\r\n      `${eventTypePrefix}up`,\r\n      this._onMouseUp as EventListener\r\n    );\r\n    removeListener(\r\n      doc,\r\n      'touchend',\r\n      this._onTouchEnd as EventListener,\r\n      addEventOptions\r\n    );\r\n    removeListener(\r\n      doc,\r\n      `${eventTypePrefix}move`,\r\n      this._onMouseMove as EventListener,\r\n      addEventOptions\r\n    );\r\n    removeListener(\r\n      doc,\r\n      'touchmove',\r\n      this._onMouseMove as EventListener,\r\n      addEventOptions\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {Event} [e] Event object fired on wheel event\r\n   */\r\n  private _onMouseWheel(e: MouseEvent) {\r\n    this.__onMouseWheel(e);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {Event} e Event object fired on mousedown\r\n   */\r\n  private _onMouseOut(e: TPointerEvent) {\r\n    const target = this._hoveredTarget;\r\n    const shared = {\r\n      e,\r\n      ...getEventPoints(this, e),\r\n    };\r\n    this.fire('mouse:out', { ...shared, target });\r\n    this._hoveredTarget = undefined;\r\n    target && target.fire('mouseout', { ...shared });\r\n    this._hoveredTargets.forEach((nestedTarget) => {\r\n      this.fire('mouse:out', { ...shared, target: nestedTarget });\r\n      nestedTarget && nestedTarget.fire('mouseout', { ...shared });\r\n    });\r\n    this._hoveredTargets = [];\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {Event} e Event object fired on mouseenter\r\n   */\r\n  private _onMouseEnter(e: TPointerEvent) {\r\n    // This find target and consequent 'mouse:over' is used to\r\n    // clear old instances on hovered target.\r\n    // calling findTarget has the side effect of killing target.__corner.\r\n    // as a short term fix we are not firing this if we are currently transforming.\r\n    // as a long term fix we need to separate the action of finding a target with the\r\n    // side effects we added to it.\r\n    if (!this._currentTransform && !this.findTarget(e)) {\r\n      this.fire('mouse:over', {\r\n        e,\r\n        ...getEventPoints(this, e),\r\n      });\r\n      this._hoveredTarget = undefined;\r\n      this._hoveredTargets = [];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * supports native like text dragging\r\n   * @private\r\n   * @param {DragEvent} e\r\n   */\r\n  private _onDragStart(e: DragEvent) {\r\n    this._isClick = false;\r\n    const activeObject = this.getActiveObject();\r\n    if (activeObject && activeObject.onDragStart(e)) {\r\n      this._dragSource = activeObject;\r\n      const options = { e, target: activeObject };\r\n      this.fire('dragstart', options);\r\n      activeObject.fire('dragstart', options);\r\n      addListener(\r\n        this.upperCanvasEl,\r\n        'drag',\r\n        this._onDragProgress as EventListener\r\n      );\r\n      return;\r\n    }\r\n    stopEvent(e);\r\n  }\r\n\r\n  /**\r\n   * First we clear top context where the effects are being rendered.\r\n   * Then we render the effects.\r\n   * Doing so will render the correct effect for all cases including an overlap between `source` and `target`.\r\n   * @private\r\n   */\r\n  private _renderDragEffects(\r\n    e: DragEvent,\r\n    source?: FabricObject,\r\n    target?: FabricObject\r\n  ) {\r\n    let dirty = false;\r\n    // clear top context\r\n    const dropTarget = this._dropTarget;\r\n    if (dropTarget && dropTarget !== source && dropTarget !== target) {\r\n      dropTarget.clearContextTop();\r\n      dirty = true;\r\n    }\r\n    source?.clearContextTop();\r\n    target !== source && target?.clearContextTop();\r\n    // render effects\r\n    const ctx = this.contextTop;\r\n    ctx.save();\r\n    ctx.transform(...this.viewportTransform);\r\n    if (source) {\r\n      ctx.save();\r\n      source.transform(ctx);\r\n      source.renderDragSourceEffect(e);\r\n      ctx.restore();\r\n      dirty = true;\r\n    }\r\n    if (target) {\r\n      ctx.save();\r\n      target.transform(ctx);\r\n      target.renderDropTargetEffect(e);\r\n      ctx.restore();\r\n      dirty = true;\r\n    }\r\n    ctx.restore();\r\n    dirty && (this.contextTopDirty = true);\r\n  }\r\n\r\n  /**\r\n   * supports native like text dragging\r\n   * https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API/Drag_operations#finishing_a_drag\r\n   * @private\r\n   * @param {DragEvent} e\r\n   */\r\n  private _onDragEnd(e: DragEvent) {\r\n    const didDrop = !!e.dataTransfer && e.dataTransfer.dropEffect !== NONE,\r\n      dropTarget = didDrop ? this._activeObject : undefined,\r\n      options = {\r\n        e,\r\n        target: this._dragSource as FabricObject,\r\n        subTargets: this.targets,\r\n        dragSource: this._dragSource as FabricObject,\r\n        didDrop,\r\n        dropTarget: dropTarget as FabricObject,\r\n      };\r\n    removeListener(\r\n      this.upperCanvasEl,\r\n      'drag',\r\n      this._onDragProgress as EventListener\r\n    );\r\n    this.fire('dragend', options);\r\n    this._dragSource && this._dragSource.fire('dragend', options);\r\n    delete this._dragSource;\r\n    // we need to call mouse up synthetically because the browser won't\r\n    this._onMouseUp(e);\r\n  }\r\n\r\n  /**\r\n   * fire `drag` event on canvas and drag source\r\n   * @private\r\n   * @param {DragEvent} e\r\n   */\r\n  private _onDragProgress(e: DragEvent) {\r\n    const options = {\r\n      e,\r\n      target: this._dragSource as FabricObject | undefined,\r\n      dragSource: this._dragSource as FabricObject | undefined,\r\n      dropTarget: this._draggedoverTarget as FabricObject,\r\n    };\r\n    this.fire('drag', options);\r\n    this._dragSource && this._dragSource.fire('drag', options);\r\n  }\r\n\r\n  /**\r\n   * As opposed to {@link findTarget} we want the top most object to be returned w/o the active object cutting in line.\r\n   * Override at will\r\n   */\r\n  protected findDragTargets(e: DragEvent) {\r\n    this.targets = [];\r\n    const target = this._searchPossibleTargets(\r\n      this._objects,\r\n      this.getViewportPoint(e)\r\n    );\r\n    return {\r\n      target,\r\n      targets: [...this.targets],\r\n    };\r\n  }\r\n\r\n  /**\r\n   * prevent default to allow drop event to be fired\r\n   * https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API/Drag_operations#specifying_drop_targets\r\n   * @private\r\n   * @param {DragEvent} [e] Event object fired on Event.js shake\r\n   */\r\n  private _onDragOver(e: DragEvent) {\r\n    const eventType = 'dragover';\r\n    const { target, targets } = this.findDragTargets(e);\r\n    const dragSource = this._dragSource as FabricObject;\r\n    const options = {\r\n      e,\r\n      target,\r\n      subTargets: targets,\r\n      dragSource,\r\n      canDrop: false,\r\n      dropTarget: undefined,\r\n    };\r\n    let dropTarget;\r\n    //  fire on canvas\r\n    this.fire(eventType, options);\r\n    //  make sure we fire dragenter events before dragover\r\n    //  if dragleave is needed, object will not fire dragover so we don't need to trouble ourselves with it\r\n    this._fireEnterLeaveEvents(target, options);\r\n    if (target) {\r\n      if (target.canDrop(e)) {\r\n        dropTarget = target;\r\n      }\r\n      target.fire(eventType, options);\r\n    }\r\n    //  propagate the event to subtargets\r\n    for (let i = 0; i < targets.length; i++) {\r\n      const subTarget = targets[i];\r\n      // accept event only if previous targets didn't (the accepting target calls `preventDefault` to inform that the event is taken)\r\n      // TODO: verify if those should loop in inverse order then?\r\n      // what is the order of subtargets?\r\n      if (subTarget.canDrop(e)) {\r\n        dropTarget = subTarget;\r\n      }\r\n      subTarget.fire(eventType, options);\r\n    }\r\n    //  render drag effects now that relations between source and target is clear\r\n    this._renderDragEffects(e, dragSource, dropTarget);\r\n    this._dropTarget = dropTarget;\r\n  }\r\n\r\n  /**\r\n   * fire `dragleave` on `dragover` targets\r\n   * @private\r\n   * @param {Event} [e] Event object fired on Event.js shake\r\n   */\r\n  private _onDragEnter(e: DragEvent) {\r\n    const { target, targets } = this.findDragTargets(e);\r\n    const options = {\r\n      e,\r\n      target,\r\n      subTargets: targets,\r\n      dragSource: this._dragSource,\r\n    };\r\n    this.fire('dragenter', options);\r\n    //  fire dragenter on targets\r\n    this._fireEnterLeaveEvents(target, options);\r\n  }\r\n\r\n  /**\r\n   * fire `dragleave` on `dragover` targets\r\n   * @private\r\n   * @param {Event} [e] Event object fired on Event.js shake\r\n   */\r\n  private _onDragLeave(e: DragEvent) {\r\n    const options = {\r\n      e,\r\n      target: this._draggedoverTarget,\r\n      subTargets: this.targets,\r\n      dragSource: this._dragSource,\r\n    };\r\n    this.fire('dragleave', options);\r\n\r\n    //  fire dragleave on targets\r\n    this._fireEnterLeaveEvents(undefined, options);\r\n    this._renderDragEffects(e, this._dragSource);\r\n    this._dropTarget = undefined;\r\n    //  clear targets\r\n    this.targets = [];\r\n    this._hoveredTargets = [];\r\n  }\r\n\r\n  /**\r\n   * `drop:before` is a an event that allows you to schedule logic\r\n   * before the `drop` event. Prefer `drop` event always, but if you need\r\n   * to run some drop-disabling logic on an event, since there is no way\r\n   * to handle event handlers ordering, use `drop:before`\r\n   * @private\r\n   * @param {Event} e\r\n   */\r\n  private _onDrop(e: DragEvent) {\r\n    const { target, targets } = this.findDragTargets(e);\r\n    const options = this._basicEventHandler('drop:before', {\r\n      e,\r\n      target,\r\n      subTargets: targets,\r\n      dragSource: this._dragSource,\r\n      ...getEventPoints(this, e),\r\n    });\r\n    //  will be set by the drop target\r\n    options.didDrop = false;\r\n    //  will be set by the drop target, used in case options.target refuses the drop\r\n    options.dropTarget = undefined;\r\n    //  fire `drop`\r\n    this._basicEventHandler('drop', options);\r\n    //  inform canvas of the drop\r\n    //  we do this because canvas was unaware of what happened at the time the `drop` event was fired on it\r\n    //  use for side effects\r\n    this.fire('drop:after', options);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {Event} e Event object fired on mousedown\r\n   */\r\n  private _onContextMenu(e: TPointerEvent): false {\r\n    const target = this.findTarget(e),\r\n      subTargets = this.targets || [];\r\n    const options = this._basicEventHandler('contextmenu:before', {\r\n      e,\r\n      target,\r\n      subTargets,\r\n    });\r\n    // TODO: this line is silly because the dev can subscribe to the event and prevent it themselves\r\n    this.stopContextMenu && stopEvent(e);\r\n    this._basicEventHandler('contextmenu', options);\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {Event} e Event object fired on mousedown\r\n   */\r\n  private _onDoubleClick(e: TPointerEvent) {\r\n    this._cacheTransformEventData(e);\r\n    this._handleEvent(e, 'dblclick');\r\n    this._resetTransformEventData();\r\n  }\r\n\r\n  /**\r\n   * Return a the id of an event.\r\n   * returns either the pointerId or the identifier or 0 for the mouse event\r\n   * @private\r\n   * @param {Event} evt Event object\r\n   */\r\n  getPointerId(evt: TouchEvent | PointerEvent): number {\r\n    const changedTouches = (evt as TouchEvent).changedTouches;\r\n\r\n    if (changedTouches) {\r\n      return changedTouches[0] && changedTouches[0].identifier;\r\n    }\r\n\r\n    if (this.enablePointerEvents) {\r\n      return (evt as PointerEvent).pointerId;\r\n    }\r\n\r\n    return -1;\r\n  }\r\n\r\n  /**\r\n   * Determines if an event has the id of the event that is considered main\r\n   * @private\r\n   * @param {evt} event Event object\r\n   */\r\n  _isMainEvent(evt: TPointerEvent): boolean {\r\n    if ((evt as PointerEvent).isPrimary === true) {\r\n      return true;\r\n    }\r\n    if ((evt as PointerEvent).isPrimary === false) {\r\n      return false;\r\n    }\r\n    if (evt.type === 'touchend' && (evt as TouchEvent).touches.length === 0) {\r\n      return true;\r\n    }\r\n    if ((evt as TouchEvent).changedTouches) {\r\n      return (\r\n        (evt as TouchEvent).changedTouches[0].identifier === this.mainTouchId\r\n      );\r\n    }\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {Event} e Event object fired on mousedown\r\n   */\r\n  _onTouchStart(e: TouchEvent) {\r\n    e.preventDefault();\r\n    if (this.mainTouchId === undefined) {\r\n      this.mainTouchId = this.getPointerId(e);\r\n    }\r\n    this.__onMouseDown(e);\r\n    this._resetTransformEventData();\r\n    const canvasElement = this.upperCanvasEl,\r\n      eventTypePrefix = this._getEventPrefix();\r\n    const doc = getDocumentFromElement(canvasElement);\r\n    addListener(\r\n      doc,\r\n      'touchend',\r\n      this._onTouchEnd as EventListener,\r\n      addEventOptions\r\n    );\r\n    addListener(\r\n      doc,\r\n      'touchmove',\r\n      this._onMouseMove as EventListener,\r\n      addEventOptions\r\n    );\r\n    // Unbind mousedown to prevent double triggers from touch devices\r\n    removeListener(\r\n      canvasElement,\r\n      `${eventTypePrefix}down`,\r\n      this._onMouseDown as EventListener\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {Event} e Event object fired on mousedown\r\n   */\r\n  _onMouseDown(e: TPointerEvent) {\r\n    this.__onMouseDown(e);\r\n    this._resetTransformEventData();\r\n    const canvasElement = this.upperCanvasEl,\r\n      eventTypePrefix = this._getEventPrefix();\r\n    removeListener(\r\n      canvasElement,\r\n      `${eventTypePrefix}move`,\r\n      this._onMouseMove as EventListener,\r\n      addEventOptions\r\n    );\r\n    const doc = getDocumentFromElement(canvasElement);\r\n    addListener(doc, `${eventTypePrefix}up`, this._onMouseUp as EventListener);\r\n    addListener(\r\n      doc,\r\n      `${eventTypePrefix}move`,\r\n      this._onMouseMove as EventListener,\r\n      addEventOptions\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {Event} e Event object fired on mousedown\r\n   */\r\n  _onTouchEnd(e: TouchEvent) {\r\n    if (e.touches.length > 0) {\r\n      // if there are still touches stop here\r\n      return;\r\n    }\r\n    this.__onMouseUp(e);\r\n    this._resetTransformEventData();\r\n    delete this.mainTouchId;\r\n    const eventTypePrefix = this._getEventPrefix();\r\n    const doc = getDocumentFromElement(this.upperCanvasEl);\r\n    removeListener(\r\n      doc,\r\n      'touchend',\r\n      this._onTouchEnd as EventListener,\r\n      addEventOptions\r\n    );\r\n    removeListener(\r\n      doc,\r\n      'touchmove',\r\n      this._onMouseMove as EventListener,\r\n      addEventOptions\r\n    );\r\n    if (this._willAddMouseDown) {\r\n      clearTimeout(this._willAddMouseDown);\r\n    }\r\n    this._willAddMouseDown = setTimeout(() => {\r\n      // Wait 400ms before rebinding mousedown to prevent double triggers\r\n      // from touch devices\r\n      addListener(\r\n        this.upperCanvasEl,\r\n        `${eventTypePrefix}down`,\r\n        this._onMouseDown as EventListener\r\n      );\r\n      this._willAddMouseDown = 0;\r\n    }, 400) as unknown as number;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {Event} e Event object fired on mouseup\r\n   */\r\n  _onMouseUp(e: TPointerEvent) {\r\n    this.__onMouseUp(e);\r\n    this._resetTransformEventData();\r\n    const canvasElement = this.upperCanvasEl,\r\n      eventTypePrefix = this._getEventPrefix();\r\n    if (this._isMainEvent(e)) {\r\n      const doc = getDocumentFromElement(this.upperCanvasEl);\r\n      removeListener(\r\n        doc,\r\n        `${eventTypePrefix}up`,\r\n        this._onMouseUp as EventListener\r\n      );\r\n      removeListener(\r\n        doc,\r\n        `${eventTypePrefix}move`,\r\n        this._onMouseMove as EventListener,\r\n        addEventOptions\r\n      );\r\n      addListener(\r\n        canvasElement,\r\n        `${eventTypePrefix}move`,\r\n        this._onMouseMove as EventListener,\r\n        addEventOptions\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {Event} e Event object fired on mousemove\r\n   */\r\n  _onMouseMove(e: TPointerEvent) {\r\n    const activeObject = this.getActiveObject();\r\n    !this.allowTouchScrolling &&\r\n      (!activeObject ||\r\n        // a drag event sequence is started by the active object flagging itself on mousedown / mousedown:before\r\n        // we must not prevent the event's default behavior in order for the window to start dragging\r\n        !activeObject.shouldStartDragging(e)) &&\r\n      e.preventDefault &&\r\n      e.preventDefault();\r\n    this.__onMouseMove(e);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _onResize() {\r\n    this.calcOffset();\r\n    this._resetTransformEventData();\r\n  }\r\n\r\n  /**\r\n   * Decides whether the canvas should be redrawn in mouseup and mousedown events.\r\n   * @private\r\n   * @param {Object} target\r\n   */\r\n  _shouldRender(target: FabricObject | undefined) {\r\n    const activeObject = this.getActiveObject();\r\n    // if just one of them is available or if they are both but are different objects\r\n    // this covers: switch of target, from target to no target, selection of target\r\n    // multiSelection with key and mouse\r\n    return (\r\n      !!activeObject !== !!target ||\r\n      (activeObject && target && activeObject !== target)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Method that defines the actions when mouse is released on canvas.\r\n   * The method resets the currentTransform parameters, store the image corner\r\n   * position in the image object and render the canvas on top.\r\n   * @private\r\n   * @param {Event} e Event object fired on mouseup\r\n   */\r\n  __onMouseUp(e: TPointerEvent) {\r\n    this._cacheTransformEventData(e);\r\n    this._handleEvent(e, 'up:before');\r\n\r\n    const transform = this._currentTransform;\r\n    const isClick = this._isClick;\r\n    const target = this._target;\r\n\r\n    // if right/middle click just fire events and return\r\n    // target undefined will make the _handleEvent search the target\r\n    const { button } = e as MouseEvent;\r\n    if (button) {\r\n      ((this.fireMiddleClick && button === 1) ||\r\n        (this.fireRightClick && button === 2)) &&\r\n        this._handleEvent(e, 'up');\r\n      this._resetTransformEventData();\r\n      return;\r\n    }\r\n\r\n    if (this.isDrawingMode && this._isCurrentlyDrawing) {\r\n      this._onMouseUpInDrawingMode(e);\r\n      return;\r\n    }\r\n\r\n    if (!this._isMainEvent(e)) {\r\n      return;\r\n    }\r\n    let shouldRender = false;\r\n    if (transform) {\r\n      this._finalizeCurrentTransform(e);\r\n      shouldRender = transform.actionPerformed;\r\n    }\r\n    if (!isClick) {\r\n      const targetWasActive = target === this._activeObject;\r\n      this.handleSelection(e);\r\n      if (!shouldRender) {\r\n        shouldRender =\r\n          this._shouldRender(target) ||\r\n          (!targetWasActive && target === this._activeObject);\r\n      }\r\n    }\r\n    let pointer, corner;\r\n    if (target) {\r\n      const found = target.findControl(\r\n        this.getViewportPoint(e),\r\n        isTouchEvent(e)\r\n      );\r\n      const { key, control } = found || {};\r\n      corner = key;\r\n      if (\r\n        target.selectable &&\r\n        target !== this._activeObject &&\r\n        target.activeOn === 'up'\r\n      ) {\r\n        this.setActiveObject(target, e);\r\n        shouldRender = true;\r\n      } else if (control) {\r\n        const mouseUpHandler = control.getMouseUpHandler(e, target, control);\r\n        if (mouseUpHandler) {\r\n          pointer = this.getScenePoint(e);\r\n          mouseUpHandler.call(control, e, transform!, pointer.x, pointer.y);\r\n        }\r\n      }\r\n      target.isMoving = false;\r\n    }\r\n    // if we are ending up a transform on a different control or a new object\r\n    // fire the original mouse up from the corner that started the transform\r\n    if (\r\n      transform &&\r\n      (transform.target !== target || transform.corner !== corner)\r\n    ) {\r\n      const originalControl =\r\n          transform.target && transform.target.controls[transform.corner],\r\n        originalMouseUpHandler =\r\n          originalControl &&\r\n          originalControl.getMouseUpHandler(\r\n            e,\r\n            transform.target,\r\n            originalControl\r\n          );\r\n      pointer = pointer || this.getScenePoint(e);\r\n      originalMouseUpHandler &&\r\n        originalMouseUpHandler.call(\r\n          originalControl,\r\n          e,\r\n          transform,\r\n          pointer.x,\r\n          pointer.y\r\n        );\r\n    }\r\n    this._setCursorFromEvent(e, target);\r\n    this._handleEvent(e, 'up');\r\n    this._groupSelector = null;\r\n    this._currentTransform = null;\r\n    // reset the target information about which corner is selected\r\n    target && (target.__corner = undefined);\r\n    if (shouldRender) {\r\n      this.requestRenderAll();\r\n    } else if (!isClick && !(this._activeObject as IText)?.isEditing) {\r\n      this.renderTop();\r\n    }\r\n  }\r\n\r\n  _basicEventHandler<T extends keyof (CanvasEvents | ObjectEvents)>(\r\n    eventType: T,\r\n    options: (CanvasEvents & ObjectEvents)[T]\r\n  ) {\r\n    const { target, subTargets = [] } = options as {\r\n      target?: FabricObject;\r\n      subTargets: FabricObject[];\r\n    };\r\n    this.fire(eventType, options);\r\n    target && target.fire(eventType, options);\r\n    for (let i = 0; i < subTargets.length; i++) {\r\n      subTargets[i] !== target && subTargets[i].fire(eventType, options);\r\n    }\r\n    return options;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * Handle event firing for target and subtargets\r\n   * @param {TPointerEvent} e event from mouse\r\n   * @param {TPointerEventNames} eventType\r\n   */\r\n  _handleEvent<T extends TPointerEventNames>(e: TPointerEvent, eventType: T) {\r\n    const target = this._target,\r\n      targets = this.targets || [],\r\n      options: CanvasEvents[`mouse:${T}`] = {\r\n        e,\r\n        target,\r\n        subTargets: targets,\r\n        ...getEventPoints(this, e),\r\n        transform: this._currentTransform,\r\n        ...(eventType === 'up:before' || eventType === 'up'\r\n          ? {\r\n              isClick: this._isClick,\r\n              currentTarget: this.findTarget(e),\r\n              // set by the preceding `findTarget` call\r\n              currentSubTargets: this.targets,\r\n            }\r\n          : {}),\r\n      } as CanvasEvents[`mouse:${T}`];\r\n    this.fire(`mouse:${eventType}`, options);\r\n    // this may be a little be more complicated of what we want to handle\r\n    target && target.fire(`mouse${eventType}`, options);\r\n    for (let i = 0; i < targets.length; i++) {\r\n      targets[i] !== target && targets[i].fire(`mouse${eventType}`, options);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {Event} e Event object fired on mousedown\r\n   */\r\n  _onMouseDownInDrawingMode(e: TPointerEvent) {\r\n    this._isCurrentlyDrawing = true;\r\n    if (this.getActiveObject()) {\r\n      this.discardActiveObject(e);\r\n      this.requestRenderAll();\r\n    }\r\n    // TODO: this is a scene point so it should be renamed\r\n    const pointer = this.getScenePoint(e);\r\n    this.freeDrawingBrush &&\r\n      this.freeDrawingBrush.onMouseDown(pointer, { e, pointer });\r\n    this._handleEvent(e, 'down');\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {Event} e Event object fired on mousemove\r\n   */\r\n  _onMouseMoveInDrawingMode(e: TPointerEvent) {\r\n    if (this._isCurrentlyDrawing) {\r\n      const pointer = this.getScenePoint(e);\r\n      this.freeDrawingBrush &&\r\n        this.freeDrawingBrush.onMouseMove(pointer, {\r\n          e,\r\n          // this is an absolute pointer, the naming is wrong\r\n          pointer,\r\n        });\r\n    }\r\n    this.setCursor(this.freeDrawingCursor);\r\n    this._handleEvent(e, 'move');\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {Event} e Event object fired on mouseup\r\n   */\r\n  _onMouseUpInDrawingMode(e: TPointerEvent) {\r\n    const pointer = this.getScenePoint(e);\r\n    if (this.freeDrawingBrush) {\r\n      this._isCurrentlyDrawing = !!this.freeDrawingBrush.onMouseUp({\r\n        e: e,\r\n        // this is an absolute pointer, the naming is wrong\r\n        pointer,\r\n      });\r\n    } else {\r\n      this._isCurrentlyDrawing = false;\r\n    }\r\n    this._handleEvent(e, 'up');\r\n  }\r\n\r\n  /**\r\n   * Method that defines the actions when mouse is clicked on canvas.\r\n   * The method inits the currentTransform parameters and renders all the\r\n   * canvas so the current image can be placed on the top canvas and the rest\r\n   * in on the container one.\r\n   * @private\r\n   * @param {Event} e Event object fired on mousedown\r\n   */\r\n  __onMouseDown(e: TPointerEvent) {\r\n    this._isClick = true;\r\n    this._cacheTransformEventData(e);\r\n    this._handleEvent(e, 'down:before');\r\n\r\n    let target: FabricObject | undefined = this._target;\r\n\r\n    // if right/middle click just fire events\r\n    const { button } = e as MouseEvent;\r\n    if (button) {\r\n      ((this.fireMiddleClick && button === 1) ||\r\n        (this.fireRightClick && button === 2)) &&\r\n        this._handleEvent(e, 'down');\r\n      this._resetTransformEventData();\r\n      return;\r\n    }\r\n\r\n    if (this.isDrawingMode) {\r\n      this._onMouseDownInDrawingMode(e);\r\n      return;\r\n    }\r\n\r\n    if (!this._isMainEvent(e)) {\r\n      return;\r\n    }\r\n\r\n    // ignore if some object is being transformed at this moment\r\n    if (this._currentTransform) {\r\n      return;\r\n    }\r\n\r\n    let shouldRender = this._shouldRender(target);\r\n    let grouped = false;\r\n    if (this.handleMultiSelection(e, target)) {\r\n      // active object might have changed while grouping\r\n      target = this._activeObject;\r\n      grouped = true;\r\n      shouldRender = true;\r\n    } else if (this._shouldClearSelection(e, target)) {\r\n      this.discardActiveObject(e);\r\n    }\r\n    // we start a group selector rectangle if\r\n    // selection is enabled\r\n    // and there is no target, or the following 3 conditions are satisfied:\r\n    // target is not selectable ( otherwise we selected it )\r\n    // target is not editing\r\n    // target is not already selected ( otherwise we drag )\r\n    if (\r\n      this.selection &&\r\n      (!target ||\r\n        (!target.selectable &&\r\n          !(target as IText).isEditing &&\r\n          target !== this._activeObject))\r\n    ) {\r\n      const p = this.getScenePoint(e);\r\n      this._groupSelector = {\r\n        x: p.x,\r\n        y: p.y,\r\n        deltaY: 0,\r\n        deltaX: 0,\r\n      };\r\n    }\r\n\r\n    if (target) {\r\n      const alreadySelected = target === this._activeObject;\r\n      if (target.selectable && target.activeOn === 'down') {\r\n        this.setActiveObject(target, e);\r\n      }\r\n      const handle = target.findControl(\r\n        this.getViewportPoint(e),\r\n        isTouchEvent(e)\r\n      );\r\n      if (target === this._activeObject && (handle || !grouped)) {\r\n        this._setupCurrentTransform(e, target, alreadySelected);\r\n        const control = handle ? handle.control : undefined,\r\n          pointer = this.getScenePoint(e),\r\n          mouseDownHandler =\r\n            control && control.getMouseDownHandler(e, target, control);\r\n        mouseDownHandler &&\r\n          mouseDownHandler.call(\r\n            control,\r\n            e,\r\n            this._currentTransform!,\r\n            pointer.x,\r\n            pointer.y\r\n          );\r\n      }\r\n    }\r\n    //  we clear `_objectsToRender` in case of a change in order to repopulate it at rendering\r\n    //  run before firing the `down` event to give the dev a chance to populate it themselves\r\n    shouldRender && (this._objectsToRender = undefined);\r\n    this._handleEvent(e, 'down');\r\n    // we must renderAll so that we update the visuals\r\n    shouldRender && this.requestRenderAll();\r\n  }\r\n\r\n  /**\r\n   * reset cache form common information needed during event processing\r\n   * @private\r\n   */\r\n  _resetTransformEventData() {\r\n    this._target = undefined;\r\n    this._pointer = undefined;\r\n    this._absolutePointer = undefined;\r\n  }\r\n\r\n  /**\r\n   * Cache common information needed during event processing\r\n   * @private\r\n   * @param {Event} e Event object fired on event\r\n   */\r\n  _cacheTransformEventData(e: TPointerEvent) {\r\n    // reset in order to avoid stale caching\r\n    this._resetTransformEventData();\r\n    this._pointer = this.getViewportPoint(e);\r\n    this._absolutePointer = sendPointToPlane(\r\n      this._pointer,\r\n      undefined,\r\n      this.viewportTransform\r\n    );\r\n    this._target = this._currentTransform\r\n      ? this._currentTransform.target\r\n      : this.findTarget(e);\r\n  }\r\n\r\n  /**\r\n   * Method that defines the actions when mouse is hovering the canvas.\r\n   * The currentTransform parameter will define whether the user is rotating/scaling/translating\r\n   * an image or neither of them (only hovering). A group selection is also possible and would cancel\r\n   * all any other type of action.\r\n   * In case of an image transformation only the top canvas will be rendered.\r\n   * @private\r\n   * @param {Event} e Event object fired on mousemove\r\n   */\r\n  __onMouseMove(e: TPointerEvent) {\r\n    this._isClick = false;\r\n    this._cacheTransformEventData(e);\r\n    this._handleEvent(e, 'move:before');\r\n\r\n    if (this.isDrawingMode) {\r\n      this._onMouseMoveInDrawingMode(e);\r\n      return;\r\n    }\r\n\r\n    if (!this._isMainEvent(e)) {\r\n      return;\r\n    }\r\n\r\n    const groupSelector = this._groupSelector;\r\n\r\n    // We initially clicked in an empty area, so we draw a box for multiple selection\r\n    if (groupSelector) {\r\n      const pointer = this.getScenePoint(e);\r\n\r\n      groupSelector.deltaX = pointer.x - groupSelector.x;\r\n      groupSelector.deltaY = pointer.y - groupSelector.y;\r\n\r\n      this.renderTop();\r\n    } else if (!this._currentTransform) {\r\n      const target = this.findTarget(e);\r\n      this._setCursorFromEvent(e, target);\r\n      this._fireOverOutEvents(e, target);\r\n    } else {\r\n      this._transformObject(e);\r\n    }\r\n    this.textEditingManager.onMouseMove(e);\r\n    this._handleEvent(e, 'move');\r\n    this._resetTransformEventData();\r\n  }\r\n\r\n  /**\r\n   * Manage the mouseout, mouseover events for the fabric object on the canvas\r\n   * @param {Fabric.Object} target the target where the target from the mousemove event\r\n   * @param {Event} e Event object fired on mousemove\r\n   * @private\r\n   */\r\n  _fireOverOutEvents(e: TPointerEvent, target?: FabricObject) {\r\n    const _hoveredTarget = this._hoveredTarget,\r\n      _hoveredTargets = this._hoveredTargets,\r\n      targets = this.targets,\r\n      length = Math.max(_hoveredTargets.length, targets.length);\r\n\r\n    this.fireSyntheticInOutEvents('mouse', {\r\n      e,\r\n      target,\r\n      oldTarget: _hoveredTarget,\r\n      fireCanvas: true,\r\n    });\r\n    for (let i = 0; i < length; i++) {\r\n      this.fireSyntheticInOutEvents('mouse', {\r\n        e,\r\n        target: targets[i],\r\n        oldTarget: _hoveredTargets[i],\r\n      });\r\n    }\r\n    this._hoveredTarget = target;\r\n    this._hoveredTargets = this.targets.concat();\r\n  }\r\n\r\n  /**\r\n   * Manage the dragEnter, dragLeave events for the fabric objects on the canvas\r\n   * @param {Fabric.Object} target the target where the target from the onDrag event\r\n   * @param {Object} data Event object fired on dragover\r\n   * @private\r\n   */\r\n  _fireEnterLeaveEvents(target: FabricObject | undefined, data: DragEventData) {\r\n    const draggedoverTarget = this._draggedoverTarget,\r\n      _hoveredTargets = this._hoveredTargets,\r\n      targets = this.targets,\r\n      length = Math.max(_hoveredTargets.length, targets.length);\r\n\r\n    this.fireSyntheticInOutEvents('drag', {\r\n      ...data,\r\n      target,\r\n      oldTarget: draggedoverTarget,\r\n      fireCanvas: true,\r\n    });\r\n    for (let i = 0; i < length; i++) {\r\n      this.fireSyntheticInOutEvents('drag', {\r\n        ...data,\r\n        target: targets[i],\r\n        oldTarget: _hoveredTargets[i],\r\n      });\r\n    }\r\n    this._draggedoverTarget = target;\r\n  }\r\n\r\n  /**\r\n   * Manage the synthetic in/out events for the fabric objects on the canvas\r\n   * @param {Fabric.Object} target the target where the target from the supported events\r\n   * @param {Object} data Event object fired\r\n   * @param {Object} config configuration for the function to work\r\n   * @param {String} config.targetName property on the canvas where the old target is stored\r\n   * @param {String} [config.canvasEvtOut] name of the event to fire at canvas level for out\r\n   * @param {String} config.evtOut name of the event to fire for out\r\n   * @param {String} [config.canvasEvtIn] name of the event to fire at canvas level for in\r\n   * @param {String} config.evtIn name of the event to fire for in\r\n   * @private\r\n   */\r\n  fireSyntheticInOutEvents<T extends keyof TSyntheticEventContext>(\r\n    type: T,\r\n    {\r\n      target,\r\n      oldTarget,\r\n      fireCanvas,\r\n      e,\r\n      ...data\r\n    }: TSyntheticEventContext[T] & {\r\n      target?: FabricObject;\r\n      oldTarget?: FabricObject;\r\n      fireCanvas?: boolean;\r\n    }\r\n  ) {\r\n    const { targetIn, targetOut, canvasIn, canvasOut } =\r\n      syntheticEventConfig[type];\r\n    const targetChanged = oldTarget !== target;\r\n\r\n    if (oldTarget && targetChanged) {\r\n      const outOpt: CanvasEvents[typeof canvasOut] = {\r\n        ...data,\r\n        e,\r\n        target: oldTarget,\r\n        nextTarget: target,\r\n        ...getEventPoints(this, e),\r\n      };\r\n      fireCanvas && this.fire(canvasOut, outOpt);\r\n      oldTarget.fire(targetOut, outOpt);\r\n    }\r\n    if (target && targetChanged) {\r\n      const inOpt: CanvasEvents[typeof canvasIn] = {\r\n        ...data,\r\n        e,\r\n        target,\r\n        previousTarget: oldTarget,\r\n        ...getEventPoints(this, e),\r\n      };\r\n      fireCanvas && this.fire(canvasIn, inOpt);\r\n      target.fire(targetIn, inOpt);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Method that defines actions when an Event Mouse Wheel\r\n   * @param {Event} e Event object fired on mouseup\r\n   */\r\n  __onMouseWheel(e: TPointerEvent) {\r\n    this._cacheTransformEventData(e);\r\n    this._handleEvent(e, 'wheel');\r\n    this._resetTransformEventData();\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {Event} e Event fired on mousemove\r\n   */\r\n  _transformObject(e: TPointerEvent) {\r\n    const scenePoint = this.getScenePoint(e),\r\n      transform = this._currentTransform!,\r\n      target = transform.target,\r\n      //  transform pointer to target's containing coordinate plane\r\n      //  both pointer and object should agree on every point\r\n      localPointer = target.group\r\n        ? sendPointToPlane(\r\n            scenePoint,\r\n            undefined,\r\n            target.group.calcTransformMatrix()\r\n          )\r\n        : scenePoint;\r\n    transform.shiftKey = e.shiftKey;\r\n    transform.altKey = !!this.centeredKey && e[this.centeredKey];\r\n\r\n    this._performTransformAction(e, transform, localPointer);\r\n    transform.actionPerformed && this.requestRenderAll();\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _performTransformAction(\r\n    e: TPointerEvent,\r\n    transform: Transform,\r\n    pointer: Point\r\n  ) {\r\n    const { action, actionHandler, target } = transform;\r\n\r\n    const actionPerformed =\r\n      !!actionHandler && actionHandler(e, transform, pointer.x, pointer.y);\r\n    actionPerformed && target.setCoords();\r\n\r\n    // this object could be created from the function in the control handlers\r\n    if (action === 'drag' && actionPerformed) {\r\n      transform.target.isMoving = true;\r\n      this.setCursor(transform.target.moveCursor || this.moveCursor);\r\n    }\r\n    transform.actionPerformed = transform.actionPerformed || actionPerformed;\r\n  }\r\n\r\n  /**\r\n   * Sets the cursor depending on where the canvas is being hovered.\r\n   * Note: very buggy in Opera\r\n   * @param {Event} e Event object\r\n   * @param {Object} target Object that the mouse is hovering, if so.\r\n   */\r\n  _setCursorFromEvent(e: TPointerEvent, target?: FabricObject) {\r\n    if (!target) {\r\n      this.setCursor(this.defaultCursor);\r\n      return;\r\n    }\r\n    let hoverCursor = target.hoverCursor || this.hoverCursor;\r\n    const activeSelection = isActiveSelection(this._activeObject)\r\n        ? this._activeObject\r\n        : null,\r\n      // only show proper corner when group selection is not active\r\n      corner =\r\n        (!activeSelection || target.group !== activeSelection) &&\r\n        // here we call findTargetCorner always with undefined for the touch parameter.\r\n        // we assume that if you are using a cursor you do not need to interact with\r\n        // the bigger touch area.\r\n        target.findControl(this.getViewportPoint(e));\r\n\r\n    if (!corner) {\r\n      if ((target as Group).subTargetCheck) {\r\n        // hoverCursor should come from top-most subTarget,\r\n        // so we walk the array backwards\r\n        this.targets\r\n          .concat()\r\n          .reverse()\r\n          .map((_target) => {\r\n            hoverCursor = _target.hoverCursor || hoverCursor;\r\n          });\r\n      }\r\n      this.setCursor(hoverCursor);\r\n    } else {\r\n      const control = corner.control;\r\n      this.setCursor(control.cursorStyleHandler(e, control, target));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * ## Handles multiple selection\r\n   * - toggles `target` selection (selects/deselects `target` if it isn't/is selected respectively)\r\n   * - sets the active object in case it is not set or in case there is a single active object left under active selection.\r\n   * ---\r\n   * - If the active object is the active selection we add/remove `target` from it\r\n   * - If not, add the active object and `target` to the active selection and make it the active object.\r\n   * @private\r\n   * @param {TPointerEvent} e Event object\r\n   * @param {FabricObject} target target of event to select/deselect\r\n   * @returns true if grouping occurred\r\n   */\r\n  protected handleMultiSelection(e: TPointerEvent, target?: FabricObject) {\r\n    const activeObject = this._activeObject;\r\n    const isAS = isActiveSelection(activeObject);\r\n    if (\r\n      // check if an active object exists on canvas and if the user is pressing the `selectionKey` while canvas supports multi selection.\r\n      !!activeObject &&\r\n      this._isSelectionKeyPressed(e) &&\r\n      this.selection &&\r\n      // on top of that the user also has to hit a target that is selectable.\r\n      !!target &&\r\n      target.selectable &&\r\n      // group target and active object only if they are different objects\r\n      // else we try to find a subtarget of `ActiveSelection`\r\n      (activeObject !== target || isAS) &&\r\n      //  make sure `activeObject` and `target` aren't ancestors of each other in case `activeObject` is not `ActiveSelection`\r\n      // if it is then we want to remove `target` from it\r\n      (isAS ||\r\n        (!target.isDescendantOf(activeObject) &&\r\n          !activeObject.isDescendantOf(target))) &&\r\n      //  target accepts selection\r\n      !target.onSelect({ e }) &&\r\n      // make sure we are not on top of a control\r\n      !activeObject.getActiveControl()\r\n    ) {\r\n      if (isAS) {\r\n        const prevActiveObjects = activeObject.getObjects();\r\n        if (target === activeObject) {\r\n          const pointer = this.getViewportPoint(e);\r\n          target =\r\n            // first search active objects for a target to remove\r\n            this.searchPossibleTargets(prevActiveObjects, pointer) ||\r\n            //  if not found, search under active selection for a target to add\r\n            // `prevActiveObjects` will be searched but we already know they will not be found\r\n            this.searchPossibleTargets(this._objects, pointer);\r\n          // if nothing is found bail out\r\n          if (!target || !target.selectable) {\r\n            return false;\r\n          }\r\n        }\r\n        if (target.group === activeObject) {\r\n          // `target` is part of active selection => remove it\r\n          activeObject.remove(target);\r\n          this._hoveredTarget = target;\r\n          this._hoveredTargets = [...this.targets];\r\n          // if after removing an object we are left with one only...\r\n          if (activeObject.size() === 1) {\r\n            // activate last remaining object\r\n            // deselecting the active selection will remove the remaining object from it\r\n            this._setActiveObject(activeObject.item(0), e);\r\n          }\r\n        } else {\r\n          // `target` isn't part of active selection => add it\r\n          activeObject.multiSelectAdd(target);\r\n          this._hoveredTarget = activeObject;\r\n          this._hoveredTargets = [...this.targets];\r\n        }\r\n        this._fireSelectionEvents(prevActiveObjects, e);\r\n      } else {\r\n        (activeObject as IText).exitEditing &&\r\n          (activeObject as IText).exitEditing();\r\n        // add the active object and the target to the active selection and set it as the active object\r\n        const klass =\r\n          classRegistry.getClass<typeof ActiveSelection>('ActiveSelection');\r\n        const newActiveSelection = new klass([], {\r\n          /**\r\n           * it is crucial to pass the canvas ref before calling {@link ActiveSelection#multiSelectAdd}\r\n           * since it uses {@link FabricObject#isInFrontOf} which relies on the canvas ref\r\n           */\r\n          canvas: this,\r\n        });\r\n        newActiveSelection.multiSelectAdd(activeObject, target);\r\n        this._hoveredTarget = newActiveSelection;\r\n        // ISSUE 4115: should we consider subTargets here?\r\n        // this._hoveredTargets = [];\r\n        // this._hoveredTargets = this.targets.concat();\r\n        this._setActiveObject(newActiveSelection, e);\r\n        this._fireSelectionEvents([activeObject], e);\r\n      }\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * ## Handles selection\r\n   * - selects objects that are contained in (and possibly intersecting) the selection bounding box\r\n   * - sets the active object\r\n   * ---\r\n   * runs on mouse up after a mouse move\r\n   */\r\n  protected handleSelection(e: TPointerEvent) {\r\n    if (!this.selection || !this._groupSelector) {\r\n      return false;\r\n    }\r\n    const { x, y, deltaX, deltaY } = this._groupSelector,\r\n      point1 = new Point(x, y),\r\n      point2 = point1.add(new Point(deltaX, deltaY)),\r\n      tl = point1.min(point2),\r\n      br = point1.max(point2),\r\n      size = br.subtract(tl);\r\n\r\n    const collectedObjects = this.collectObjects(\r\n      {\r\n        left: tl.x,\r\n        top: tl.y,\r\n        width: size.x,\r\n        height: size.y,\r\n      },\r\n      { includeIntersecting: !this.selectionFullyContained }\r\n    ) as FabricObject[];\r\n\r\n    const objects =\r\n      // though this method runs only after mouse move the pointer could do a mouse up on the same position as mouse down\r\n      // should it be handled as is?\r\n      point1.eq(point2)\r\n        ? collectedObjects[0]\r\n          ? [collectedObjects[0]]\r\n          : []\r\n        : collectedObjects.length > 1\r\n        ? collectedObjects.filter((object) => !object.onSelect({ e })).reverse()\r\n        : // `setActiveObject` will call `onSelect(collectedObjects[0])` in this case\r\n          collectedObjects;\r\n\r\n    // set active object\r\n    if (objects.length === 1) {\r\n      // set as active object\r\n      this.setActiveObject(objects[0], e);\r\n    } else if (objects.length > 1) {\r\n      // add to active selection and make it the active object\r\n      const klass =\r\n        classRegistry.getClass<typeof ActiveSelection>('ActiveSelection');\r\n      this.setActiveObject(new klass(objects, { canvas: this }), e);\r\n    }\r\n\r\n    // cleanup\r\n    this._groupSelector = null;\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @override clear {@link textEditingManager}\r\n   */\r\n  clear() {\r\n    this.textEditingManager.clear();\r\n    super.clear();\r\n  }\r\n\r\n  /**\r\n   * @override clear {@link textEditingManager}\r\n   */\r\n  destroy() {\r\n    this.removeListeners();\r\n    this.textEditingManager.dispose();\r\n    super.destroy();\r\n  }\r\n}\r\n","export const linearDefaultCoords = {\r\n  x1: 0,\r\n  y1: 0,\r\n  x2: 0,\r\n  y2: 0,\r\n};\r\n\r\nexport const radialDefaultCoords = {\r\n  ...linearDefaultCoords,\r\n  r1: 0,\r\n  r2: 0,\r\n};\r\n","import { ifNaN } from '../util/internals';\r\nimport { capValue } from '../util/misc/capValue';\r\n\r\nconst RE_PERCENT = /^(\\d+\\.\\d+)%|(\\d+)%$/;\r\n\r\nexport function isPercent(value: string | null) {\r\n  return value && RE_PERCENT.test(value);\r\n}\r\n\r\n/**\r\n *\r\n * @param value\r\n * @param valueIfNaN\r\n * @returns ∈ [0, 1]\r\n */\r\nexport function parsePercent(\r\n  value: string | number | null | undefined,\r\n  valueIfNaN?: number\r\n) {\r\n  const parsed =\r\n    typeof value === 'number'\r\n      ? value\r\n      : typeof value === 'string'\r\n      ? parseFloat(value) / (isPercent(value) ? 100 : 1)\r\n      : NaN;\r\n  return capValue(0, ifNaN(parsed, valueIfNaN), 1);\r\n}\r\n","import { Color } from '../../color/Color';\r\nimport { parsePercent } from '../../parser/percent';\r\nimport { ifNaN } from '../../util/internals';\r\nimport type { ColorStop } from '../typedefs';\r\n\r\nconst RE_KEY_VALUE_PAIRS = /\\s*;\\s*/;\r\nconst RE_KEY_VALUE = /\\s*:\\s*/;\r\n\r\nfunction parseColorStop(el: SVGStopElement, multiplier: number) {\r\n  let colorValue, opacity;\r\n  const style = el.getAttribute('style');\r\n  if (style) {\r\n    const keyValuePairs = style.split(RE_KEY_VALUE_PAIRS);\r\n\r\n    if (keyValuePairs[keyValuePairs.length - 1] === '') {\r\n      keyValuePairs.pop();\r\n    }\r\n\r\n    for (let i = keyValuePairs.length; i--; ) {\r\n      const [key, value] = keyValuePairs[i]\r\n        .split(RE_KEY_VALUE)\r\n        .map((s) => s.trim());\r\n      if (key === 'stop-color') {\r\n        colorValue = value;\r\n      } else if (key === 'stop-opacity') {\r\n        opacity = value;\r\n      }\r\n    }\r\n  }\r\n\r\n  const color = new Color(\r\n    colorValue || el.getAttribute('stop-color') || 'rgb(0,0,0)'\r\n  );\r\n\r\n  return {\r\n    offset: parsePercent(el.getAttribute('offset'), 0),\r\n    color: color.toRgb(),\r\n    opacity:\r\n      ifNaN(parseFloat(opacity || el.getAttribute('stop-opacity') || ''), 1) *\r\n      color.getAlpha() *\r\n      multiplier,\r\n  };\r\n}\r\n\r\nexport function parseColorStops(\r\n  el: SVGGradientElement,\r\n  opacityAttr: string | null\r\n) {\r\n  const colorStops: ColorStop[] = [],\r\n    colorStopEls = el.getElementsByTagName('stop'),\r\n    multiplier = parsePercent(opacityAttr, 1);\r\n  for (let i = colorStopEls.length; i--; ) {\r\n    colorStops.push(parseColorStop(colorStopEls[i], multiplier));\r\n  }\r\n  return colorStops;\r\n}\r\n","import type { GradientType, GradientUnits } from '../typedefs';\r\n\r\nexport function parseType(el: SVGGradientElement): GradientType {\r\n  return el.nodeName === 'linearGradient' || el.nodeName === 'LINEARGRADIENT'\r\n    ? 'linear'\r\n    : 'radial';\r\n}\r\n\r\nexport function parseGradientUnits(el: SVGGradientElement): GradientUnits {\r\n  return el.getAttribute('gradientUnits') === 'userSpaceOnUse'\r\n    ? 'pixels'\r\n    : 'percentage';\r\n}\r\n","import { isPercent } from '../../parser/percent';\r\nimport type { TSize } from '../../typedefs';\r\nimport type { GradientCoords, GradientType, GradientUnits } from '../typedefs';\r\nimport { parseGradientUnits, parseType } from './misc';\r\n\r\nfunction convertPercentUnitsToValues<\r\n  T extends GradientType,\r\n  K extends keyof GradientCoords<T>\r\n>(\r\n  valuesToConvert: Record<K, string | number>,\r\n  { width, height, gradientUnits }: TSize & { gradientUnits: GradientUnits }\r\n) {\r\n  let finalValue;\r\n  return (Object.keys(valuesToConvert) as K[]).reduce((acc, prop) => {\r\n    const propValue = valuesToConvert[prop];\r\n    if (propValue === 'Infinity') {\r\n      finalValue = 1;\r\n    } else if (propValue === '-Infinity') {\r\n      finalValue = 0;\r\n    } else {\r\n      finalValue =\r\n        typeof propValue === 'string' ? parseFloat(propValue) : propValue;\r\n      if (typeof propValue === 'string' && isPercent(propValue)) {\r\n        finalValue *= 0.01;\r\n        if (gradientUnits === 'pixels') {\r\n          // then we need to fix those percentages here in svg parsing\r\n          if (prop === 'x1' || prop === 'x2' || prop === 'r2') {\r\n            finalValue *= width;\r\n          }\r\n          if (prop === 'y1' || prop === 'y2') {\r\n            finalValue *= height;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    acc[prop] = finalValue;\r\n    return acc;\r\n  }, {} as Record<K, number>);\r\n}\r\n\r\nfunction getValue(el: SVGGradientElement, key: string) {\r\n  return el.getAttribute(key);\r\n}\r\n\r\nexport function parseLinearCoords(el: SVGGradientElement) {\r\n  return {\r\n    x1: getValue(el, 'x1') || 0,\r\n    y1: getValue(el, 'y1') || 0,\r\n    x2: getValue(el, 'x2') || '100%',\r\n    y2: getValue(el, 'y2') || 0,\r\n  };\r\n}\r\n\r\nexport function parseRadialCoords(el: SVGGradientElement) {\r\n  return {\r\n    x1: getValue(el, 'fx') || getValue(el, 'cx') || '50%',\r\n    y1: getValue(el, 'fy') || getValue(el, 'cy') || '50%',\r\n    r1: 0,\r\n    x2: getValue(el, 'cx') || '50%',\r\n    y2: getValue(el, 'cy') || '50%',\r\n    r2: getValue(el, 'r') || '50%',\r\n  };\r\n}\r\n\r\nexport function parseCoords(el: SVGGradientElement, size: TSize) {\r\n  return convertPercentUnitsToValues(\r\n    parseType(el) === 'linear' ? parseLinearCoords(el) : parseRadialCoords(el),\r\n    {\r\n      ...size,\r\n      gradientUnits: parseGradientUnits(el),\r\n    }\r\n  );\r\n}\r\n","import { Color } from '../color/Color';\r\nimport { iMatrix } from '../constants';\r\nimport { parseTransformAttribute } from '../parser/parseTransformAttribute';\r\nimport type { FabricObject } from '../shapes/Object/FabricObject';\r\nimport type { TMat2D } from '../typedefs';\r\nimport { uid } from '../util/internals/uid';\r\nimport { pick } from '../util/misc/pick';\r\nimport { matrixToSVG } from '../util/misc/svgParsing';\r\nimport { linearDefaultCoords, radialDefaultCoords } from './constants';\r\nimport { parseColorStops } from './parser/parseColorStops';\r\nimport { parseCoords } from './parser/parseCoords';\r\nimport { parseType, parseGradientUnits } from './parser/misc';\r\nimport type {\r\n  ColorStop,\r\n  GradientCoords,\r\n  GradientOptions,\r\n  GradientType,\r\n  GradientUnits,\r\n  SVGOptions,\r\n} from './typedefs';\r\nimport { classRegistry } from '../ClassRegistry';\r\nimport { isPath } from '../util/typeAssertions';\r\n\r\n/**\r\n * Gradient class\r\n * @class Gradient\r\n * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#gradients}\r\n */\r\nexport class Gradient<\r\n  S,\r\n  T extends GradientType = S extends GradientType ? S : 'linear'\r\n> {\r\n  /**\r\n   * Horizontal offset for aligning gradients coming from SVG when outside pathgroups\r\n   * @type Number\r\n   * @default 0\r\n   */\r\n  declare offsetX: number;\r\n\r\n  /**\r\n   * Vertical offset for aligning gradients coming from SVG when outside pathgroups\r\n   * @type Number\r\n   * @default 0\r\n   */\r\n  declare offsetY: number;\r\n\r\n  /**\r\n   * A transform matrix to apply to the gradient before painting.\r\n   * Imported from svg gradients, is not applied with the current transform in the center.\r\n   * Before this transform is applied, the origin point is at the top left corner of the object\r\n   * plus the addition of offsetY and offsetX.\r\n   * @type Number[]\r\n   * @default null\r\n   */\r\n  declare gradientTransform?: TMat2D;\r\n\r\n  /**\r\n   * coordinates units for coords.\r\n   * If `pixels`, the number of coords are in the same unit of width / height.\r\n   * If set as `percentage` the coords are still a number, but 1 means 100% of width\r\n   * for the X and 100% of the height for the y. It can be bigger than 1 and negative.\r\n   * allowed values pixels or percentage.\r\n   * @type GradientUnits\r\n   * @default 'pixels'\r\n   */\r\n  declare gradientUnits: GradientUnits;\r\n\r\n  /**\r\n   * Gradient type linear or radial\r\n   * @type GradientType\r\n   * @default 'linear'\r\n   */\r\n  declare type: T;\r\n\r\n  /**\r\n   * Defines how the gradient is located in space and spread\r\n   * @type GradientCoords\r\n   */\r\n  declare coords: GradientCoords<T>;\r\n\r\n  /**\r\n   * Defines how many colors a gradient has and how they are located on the axis\r\n   * defined by coords\r\n   * @type GradientCoords\r\n   */\r\n  declare colorStops: ColorStop[];\r\n\r\n  /**\r\n   * If true, this object will not be exported during the serialization of a canvas\r\n   * @type boolean\r\n   */\r\n  declare excludeFromExport?: boolean;\r\n\r\n  /**\r\n   * ID used for SVG export functionalities\r\n   * @type number | string\r\n   */\r\n  declare readonly id: string | number;\r\n\r\n  static type = 'Gradient';\r\n\r\n  constructor({\r\n    type = 'linear' as T,\r\n    gradientUnits = 'pixels',\r\n    coords = {},\r\n    colorStops = [],\r\n    offsetX = 0,\r\n    offsetY = 0,\r\n    gradientTransform,\r\n    id,\r\n  }: GradientOptions<T>) {\r\n    this.id = id ? `${id}_${uid()}` : uid();\r\n    this.type = type;\r\n    this.gradientUnits = gradientUnits;\r\n    this.gradientTransform = gradientTransform;\r\n    this.offsetX = offsetX;\r\n    this.offsetY = offsetY;\r\n    this.coords = {\r\n      ...(this.type === 'radial' ? radialDefaultCoords : linearDefaultCoords),\r\n      ...coords,\r\n    } as GradientCoords<T>;\r\n    this.colorStops = colorStops.slice();\r\n  }\r\n\r\n  // isType<S extends GradientType>(type: S): this is Gradient<S> {\r\n  //   return (this.type as GradientType) === type;\r\n  // }\r\n\r\n  /**\r\n   * Adds another colorStop\r\n   * @param {Record<string, string>} colorStop Object with offset and color\r\n   * @return {Gradient} thisArg\r\n   */\r\n  addColorStop(colorStops: Record<string, string>) {\r\n    for (const position in colorStops) {\r\n      const color = new Color(colorStops[position]);\r\n      this.colorStops.push({\r\n        offset: parseFloat(position),\r\n        color: color.toRgb(),\r\n        opacity: color.getAlpha(),\r\n      });\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Returns object representation of a gradient\r\n   * @param {string[]} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n   * @return {object}\r\n   */\r\n  toObject(propertiesToInclude?: (keyof this | string)[]) {\r\n    return {\r\n      ...pick(this, propertiesToInclude as (keyof this)[]),\r\n      type: this.type,\r\n      coords: this.coords,\r\n      colorStops: this.colorStops,\r\n      offsetX: this.offsetX,\r\n      offsetY: this.offsetY,\r\n      gradientUnits: this.gradientUnits,\r\n      gradientTransform: this.gradientTransform\r\n        ? [...this.gradientTransform]\r\n        : undefined,\r\n    };\r\n  }\r\n\r\n  /* _TO_SVG_START_ */\r\n  /**\r\n   * Returns SVG representation of an gradient\r\n   * @param {FabricObject} object Object to create a gradient for\r\n   * @return {String} SVG representation of an gradient (linear/radial)\r\n   */\r\n  toSVG(\r\n    object: FabricObject,\r\n    { additionalTransform: preTransform }: { additionalTransform?: string } = {}\r\n  ) {\r\n    const markup = [],\r\n      transform = (\r\n        this.gradientTransform\r\n          ? this.gradientTransform.concat()\r\n          : iMatrix.concat()\r\n      ) as TMat2D,\r\n      gradientUnits =\r\n        this.gradientUnits === 'pixels'\r\n          ? 'userSpaceOnUse'\r\n          : 'objectBoundingBox';\r\n    // colorStops must be sorted ascending, and guarded against deep mutations\r\n    const colorStops = this.colorStops\r\n      .map((colorStop) => ({ ...colorStop }))\r\n      .sort((a, b) => {\r\n        return a.offset - b.offset;\r\n      });\r\n\r\n    let offsetX = -this.offsetX,\r\n      offsetY = -this.offsetY;\r\n    if (gradientUnits === 'objectBoundingBox') {\r\n      offsetX /= object.width;\r\n      offsetY /= object.height;\r\n    } else {\r\n      offsetX += object.width / 2;\r\n      offsetY += object.height / 2;\r\n    }\r\n    // todo what about polygon/polyline?\r\n    if (isPath(object) && this.gradientUnits !== 'percentage') {\r\n      offsetX -= object.pathOffset.x;\r\n      offsetY -= object.pathOffset.y;\r\n    }\r\n    transform[4] -= offsetX;\r\n    transform[5] -= offsetY;\r\n\r\n    const commonAttributes = [\r\n      `id=\"SVGID_${this.id}\"`,\r\n      `gradientUnits=\"${gradientUnits}\"`,\r\n      `gradientTransform=\"${\r\n        preTransform ? preTransform + ' ' : ''\r\n      }${matrixToSVG(transform)}\"`,\r\n      '',\r\n    ].join(' ');\r\n\r\n    if (this.type === 'linear') {\r\n      const { x1, y1, x2, y2 } = this.coords;\r\n      markup.push(\r\n        '<linearGradient ',\r\n        commonAttributes,\r\n        ' x1=\"',\r\n        x1,\r\n        '\" y1=\"',\r\n        y1,\r\n        '\" x2=\"',\r\n        x2,\r\n        '\" y2=\"',\r\n        y2,\r\n        '\">\\n'\r\n      );\r\n    } else if (this.type === 'radial') {\r\n      const { x1, y1, x2, y2, r1, r2 } = this\r\n        .coords as GradientCoords<'radial'>;\r\n      const needsSwap = r1 > r2;\r\n      // svg radial gradient has just 1 radius. the biggest.\r\n      markup.push(\r\n        '<radialGradient ',\r\n        commonAttributes,\r\n        ' cx=\"',\r\n        needsSwap ? x1 : x2,\r\n        '\" cy=\"',\r\n        needsSwap ? y1 : y2,\r\n        '\" r=\"',\r\n        needsSwap ? r1 : r2,\r\n        '\" fx=\"',\r\n        needsSwap ? x2 : x1,\r\n        '\" fy=\"',\r\n        needsSwap ? y2 : y1,\r\n        '\">\\n'\r\n      );\r\n      if (needsSwap) {\r\n        // svg goes from internal to external radius. if radius are inverted, swap color stops.\r\n        colorStops.reverse(); //  mutates array\r\n        colorStops.forEach((colorStop) => {\r\n          colorStop.offset = 1 - colorStop.offset;\r\n        });\r\n      }\r\n      const minRadius = Math.min(r1, r2);\r\n      if (minRadius > 0) {\r\n        // i have to shift all colorStops and add new one in 0.\r\n        const maxRadius = Math.max(r1, r2),\r\n          percentageShift = minRadius / maxRadius;\r\n        colorStops.forEach((colorStop) => {\r\n          colorStop.offset += percentageShift * (1 - colorStop.offset);\r\n        });\r\n      }\r\n    }\r\n\r\n    colorStops.forEach(({ color, offset, opacity }) => {\r\n      markup.push(\r\n        '<stop ',\r\n        'offset=\"',\r\n        offset * 100 + '%',\r\n        '\" style=\"stop-color:',\r\n        color,\r\n        typeof opacity !== 'undefined' ? ';stop-opacity: ' + opacity : ';',\r\n        '\"/>\\n'\r\n      );\r\n    });\r\n\r\n    markup.push(\r\n      this.type === 'linear' ? '</linearGradient>' : '</radialGradient>',\r\n      '\\n'\r\n    );\r\n\r\n    return markup.join('');\r\n  }\r\n  /* _TO_SVG_END_ */\r\n\r\n  /**\r\n   * Returns an instance of CanvasGradient\r\n   * @param {CanvasRenderingContext2D} ctx Context to render on\r\n   * @return {CanvasGradient}\r\n   */\r\n  toLive(ctx: CanvasRenderingContext2D): CanvasGradient {\r\n    const coords = this.coords as GradientCoords<'radial'>;\r\n    const gradient =\r\n      this.type === 'linear'\r\n        ? ctx.createLinearGradient(coords.x1, coords.y1, coords.x2, coords.y2)\r\n        : ctx.createRadialGradient(\r\n            coords.x1,\r\n            coords.y1,\r\n            coords.r1,\r\n            coords.x2,\r\n            coords.y2,\r\n            coords.r2\r\n          );\r\n\r\n    this.colorStops.forEach(({ color, opacity, offset }) => {\r\n      gradient.addColorStop(\r\n        offset,\r\n        typeof opacity !== 'undefined'\r\n          ? new Color(color).setAlpha(opacity).toRgba()\r\n          : color\r\n      );\r\n    });\r\n\r\n    return gradient;\r\n  }\r\n\r\n  static async fromObject(\r\n    options: GradientOptions<'linear'>\r\n  ): Promise<Gradient<'radial'>>;\r\n  static async fromObject(\r\n    options: GradientOptions<'radial'>\r\n  ): Promise<Gradient<'radial'>>;\r\n  static async fromObject(\r\n    options: GradientOptions<'linear'> | GradientOptions<'radial'>\r\n  ) {\r\n    return new this(options);\r\n  }\r\n\r\n  /* _FROM_SVG_START_ */\r\n  /**\r\n   * Returns {@link Gradient} instance from an SVG element\r\n   * @static\r\n   * @memberOf Gradient\r\n   * @param {SVGGradientElement} el SVG gradient element\r\n   * @param {FabricObject} instance\r\n   * @param {String} opacity A fill-opacity or stroke-opacity attribute to multiply to each stop's opacity.\r\n   * @param {SVGOptions} svgOptions an object containing the size of the SVG in order to parse correctly gradients\r\n   * that uses gradientUnits as 'userSpaceOnUse' and percentages.\r\n   * @return {Gradient} Gradient instance\r\n   * @see http://www.w3.org/TR/SVG/pservers.html#LinearGradientElement\r\n   * @see http://www.w3.org/TR/SVG/pservers.html#RadialGradientElement\r\n   *\r\n   *  @example\r\n   *\r\n   *  <linearGradient id=\"linearGrad1\">\r\n   *    <stop offset=\"0%\" stop-color=\"white\"/>\r\n   *    <stop offset=\"100%\" stop-color=\"black\"/>\r\n   *  </linearGradient>\r\n   *\r\n   *  OR\r\n   *\r\n   *  <linearGradient id=\"linearGrad2\">\r\n   *    <stop offset=\"0\" style=\"stop-color:rgb(255,255,255)\"/>\r\n   *    <stop offset=\"1\" style=\"stop-color:rgb(0,0,0)\"/>\r\n   *  </linearGradient>\r\n   *\r\n   *  OR\r\n   *\r\n   *  <radialGradient id=\"radialGrad1\">\r\n   *    <stop offset=\"0%\" stop-color=\"white\" stop-opacity=\"1\" />\r\n   *    <stop offset=\"50%\" stop-color=\"black\" stop-opacity=\"0.5\" />\r\n   *    <stop offset=\"100%\" stop-color=\"white\" stop-opacity=\"1\" />\r\n   *  </radialGradient>\r\n   *\r\n   *  OR\r\n   *\r\n   *  <radialGradient id=\"radialGrad2\">\r\n   *    <stop offset=\"0\" stop-color=\"rgb(255,255,255)\" />\r\n   *    <stop offset=\"0.5\" stop-color=\"rgb(0,0,0)\" />\r\n   *    <stop offset=\"1\" stop-color=\"rgb(255,255,255)\" />\r\n   *  </radialGradient>\r\n   *\r\n   */\r\n  static fromElement(\r\n    el: SVGGradientElement,\r\n    instance: FabricObject,\r\n    svgOptions: SVGOptions\r\n  ): Gradient<GradientType> {\r\n    const gradientUnits = parseGradientUnits(el);\r\n    const center = instance._findCenterFromElement();\r\n    return new this({\r\n      id: el.getAttribute('id') || undefined,\r\n      type: parseType(el),\r\n      coords: parseCoords(el, {\r\n        width: svgOptions.viewBoxWidth || svgOptions.width,\r\n        height: svgOptions.viewBoxHeight || svgOptions.height,\r\n      }),\r\n      colorStops: parseColorStops(el, svgOptions.opacity),\r\n      gradientUnits,\r\n      gradientTransform: parseTransformAttribute(\r\n        el.getAttribute('gradientTransform') || ''\r\n      ),\r\n      ...(gradientUnits === 'pixels'\r\n        ? {\r\n            offsetX: instance.width / 2 - center.x,\r\n            offsetY: instance.height / 2 - center.y,\r\n          }\r\n        : {\r\n            offsetX: 0,\r\n            offsetY: 0,\r\n          }),\r\n    });\r\n  }\r\n  /* _FROM_SVG_END_ */\r\n}\r\n\r\nclassRegistry.setClass(Gradient, 'gradient');\r\nclassRegistry.setClass(Gradient, 'linear');\r\nclassRegistry.setClass(Gradient, 'radial');\r\n","import { config } from '../config';\r\nimport type { Abortable, TCrossOrigin, TMat2D, TSize } from '../typedefs';\r\nimport { ifNaN } from '../util/internals';\r\nimport { uid } from '../util/internals/uid';\r\nimport { loadImage } from '../util/misc/objectEnlive';\r\nimport { pick } from '../util/misc/pick';\r\nimport { toFixed } from '../util/misc/toFixed';\r\nimport { classRegistry } from '../ClassRegistry';\r\nimport type {\r\n  PatternRepeat,\r\n  PatternOptions,\r\n  SerializedPatternOptions,\r\n} from './types';\r\nimport { log } from '../util/internals/console';\r\n\r\n/**\r\n * @see {@link http://fabricjs.com/patterns demo}\r\n * @see {@link http://fabricjs.com/dynamic-patterns demo}\r\n */\r\nexport class Pattern {\r\n  static type = 'Pattern';\r\n\r\n  /**\r\n   * Legacy identifier of the class. Prefer using this.constructor.type 'Pattern'\r\n   * or utils like isPattern, or instance of to indentify a pattern in your code.\r\n   * Will be removed in future versiones\r\n   * @TODO add sustainable warning message\r\n   * @type string\r\n   * @deprecated\r\n   */\r\n  get type() {\r\n    return 'pattern';\r\n  }\r\n\r\n  set type(value) {\r\n    log('warn', 'Setting type has no effect', value);\r\n  }\r\n\r\n  /**\r\n   * @type PatternRepeat\r\n   * @defaults\r\n   */\r\n  repeat: PatternRepeat = 'repeat';\r\n\r\n  /**\r\n   * Pattern horizontal offset from object's left/top corner\r\n   * @type Number\r\n   * @default\r\n   */\r\n  offsetX = 0;\r\n\r\n  /**\r\n   * Pattern vertical offset from object's left/top corner\r\n   * @type Number\r\n   * @default\r\n   */\r\n  offsetY = 0;\r\n\r\n  /**\r\n   * @type TCrossOrigin\r\n   * @default\r\n   */\r\n  crossOrigin: TCrossOrigin = '';\r\n\r\n  /**\r\n   * transform matrix to change the pattern, imported from svgs.\r\n   * @todo verify if using the identity matrix as default makes the rest of the code more easy\r\n   * @type Array\r\n   * @default\r\n   */\r\n  patternTransform: TMat2D | null = null;\r\n\r\n  /**\r\n   * The actual pixel source of the pattern\r\n   */\r\n  declare source: CanvasImageSource;\r\n\r\n  /**\r\n   * If true, this object will not be exported during the serialization of a canvas\r\n   * @type boolean\r\n   */\r\n  declare excludeFromExport?: boolean;\r\n\r\n  /**\r\n   * ID used for SVG export functionalities\r\n   * @type number\r\n   */\r\n  declare readonly id: number;\r\n\r\n  /**\r\n   * Constructor\r\n   * @param {Object} [options] Options object\r\n   * @param {option.source} [source] the pattern source, eventually empty or a drawable\r\n   */\r\n  constructor(options: PatternOptions) {\r\n    this.id = uid();\r\n    Object.assign(this, options);\r\n  }\r\n\r\n  /**\r\n   * @returns true if {@link source} is an <img> element\r\n   */\r\n  isImageSource(): this is { source: HTMLImageElement } {\r\n    return (\r\n      !!this.source && typeof (this.source as HTMLImageElement).src === 'string'\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @returns true if {@link source} is a <canvas> element\r\n   */\r\n  isCanvasSource(): this is { source: HTMLCanvasElement } {\r\n    return !!this.source && !!(this.source as HTMLCanvasElement).toDataURL;\r\n  }\r\n\r\n  sourceToString(): string {\r\n    return this.isImageSource()\r\n      ? this.source.src\r\n      : this.isCanvasSource()\r\n      ? this.source.toDataURL()\r\n      : '';\r\n  }\r\n\r\n  /**\r\n   * Returns an instance of CanvasPattern\r\n   * @param {CanvasRenderingContext2D} ctx Context to create pattern\r\n   * @return {CanvasPattern}\r\n   */\r\n  toLive(ctx: CanvasRenderingContext2D): CanvasPattern | null {\r\n    if (\r\n      // if the image failed to load, return, and allow rest to continue loading\r\n      !this.source ||\r\n      // if an image\r\n      (this.isImageSource() &&\r\n        (!this.source.complete ||\r\n          this.source.naturalWidth === 0 ||\r\n          this.source.naturalHeight === 0))\r\n    ) {\r\n      return null;\r\n    }\r\n\r\n    return ctx.createPattern(this.source, this.repeat)!;\r\n  }\r\n\r\n  /**\r\n   * Returns object representation of a pattern\r\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n   * @return {object} Object representation of a pattern instance\r\n   */\r\n  toObject(propertiesToInclude: string[] = []): Record<string, any> {\r\n    const { repeat, crossOrigin } = this;\r\n    return {\r\n      ...pick(this, propertiesToInclude as (keyof this)[]),\r\n      type: 'pattern',\r\n      source: this.sourceToString(),\r\n      repeat,\r\n      crossOrigin,\r\n      offsetX: toFixed(this.offsetX, config.NUM_FRACTION_DIGITS),\r\n      offsetY: toFixed(this.offsetY, config.NUM_FRACTION_DIGITS),\r\n      patternTransform: this.patternTransform\r\n        ? [...this.patternTransform]\r\n        : null,\r\n    };\r\n  }\r\n\r\n  /* _TO_SVG_START_ */\r\n  /**\r\n   * Returns SVG representation of a pattern\r\n   */\r\n  toSVG({ width, height }: TSize): string {\r\n    const { source: patternSource, repeat, id } = this,\r\n      patternOffsetX = ifNaN(this.offsetX / width, 0),\r\n      patternOffsetY = ifNaN(this.offsetY / height, 0),\r\n      patternWidth =\r\n        repeat === 'repeat-y' || repeat === 'no-repeat'\r\n          ? 1 + Math.abs(patternOffsetX || 0)\r\n          : ifNaN(\r\n              ((patternSource as HTMLImageElement).width as number) / width,\r\n              0\r\n            ),\r\n      patternHeight =\r\n        repeat === 'repeat-x' || repeat === 'no-repeat'\r\n          ? 1 + Math.abs(patternOffsetY || 0)\r\n          : ifNaN(\r\n              ((patternSource as HTMLImageElement).height as number) / height,\r\n              0\r\n            );\r\n\r\n    return [\r\n      `<pattern id=\"SVGID_${id}\" x=\"${patternOffsetX}\" y=\"${patternOffsetY}\" width=\"${patternWidth}\" height=\"${patternHeight}\">`,\r\n      `<image x=\"0\" y=\"0\" width=\"${\r\n        (patternSource as HTMLImageElement).width\r\n      }\" height=\"${\r\n        (patternSource as HTMLImageElement).height\r\n      }\" xlink:href=\"${this.sourceToString()}\"></image>`,\r\n      `</pattern>`,\r\n      '',\r\n    ].join('\\n');\r\n  }\r\n  /* _TO_SVG_END_ */\r\n\r\n  static async fromObject(\r\n    { type, source, ...serialized }: SerializedPatternOptions,\r\n    options?: Abortable\r\n  ): Promise<Pattern> {\r\n    const img = await loadImage(source, {\r\n      ...options,\r\n      crossOrigin: serialized.crossOrigin,\r\n    });\r\n    return new this({ ...serialized, source: img });\r\n  }\r\n}\r\n\r\nclassRegistry.setClass(Pattern);\r\n// kept for compatibility reason\r\nclassRegistry.setClass(Pattern, 'pattern');\r\n","import { Color } from '../color/Color';\r\nimport type { Point } from '../Point';\r\nimport type { Shadow } from '../Shadow';\r\nimport type { Canvas } from '../canvas/Canvas';\r\nimport type { TBrushEventData } from './typedefs';\r\n\r\n/**\r\n * @see {@link http://fabricjs.com/freedrawing|Freedrawing demo}\r\n */\r\nexport abstract class BaseBrush {\r\n  /**\r\n   * Color of a brush\r\n   * @type String\r\n   * @default\r\n   */\r\n  color = 'rgb(0, 0, 0)';\r\n\r\n  /**\r\n   * Width of a brush, has to be a Number, no string literals\r\n   * @type Number\r\n   * @default\r\n   */\r\n  width = 1;\r\n\r\n  /**\r\n   * Shadow object representing shadow of this shape.\r\n   * <b>Backwards incompatibility note:</b> This property replaces \"shadowColor\" (String), \"shadowOffsetX\" (Number),\r\n   * \"shadowOffsetY\" (Number) and \"shadowBlur\" (Number) since v1.2.12\r\n   * @type Shadow\r\n   * @default\r\n   */\r\n  shadow: Shadow | null = null;\r\n\r\n  /**\r\n   * Line endings style of a brush (one of \"butt\", \"round\", \"square\")\r\n   * @type String\r\n   * @default\r\n   */\r\n  strokeLineCap: CanvasLineCap = 'round';\r\n\r\n  /**\r\n   * Corner style of a brush (one of \"bevel\", \"round\", \"miter\")\r\n   * @type String\r\n   * @default\r\n   */\r\n  strokeLineJoin: CanvasLineJoin = 'round';\r\n\r\n  /**\r\n   * Maximum miter length (used for strokeLineJoin = \"miter\") of a brush's\r\n   * @type Number\r\n   * @default\r\n   */\r\n  strokeMiterLimit = 10;\r\n\r\n  /**\r\n   * Stroke Dash Array.\r\n   * @type Array\r\n   * @default\r\n   */\r\n  strokeDashArray: number[] | null = null;\r\n\r\n  /**\r\n   * When `true`, the free drawing is limited to the whiteboard size. Default to false.\r\n   * @type Boolean\r\n   * @default false\r\n   */\r\n\r\n  limitedToCanvasSize = false;\r\n\r\n  /**\r\n   * @todo add type\r\n   */\r\n  declare canvas: Canvas;\r\n\r\n  constructor(canvas: Canvas) {\r\n    this.canvas = canvas;\r\n  }\r\n\r\n  abstract _render(): void;\r\n  abstract onMouseDown(pointer: Point, ev: TBrushEventData): void;\r\n  abstract onMouseMove(pointer: Point, ev: TBrushEventData): void;\r\n  /**\r\n   * @returns true if brush should continue blocking interaction\r\n   */\r\n  abstract onMouseUp(ev: TBrushEventData): boolean | void;\r\n\r\n  /**\r\n   * Sets brush styles\r\n   * @private\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   */\r\n  _setBrushStyles(ctx: CanvasRenderingContext2D) {\r\n    ctx.strokeStyle = this.color;\r\n    ctx.lineWidth = this.width;\r\n    ctx.lineCap = this.strokeLineCap;\r\n    ctx.miterLimit = this.strokeMiterLimit;\r\n    ctx.lineJoin = this.strokeLineJoin;\r\n    ctx.setLineDash(this.strokeDashArray || []);\r\n  }\r\n\r\n  /**\r\n   * Sets the transformation on given context\r\n   * @param {CanvasRenderingContext2D} ctx context to render on\r\n   * @private\r\n   */\r\n  protected _saveAndTransform(ctx: CanvasRenderingContext2D) {\r\n    const v = this.canvas.viewportTransform;\r\n    ctx.save();\r\n    ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\r\n  }\r\n\r\n  protected needsFullRender() {\r\n    const color = new Color(this.color);\r\n    return color.getAlpha() < 1 || !!this.shadow;\r\n  }\r\n\r\n  /**\r\n   * Sets brush shadow styles\r\n   * @private\r\n   */\r\n  protected _setShadow() {\r\n    if (!this.shadow || !this.canvas) {\r\n      return;\r\n    }\r\n\r\n    const canvas = this.canvas,\r\n      shadow = this.shadow,\r\n      ctx = canvas.contextTop,\r\n      zoom = canvas.getZoom() * canvas.getRetinaScaling();\r\n\r\n    ctx.shadowColor = shadow.color;\r\n    ctx.shadowBlur = shadow.blur * zoom;\r\n    ctx.shadowOffsetX = shadow.offsetX * zoom;\r\n    ctx.shadowOffsetY = shadow.offsetY * zoom;\r\n  }\r\n\r\n  /**\r\n   * Removes brush shadow styles\r\n   * @private\r\n   */\r\n  protected _resetShadow() {\r\n    const ctx = this.canvas.contextTop;\r\n\r\n    ctx.shadowColor = '';\r\n    ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\r\n  }\r\n\r\n  /**\r\n   * Check is pointer is outside canvas boundaries\r\n   * @param {Object} pointer\r\n   * @private\r\n   */\r\n  protected _isOutSideCanvas(pointer: Point) {\r\n    return (\r\n      pointer.x < 0 ||\r\n      pointer.x > this.canvas.getWidth() ||\r\n      pointer.y < 0 ||\r\n      pointer.y > this.canvas.getHeight()\r\n    );\r\n  }\r\n}\r\n","import { config } from '../config';\r\nimport { SHARED_ATTRIBUTES } from '../parser/attributes';\r\nimport { parseAttributes } from '../parser/parseAttributes';\r\nimport type { XY } from '../Point';\r\nimport { Point } from '../Point';\r\nimport { makeBoundingBoxFromPoints } from '../util/misc/boundingBoxFromPoints';\r\nimport { toFixed } from '../util/misc/toFixed';\r\nimport {\r\n  getBoundsOfCurve,\r\n  joinPath,\r\n  makePathSimpler,\r\n  parsePath,\r\n} from '../util/path';\r\nimport { classRegistry } from '../ClassRegistry';\r\nimport { FabricObject, cacheProperties } from './Object/FabricObject';\r\nimport type {\r\n  TComplexPathData,\r\n  TPathSegmentInfo,\r\n  TSimplePathData,\r\n} from '../util/path/typedefs';\r\nimport type { FabricObjectProps, SerializedObjectProps } from './Object/types';\r\nimport type { ObjectEvents } from '../EventTypeDefs';\r\nimport type {\r\n  TBBox,\r\n  TClassProperties,\r\n  TSVGReviver,\r\n  TOptions,\r\n} from '../typedefs';\r\nimport { CENTER, LEFT, TOP } from '../constants';\r\nimport type { CSSRules } from '../parser/typedefs';\r\n\r\ninterface UniquePathProps {\r\n  sourcePath?: string;\r\n  path?: TSimplePathData;\r\n}\r\n\r\nexport interface SerializedPathProps\r\n  extends SerializedObjectProps,\r\n    UniquePathProps {}\r\n\r\nexport interface PathProps extends FabricObjectProps, UniquePathProps {}\r\n\r\nexport interface IPathBBox extends TBBox {\r\n  left: number;\r\n  top: number;\r\n  pathOffset: Point;\r\n}\r\n\r\nexport class Path<\r\n  Props extends TOptions<PathProps> = Partial<PathProps>,\r\n  SProps extends SerializedPathProps = SerializedPathProps,\r\n  EventSpec extends ObjectEvents = ObjectEvents\r\n> extends FabricObject<Props, SProps, EventSpec> {\r\n  /**\r\n   * Array of path points\r\n   * @type Array\r\n   * @default\r\n   */\r\n  declare path: TSimplePathData;\r\n\r\n  declare pathOffset: Point;\r\n\r\n  declare sourcePath?: string;\r\n\r\n  declare segmentsInfo?: TPathSegmentInfo[];\r\n\r\n  static type = 'Path';\r\n\r\n  static cacheProperties = [...cacheProperties, 'path', 'fillRule'];\r\n\r\n  /**\r\n   * Constructor\r\n   * @param {TComplexPathData} path Path data (sequence of coordinates and corresponding \"command\" tokens)\r\n   * @param {Partial<PathProps>} [options] Options object\r\n   * @return {Path} thisArg\r\n   */\r\n  constructor(\r\n    path: TComplexPathData | string,\r\n    // todo: evaluate this spread here\r\n    { path: _, left, top, ...options }: Partial<Props> = {}\r\n  ) {\r\n    super();\r\n    Object.assign(this, Path.ownDefaults);\r\n    this.setOptions(options);\r\n    this._setPath(path || [], true);\r\n    typeof left === 'number' && this.set(LEFT, left);\r\n    typeof top === 'number' && this.set(TOP, top);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {TComplexPathData | string} path Path data (sequence of coordinates and corresponding \"command\" tokens)\r\n   * @param {boolean} [adjustPosition] pass true to reposition the object according to the bounding box\r\n   * @returns {Point} top left position of the bounding box, useful for complementary positioning\r\n   */\r\n  _setPath(path: TComplexPathData | string, adjustPosition?: boolean) {\r\n    this.path = makePathSimpler(Array.isArray(path) ? path : parsePath(path));\r\n    this.setBoundingBox(adjustPosition);\r\n  }\r\n\r\n  /**\r\n   * This function is an helper for svg import. it returns the center of the object in the svg\r\n   * untransformed coordinates, by look at the polyline/polygon points.\r\n   * @private\r\n   * @return {Point} center point from element coordinates\r\n   */\r\n  _findCenterFromElement(): Point {\r\n    const bbox = this._calcBoundsFromPath();\r\n    return new Point(bbox.left + bbox.width / 2, bbox.top + bbox.height / 2);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {CanvasRenderingContext2D} ctx context to render path on\r\n   */\r\n  _renderPathCommands(ctx: CanvasRenderingContext2D) {\r\n    const l = -this.pathOffset.x,\r\n      t = -this.pathOffset.y;\r\n\r\n    ctx.beginPath();\r\n\r\n    for (const command of this.path) {\r\n      switch (\r\n        command[0] // first letter\r\n      ) {\r\n        case 'L': // lineto, absolute\r\n          ctx.lineTo(command[1] + l, command[2] + t);\r\n          break;\r\n\r\n        case 'M': // moveTo, absolute\r\n          ctx.moveTo(command[1] + l, command[2] + t);\r\n          break;\r\n\r\n        case 'C': // bezierCurveTo, absolute\r\n          ctx.bezierCurveTo(\r\n            command[1] + l,\r\n            command[2] + t,\r\n            command[3] + l,\r\n            command[4] + t,\r\n            command[5] + l,\r\n            command[6] + t\r\n          );\r\n          break;\r\n\r\n        case 'Q': // quadraticCurveTo, absolute\r\n          ctx.quadraticCurveTo(\r\n            command[1] + l,\r\n            command[2] + t,\r\n            command[3] + l,\r\n            command[4] + t\r\n          );\r\n          break;\r\n\r\n        case 'Z':\r\n          ctx.closePath();\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {CanvasRenderingContext2D} ctx context to render path on\r\n   */\r\n  _render(ctx: CanvasRenderingContext2D) {\r\n    this._renderPathCommands(ctx);\r\n    this._renderPaintInOrder(ctx);\r\n  }\r\n\r\n  /**\r\n   * Returns string representation of an instance\r\n   * @return {string} string representation of an instance\r\n   */\r\n  toString() {\r\n    return `#<Path (${this.complexity()}): { \"top\": ${this.top}, \"left\": ${\r\n      this.left\r\n    } }>`;\r\n  }\r\n\r\n  /**\r\n   * Returns object representation of an instance\r\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n   * @return {Object} object representation of an instance\r\n   */\r\n  toObject<\r\n    T extends Omit<Props & TClassProperties<this>, keyof SProps>,\r\n    K extends keyof T = never\r\n  >(propertiesToInclude: K[] = []): Pick<T, K> & SProps {\r\n    return {\r\n      ...super.toObject(propertiesToInclude),\r\n      path: this.path.map((pathCmd) => pathCmd.slice()),\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Returns dataless object representation of an instance\r\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n   * @return {Object} object representation of an instance\r\n   */\r\n  toDatalessObject<\r\n    T extends Omit<Props & TClassProperties<this>, keyof SProps>,\r\n    K extends keyof T = never\r\n  >(propertiesToInclude: K[] = []): Pick<T, K> & SProps {\r\n    const o = this.toObject<T, K>(propertiesToInclude);\r\n    if (this.sourcePath) {\r\n      delete o.path;\r\n      o.sourcePath = this.sourcePath;\r\n    }\r\n    return o;\r\n  }\r\n\r\n  /**\r\n   * Returns svg representation of an instance\r\n   * @return {Array} an array of strings with the specific svg representation\r\n   * of the instance\r\n   */\r\n  _toSVG() {\r\n    const path = joinPath(this.path, config.NUM_FRACTION_DIGITS);\r\n    return [\r\n      '<path ',\r\n      'COMMON_PARTS',\r\n      `d=\"${path}\" stroke-linecap=\"round\" />\\n`,\r\n    ];\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @return the path command's translate transform attribute\r\n   */\r\n  _getOffsetTransform() {\r\n    const digits = config.NUM_FRACTION_DIGITS;\r\n    return ` translate(${toFixed(-this.pathOffset.x, digits)}, ${toFixed(\r\n      -this.pathOffset.y,\r\n      digits\r\n    )})`;\r\n  }\r\n\r\n  /**\r\n   * Returns svg clipPath representation of an instance\r\n   * @param {Function} [reviver] Method for further parsing of svg representation.\r\n   * @return {string} svg representation of an instance\r\n   */\r\n  toClipPathSVG(reviver?: TSVGReviver): string {\r\n    const additionalTransform = this._getOffsetTransform();\r\n    return (\r\n      '\\t' +\r\n      this._createBaseClipPathSVGMarkup(this._toSVG(), {\r\n        reviver,\r\n        additionalTransform: additionalTransform,\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Returns svg representation of an instance\r\n   * @param {Function} [reviver] Method for further parsing of svg representation.\r\n   * @return {string} svg representation of an instance\r\n   */\r\n  toSVG(reviver?: TSVGReviver): string {\r\n    const additionalTransform = this._getOffsetTransform();\r\n    return this._createBaseSVGMarkup(this._toSVG(), {\r\n      reviver,\r\n      additionalTransform: additionalTransform,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Returns number representation of an instance complexity\r\n   * @return {number} complexity of this instance\r\n   */\r\n  complexity() {\r\n    return this.path.length;\r\n  }\r\n\r\n  setDimensions() {\r\n    this.setBoundingBox();\r\n  }\r\n\r\n  setBoundingBox(adjustPosition?: boolean) {\r\n    const { width, height, pathOffset } = this._calcDimensions();\r\n    this.set({ width, height, pathOffset });\r\n    // using pathOffset because it match the use case.\r\n    // if pathOffset change here we need to use left + width/2 , top + height/2\r\n    adjustPosition && this.setPositionByOrigin(pathOffset, CENTER, CENTER);\r\n  }\r\n\r\n  _calcBoundsFromPath(): TBBox {\r\n    const bounds: XY[] = [];\r\n    let subpathStartX = 0,\r\n      subpathStartY = 0,\r\n      x = 0, // current x\r\n      y = 0; // current y\r\n\r\n    for (const command of this.path) {\r\n      // current instruction\r\n      switch (\r\n        command[0] // first letter\r\n      ) {\r\n        case 'L': // lineto, absolute\r\n          x = command[1];\r\n          y = command[2];\r\n          bounds.push(new Point(subpathStartX, subpathStartY), new Point(x, y));\r\n          break;\r\n\r\n        case 'M': // moveTo, absolute\r\n          x = command[1];\r\n          y = command[2];\r\n          subpathStartX = x;\r\n          subpathStartY = y;\r\n          break;\r\n\r\n        case 'C': // bezierCurveTo, absolute\r\n          bounds.push(\r\n            ...getBoundsOfCurve(\r\n              x,\r\n              y,\r\n              command[1],\r\n              command[2],\r\n              command[3],\r\n              command[4],\r\n              command[5],\r\n              command[6]\r\n            )\r\n          );\r\n          x = command[5];\r\n          y = command[6];\r\n          break;\r\n\r\n        case 'Q': // quadraticCurveTo, absolute\r\n          bounds.push(\r\n            ...getBoundsOfCurve(\r\n              x,\r\n              y,\r\n              command[1],\r\n              command[2],\r\n              command[1],\r\n              command[2],\r\n              command[3],\r\n              command[4]\r\n            )\r\n          );\r\n          x = command[3];\r\n          y = command[4];\r\n          break;\r\n\r\n        case 'Z':\r\n          x = subpathStartX;\r\n          y = subpathStartY;\r\n          break;\r\n      }\r\n    }\r\n    return makeBoundingBoxFromPoints(bounds);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _calcDimensions(): IPathBBox {\r\n    const bbox = this._calcBoundsFromPath();\r\n\r\n    return {\r\n      ...bbox,\r\n      pathOffset: new Point(\r\n        bbox.left + bbox.width / 2,\r\n        bbox.top + bbox.height / 2\r\n      ),\r\n    };\r\n  }\r\n\r\n  /**\r\n   * List of attribute names to account for when parsing SVG element (used by `Path.fromElement`)\r\n   * @static\r\n   * @memberOf Path\r\n   * @see http://www.w3.org/TR/SVG/paths.html#PathElement\r\n   */\r\n  static ATTRIBUTE_NAMES = [...SHARED_ATTRIBUTES, 'd'];\r\n\r\n  /**\r\n   * Creates an instance of Path from an object\r\n   * @static\r\n   * @memberOf Path\r\n   * @param {Object} object\r\n   * @returns {Promise<Path>}\r\n   */\r\n  static fromObject<T extends TOptions<SerializedPathProps>>(object: T) {\r\n    return this._fromObject<Path>(object, {\r\n      extraParam: 'path',\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Creates an instance of Path from an SVG <path> element\r\n   * @static\r\n   * @memberOf Path\r\n   * @param {HTMLElement} element to parse\r\n   * @param {Partial<PathProps>} [options] Options object\r\n   */\r\n  static async fromElement(\r\n    element: HTMLElement,\r\n    options: Partial<PathProps>,\r\n    cssRules?: CSSRules\r\n  ) {\r\n    const { d, ...parsedAttributes } = parseAttributes(\r\n      element,\r\n      this.ATTRIBUTE_NAMES,\r\n      cssRules\r\n    );\r\n    return new this(d, {\r\n      ...parsedAttributes,\r\n      ...options,\r\n      // we pass undefined to instruct the constructor to position the object using the bbox\r\n      left: undefined,\r\n      top: undefined,\r\n    });\r\n  }\r\n}\r\n\r\nclassRegistry.setClass(Path);\r\nclassRegistry.setSVGClass(Path);\r\n\r\n/* _FROM_SVG_START_ */\r\n","import type { ModifierKey, TEvent } from '../EventTypeDefs';\r\nimport type { Point } from '../Point';\r\nimport { Shadow } from '../Shadow';\r\nimport { Path } from '../shapes/Path';\r\nimport { getSmoothPathFromPoints, joinPath } from '../util/path';\r\nimport type { Canvas } from '../canvas/Canvas';\r\nimport { BaseBrush } from './BaseBrush';\r\nimport type { TSimplePathData } from '../util/path/typedefs';\r\n\r\n/**\r\n * @private\r\n * @param {TSimplePathData} pathData SVG path commands\r\n * @returns {boolean}\r\n */\r\nfunction isEmptySVGPath(pathData: TSimplePathData): boolean {\r\n  return joinPath(pathData) === 'M 0 0 Q 0 0 0 0 L 0 0';\r\n}\r\n\r\nexport class PencilBrush extends BaseBrush {\r\n  /**\r\n   * Discard points that are less than `decimate` pixel distant from each other\r\n   * @type Number\r\n   * @default 0.4\r\n   */\r\n  decimate = 0.4;\r\n\r\n  /**\r\n   * Draws a straight line between last recorded point to current pointer\r\n   * Used for `shift` functionality\r\n   *\r\n   * @type boolean\r\n   * @default false\r\n   */\r\n  drawStraightLine = false;\r\n\r\n  /**\r\n   * The event modifier key that makes the brush draw a straight line.\r\n   * If `null` or 'none' or any other string that is not a modifier key the feature is disabled.\r\n   * @type {ModifierKey | undefined | null}\r\n   */\r\n  straightLineKey: ModifierKey | undefined | null = 'shiftKey';\r\n\r\n  private declare _points: Point[];\r\n  private declare _hasStraightLine: boolean;\r\n  private declare oldEnd?: Point;\r\n\r\n  constructor(canvas: Canvas) {\r\n    super(canvas);\r\n    this._points = [];\r\n    this._hasStraightLine = false;\r\n  }\r\n\r\n  needsFullRender() {\r\n    return super.needsFullRender() || this._hasStraightLine;\r\n  }\r\n\r\n  static drawSegment(ctx: CanvasRenderingContext2D, p1: Point, p2: Point) {\r\n    const midPoint = p1.midPointFrom(p2);\r\n    ctx.quadraticCurveTo(p1.x, p1.y, midPoint.x, midPoint.y);\r\n    return midPoint;\r\n  }\r\n\r\n  /**\r\n   * Invoked on mouse down\r\n   * @param {Point} pointer\r\n   */\r\n  onMouseDown(pointer: Point, { e }: TEvent) {\r\n    if (!this.canvas._isMainEvent(e)) {\r\n      return;\r\n    }\r\n    this.drawStraightLine = !!this.straightLineKey && e[this.straightLineKey];\r\n    this._prepareForDrawing(pointer);\r\n    // capture coordinates immediately\r\n    // this allows to draw dots (when movement never occurs)\r\n    this._addPoint(pointer);\r\n    this._render();\r\n  }\r\n\r\n  /**\r\n   * Invoked on mouse move\r\n   * @param {Point} pointer\r\n   */\r\n  onMouseMove(pointer: Point, { e }: TEvent) {\r\n    if (!this.canvas._isMainEvent(e)) {\r\n      return;\r\n    }\r\n    this.drawStraightLine = !!this.straightLineKey && e[this.straightLineKey];\r\n    if (this.limitedToCanvasSize === true && this._isOutSideCanvas(pointer)) {\r\n      return;\r\n    }\r\n    if (this._addPoint(pointer) && this._points.length > 1) {\r\n      if (this.needsFullRender()) {\r\n        // redraw curve\r\n        // clear top canvas\r\n        this.canvas.clearContext(this.canvas.contextTop);\r\n        this._render();\r\n      } else {\r\n        const points = this._points,\r\n          length = points.length,\r\n          ctx = this.canvas.contextTop;\r\n        // draw the curve update\r\n        this._saveAndTransform(ctx);\r\n        if (this.oldEnd) {\r\n          ctx.beginPath();\r\n          ctx.moveTo(this.oldEnd.x, this.oldEnd.y);\r\n        }\r\n        this.oldEnd = PencilBrush.drawSegment(\r\n          ctx,\r\n          points[length - 2],\r\n          points[length - 1]\r\n        );\r\n        ctx.stroke();\r\n        ctx.restore();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Invoked on mouse up\r\n   */\r\n  onMouseUp({ e }: TEvent) {\r\n    if (!this.canvas._isMainEvent(e)) {\r\n      return true;\r\n    }\r\n    this.drawStraightLine = false;\r\n    this.oldEnd = undefined;\r\n    this._finalizeAndAddPath();\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {Point} pointer Actual mouse position related to the canvas.\r\n   */\r\n  _prepareForDrawing(pointer: Point) {\r\n    this._reset();\r\n    this._addPoint(pointer);\r\n    this.canvas.contextTop.moveTo(pointer.x, pointer.y);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {Point} point Point to be added to points array\r\n   */\r\n  _addPoint(point: Point) {\r\n    if (\r\n      this._points.length > 1 &&\r\n      point.eq(this._points[this._points.length - 1])\r\n    ) {\r\n      return false;\r\n    }\r\n    if (this.drawStraightLine && this._points.length > 1) {\r\n      this._hasStraightLine = true;\r\n      this._points.pop();\r\n    }\r\n    this._points.push(point);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Clear points array and set contextTop canvas style.\r\n   * @private\r\n   */\r\n  _reset() {\r\n    this._points = [];\r\n    this._setBrushStyles(this.canvas.contextTop);\r\n    this._setShadow();\r\n    this._hasStraightLine = false;\r\n  }\r\n\r\n  /**\r\n   * Draw a smooth path on the topCanvas using quadraticCurveTo\r\n   * @private\r\n   * @param {CanvasRenderingContext2D} [ctx]\r\n   */\r\n  _render(ctx: CanvasRenderingContext2D = this.canvas.contextTop) {\r\n    let p1 = this._points[0],\r\n      p2 = this._points[1];\r\n    this._saveAndTransform(ctx);\r\n    ctx.beginPath();\r\n    //if we only have 2 points in the path and they are the same\r\n    //it means that the user only clicked the canvas without moving the mouse\r\n    //then we should be drawing a dot. A path isn't drawn between two identical dots\r\n    //that's why we set them apart a bit\r\n    if (this._points.length === 2 && p1.x === p2.x && p1.y === p2.y) {\r\n      const width = this.width / 1000;\r\n      p1.x -= width;\r\n      p2.x += width;\r\n    }\r\n    ctx.moveTo(p1.x, p1.y);\r\n\r\n    for (let i = 1; i < this._points.length; i++) {\r\n      // we pick the point between pi + 1 & pi + 2 as the\r\n      // end point and p1 as our control point.\r\n      PencilBrush.drawSegment(ctx, p1, p2);\r\n      p1 = this._points[i];\r\n      p2 = this._points[i + 1];\r\n    }\r\n    // Draw last line as a straight line while\r\n    // we wait for the next point to be able to calculate\r\n    // the bezier control point\r\n    ctx.lineTo(p1.x, p1.y);\r\n    ctx.stroke();\r\n    ctx.restore();\r\n  }\r\n\r\n  /**\r\n   * Converts points to SVG path\r\n   * @param {Point[]} points Array of points\r\n   * @return {TSimplePathData} SVG path commands\r\n   */\r\n  convertPointsToSVGPath(points: Point[]): TSimplePathData {\r\n    const correction = this.width / 1000;\r\n    return getSmoothPathFromPoints(points, correction);\r\n  }\r\n\r\n  /**\r\n   * Creates a Path object to add on canvas\r\n   * @param {TSimplePathData} pathData Path data\r\n   * @return {Path} Path to add on canvas\r\n   */\r\n  createPath(pathData: TSimplePathData): Path {\r\n    const path = new Path(pathData, {\r\n      fill: null,\r\n      stroke: this.color,\r\n      strokeWidth: this.width,\r\n      strokeLineCap: this.strokeLineCap,\r\n      strokeMiterLimit: this.strokeMiterLimit,\r\n      strokeLineJoin: this.strokeLineJoin,\r\n      strokeDashArray: this.strokeDashArray,\r\n    });\r\n    if (this.shadow) {\r\n      this.shadow.affectStroke = true;\r\n      path.shadow = new Shadow(this.shadow);\r\n    }\r\n\r\n    return path;\r\n  }\r\n\r\n  /**\r\n   * Decimate points array with the decimate value\r\n   */\r\n  decimatePoints(points: Point[], distance: number) {\r\n    if (points.length <= 2) {\r\n      return points;\r\n    }\r\n    let lastPoint = points[0],\r\n      cDistance;\r\n    const zoom = this.canvas.getZoom(),\r\n      adjustedDistance = Math.pow(distance / zoom, 2),\r\n      l = points.length - 1,\r\n      newPoints = [lastPoint];\r\n    for (let i = 1; i < l - 1; i++) {\r\n      cDistance =\r\n        Math.pow(lastPoint.x - points[i].x, 2) +\r\n        Math.pow(lastPoint.y - points[i].y, 2);\r\n      if (cDistance >= adjustedDistance) {\r\n        lastPoint = points[i];\r\n        newPoints.push(lastPoint);\r\n      }\r\n    }\r\n    // Add the last point from the original line to the end of the array.\r\n    // This ensures decimate doesn't delete the last point on the line, and ensures the line is > 1 point.\r\n    newPoints.push(points[l]);\r\n    return newPoints;\r\n  }\r\n\r\n  /**\r\n   * On mouseup after drawing the path on contextTop canvas\r\n   * we use the points captured to create an new Path object\r\n   * and add it to the canvas.\r\n   */\r\n  _finalizeAndAddPath() {\r\n    const ctx = this.canvas.contextTop;\r\n    ctx.closePath();\r\n    if (this.decimate) {\r\n      this._points = this.decimatePoints(this._points, this.decimate);\r\n    }\r\n    const pathData = this.convertPointsToSVGPath(this._points);\r\n    if (isEmptySVGPath(pathData)) {\r\n      // do not create 0 width/height paths, as they are\r\n      // rendered inconsistently across browsers\r\n      // Firefox 4, for example, renders a dot,\r\n      // whereas Chrome 10 renders nothing\r\n      this.canvas.requestRenderAll();\r\n      return;\r\n    }\r\n\r\n    const path = this.createPath(pathData);\r\n    this.canvas.clearContext(this.canvas.contextTop);\r\n    this.canvas.fire('before:path:created', { path: path });\r\n    this.canvas.add(path);\r\n    this.canvas.requestRenderAll();\r\n    path.setCoords();\r\n    this._resetShadow();\r\n\r\n    // fire event 'path' created\r\n    this.canvas.fire('path:created', { path: path });\r\n  }\r\n}\r\n","import type { ObjectEvents } from '../EventTypeDefs';\r\nimport { SHARED_ATTRIBUTES } from '../parser/attributes';\r\nimport { parseAttributes } from '../parser/parseAttributes';\r\nimport { cos } from '../util/misc/cos';\r\nimport { degreesToRadians } from '../util/misc/radiansDegreesConversion';\r\nimport { sin } from '../util/misc/sin';\r\nimport { classRegistry } from '../ClassRegistry';\r\nimport { FabricObject, cacheProperties } from './Object/FabricObject';\r\nimport type { Abortable, TClassProperties, TOptions } from '../typedefs';\r\nimport type { FabricObjectProps, SerializedObjectProps } from './Object/types';\r\nimport type { CSSRules } from '../parser/typedefs';\r\nimport { SCALE_X, SCALE_Y } from '../constants';\r\n\r\ninterface UniqueCircleProps {\r\n  /**\r\n   * Radius of this circle\r\n   * @type Number\r\n   * @default 0\r\n   */\r\n  radius: number;\r\n\r\n  /**\r\n   * Angle for the start of the circle, in degrees.\r\n   * @type TDegree 0 - 359\r\n   * @default 0\r\n   */\r\n  startAngle: number;\r\n\r\n  /**\r\n   * Angle for the end of the circle, in degrees\r\n   * @type TDegree 1 - 360\r\n   * @default 360\r\n   */\r\n  endAngle: number;\r\n\r\n  /**\r\n   * Orientation for the direction of the circle.\r\n   * Setting to true will switch the arc of the circle to traverse from startAngle to endAngle in a counter-clockwise direction.\r\n   * Note: this will only change how the circle is drawn, and does not affect rotational transformation.\r\n   * @default false\r\n   */\r\n  counterClockwise: boolean;\r\n}\r\n\r\nexport interface SerializedCircleProps\r\n  extends SerializedObjectProps,\r\n    UniqueCircleProps {}\r\n\r\nexport interface CircleProps extends FabricObjectProps, UniqueCircleProps {}\r\n\r\nconst CIRCLE_PROPS = [\r\n  'radius',\r\n  'startAngle',\r\n  'endAngle',\r\n  'counterClockwise',\r\n] as const;\r\n\r\nexport const circleDefaultValues: Partial<TClassProperties<Circle>> = {\r\n  radius: 0,\r\n  startAngle: 0,\r\n  endAngle: 360,\r\n  counterClockwise: false,\r\n};\r\n\r\nexport class Circle<\r\n    Props extends TOptions<CircleProps> = Partial<CircleProps>,\r\n    SProps extends SerializedCircleProps = SerializedCircleProps,\r\n    EventSpec extends ObjectEvents = ObjectEvents\r\n  >\r\n  extends FabricObject<Props, SProps, EventSpec>\r\n  implements UniqueCircleProps\r\n{\r\n  declare radius: number;\r\n  declare startAngle: number;\r\n  declare endAngle: number;\r\n  declare counterClockwise: boolean;\r\n\r\n  static type = 'Circle';\r\n\r\n  static cacheProperties = [...cacheProperties, ...CIRCLE_PROPS];\r\n\r\n  static ownDefaults = circleDefaultValues;\r\n\r\n  static getDefaults(): Record<string, any> {\r\n    return {\r\n      ...super.getDefaults(),\r\n      ...Circle.ownDefaults,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Constructor\r\n   * @param {Object} [options] Options object\r\n   */\r\n  constructor(options?: Props) {\r\n    super();\r\n    Object.assign(this, Circle.ownDefaults);\r\n    this.setOptions(options);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {String} key\r\n   * @param {*} value\r\n   */\r\n  _set(key: string, value: any) {\r\n    super._set(key, value);\r\n\r\n    if (key === 'radius') {\r\n      this.setRadius(value);\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {CanvasRenderingContext2D} ctx context to render on\r\n   */\r\n  _render(ctx: CanvasRenderingContext2D) {\r\n    ctx.beginPath();\r\n    ctx.arc(\r\n      0,\r\n      0,\r\n      this.radius,\r\n      degreesToRadians(this.startAngle),\r\n      degreesToRadians(this.endAngle),\r\n      this.counterClockwise\r\n    );\r\n    this._renderPaintInOrder(ctx);\r\n  }\r\n\r\n  /**\r\n   * Returns horizontal radius of an object (according to how an object is scaled)\r\n   * @return {Number}\r\n   */\r\n  getRadiusX(): number {\r\n    return this.get('radius') * this.get(SCALE_X);\r\n  }\r\n\r\n  /**\r\n   * Returns vertical radius of an object (according to how an object is scaled)\r\n   * @return {Number}\r\n   */\r\n  getRadiusY(): number {\r\n    return this.get('radius') * this.get(SCALE_Y);\r\n  }\r\n\r\n  /**\r\n   * Sets radius of an object (and updates width accordingly)\r\n   */\r\n  setRadius(value: number) {\r\n    this.radius = value;\r\n    this.set({ width: value * 2, height: value * 2 });\r\n  }\r\n\r\n  /**\r\n   * Returns object representation of an instance\r\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n   * @return {Object} object representation of an instance\r\n   */\r\n  toObject<\r\n    T extends Omit<Props & TClassProperties<this>, keyof SProps>,\r\n    K extends keyof T = never\r\n  >(propertiesToInclude: K[] = []): Pick<T, K> & SProps {\r\n    return super.toObject([...CIRCLE_PROPS, ...propertiesToInclude]);\r\n  }\r\n\r\n  /* _TO_SVG_START_ */\r\n\r\n  /**\r\n   * Returns svg representation of an instance\r\n   * @return {Array} an array of strings with the specific svg representation\r\n   * of the instance\r\n   */\r\n  _toSVG(): string[] {\r\n    const angle = (this.endAngle - this.startAngle) % 360;\r\n\r\n    if (angle === 0) {\r\n      return [\r\n        '<circle ',\r\n        'COMMON_PARTS',\r\n        'cx=\"0\" cy=\"0\" ',\r\n        'r=\"',\r\n        `${this.radius}`,\r\n        '\" />\\n',\r\n      ];\r\n    } else {\r\n      const { radius } = this;\r\n      const start = degreesToRadians(this.startAngle),\r\n        end = degreesToRadians(this.endAngle),\r\n        startX = cos(start) * radius,\r\n        startY = sin(start) * radius,\r\n        endX = cos(end) * radius,\r\n        endY = sin(end) * radius,\r\n        largeFlag = angle > 180 ? 1 : 0,\r\n        sweepFlag = this.counterClockwise ? 0 : 1;\r\n      return [\r\n        `<path d=\"M ${startX} ${startY} A ${radius} ${radius} 0 ${largeFlag} ${sweepFlag} ${endX} ${endY}\" `,\r\n        'COMMON_PARTS',\r\n        ' />\\n',\r\n      ];\r\n    }\r\n  }\r\n  /* _TO_SVG_END_ */\r\n\r\n  /* _FROM_SVG_START_ */\r\n  /**\r\n   * List of attribute names to account for when parsing SVG element (used by {@link Circle.fromElement})\r\n   * @static\r\n   * @memberOf Circle\r\n   * @see: http://www.w3.org/TR/SVG/shapes.html#CircleElement\r\n   */\r\n  static ATTRIBUTE_NAMES = ['cx', 'cy', 'r', ...SHARED_ATTRIBUTES];\r\n\r\n  /**\r\n   * Returns {@link Circle} instance from an SVG element\r\n   * @static\r\n   * @memberOf Circle\r\n   * @param {HTMLElement} element Element to parse\r\n   * @param {Object} [options] Partial Circle object to default missing properties on the element.\r\n   * @throws {Error} If value of `r` attribute is missing or invalid\r\n   */\r\n  static async fromElement(\r\n    element: HTMLElement,\r\n    options: Abortable,\r\n    cssRules?: CSSRules\r\n  ): Promise<Circle> {\r\n    const {\r\n      left = 0,\r\n      top = 0,\r\n      radius = 0,\r\n      ...otherParsedAttributes\r\n    } = parseAttributes(\r\n      element,\r\n      this.ATTRIBUTE_NAMES,\r\n      cssRules\r\n    ) as Partial<CircleProps>;\r\n\r\n    // this probably requires to be fixed for default origins not being top/left.\r\n\r\n    return new this({\r\n      ...otherParsedAttributes,\r\n      radius,\r\n      left: left - radius,\r\n      top: top - radius,\r\n    });\r\n  }\r\n\r\n  /* _FROM_SVG_END_ */\r\n\r\n  /**\r\n   * @todo how do we declare this??\r\n   */\r\n  static fromObject<T extends TOptions<SerializedCircleProps>>(object: T) {\r\n    return super._fromObject<Circle>(object);\r\n  }\r\n}\r\n\r\nclassRegistry.setClass(Circle);\r\nclassRegistry.setSVGClass(Circle);\r\n","import { SHARED_ATTRIBUTES } from '../parser/attributes';\r\nimport { parseAttributes } from '../parser/parseAttributes';\r\nimport type { Abortable, TClassProperties, TOptions } from '../typedefs';\r\nimport { classRegistry } from '../ClassRegistry';\r\nimport { FabricObject, cacheProperties } from './Object/FabricObject';\r\nimport { Point } from '../Point';\r\nimport { isFiller } from '../util/typeAssertions';\r\nimport type { FabricObjectProps, SerializedObjectProps } from './Object/types';\r\nimport type { ObjectEvents } from '../EventTypeDefs';\r\nimport { makeBoundingBoxFromPoints } from '../util';\r\nimport { CENTER, LEFT, TOP } from '../constants';\r\nimport type { CSSRules } from '../parser/typedefs';\r\n\r\n// @TODO this code is terrible and Line should be a special case of polyline.\r\n\r\nconst coordProps = ['x1', 'x2', 'y1', 'y2'] as const;\r\n\r\ninterface UniqueLineProps {\r\n  x1: number;\r\n  x2: number;\r\n  y1: number;\r\n  y2: number;\r\n}\r\n\r\nexport interface SerializedLineProps\r\n  extends SerializedObjectProps,\r\n    UniqueLineProps {}\r\n\r\nexport class Line<\r\n    Props extends TOptions<FabricObjectProps> = Partial<FabricObjectProps>,\r\n    SProps extends SerializedLineProps = SerializedLineProps,\r\n    EventSpec extends ObjectEvents = ObjectEvents\r\n  >\r\n  extends FabricObject<Props, SProps, EventSpec>\r\n  implements UniqueLineProps\r\n{\r\n  /**\r\n   * x value or first line edge\r\n   * @type number\r\n   * @default\r\n   */\r\n  declare x1: number;\r\n\r\n  /**\r\n   * y value or first line edge\r\n   * @type number\r\n   * @default\r\n   */\r\n  declare y1: number;\r\n\r\n  /**\r\n   * x value or second line edge\r\n   * @type number\r\n   * @default\r\n   */\r\n  declare x2: number;\r\n\r\n  /**\r\n   * y value or second line edge\r\n   * @type number\r\n   * @default\r\n   */\r\n  declare y2: number;\r\n\r\n  static type = 'Line';\r\n\r\n  static cacheProperties = [...cacheProperties, ...coordProps];\r\n  /**\r\n   * Constructor\r\n   * @param {Array} [points] Array of points\r\n   * @param {Object} [options] Options object\r\n   * @return {Line} thisArg\r\n   */\r\n  constructor([x1, y1, x2, y2] = [0, 0, 0, 0], options: Partial<Props> = {}) {\r\n    super();\r\n    Object.assign(this, Line.ownDefaults);\r\n    this.setOptions(options);\r\n    this.x1 = x1;\r\n    this.x2 = x2;\r\n    this.y1 = y1;\r\n    this.y2 = y2;\r\n    this._setWidthHeight();\r\n    const { left, top } = options;\r\n    typeof left === 'number' && this.set(LEFT, left);\r\n    typeof top === 'number' && this.set(TOP, top);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {Object} [options] Options\r\n   */\r\n  _setWidthHeight() {\r\n    const { x1, y1, x2, y2 } = this;\r\n    this.width = Math.abs(x2 - x1);\r\n    this.height = Math.abs(y2 - y1);\r\n    const { left, top, width, height } = makeBoundingBoxFromPoints([\r\n      { x: x1, y: y1 },\r\n      { x: x2, y: y2 },\r\n    ]);\r\n    const position = new Point(left + width / 2, top + height / 2);\r\n    this.setPositionByOrigin(position, CENTER, CENTER);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {String} key\r\n   * @param {*} value\r\n   */\r\n  _set(key: string, value: any) {\r\n    super._set(key, value);\r\n    if (coordProps.includes(key as keyof UniqueLineProps)) {\r\n      // this doesn't make sense very much, since setting x1 when top or left\r\n      // are already set, is just going to show a strange result since the\r\n      // line will move way more than the developer expect.\r\n      // in fabric5 it worked only when the line didn't have extra transformations,\r\n      // in fabric6 too. With extra transform they behave bad in different ways.\r\n      // This needs probably a good rework or a tutorial if you have to create a dynamic line\r\n      this._setWidthHeight();\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {CanvasRenderingContext2D} ctx Context to render on\r\n   */\r\n  _render(ctx: CanvasRenderingContext2D) {\r\n    ctx.beginPath();\r\n\r\n    const p = this.calcLinePoints();\r\n    ctx.moveTo(p.x1, p.y1);\r\n    ctx.lineTo(p.x2, p.y2);\r\n\r\n    ctx.lineWidth = this.strokeWidth;\r\n\r\n    // TODO: test this\r\n    // make sure setting \"fill\" changes color of a line\r\n    // (by copying fillStyle to strokeStyle, since line is stroked, not filled)\r\n    const origStrokeStyle = ctx.strokeStyle;\r\n    if (isFiller(this.stroke)) {\r\n      ctx.strokeStyle = this.stroke.toLive(ctx)!;\r\n    } else {\r\n      ctx.strokeStyle = this.stroke ?? ctx.fillStyle;\r\n    }\r\n    this.stroke && this._renderStroke(ctx);\r\n    ctx.strokeStyle = origStrokeStyle;\r\n  }\r\n\r\n  /**\r\n   * This function is an helper for svg import. it returns the center of the object in the svg\r\n   * untransformed coordinates\r\n   * @private\r\n   * @return {Point} center point from element coordinates\r\n   */\r\n  _findCenterFromElement(): Point {\r\n    return new Point((this.x1 + this.x2) / 2, (this.y1 + this.y2) / 2);\r\n  }\r\n\r\n  /**\r\n   * Returns object representation of an instance\r\n   * @method toObject\r\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n   * @return {Object} object representation of an instance\r\n   */\r\n  toObject<\r\n    T extends Omit<Props & TClassProperties<this>, keyof SProps>,\r\n    K extends keyof T = never\r\n  >(propertiesToInclude: K[] = []): Pick<T, K> & SProps {\r\n    return {\r\n      ...super.toObject(propertiesToInclude),\r\n      ...this.calcLinePoints(),\r\n    };\r\n  }\r\n\r\n  /*\r\n   * Calculate object dimensions from its properties\r\n   * @private\r\n   */\r\n  _getNonTransformedDimensions(): Point {\r\n    const dim = super._getNonTransformedDimensions();\r\n    if (this.strokeLineCap === 'butt') {\r\n      if (this.width === 0) {\r\n        dim.y -= this.strokeWidth;\r\n      }\r\n      if (this.height === 0) {\r\n        dim.x -= this.strokeWidth;\r\n      }\r\n    }\r\n    return dim;\r\n  }\r\n\r\n  /**\r\n   * Recalculates line points given width and height\r\n   * Those points are simply placed around the center,\r\n   * This is not useful outside internal render functions and svg output\r\n   * Is not meant to be for the developer.\r\n   * @private\r\n   */\r\n  calcLinePoints(): UniqueLineProps {\r\n    const { x1: _x1, x2: _x2, y1: _y1, y2: _y2, width, height } = this;\r\n    const xMult = _x1 <= _x2 ? -1 : 1,\r\n      yMult = _y1 <= _y2 ? -1 : 1,\r\n      x1 = (xMult * width) / 2,\r\n      y1 = (yMult * height) / 2,\r\n      x2 = (xMult * -width) / 2,\r\n      y2 = (yMult * -height) / 2;\r\n\r\n    return {\r\n      x1,\r\n      x2,\r\n      y1,\r\n      y2,\r\n    };\r\n  }\r\n\r\n  /* _FROM_SVG_START_ */\r\n\r\n  /**\r\n   * Returns svg representation of an instance\r\n   * @return {Array} an array of strings with the specific svg representation\r\n   * of the instance\r\n   */\r\n  _toSVG() {\r\n    const { x1, x2, y1, y2 } = this.calcLinePoints();\r\n    return [\r\n      '<line ',\r\n      'COMMON_PARTS',\r\n      `x1=\"${x1}\" y1=\"${y1}\" x2=\"${x2}\" y2=\"${y2}\" />\\n`,\r\n    ];\r\n  }\r\n\r\n  /**\r\n   * List of attribute names to account for when parsing SVG element (used by {@link Line.fromElement})\r\n   * @static\r\n   * @memberOf Line\r\n   * @see http://www.w3.org/TR/SVG/shapes.html#LineElement\r\n   */\r\n  static ATTRIBUTE_NAMES = SHARED_ATTRIBUTES.concat(coordProps);\r\n\r\n  /**\r\n   * Returns Line instance from an SVG element\r\n   * @static\r\n   * @memberOf Line\r\n   * @param {HTMLElement} element Element to parse\r\n   * @param {Object} [options] Options object\r\n   * @param {Function} [callback] callback function invoked after parsing\r\n   */\r\n  static async fromElement(\r\n    element: HTMLElement,\r\n    options: Abortable,\r\n    cssRules?: CSSRules\r\n  ) {\r\n    const {\r\n      x1 = 0,\r\n      y1 = 0,\r\n      x2 = 0,\r\n      y2 = 0,\r\n      ...parsedAttributes\r\n    } = parseAttributes(element, this.ATTRIBUTE_NAMES, cssRules);\r\n    return new this([x1, y1, x2, y2], parsedAttributes);\r\n  }\r\n\r\n  /* _FROM_SVG_END_ */\r\n\r\n  /**\r\n   * Returns Line instance from an object representation\r\n   * @static\r\n   * @memberOf Line\r\n   * @param {Object} object Object to create an instance from\r\n   * @returns {Promise<Line>}\r\n   */\r\n  static fromObject<T extends TOptions<SerializedLineProps>>({\r\n    x1,\r\n    y1,\r\n    x2,\r\n    y2,\r\n    ...object\r\n  }: T) {\r\n    return this._fromObject<Line>(\r\n      {\r\n        ...object,\r\n        points: [x1, y1, x2, y2],\r\n      },\r\n      {\r\n        extraParam: 'points',\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\nclassRegistry.setClass(Line);\r\nclassRegistry.setSVGClass(Line);\r\n","import { classRegistry } from '../ClassRegistry';\r\nimport { FabricObject } from './Object/FabricObject';\r\nimport type { FabricObjectProps, SerializedObjectProps } from './Object/types';\r\nimport type { TClassProperties, TOptions } from '../typedefs';\r\nimport type { ObjectEvents } from '../EventTypeDefs';\r\n\r\nexport const triangleDefaultValues: Partial<TClassProperties<Triangle>> = {\r\n  width: 100,\r\n  height: 100,\r\n};\r\n\r\nexport class Triangle<\r\n    Props extends TOptions<FabricObjectProps> = Partial<FabricObjectProps>,\r\n    SProps extends SerializedObjectProps = SerializedObjectProps,\r\n    EventSpec extends ObjectEvents = ObjectEvents\r\n  >\r\n  extends FabricObject<Props, SProps, EventSpec>\r\n  implements FabricObjectProps\r\n{\r\n  static type = 'Triangle';\r\n\r\n  static ownDefaults = triangleDefaultValues;\r\n\r\n  static getDefaults(): Record<string, any> {\r\n    return { ...super.getDefaults(), ...Triangle.ownDefaults };\r\n  }\r\n\r\n  /**\r\n   * Constructor\r\n   * @param {Object} [options] Options object\r\n   */\r\n  constructor(options?: Props) {\r\n    super();\r\n    Object.assign(this, Triangle.ownDefaults);\r\n    this.setOptions(options);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {CanvasRenderingContext2D} ctx Context to render on\r\n   */\r\n  _render(ctx: CanvasRenderingContext2D) {\r\n    const widthBy2 = this.width / 2,\r\n      heightBy2 = this.height / 2;\r\n\r\n    ctx.beginPath();\r\n    ctx.moveTo(-widthBy2, heightBy2);\r\n    ctx.lineTo(0, -heightBy2);\r\n    ctx.lineTo(widthBy2, heightBy2);\r\n    ctx.closePath();\r\n\r\n    this._renderPaintInOrder(ctx);\r\n  }\r\n\r\n  /**\r\n   * Returns svg representation of an instance\r\n   * @return {Array} an array of strings with the specific svg representation\r\n   * of the instance\r\n   */\r\n  _toSVG() {\r\n    const widthBy2 = this.width / 2,\r\n      heightBy2 = this.height / 2,\r\n      points = `${-widthBy2} ${heightBy2},0 ${-heightBy2},${widthBy2} ${heightBy2}`;\r\n    return ['<polygon ', 'COMMON_PARTS', 'points=\"', points, '\" />'];\r\n  }\r\n}\r\n\r\nclassRegistry.setClass(Triangle);\r\nclassRegistry.setSVGClass(Triangle);\r\n","import { SCALE_X, SCALE_Y, twoMathPi } from '../constants';\r\nimport { SHARED_ATTRIBUTES } from '../parser/attributes';\r\nimport { parseAttributes } from '../parser/parseAttributes';\r\nimport type { Abortable, TClassProperties, TOptions } from '../typedefs';\r\nimport { classRegistry } from '../ClassRegistry';\r\nimport { FabricObject, cacheProperties } from './Object/FabricObject';\r\nimport type { FabricObjectProps, SerializedObjectProps } from './Object/types';\r\nimport type { ObjectEvents } from '../EventTypeDefs';\r\nimport type { CSSRules } from '../parser/typedefs';\r\n\r\nexport const ellipseDefaultValues: Partial<TClassProperties<Ellipse>> = {\r\n  rx: 0,\r\n  ry: 0,\r\n};\r\n\r\ninterface UniqueEllipseProps {\r\n  rx: number;\r\n  ry: number;\r\n}\r\n\r\nexport interface SerializedEllipseProps\r\n  extends SerializedObjectProps,\r\n    UniqueEllipseProps {}\r\n\r\nexport interface EllipseProps extends FabricObjectProps, UniqueEllipseProps {}\r\n\r\nconst ELLIPSE_PROPS = ['rx', 'ry'] as const;\r\n\r\nexport class Ellipse<\r\n    Props extends TOptions<EllipseProps> = Partial<EllipseProps>,\r\n    SProps extends SerializedEllipseProps = SerializedEllipseProps,\r\n    EventSpec extends ObjectEvents = ObjectEvents\r\n  >\r\n  extends FabricObject<Props, SProps, EventSpec>\r\n  implements EllipseProps\r\n{\r\n  /**\r\n   * Horizontal radius\r\n   * @type Number\r\n   * @default\r\n   */\r\n  declare rx: number;\r\n\r\n  /**\r\n   * Vertical radius\r\n   * @type Number\r\n   * @default\r\n   */\r\n  declare ry: number;\r\n\r\n  static type = 'Ellipse';\r\n\r\n  static cacheProperties = [...cacheProperties, ...ELLIPSE_PROPS];\r\n\r\n  static ownDefaults = ellipseDefaultValues;\r\n\r\n  static getDefaults(): Record<string, any> {\r\n    return {\r\n      ...super.getDefaults(),\r\n      ...Ellipse.ownDefaults,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Constructor\r\n   * @param {Object} [options] Options object\r\n   */\r\n  constructor(options?: Props) {\r\n    super();\r\n    Object.assign(this, Ellipse.ownDefaults);\r\n    this.setOptions(options);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {String} key\r\n   * @param {*} value\r\n   * @return {Ellipse} thisArg\r\n   */\r\n  _set(key: string, value: any) {\r\n    super._set(key, value);\r\n    switch (key) {\r\n      case 'rx':\r\n        this.rx = value;\r\n        this.set('width', value * 2);\r\n        break;\r\n\r\n      case 'ry':\r\n        this.ry = value;\r\n        this.set('height', value * 2);\r\n        break;\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Returns horizontal radius of an object (according to how an object is scaled)\r\n   * @return {Number}\r\n   */\r\n  getRx() {\r\n    return this.get('rx') * this.get(SCALE_X);\r\n  }\r\n\r\n  /**\r\n   * Returns Vertical radius of an object (according to how an object is scaled)\r\n   * @return {Number}\r\n   */\r\n  getRy() {\r\n    return this.get('ry') * this.get(SCALE_Y);\r\n  }\r\n\r\n  /**\r\n   * Returns object representation of an instance\r\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n   * @return {Object} object representation of an instance\r\n   */\r\n  toObject<\r\n    T extends Omit<Props & TClassProperties<this>, keyof SProps>,\r\n    K extends keyof T = never\r\n  >(propertiesToInclude: K[] = []): Pick<T, K> & SProps {\r\n    return super.toObject([...ELLIPSE_PROPS, ...propertiesToInclude]);\r\n  }\r\n\r\n  /**\r\n   * Returns svg representation of an instance\r\n   * @return {Array} an array of strings with the specific svg representation\r\n   * of the instance\r\n   */\r\n  _toSVG(): string[] {\r\n    return [\r\n      '<ellipse ',\r\n      'COMMON_PARTS',\r\n      `cx=\"0\" cy=\"0\" rx=\"${this.rx}\" ry=\"${this.ry}\" />\\n`,\r\n    ];\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {CanvasRenderingContext2D} ctx context to render on\r\n   */\r\n  _render(ctx: CanvasRenderingContext2D) {\r\n    ctx.beginPath();\r\n    ctx.save();\r\n    ctx.transform(1, 0, 0, this.ry / this.rx, 0, 0);\r\n    ctx.arc(0, 0, this.rx, 0, twoMathPi, false);\r\n    ctx.restore();\r\n    this._renderPaintInOrder(ctx);\r\n  }\r\n\r\n  /* _FROM_SVG_START_ */\r\n\r\n  /**\r\n   * List of attribute names to account for when parsing SVG element (used by {@link Ellipse.fromElement})\r\n   * @static\r\n   * @memberOf Ellipse\r\n   * @see http://www.w3.org/TR/SVG/shapes.html#EllipseElement\r\n   */\r\n  static ATTRIBUTE_NAMES = [...SHARED_ATTRIBUTES, 'cx', 'cy', 'rx', 'ry'];\r\n\r\n  /**\r\n   * Returns {@link Ellipse} instance from an SVG element\r\n   * @static\r\n   * @memberOf Ellipse\r\n   * @param {HTMLElement} element Element to parse\r\n   * @return {Ellipse}\r\n   */\r\n  static async fromElement(\r\n    element: HTMLElement,\r\n    options: Abortable,\r\n    cssRules?: CSSRules\r\n  ) {\r\n    const parsedAttributes = parseAttributes(\r\n      element,\r\n      this.ATTRIBUTE_NAMES,\r\n      cssRules\r\n    );\r\n\r\n    parsedAttributes.left = (parsedAttributes.left || 0) - parsedAttributes.rx;\r\n    parsedAttributes.top = (parsedAttributes.top || 0) - parsedAttributes.ry;\r\n    return new this(parsedAttributes);\r\n  }\r\n\r\n  /* _FROM_SVG_END_ */\r\n}\r\n\r\nclassRegistry.setClass(Ellipse);\r\nclassRegistry.setSVGClass(Ellipse);\r\n","import type { XY } from '../Point';\r\n\r\n/**\r\n * Parses \"points\" attribute, returning an array of values\r\n * @static\r\n * @memberOf fabric\r\n * @param {String} points points attribute string\r\n * @return {Array} array of points\r\n */\r\nexport function parsePointsAttribute(points: string | null): XY[] {\r\n  // points attribute is required and must not be empty\r\n  if (!points) {\r\n    return [];\r\n  }\r\n\r\n  // replace commas with whitespace and remove bookending whitespace\r\n  const pointsSplit: string[] = points.replace(/,/g, ' ').trim().split(/\\s+/);\r\n\r\n  const parsedPoints = [];\r\n\r\n  for (let i = 0; i < pointsSplit.length; i += 2) {\r\n    parsedPoints.push({\r\n      x: parseFloat(pointsSplit[i]),\r\n      y: parseFloat(pointsSplit[i + 1]),\r\n    });\r\n  }\r\n\r\n  // odd number of points is an error\r\n  // if (parsedPoints.length % 2 !== 0) {\r\n  //   return null;\r\n  // }\r\n  return parsedPoints;\r\n}\r\n","import { config } from '../config';\r\nimport { SHARED_ATTRIBUTES } from '../parser/attributes';\r\nimport { parseAttributes } from '../parser/parseAttributes';\r\nimport { parsePointsAttribute } from '../parser/parsePointsAttribute';\r\nimport type { XY } from '../Point';\r\nimport { Point } from '../Point';\r\nimport type { Abortable, TClassProperties, TOptions } from '../typedefs';\r\nimport { classRegistry } from '../ClassRegistry';\r\nimport { makeBoundingBoxFromPoints } from '../util/misc/boundingBoxFromPoints';\r\nimport { calcDimensionsMatrix, transformPoint } from '../util/misc/matrix';\r\nimport { projectStrokeOnPoints } from '../util/misc/projectStroke';\r\nimport type { TProjectStrokeOnPointsOptions } from '../util/misc/projectStroke/types';\r\nimport { degreesToRadians } from '../util/misc/radiansDegreesConversion';\r\nimport { toFixed } from '../util/misc/toFixed';\r\nimport { FabricObject, cacheProperties } from './Object/FabricObject';\r\nimport type { FabricObjectProps, SerializedObjectProps } from './Object/types';\r\nimport type { ObjectEvents } from '../EventTypeDefs';\r\nimport { cloneDeep } from '../util/internals/cloneDeep';\r\nimport {\r\n  CENTER,\r\n  LEFT,\r\n  SCALE_X,\r\n  SCALE_Y,\r\n  SKEW_X,\r\n  SKEW_Y,\r\n  TOP,\r\n} from '../constants';\r\nimport type { CSSRules } from '../parser/typedefs';\r\n\r\nexport const polylineDefaultValues: Partial<TClassProperties<Polyline>> = {\r\n  /**\r\n   * @deprecated transient option soon to be removed in favor of a different design\r\n   */\r\n  exactBoundingBox: false,\r\n};\r\n\r\nexport interface SerializedPolylineProps extends SerializedObjectProps {\r\n  points: XY[];\r\n}\r\n\r\nexport class Polyline<\r\n  Props extends TOptions<FabricObjectProps> = Partial<FabricObjectProps>,\r\n  SProps extends SerializedPolylineProps = SerializedPolylineProps,\r\n  EventSpec extends ObjectEvents = ObjectEvents\r\n> extends FabricObject<Props, SProps, EventSpec> {\r\n  /**\r\n   * Points array\r\n   * @type Array\r\n   * @default\r\n   */\r\n  declare points: XY[];\r\n\r\n  /**\r\n   * WARNING: Feature in progress\r\n   * Calculate the exact bounding box taking in account strokeWidth on acute angles\r\n   * this will be turned to true by default on fabric 6.0\r\n   * maybe will be left in as an optimization since calculations may be slow\r\n   * @deprecated transient option soon to be removed in favor of a different design\r\n   * @type Boolean\r\n   * @default false\r\n   */\r\n  declare exactBoundingBox: boolean;\r\n\r\n  private declare initialized: true | undefined;\r\n\r\n  static ownDefaults = polylineDefaultValues;\r\n\r\n  static type = 'Polyline';\r\n\r\n  static getDefaults(): Record<string, any> {\r\n    return {\r\n      ...super.getDefaults(),\r\n      ...Polyline.ownDefaults,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * A list of properties that if changed trigger a recalculation of dimensions\r\n   * @todo check if you really need to recalculate for all cases\r\n   */\r\n  static layoutProperties: (keyof Polyline)[] = [\r\n    SKEW_X,\r\n    SKEW_Y,\r\n    'strokeLineCap',\r\n    'strokeLineJoin',\r\n    'strokeMiterLimit',\r\n    'strokeWidth',\r\n    'strokeUniform',\r\n    'points',\r\n  ];\r\n\r\n  declare pathOffset: Point;\r\n\r\n  declare strokeOffset: Point;\r\n\r\n  static cacheProperties = [...cacheProperties, 'points'];\r\n\r\n  strokeDiff: Point;\r\n\r\n  /**\r\n   * Constructor\r\n   * @param {Array} points Array of points (where each point is an object with x and y)\r\n   * @param {Object} [options] Options object\r\n   * @return {Polyline} thisArg\r\n   * @example\r\n   * var poly = new Polyline([\r\n   *     { x: 10, y: 10 },\r\n   *     { x: 50, y: 30 },\r\n   *     { x: 40, y: 70 },\r\n   *     { x: 60, y: 50 },\r\n   *     { x: 100, y: 150 },\r\n   *     { x: 40, y: 100 }\r\n   *   ], {\r\n   *   stroke: 'red',\r\n   *   left: 100,\r\n   *   top: 100\r\n   * });\r\n   */\r\n  constructor(points: XY[] = [], options: Props = {} as Props) {\r\n    super();\r\n    Object.assign(this, Polyline.ownDefaults);\r\n    this.setOptions(options);\r\n    this.points = points;\r\n    const { left, top } = options;\r\n    this.initialized = true;\r\n    this.setBoundingBox(true);\r\n    typeof left === 'number' && this.set(LEFT, left);\r\n    typeof top === 'number' && this.set(TOP, top);\r\n  }\r\n\r\n  protected isOpen() {\r\n    return true;\r\n  }\r\n\r\n  private _projectStrokeOnPoints(options: TProjectStrokeOnPointsOptions) {\r\n    return projectStrokeOnPoints(this.points, options, this.isOpen());\r\n  }\r\n\r\n  /**\r\n   * Calculate the polygon bounding box\r\n   * @private\r\n   */\r\n  _calcDimensions(options?: Partial<TProjectStrokeOnPointsOptions>) {\r\n    options = {\r\n      scaleX: this.scaleX,\r\n      scaleY: this.scaleY,\r\n      skewX: this.skewX,\r\n      skewY: this.skewY,\r\n      strokeLineCap: this.strokeLineCap,\r\n      strokeLineJoin: this.strokeLineJoin,\r\n      strokeMiterLimit: this.strokeMiterLimit,\r\n      strokeUniform: this.strokeUniform,\r\n      strokeWidth: this.strokeWidth,\r\n      ...(options || {}),\r\n    };\r\n    const points = this.exactBoundingBox\r\n      ? this._projectStrokeOnPoints(\r\n          options as TProjectStrokeOnPointsOptions\r\n        ).map((projection) => projection.projectedPoint)\r\n      : this.points;\r\n    if (points.length === 0) {\r\n      return {\r\n        left: 0,\r\n        top: 0,\r\n        width: 0,\r\n        height: 0,\r\n        pathOffset: new Point(),\r\n        strokeOffset: new Point(),\r\n        strokeDiff: new Point(),\r\n      };\r\n    }\r\n    const bbox = makeBoundingBoxFromPoints(points),\r\n      // Remove scale effect, since it's applied after\r\n      matrix = calcDimensionsMatrix({ ...options, scaleX: 1, scaleY: 1 }),\r\n      bboxNoStroke = makeBoundingBoxFromPoints(\r\n        this.points.map((p) => transformPoint(p, matrix, true))\r\n      ),\r\n      scale = new Point(this.scaleX, this.scaleY);\r\n    let offsetX = bbox.left + bbox.width / 2,\r\n      offsetY = bbox.top + bbox.height / 2;\r\n    if (this.exactBoundingBox) {\r\n      offsetX = offsetX - offsetY * Math.tan(degreesToRadians(this.skewX));\r\n      // Order of those assignments is important.\r\n      // offsetY relies on offsetX being already changed by the line above\r\n      offsetY = offsetY - offsetX * Math.tan(degreesToRadians(this.skewY));\r\n    }\r\n\r\n    return {\r\n      ...bbox,\r\n      pathOffset: new Point(offsetX, offsetY),\r\n      strokeOffset: new Point(bboxNoStroke.left, bboxNoStroke.top)\r\n        .subtract(new Point(bbox.left, bbox.top))\r\n        .multiply(scale),\r\n      strokeDiff: new Point(bbox.width, bbox.height)\r\n        .subtract(new Point(bboxNoStroke.width, bboxNoStroke.height))\r\n        .multiply(scale),\r\n    };\r\n  }\r\n\r\n  /**\r\n   * This function is an helper for svg import. it returns the center of the object in the svg\r\n   * untransformed coordinates, by look at the polyline/polygon points.\r\n   * @private\r\n   * @return {Point} center point from element coordinates\r\n   */\r\n  _findCenterFromElement(): Point {\r\n    const bbox = makeBoundingBoxFromPoints(this.points);\r\n    return new Point(bbox.left + bbox.width / 2, bbox.top + bbox.height / 2);\r\n  }\r\n\r\n  setDimensions() {\r\n    this.setBoundingBox();\r\n  }\r\n\r\n  setBoundingBox(adjustPosition?: boolean) {\r\n    const { left, top, width, height, pathOffset, strokeOffset, strokeDiff } =\r\n      this._calcDimensions();\r\n    this.set({ width, height, pathOffset, strokeOffset, strokeDiff });\r\n    adjustPosition &&\r\n      this.setPositionByOrigin(\r\n        new Point(left + width / 2, top + height / 2),\r\n        CENTER,\r\n        CENTER\r\n      );\r\n  }\r\n\r\n  /**\r\n   * @deprecated intermidiate method to be removed, do not use\r\n   */\r\n  protected isStrokeAccountedForInDimensions() {\r\n    return this.exactBoundingBox;\r\n  }\r\n\r\n  /**\r\n   * @override stroke is taken in account in size\r\n   */\r\n  _getNonTransformedDimensions() {\r\n    return this.exactBoundingBox\r\n      ? // TODO: fix this\r\n        new Point(this.width, this.height)\r\n      : super._getNonTransformedDimensions();\r\n  }\r\n\r\n  /**\r\n   * @override stroke and skewing are taken into account when projecting stroke on points,\r\n   * therefore we don't want the default calculation to account for skewing as well.\r\n   * Though it is possible to pass `width` and `height` in `options`, doing so is very strange, use with discretion.\r\n   *\r\n   * @private\r\n   */\r\n  _getTransformedDimensions(options: any = {}) {\r\n    if (this.exactBoundingBox) {\r\n      let size: Point;\r\n      /* When `strokeUniform = true`, any changes to the properties require recalculating the `width` and `height` because\r\n        the stroke projections are affected.\r\n        When `strokeUniform = false`, we don't need to recalculate for scale transformations, as the effect of scale on\r\n        projections follows a linear function (e.g. scaleX of 2 just multiply width by 2)*/\r\n      if (\r\n        Object.keys(options).some(\r\n          (key) =>\r\n            this.strokeUniform ||\r\n            (this.constructor as typeof Polyline).layoutProperties.includes(\r\n              key as keyof TProjectStrokeOnPointsOptions\r\n            )\r\n        )\r\n      ) {\r\n        const { width, height } = this._calcDimensions(options);\r\n        size = new Point(options.width ?? width, options.height ?? height);\r\n      } else {\r\n        size = new Point(\r\n          options.width ?? this.width,\r\n          options.height ?? this.height\r\n        );\r\n      }\r\n      return size.multiply(\r\n        new Point(options.scaleX || this.scaleX, options.scaleY || this.scaleY)\r\n      );\r\n    } else {\r\n      return super._getTransformedDimensions(options);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Recalculates dimensions when changing skew and scale\r\n   * @private\r\n   */\r\n  _set(key: string, value: any) {\r\n    const changed = this.initialized && this[key as keyof this] !== value;\r\n    const output = super._set(key, value);\r\n    if (\r\n      this.exactBoundingBox &&\r\n      changed &&\r\n      (((key === SCALE_X || key === SCALE_Y) &&\r\n        this.strokeUniform &&\r\n        (this.constructor as typeof Polyline).layoutProperties.includes(\r\n          'strokeUniform'\r\n        )) ||\r\n        (this.constructor as typeof Polyline).layoutProperties.includes(\r\n          key as keyof Polyline\r\n        ))\r\n    ) {\r\n      this.setDimensions();\r\n    }\r\n    return output;\r\n  }\r\n\r\n  /**\r\n   * Returns object representation of an instance\r\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n   * @return {Object} Object representation of an instance\r\n   */\r\n  toObject<\r\n    T extends Omit<Props & TClassProperties<this>, keyof SProps>,\r\n    K extends keyof T = never\r\n  >(propertiesToInclude: K[] = []): Pick<T, K> & SProps {\r\n    return {\r\n      ...super.toObject(propertiesToInclude),\r\n      points: cloneDeep(this.points),\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Returns svg representation of an instance\r\n   * @return {Array} an array of strings with the specific svg representation\r\n   * of the instance\r\n   */\r\n  _toSVG() {\r\n    const points = [],\r\n      diffX = this.pathOffset.x,\r\n      diffY = this.pathOffset.y,\r\n      NUM_FRACTION_DIGITS = config.NUM_FRACTION_DIGITS;\r\n\r\n    for (let i = 0, len = this.points.length; i < len; i++) {\r\n      points.push(\r\n        toFixed(this.points[i].x - diffX, NUM_FRACTION_DIGITS),\r\n        ',',\r\n        toFixed(this.points[i].y - diffY, NUM_FRACTION_DIGITS),\r\n        ' '\r\n      );\r\n    }\r\n    return [\r\n      `<${\r\n        (this.constructor as typeof Polyline).type.toLowerCase() as\r\n          | 'polyline'\r\n          | 'polygon'\r\n      } `,\r\n      'COMMON_PARTS',\r\n      `points=\"${points.join('')}\" />\\n`,\r\n    ];\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {CanvasRenderingContext2D} ctx Context to render on\r\n   */\r\n  _render(ctx: CanvasRenderingContext2D) {\r\n    const len = this.points.length,\r\n      x = this.pathOffset.x,\r\n      y = this.pathOffset.y;\r\n\r\n    if (!len || isNaN(this.points[len - 1].y)) {\r\n      // do not draw if no points or odd points\r\n      // NaN comes from parseFloat of a empty string in parser\r\n      return;\r\n    }\r\n    ctx.beginPath();\r\n    ctx.moveTo(this.points[0].x - x, this.points[0].y - y);\r\n    for (let i = 0; i < len; i++) {\r\n      const point = this.points[i];\r\n      ctx.lineTo(point.x - x, point.y - y);\r\n    }\r\n    !this.isOpen() && ctx.closePath();\r\n    this._renderPaintInOrder(ctx);\r\n  }\r\n\r\n  /**\r\n   * Returns complexity of an instance\r\n   * @return {Number} complexity of this instance\r\n   */\r\n  complexity(): number {\r\n    return this.points.length;\r\n  }\r\n\r\n  /* _FROM_SVG_START_ */\r\n\r\n  /**\r\n   * List of attribute names to account for when parsing SVG element (used by {@link Polyline.fromElement})\r\n   * @static\r\n   * @memberOf Polyline\r\n   * @see: http://www.w3.org/TR/SVG/shapes.html#PolylineElement\r\n   */\r\n  static ATTRIBUTE_NAMES = [...SHARED_ATTRIBUTES];\r\n\r\n  /**\r\n   * Returns Polyline instance from an SVG element\r\n   * @static\r\n   * @memberOf Polyline\r\n   * @param {HTMLElement} element Element to parser\r\n   * @param {Object} [options] Options object\r\n   */\r\n  static async fromElement(\r\n    element: HTMLElement,\r\n    options: Abortable,\r\n    cssRules?: CSSRules\r\n  ) {\r\n    const points = parsePointsAttribute(element.getAttribute('points')),\r\n      // we omit left and top to instruct the constructor to position the object using the bbox\r\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n      { left, top, ...parsedAttributes } = parseAttributes(\r\n        element,\r\n        this.ATTRIBUTE_NAMES,\r\n        cssRules\r\n      );\r\n    return new this(points, {\r\n      ...parsedAttributes,\r\n      ...options,\r\n    });\r\n  }\r\n\r\n  /* _FROM_SVG_END_ */\r\n\r\n  /**\r\n   * Returns Polyline instance from an object representation\r\n   * @static\r\n   * @memberOf Polyline\r\n   * @param {Object} object Object to create an instance from\r\n   * @returns {Promise<Polyline>}\r\n   */\r\n  static fromObject<T extends TOptions<SerializedPolylineProps>>(object: T) {\r\n    return this._fromObject<Polyline>(object, {\r\n      extraParam: 'points',\r\n    });\r\n  }\r\n}\r\n\r\nclassRegistry.setClass(Polyline);\r\nclassRegistry.setSVGClass(Polyline);\r\n","import { classRegistry } from '../ClassRegistry';\r\nimport { Polyline, polylineDefaultValues } from './Polyline';\r\n\r\nexport class Polygon extends Polyline {\r\n  static ownDefaults = polylineDefaultValues;\r\n\r\n  static type = 'Polygon';\r\n\r\n  protected isOpen() {\r\n    return false;\r\n  }\r\n}\r\n\r\nclassRegistry.setClass(Polygon);\r\nclassRegistry.setSVGClass(Polygon);\r\n","import { FILL, LEFT, STROKE, reNewline } from '../../constants';\r\nimport type { TClassProperties } from '../../typedefs';\r\nimport type { FabricText } from './Text';\r\n\r\nconst fontProperties = [\r\n  'fontSize',\r\n  'fontWeight',\r\n  'fontFamily',\r\n  'fontStyle',\r\n] as const;\r\n\r\nexport const textDecorationProperties = [\r\n  'underline',\r\n  'overline',\r\n  'linethrough',\r\n] as const;\r\n\r\nexport const textLayoutProperties: string[] = [\r\n  ...fontProperties,\r\n  'lineHeight',\r\n  'text',\r\n  'charSpacing',\r\n  'textAlign',\r\n  'styles',\r\n  'path',\r\n  'pathStartOffset',\r\n  'pathSide',\r\n  'pathAlign',\r\n];\r\n\r\nexport const additionalProps = [\r\n  ...textLayoutProperties,\r\n  ...textDecorationProperties,\r\n  'textBackgroundColor',\r\n  'direction',\r\n] as const;\r\n\r\nexport type StylePropertiesType =\r\n  | 'fill'\r\n  | 'stroke'\r\n  | 'strokeWidth'\r\n  | 'fontSize'\r\n  | 'fontFamily'\r\n  | 'fontWeight'\r\n  | 'fontStyle'\r\n  | 'textBackgroundColor'\r\n  | 'deltaY'\r\n  | 'overline'\r\n  | 'underline'\r\n  | 'linethrough';\r\n\r\nexport const styleProperties: Readonly<StylePropertiesType[]> = [\r\n  ...fontProperties,\r\n  ...textDecorationProperties,\r\n  STROKE,\r\n  'strokeWidth',\r\n  FILL,\r\n  'deltaY',\r\n  'textBackgroundColor',\r\n] as const;\r\n\r\n// @TODO: Many things here are configuration related and shouldn't be on the class nor prototype\r\n// regexes, list of properties that are not suppose to change by instances, magic consts.\r\n// this will be a separated effort\r\nexport const textDefaultValues: Partial<TClassProperties<FabricText>> = {\r\n  _reNewline: reNewline,\r\n  _reSpacesAndTabs: /[ \\t\\r]/g,\r\n  _reSpaceAndTab: /[ \\t\\r]/,\r\n  _reWords: /\\S+/g,\r\n  fontSize: 40,\r\n  fontWeight: 'normal',\r\n  fontFamily: 'Times New Roman',\r\n  underline: false,\r\n  overline: false,\r\n  linethrough: false,\r\n  textAlign: LEFT,\r\n  fontStyle: 'normal',\r\n  lineHeight: 1.16,\r\n  superscript: {\r\n    size: 0.6, // fontSize factor\r\n    baseline: -0.35, // baseline-shift factor (upwards)\r\n  },\r\n  subscript: {\r\n    size: 0.6, // fontSize factor\r\n    baseline: 0.11, // baseline-shift factor (downwards)\r\n  },\r\n  textBackgroundColor: '',\r\n  stroke: null,\r\n  shadow: null,\r\n  path: undefined,\r\n  pathStartOffset: 0,\r\n  pathSide: LEFT,\r\n  pathAlign: 'baseline',\r\n  _fontSizeFraction: 0.222,\r\n  offsets: {\r\n    underline: 0.1,\r\n    linethrough: -0.315,\r\n    overline: -0.88,\r\n  },\r\n  _fontSizeMult: 1.13,\r\n  charSpacing: 0,\r\n  deltaY: 0,\r\n  direction: 'ltr',\r\n  CACHE_FONT_SIZE: 400,\r\n  MIN_TEXT_WIDTH: 2,\r\n};\r\n\r\nexport const JUSTIFY = 'justify';\r\nexport const JUSTIFY_LEFT = 'justify-left';\r\nexport const JUSTIFY_RIGHT = 'justify-right';\r\nexport const JUSTIFY_CENTER = 'justify-center';\r\n","import type { ObjectEvents } from '../../EventTypeDefs';\r\nimport type { FabricObjectProps, SerializedObjectProps } from '../Object/types';\r\nimport type { TOptions } from '../../typedefs';\r\nimport { FabricObject } from '../Object/FabricObject';\r\nimport { styleProperties } from './constants';\r\nimport type { StylePropertiesType } from './constants';\r\nimport type { FabricText } from './Text';\r\nimport { pick } from '../../util';\r\nimport { pickBy } from '../../util/misc/pick';\r\n\r\nexport type CompleteTextStyleDeclaration = Pick<\r\n  FabricText,\r\n  StylePropertiesType\r\n>;\r\n\r\nexport type TextStyleDeclaration = Partial<CompleteTextStyleDeclaration>;\r\n\r\nexport type TextStyle = {\r\n  [line: number | string]: { [char: number | string]: TextStyleDeclaration };\r\n};\r\n\r\nexport abstract class StyledText<\r\n  Props extends TOptions<FabricObjectProps> = Partial<FabricObjectProps>,\r\n  SProps extends SerializedObjectProps = SerializedObjectProps,\r\n  EventSpec extends ObjectEvents = ObjectEvents\r\n> extends FabricObject<Props, SProps, EventSpec> {\r\n  declare abstract styles: TextStyle;\r\n  protected declare abstract _textLines: string[][];\r\n  protected declare _forceClearCache: boolean;\r\n  static _styleProperties: Readonly<StylePropertiesType[]> = styleProperties;\r\n  abstract get2DCursorLocation(\r\n    selectionStart: number,\r\n    skipWrapping?: boolean\r\n  ): { charIndex: number; lineIndex: number };\r\n\r\n  /**\r\n   * Returns true if object has no styling or no styling in a line\r\n   * @param {Number} lineIndex , lineIndex is on wrapped lines.\r\n   * @return {Boolean}\r\n   */\r\n  isEmptyStyles(lineIndex?: number): boolean {\r\n    if (!this.styles) {\r\n      return true;\r\n    }\r\n    if (typeof lineIndex !== 'undefined' && !this.styles[lineIndex]) {\r\n      return true;\r\n    }\r\n    const obj =\r\n      typeof lineIndex === 'undefined'\r\n        ? this.styles\r\n        : { line: this.styles[lineIndex] };\r\n    for (const p1 in obj) {\r\n      for (const p2 in obj[p1]) {\r\n        // eslint-disable-next-line no-unused-vars\r\n        for (const p3 in obj[p1][p2]) {\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Returns true if object has a style property or has it ina specified line\r\n   * This function is used to detect if a text will use a particular property or not.\r\n   * @param {String} property to check for\r\n   * @param {Number} lineIndex to check the style on\r\n   * @return {Boolean}\r\n   */\r\n  styleHas(property: keyof TextStyleDeclaration, lineIndex?: number): boolean {\r\n    if (!this.styles) {\r\n      return false;\r\n    }\r\n    if (typeof lineIndex !== 'undefined' && !this.styles[lineIndex]) {\r\n      return false;\r\n    }\r\n    const obj =\r\n      typeof lineIndex === 'undefined'\r\n        ? this.styles\r\n        : { 0: this.styles[lineIndex] };\r\n    // eslint-disable-next-line\r\n    for (const p1 in obj) {\r\n      // eslint-disable-next-line\r\n      for (const p2 in obj[p1]) {\r\n        if (typeof obj[p1][p2][property] !== 'undefined') {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Check if characters in a text have a value for a property\r\n   * whose value matches the textbox's value for that property.  If so,\r\n   * the character-level property is deleted.  If the character\r\n   * has no other properties, then it is also deleted.  Finally,\r\n   * if the line containing that character has no other characters\r\n   * then it also is deleted.\r\n   *\r\n   * @param {string} property The property to compare between characters and text.\r\n   */\r\n  cleanStyle(property: keyof TextStyleDeclaration) {\r\n    if (!this.styles) {\r\n      return false;\r\n    }\r\n    const obj = this.styles;\r\n    let stylesCount = 0,\r\n      letterCount,\r\n      stylePropertyValue,\r\n      allStyleObjectPropertiesMatch = true,\r\n      graphemeCount = 0;\r\n    for (const p1 in obj) {\r\n      letterCount = 0;\r\n      for (const p2 in obj[p1]) {\r\n        const styleObject = obj[p1][p2] || {},\r\n          stylePropertyHasBeenSet = styleObject[property] !== undefined;\r\n\r\n        stylesCount++;\r\n\r\n        if (stylePropertyHasBeenSet) {\r\n          if (!stylePropertyValue) {\r\n            stylePropertyValue = styleObject[property];\r\n          } else if (styleObject[property] !== stylePropertyValue) {\r\n            allStyleObjectPropertiesMatch = false;\r\n          }\r\n\r\n          if (styleObject[property] === this[property as keyof this]) {\r\n            delete styleObject[property];\r\n          }\r\n        } else {\r\n          allStyleObjectPropertiesMatch = false;\r\n        }\r\n\r\n        if (Object.keys(styleObject).length !== 0) {\r\n          letterCount++;\r\n        } else {\r\n          delete obj[p1][p2];\r\n        }\r\n      }\r\n\r\n      if (letterCount === 0) {\r\n        delete obj[p1];\r\n      }\r\n    }\r\n    // if every grapheme has the same style set then\r\n    // delete those styles and set it on the parent\r\n    for (let i = 0; i < this._textLines.length; i++) {\r\n      graphemeCount += this._textLines[i].length;\r\n    }\r\n    if (allStyleObjectPropertiesMatch && stylesCount === graphemeCount) {\r\n      // @ts-expect-error conspiracy theory of TS\r\n      this[property as keyof this] = stylePropertyValue;\r\n      this.removeStyle(property);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove a style property or properties from all individual character styles\r\n   * in a text object.  Deletes the character style object if it contains no other style\r\n   * props.  Deletes a line style object if it contains no other character styles.\r\n   *\r\n   * @param {String} props The property to remove from character styles.\r\n   */\r\n  removeStyle(property: keyof TextStyleDeclaration) {\r\n    if (!this.styles) {\r\n      return;\r\n    }\r\n    const obj = this.styles;\r\n    let line, lineNum, charNum;\r\n    for (lineNum in obj) {\r\n      line = obj[lineNum];\r\n      for (charNum in line) {\r\n        delete line[charNum][property];\r\n        if (Object.keys(line[charNum]).length === 0) {\r\n          delete line[charNum];\r\n        }\r\n      }\r\n      if (Object.keys(line).length === 0) {\r\n        delete obj[lineNum];\r\n      }\r\n    }\r\n  }\r\n\r\n  private _extendStyles(index: number, style: TextStyleDeclaration): void {\r\n    const { lineIndex, charIndex } = this.get2DCursorLocation(index);\r\n\r\n    if (!this._getLineStyle(lineIndex)) {\r\n      this._setLineStyle(lineIndex);\r\n    }\r\n\r\n    const newStyle = pickBy(\r\n      {\r\n        // first create a new object that is a merge of existing and new\r\n        ...this._getStyleDeclaration(lineIndex, charIndex),\r\n        ...style,\r\n        // use the predicate to discard undefined values\r\n      },\r\n      (value) => value !== undefined\r\n    );\r\n\r\n    // finally assign to the old position the new style\r\n    this._setStyleDeclaration(lineIndex, charIndex, newStyle);\r\n  }\r\n\r\n  /**\r\n   * Gets style of a current selection/cursor (at the start position)\r\n   * @param {Number} startIndex Start index to get styles at\r\n   * @param {Number} endIndex End index to get styles at, if not specified startIndex + 1\r\n   * @param {Boolean} [complete] get full style or not\r\n   * @return {Array} styles an array with one, zero or more Style objects\r\n   */\r\n  getSelectionStyles(\r\n    startIndex: number,\r\n    endIndex?: number,\r\n    complete?: boolean\r\n  ): TextStyleDeclaration[] {\r\n    const styles: TextStyleDeclaration[] = [];\r\n    for (let i = startIndex; i < (endIndex || startIndex); i++) {\r\n      styles.push(this.getStyleAtPosition(i, complete));\r\n    }\r\n    return styles;\r\n  }\r\n\r\n  /**\r\n   * Gets style of a current selection/cursor position\r\n   * @param {Number} position  to get styles at\r\n   * @param {Boolean} [complete] full style if true\r\n   * @return {Object} style Style object at a specified index\r\n   * @private\r\n   */\r\n  getStyleAtPosition(position: number, complete?: boolean) {\r\n    const { lineIndex, charIndex } = this.get2DCursorLocation(position);\r\n    return complete\r\n      ? this.getCompleteStyleDeclaration(lineIndex, charIndex)\r\n      : this._getStyleDeclaration(lineIndex, charIndex);\r\n  }\r\n\r\n  /**\r\n   * Sets style of a current selection, if no selection exist, do not set anything.\r\n   * @param {Object} styles Styles object\r\n   * @param {Number} startIndex Start index to get styles at\r\n   * @param {Number} [endIndex] End index to get styles at, if not specified startIndex + 1\r\n   */\r\n  setSelectionStyles(styles: object, startIndex: number, endIndex?: number) {\r\n    for (let i = startIndex; i < (endIndex || startIndex); i++) {\r\n      this._extendStyles(i, styles);\r\n    }\r\n    /* not included in _extendStyles to avoid clearing cache more than once */\r\n    this._forceClearCache = true;\r\n  }\r\n\r\n  /**\r\n   * Get a reference, not a clone, to the style object for a given character,\r\n   * if no style is set for a line or char, return a new empty object.\r\n   * This is tricky and confusing because when you get an empty object you can't\r\n   * determine if it is a reference or a new one.\r\n   * @TODO this should always return a reference or always a clone or undefined when necessary.\r\n   * @protected\r\n   * @param {Number} lineIndex\r\n   * @param {Number} charIndex\r\n   * @return {TextStyleDeclaration} a style object reference to the existing one or a new empty object when undefined\r\n   */\r\n  _getStyleDeclaration(\r\n    lineIndex: number,\r\n    charIndex: number\r\n  ): TextStyleDeclaration {\r\n    const lineStyle = this.styles && this.styles[lineIndex];\r\n    return lineStyle ? lineStyle[charIndex] ?? {} : {};\r\n  }\r\n\r\n  /**\r\n   * return a new object that contains all the style property for a character\r\n   * the object returned is newly created\r\n   * @param {Number} lineIndex of the line where the character is\r\n   * @param {Number} charIndex position of the character on the line\r\n   * @return {Object} style object\r\n   */\r\n  getCompleteStyleDeclaration(\r\n    lineIndex: number,\r\n    charIndex: number\r\n  ): CompleteTextStyleDeclaration {\r\n    return {\r\n      // @ts-expect-error readonly\r\n      ...pick(this, (this.constructor as typeof StyledText)._styleProperties),\r\n      ...this._getStyleDeclaration(lineIndex, charIndex),\r\n    } as CompleteTextStyleDeclaration;\r\n  }\r\n\r\n  /**\r\n   * @param {Number} lineIndex\r\n   * @param {Number} charIndex\r\n   * @param {Object} style\r\n   * @private\r\n   */\r\n  protected _setStyleDeclaration(\r\n    lineIndex: number,\r\n    charIndex: number,\r\n    style: object\r\n  ) {\r\n    this.styles[lineIndex][charIndex] = style;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Number} lineIndex\r\n   * @param {Number} charIndex\r\n   * @private\r\n   */\r\n  protected _deleteStyleDeclaration(lineIndex: number, charIndex: number) {\r\n    delete this.styles[lineIndex][charIndex];\r\n  }\r\n\r\n  /**\r\n   * @param {Number} lineIndex\r\n   * @return {Boolean} if the line exists or not\r\n   * @private\r\n   */\r\n  protected _getLineStyle(lineIndex: number): boolean {\r\n    return !!this.styles[lineIndex];\r\n  }\r\n\r\n  /**\r\n   * Set the line style to an empty object so that is initialized\r\n   * @param {Number} lineIndex\r\n   * @private\r\n   */\r\n  protected _setLineStyle(lineIndex: number) {\r\n    this.styles[lineIndex] = {};\r\n  }\r\n\r\n  protected _deleteLineStyle(lineIndex: number) {\r\n    delete this.styles[lineIndex];\r\n  }\r\n}\r\n","import { config } from '../../config';\r\nimport type { TSVGReviver } from '../../typedefs';\r\nimport { escapeXml } from '../../util/lang_string';\r\nimport { colorPropToSVG, createSVGRect } from '../../util/misc/svgParsing';\r\nimport { hasStyleChanged } from '../../util/misc/textStyles';\r\nimport { toFixed } from '../../util/misc/toFixed';\r\nimport { FabricObjectSVGExportMixin } from '../Object/FabricObjectSVGExportMixin';\r\nimport { type TextStyleDeclaration } from './StyledText';\r\nimport { JUSTIFY } from '../Text/constants';\r\nimport type { FabricText } from './Text';\r\nimport { STROKE, FILL } from '../../constants';\r\n\r\nconst multipleSpacesRegex = /  +/g;\r\nconst dblQuoteRegex = /\"/g;\r\n\r\nfunction createSVGInlineRect(\r\n  color: string,\r\n  left: number,\r\n  top: number,\r\n  width: number,\r\n  height: number\r\n) {\r\n  return `\\t\\t${createSVGRect(color, { left, top, width, height })}\\n`;\r\n}\r\n\r\nexport class TextSVGExportMixin extends FabricObjectSVGExportMixin {\r\n  _toSVG(this: TextSVGExportMixin & FabricText): string[] {\r\n    const offsets = this._getSVGLeftTopOffsets(),\r\n      textAndBg = this._getSVGTextAndBg(offsets.textTop, offsets.textLeft);\r\n    return this._wrapSVGTextAndBg(textAndBg);\r\n  }\r\n\r\n  toSVG(this: TextSVGExportMixin & FabricText, reviver?: TSVGReviver): string {\r\n    return this._createBaseSVGMarkup(this._toSVG(), {\r\n      reviver,\r\n      noStyle: true,\r\n      withShadow: true,\r\n    });\r\n  }\r\n\r\n  private _getSVGLeftTopOffsets(this: TextSVGExportMixin & FabricText) {\r\n    return {\r\n      textLeft: -this.width / 2,\r\n      textTop: -this.height / 2,\r\n      lineTop: this.getHeightOfLine(0),\r\n    };\r\n  }\r\n\r\n  private _wrapSVGTextAndBg(\r\n    this: TextSVGExportMixin & FabricText,\r\n    {\r\n      textBgRects,\r\n      textSpans,\r\n    }: {\r\n      textSpans: string[];\r\n      textBgRects: string[];\r\n    }\r\n  ) {\r\n    const noShadow = true,\r\n      textDecoration = this.getSvgTextDecoration(this);\r\n    return [\r\n      textBgRects.join(''),\r\n      '\\t\\t<text xml:space=\"preserve\" ',\r\n      this.fontFamily\r\n        ? `font-family=\"${this.fontFamily.replace(dblQuoteRegex, \"'\")}\" `\r\n        : '',\r\n      this.fontSize ? `font-size=\"${this.fontSize}\" ` : '',\r\n      this.fontStyle ? `font-style=\"${this.fontStyle}\" ` : '',\r\n      this.fontWeight ? `font-weight=\"${this.fontWeight}\" ` : '',\r\n      textDecoration ? `text-decoration=\"${textDecoration}\" ` : '',\r\n      this.direction === 'rtl' ? `direction=\"${this.direction}\" ` : '',\r\n      'style=\"',\r\n      this.getSvgStyles(noShadow),\r\n      '\"',\r\n      this.addPaintOrder(),\r\n      ' >',\r\n      textSpans.join(''),\r\n      '</text>\\n',\r\n    ];\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {Number} textTopOffset Text top offset\r\n   * @param {Number} textLeftOffset Text left offset\r\n   * @return {Object}\r\n   */\r\n  private _getSVGTextAndBg(\r\n    this: TextSVGExportMixin & FabricText,\r\n    textTopOffset: number,\r\n    textLeftOffset: number\r\n  ) {\r\n    const textSpans: string[] = [],\r\n      textBgRects: string[] = [];\r\n    let height = textTopOffset,\r\n      lineOffset;\r\n\r\n    // bounding-box background\r\n    this.backgroundColor &&\r\n      textBgRects.push(\r\n        ...createSVGInlineRect(\r\n          this.backgroundColor,\r\n          -this.width / 2,\r\n          -this.height / 2,\r\n          this.width,\r\n          this.height\r\n        )\r\n      );\r\n\r\n    // text and text-background\r\n    for (let i = 0, len = this._textLines.length; i < len; i++) {\r\n      lineOffset = this._getLineLeftOffset(i);\r\n      if (this.direction === 'rtl') {\r\n        lineOffset += this.width;\r\n      }\r\n      if (this.textBackgroundColor || this.styleHas('textBackgroundColor', i)) {\r\n        this._setSVGTextLineBg(\r\n          textBgRects,\r\n          i,\r\n          textLeftOffset + lineOffset,\r\n          height\r\n        );\r\n      }\r\n      this._setSVGTextLineText(\r\n        textSpans,\r\n        i,\r\n        textLeftOffset + lineOffset,\r\n        height\r\n      );\r\n      height += this.getHeightOfLine(i);\r\n    }\r\n\r\n    return {\r\n      textSpans,\r\n      textBgRects,\r\n    };\r\n  }\r\n\r\n  private _createTextCharSpan(\r\n    this: TextSVGExportMixin & FabricText,\r\n    char: string,\r\n    styleDecl: TextStyleDeclaration,\r\n    left: number,\r\n    top: number\r\n  ) {\r\n    const styleProps = this.getSvgSpanStyles(\r\n        styleDecl,\r\n        char !== char.trim() || !!char.match(multipleSpacesRegex)\r\n      ),\r\n      fillStyles = styleProps ? `style=\"${styleProps}\"` : '',\r\n      dy = styleDecl.deltaY,\r\n      dySpan = dy ? ` dy=\"${toFixed(dy, config.NUM_FRACTION_DIGITS)}\" ` : '';\r\n\r\n    return `<tspan x=\"${toFixed(\r\n      left,\r\n      config.NUM_FRACTION_DIGITS\r\n    )}\" y=\"${toFixed(\r\n      top,\r\n      config.NUM_FRACTION_DIGITS\r\n    )}\" ${dySpan}${fillStyles}>${escapeXml(char)}</tspan>`;\r\n  }\r\n\r\n  private _setSVGTextLineText(\r\n    this: TextSVGExportMixin & FabricText,\r\n    textSpans: string[],\r\n    lineIndex: number,\r\n    textLeftOffset: number,\r\n    textTopOffset: number\r\n  ) {\r\n    const lineHeight = this.getHeightOfLine(lineIndex),\r\n      isJustify = this.textAlign.includes(JUSTIFY),\r\n      line = this._textLines[lineIndex];\r\n    let actualStyle,\r\n      nextStyle,\r\n      charsToRender = '',\r\n      charBox,\r\n      style,\r\n      boxWidth = 0,\r\n      timeToRender;\r\n\r\n    textTopOffset +=\r\n      (lineHeight * (1 - this._fontSizeFraction)) / this.lineHeight;\r\n    for (let i = 0, len = line.length - 1; i <= len; i++) {\r\n      timeToRender = i === len || this.charSpacing;\r\n      charsToRender += line[i];\r\n      charBox = this.__charBounds[lineIndex][i];\r\n      if (boxWidth === 0) {\r\n        textLeftOffset += charBox.kernedWidth - charBox.width;\r\n        boxWidth += charBox.width;\r\n      } else {\r\n        boxWidth += charBox.kernedWidth;\r\n      }\r\n      if (isJustify && !timeToRender) {\r\n        if (this._reSpaceAndTab.test(line[i])) {\r\n          timeToRender = true;\r\n        }\r\n      }\r\n      if (!timeToRender) {\r\n        // if we have charSpacing, we render char by char\r\n        actualStyle =\r\n          actualStyle || this.getCompleteStyleDeclaration(lineIndex, i);\r\n        nextStyle = this.getCompleteStyleDeclaration(lineIndex, i + 1);\r\n        timeToRender = hasStyleChanged(actualStyle, nextStyle, true);\r\n      }\r\n      if (timeToRender) {\r\n        style = this._getStyleDeclaration(lineIndex, i);\r\n        textSpans.push(\r\n          this._createTextCharSpan(\r\n            charsToRender,\r\n            style,\r\n            textLeftOffset,\r\n            textTopOffset\r\n          )\r\n        );\r\n        charsToRender = '';\r\n        actualStyle = nextStyle;\r\n        if (this.direction === 'rtl') {\r\n          textLeftOffset -= boxWidth;\r\n        } else {\r\n          textLeftOffset += boxWidth;\r\n        }\r\n        boxWidth = 0;\r\n      }\r\n    }\r\n  }\r\n\r\n  private _setSVGTextLineBg(\r\n    this: TextSVGExportMixin & FabricText,\r\n    textBgRects: (string | number)[],\r\n    i: number,\r\n    leftOffset: number,\r\n    textTopOffset: number\r\n  ) {\r\n    const line = this._textLines[i],\r\n      heightOfLine = this.getHeightOfLine(i) / this.lineHeight;\r\n    let boxWidth = 0,\r\n      boxStart = 0,\r\n      currentColor,\r\n      lastColor = this.getValueOfPropertyAt(i, 0, 'textBackgroundColor');\r\n    for (let j = 0; j < line.length; j++) {\r\n      const { left, width, kernedWidth } = this.__charBounds[i][j];\r\n      currentColor = this.getValueOfPropertyAt(i, j, 'textBackgroundColor');\r\n      if (currentColor !== lastColor) {\r\n        lastColor &&\r\n          textBgRects.push(\r\n            ...createSVGInlineRect(\r\n              lastColor,\r\n              leftOffset + boxStart,\r\n              textTopOffset,\r\n              boxWidth,\r\n              heightOfLine\r\n            )\r\n          );\r\n        boxStart = left;\r\n        boxWidth = width;\r\n        lastColor = currentColor;\r\n      } else {\r\n        boxWidth += kernedWidth;\r\n      }\r\n    }\r\n    currentColor &&\r\n      textBgRects.push(\r\n        ...createSVGInlineRect(\r\n          lastColor,\r\n          leftOffset + boxStart,\r\n          textTopOffset,\r\n          boxWidth,\r\n          heightOfLine\r\n        )\r\n      );\r\n  }\r\n\r\n  /**\r\n   * @deprecated unused\r\n   */\r\n  _getSVGLineTopOffset(\r\n    this: TextSVGExportMixin & FabricText,\r\n    lineIndex: number\r\n  ) {\r\n    let lineTopOffset = 0,\r\n      j;\r\n    for (j = 0; j < lineIndex; j++) {\r\n      lineTopOffset += this.getHeightOfLine(j);\r\n    }\r\n    const lastHeight = this.getHeightOfLine(j);\r\n    return {\r\n      lineTop: lineTopOffset,\r\n      offset:\r\n        ((this._fontSizeMult - this._fontSizeFraction) * lastHeight) /\r\n        (this.lineHeight * this._fontSizeMult),\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Returns styles-string for svg-export\r\n   * @param {Boolean} skipShadow a boolean to skip shadow filter output\r\n   * @return {String}\r\n   */\r\n  getSvgStyles(this: TextSVGExportMixin & FabricText, skipShadow?: boolean) {\r\n    // cant use ts-expect-error because of ts 5.3 cross check\r\n    // @ts-ignore TS doesn't respect this type casting\r\n    return `${super.getSvgStyles(skipShadow)} white-space: pre;`;\r\n  }\r\n\r\n  /**\r\n   * Returns styles-string for svg-export\r\n   * @param {Object} style the object from which to retrieve style properties\r\n   * @param {Boolean} useWhiteSpace a boolean to include an additional attribute in the style.\r\n   * @return {String}\r\n   */\r\n  getSvgSpanStyles(\r\n    this: TextSVGExportMixin & FabricText,\r\n    style: TextStyleDeclaration,\r\n    useWhiteSpace?: boolean\r\n  ) {\r\n    const {\r\n      fontFamily,\r\n      strokeWidth,\r\n      stroke,\r\n      fill,\r\n      fontSize,\r\n      fontStyle,\r\n      fontWeight,\r\n      deltaY,\r\n    } = style;\r\n\r\n    const textDecoration = this.getSvgTextDecoration(style);\r\n\r\n    return [\r\n      stroke ? colorPropToSVG(STROKE, stroke) : '',\r\n      strokeWidth ? `stroke-width: ${strokeWidth}; ` : '',\r\n      fontFamily\r\n        ? `font-family: ${\r\n            !fontFamily.includes(\"'\") && !fontFamily.includes('\"')\r\n              ? `'${fontFamily}'`\r\n              : fontFamily\r\n          }; `\r\n        : '',\r\n      fontSize ? `font-size: ${fontSize}px; ` : '',\r\n      fontStyle ? `font-style: ${fontStyle}; ` : '',\r\n      fontWeight ? `font-weight: ${fontWeight}; ` : '',\r\n      textDecoration ? `text-decoration: ${textDecoration}; ` : textDecoration,\r\n      fill ? colorPropToSVG(FILL, fill) : '',\r\n      deltaY ? `baseline-shift: ${-deltaY}; ` : '',\r\n      useWhiteSpace ? 'white-space: pre; ' : '',\r\n    ].join('');\r\n  }\r\n\r\n  /**\r\n   * Returns text-decoration property for svg-export\r\n   * @param {Object} style the object from which to retrieve style properties\r\n   * @return {String}\r\n   */\r\n  getSvgTextDecoration(\r\n    this: TextSVGExportMixin & FabricText,\r\n    style: TextStyleDeclaration\r\n  ) {\r\n    return (['overline', 'underline', 'line-through'] as const)\r\n      .filter(\r\n        (decoration) =>\r\n          style[\r\n            decoration.replace('-', '') as\r\n              | 'overline'\r\n              | 'underline'\r\n              | 'linethrough'\r\n          ]\r\n      )\r\n      .join(' ');\r\n  }\r\n}\r\n","import { cache } from '../../cache';\r\nimport { DEFAULT_SVG_FONT_SIZE, FILL, STROKE } from '../../constants';\r\nimport type { ObjectEvents } from '../../EventTypeDefs';\r\nimport type {\r\n  CompleteTextStyleDeclaration,\r\n  TextStyle,\r\n  TextStyleDeclaration,\r\n} from './StyledText';\r\nimport { StyledText } from './StyledText';\r\nimport { SHARED_ATTRIBUTES } from '../../parser/attributes';\r\nimport { parseAttributes } from '../../parser/parseAttributes';\r\nimport type {\r\n  Abortable,\r\n  TCacheCanvasDimensions,\r\n  TClassProperties,\r\n  TFiller,\r\n  TOptions,\r\n} from '../../typedefs';\r\nimport { classRegistry } from '../../ClassRegistry';\r\nimport { graphemeSplit } from '../../util/lang_string';\r\nimport { createCanvasElement } from '../../util/misc/dom';\r\nimport type { TextStyleArray } from '../../util/misc/textStyles';\r\nimport {\r\n  hasStyleChanged,\r\n  stylesFromArray,\r\n  stylesToArray,\r\n} from '../../util/misc/textStyles';\r\nimport { getPathSegmentsInfo, getPointOnPath } from '../../util/path';\r\nimport { cacheProperties } from '../Object/FabricObject';\r\nimport type { Path } from '../Path';\r\nimport { TextSVGExportMixin } from './TextSVGExportMixin';\r\nimport { applyMixins } from '../../util/applyMixins';\r\nimport type { FabricObjectProps, SerializedObjectProps } from '../Object/types';\r\nimport type { StylePropertiesType } from './constants';\r\nimport {\r\n  additionalProps,\r\n  textDefaultValues,\r\n  textLayoutProperties,\r\n  JUSTIFY,\r\n  JUSTIFY_CENTER,\r\n  JUSTIFY_LEFT,\r\n  JUSTIFY_RIGHT,\r\n} from './constants';\r\nimport { CENTER, LEFT, RIGHT, TOP, BOTTOM } from '../../constants';\r\nimport { isFiller } from '../../util/typeAssertions';\r\nimport type { Gradient } from '../../gradient/Gradient';\r\nimport type { Pattern } from '../../Pattern';\r\nimport type { CSSRules } from '../../parser/typedefs';\r\n\r\nlet measuringContext: CanvasRenderingContext2D | null;\r\n\r\n/**\r\n * Return a context for measurement of text string.\r\n * if created it gets stored for reuse\r\n */\r\nfunction getMeasuringContext() {\r\n  if (!measuringContext) {\r\n    const canvas = createCanvasElement();\r\n    canvas.width = canvas.height = 0;\r\n    measuringContext = canvas.getContext('2d');\r\n  }\r\n  return measuringContext;\r\n}\r\n\r\nexport type TPathSide = 'left' | 'right';\r\n\r\nexport type TPathAlign = 'baseline' | 'center' | 'ascender' | 'descender';\r\n\r\nexport type TextLinesInfo = {\r\n  lines: string[];\r\n  graphemeLines: string[][];\r\n  graphemeText: string[];\r\n  _unwrappedLines: string[][];\r\n};\r\n\r\n/**\r\n * Measure and return the info of a single grapheme.\r\n * needs the the info of previous graphemes already filled\r\n * Override to customize measuring\r\n */\r\nexport type GraphemeBBox = {\r\n  width: number;\r\n  height: number;\r\n  kernedWidth: number;\r\n  left: number;\r\n  deltaY: number;\r\n  renderLeft?: number;\r\n  renderTop?: number;\r\n  angle?: number;\r\n};\r\n\r\n// @TODO this is not complete\r\ninterface UniqueTextProps {\r\n  charSpacing: number;\r\n  lineHeight: number;\r\n  fontSize: number;\r\n  fontWeight: string | number;\r\n  fontFamily: string;\r\n  fontStyle: string;\r\n  pathSide: TPathSide;\r\n  pathAlign: TPathAlign;\r\n  underline: boolean;\r\n  overline: boolean;\r\n  linethrough: boolean;\r\n  textAlign: string;\r\n  direction: CanvasDirection;\r\n  path?: Path;\r\n}\r\n\r\nexport interface SerializedTextProps\r\n  extends SerializedObjectProps,\r\n    UniqueTextProps {\r\n  styles: TextStyleArray | TextStyle;\r\n}\r\n\r\nexport interface TextProps extends FabricObjectProps, UniqueTextProps {\r\n  styles: TextStyle;\r\n}\r\n\r\n/**\r\n * Text class\r\n * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#text}\r\n */\r\nexport class FabricText<\r\n    Props extends TOptions<TextProps> = Partial<TextProps>,\r\n    SProps extends SerializedTextProps = SerializedTextProps,\r\n    EventSpec extends ObjectEvents = ObjectEvents\r\n  >\r\n  extends StyledText<Props, SProps, EventSpec>\r\n  implements UniqueTextProps\r\n{\r\n  /**\r\n   * Properties that requires a text layout recalculation when changed\r\n   * @type string[]\r\n   * @protected\r\n   */\r\n  static textLayoutProperties: string[] = textLayoutProperties;\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  declare _reNewline: RegExp;\r\n\r\n  /**\r\n   * Use this regular expression to filter for whitespaces that is not a new line.\r\n   * Mostly used when text is 'justify' aligned.\r\n   * @private\r\n   */\r\n  declare _reSpacesAndTabs: RegExp;\r\n\r\n  /**\r\n   * Use this regular expression to filter for whitespace that is not a new line.\r\n   * Mostly used when text is 'justify' aligned.\r\n   * @private\r\n   */\r\n  declare _reSpaceAndTab: RegExp;\r\n\r\n  /**\r\n   * Use this regular expression to filter consecutive groups of non spaces.\r\n   * Mostly used when text is 'justify' aligned.\r\n   * @private\r\n   */\r\n  declare _reWords: RegExp;\r\n\r\n  declare text: string;\r\n\r\n  /**\r\n   * Font size (in pixels)\r\n   * @type Number\r\n   * @default\r\n   */\r\n  declare fontSize: number;\r\n\r\n  /**\r\n   * Font weight (e.g. bold, normal, 400, 600, 800)\r\n   * @type {(Number|String)}\r\n   * @default\r\n   */\r\n  declare fontWeight: string | number;\r\n\r\n  /**\r\n   * Font family\r\n   * @type String\r\n   * @default\r\n   */\r\n  declare fontFamily: string;\r\n\r\n  /**\r\n   * Text decoration underline.\r\n   * @type Boolean\r\n   * @default\r\n   */\r\n  declare underline: boolean;\r\n\r\n  /**\r\n   * Text decoration overline.\r\n   * @type Boolean\r\n   * @default\r\n   */\r\n  declare overline: boolean;\r\n\r\n  /**\r\n   * Text decoration linethrough.\r\n   * @type Boolean\r\n   * @default\r\n   */\r\n  declare linethrough: boolean;\r\n\r\n  /**\r\n   * Text alignment. Possible values: \"left\", \"center\", \"right\", \"justify\",\r\n   * \"justify-left\", \"justify-center\" or \"justify-right\".\r\n   * @type String\r\n   * @default\r\n   */\r\n  declare textAlign: string;\r\n\r\n  /**\r\n   * Font style . Possible values: \"\", \"normal\", \"italic\" or \"oblique\".\r\n   * @type String\r\n   * @default\r\n   */\r\n  declare fontStyle: string;\r\n\r\n  /**\r\n   * Line height\r\n   * @type Number\r\n   * @default\r\n   */\r\n  declare lineHeight: number;\r\n\r\n  /**\r\n   * Superscript schema object (minimum overlap)\r\n   */\r\n  declare superscript: {\r\n    /**\r\n     * fontSize factor\r\n     * @default 0.6\r\n     */\r\n    size: number;\r\n    /**\r\n     * baseline-shift factor (upwards)\r\n     * @default -0.35\r\n     */\r\n    baseline: number;\r\n  };\r\n\r\n  /**\r\n   * Subscript schema object (minimum overlap)\r\n   */\r\n  declare subscript: {\r\n    /**\r\n     * fontSize factor\r\n     * @default 0.6\r\n     */\r\n    size: number;\r\n    /**\r\n     * baseline-shift factor (downwards)\r\n     * @default 0.11\r\n     */\r\n    baseline: number;\r\n  };\r\n\r\n  /**\r\n   * Background color of text lines\r\n   * @type String\r\n   * @default\r\n   */\r\n  declare textBackgroundColor: string;\r\n\r\n  declare styles: TextStyle;\r\n\r\n  /**\r\n   * Path that the text should follow.\r\n   * since 4.6.0 the path will be drawn automatically.\r\n   * if you want to make the path visible, give it a stroke and strokeWidth or fill value\r\n   * if you want it to be hidden, assign visible = false to the path.\r\n   * This feature is in BETA, and SVG import/export is not yet supported.\r\n   * @type Path\r\n   * @example\r\n   * const textPath = new Text('Text on a path', {\r\n   *     top: 150,\r\n   *     left: 150,\r\n   *     textAlign: 'center',\r\n   *     charSpacing: -50,\r\n   *     path: new Path('M 0 0 C 50 -100 150 -100 200 0', {\r\n   *         strokeWidth: 1,\r\n   *         visible: false\r\n   *     }),\r\n   *     pathSide: 'left',\r\n   *     pathStartOffset: 0\r\n   * });\r\n   * @default\r\n   */\r\n  declare path?: Path;\r\n\r\n  /**\r\n   * Offset amount for text path starting position\r\n   * Only used when text has a path\r\n   * @type Number\r\n   * @default\r\n   */\r\n  declare pathStartOffset: number;\r\n\r\n  /**\r\n   * Which side of the path the text should be drawn on.\r\n   * Only used when text has a path\r\n   * @type {TPathSide} 'left|right'\r\n   * @default\r\n   */\r\n  declare pathSide: TPathSide;\r\n\r\n  /**\r\n   * How text is aligned to the path. This property determines\r\n   * the perpendicular position of each character relative to the path.\r\n   * (one of \"baseline\", \"center\", \"ascender\", \"descender\")\r\n   * This feature is in BETA, and its behavior may change\r\n   * @type TPathAlign\r\n   * @default\r\n   */\r\n  declare pathAlign: TPathAlign;\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  declare _fontSizeFraction: number;\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  declare offsets: { underline: number; linethrough: number; overline: number };\r\n\r\n  /**\r\n   * Text Line proportion to font Size (in pixels)\r\n   * @type Number\r\n   * @default\r\n   */\r\n  declare _fontSizeMult: number;\r\n\r\n  /**\r\n   * additional space between characters\r\n   * expressed in thousands of em unit\r\n   * @type Number\r\n   * @default\r\n   */\r\n  declare charSpacing: number;\r\n\r\n  /**\r\n   * Baseline shift, styles only, keep at 0 for the main text object\r\n   * @type {Number}\r\n   * @default\r\n   */\r\n  declare deltaY: number;\r\n\r\n  /**\r\n   * WARNING: EXPERIMENTAL. NOT SUPPORTED YET\r\n   * determine the direction of the text.\r\n   * This has to be set manually together with textAlign and originX for proper\r\n   * experience.\r\n   * some interesting link for the future\r\n   * https://www.w3.org/International/questions/qa-bidi-unicode-controls\r\n   * @since 4.5.0\r\n   * @type {CanvasDirection} 'ltr|rtl'\r\n   * @default\r\n   */\r\n  declare direction: CanvasDirection;\r\n\r\n  /**\r\n   * contains characters bounding boxes\r\n   * This variable is considered to be protected.\r\n   * But for how mixins are implemented right now, we can't leave it private\r\n   * @protected\r\n   */\r\n  __charBounds: GraphemeBBox[][] = [];\r\n\r\n  /**\r\n   * use this size when measuring text. To avoid IE11 rounding errors\r\n   * @type {Number}\r\n   * @default\r\n   * @readonly\r\n   * @private\r\n   */\r\n  declare CACHE_FONT_SIZE: number;\r\n\r\n  /**\r\n   * contains the min text width to avoid getting 0\r\n   * @type {Number}\r\n   * @default\r\n   */\r\n  declare MIN_TEXT_WIDTH: number;\r\n\r\n  /**\r\n   * contains the the text of the object, divided in lines as they are displayed\r\n   * on screen. Wrapping will divide the text independently of line breaks\r\n   * @type {string[]}\r\n   * @default\r\n   */\r\n  declare textLines: string[];\r\n\r\n  /**\r\n   * same as textlines, but each line is an array of graphemes as split by splitByGrapheme\r\n   * @type {string[]}\r\n   * @default\r\n   */\r\n  declare _textLines: string[][];\r\n\r\n  declare _unwrappedTextLines: string[][];\r\n  declare _text: string[];\r\n  declare cursorWidth: number;\r\n  declare __lineHeights: number[];\r\n  declare __lineWidths: number[];\r\n  declare initialized?: true;\r\n\r\n  static cacheProperties = [...cacheProperties, ...additionalProps];\r\n\r\n  static ownDefaults = textDefaultValues;\r\n\r\n  static type = 'Text';\r\n\r\n  static getDefaults(): Record<string, any> {\r\n    return { ...super.getDefaults(), ...FabricText.ownDefaults };\r\n  }\r\n\r\n  constructor(text: string, options?: Props) {\r\n    super();\r\n    Object.assign(this, FabricText.ownDefaults);\r\n    this.setOptions(options);\r\n    if (!this.styles) {\r\n      this.styles = {};\r\n    }\r\n    this.text = text;\r\n    this.initialized = true;\r\n    if (this.path) {\r\n      this.setPathInfo();\r\n    }\r\n    this.initDimensions();\r\n    this.setCoords();\r\n  }\r\n\r\n  /**\r\n   * If text has a path, it will add the extra information needed\r\n   * for path and text calculations\r\n   */\r\n  setPathInfo() {\r\n    const path = this.path;\r\n    if (path) {\r\n      path.segmentsInfo = getPathSegmentsInfo(path.path);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * Divides text into lines of text and lines of graphemes.\r\n   */\r\n  _splitText(): TextLinesInfo {\r\n    const newLines = this._splitTextIntoLines(this.text);\r\n    this.textLines = newLines.lines;\r\n    this._textLines = newLines.graphemeLines;\r\n    this._unwrappedTextLines = newLines._unwrappedLines;\r\n    this._text = newLines.graphemeText;\r\n    return newLines;\r\n  }\r\n\r\n  /**\r\n   * Initialize or update text dimensions.\r\n   * Updates this.width and this.height with the proper values.\r\n   * Does not return dimensions.\r\n   */\r\n  initDimensions() {\r\n    this._splitText();\r\n    this._clearCache();\r\n    this.dirty = true;\r\n    if (this.path) {\r\n      this.width = this.path.width;\r\n      this.height = this.path.height;\r\n    } else {\r\n      this.width =\r\n        this.calcTextWidth() || this.cursorWidth || this.MIN_TEXT_WIDTH;\r\n      this.height = this.calcTextHeight();\r\n    }\r\n    if (this.textAlign.includes(JUSTIFY)) {\r\n      // once text is measured we need to make space fatter to make justified text.\r\n      this.enlargeSpaces();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Enlarge space boxes and shift the others\r\n   */\r\n  enlargeSpaces() {\r\n    let diffSpace,\r\n      currentLineWidth,\r\n      numberOfSpaces,\r\n      accumulatedSpace,\r\n      line,\r\n      charBound,\r\n      spaces;\r\n    for (let i = 0, len = this._textLines.length; i < len; i++) {\r\n      if (\r\n        this.textAlign !== JUSTIFY &&\r\n        (i === len - 1 || this.isEndOfWrapping(i))\r\n      ) {\r\n        continue;\r\n      }\r\n      accumulatedSpace = 0;\r\n      line = this._textLines[i];\r\n      currentLineWidth = this.getLineWidth(i);\r\n      if (\r\n        currentLineWidth < this.width &&\r\n        (spaces = this.textLines[i].match(this._reSpacesAndTabs))\r\n      ) {\r\n        numberOfSpaces = spaces.length;\r\n        diffSpace = (this.width - currentLineWidth) / numberOfSpaces;\r\n        for (let j = 0; j <= line.length; j++) {\r\n          charBound = this.__charBounds[i][j];\r\n          if (this._reSpaceAndTab.test(line[j])) {\r\n            charBound.width += diffSpace;\r\n            charBound.kernedWidth += diffSpace;\r\n            charBound.left += accumulatedSpace;\r\n            accumulatedSpace += diffSpace;\r\n          } else {\r\n            charBound.left += accumulatedSpace;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Detect if the text line is ended with an hard break\r\n   * text and itext do not have wrapping, return false\r\n   * @return {Boolean}\r\n   */\r\n  isEndOfWrapping(lineIndex: number): boolean {\r\n    return lineIndex === this._textLines.length - 1;\r\n  }\r\n\r\n  /**\r\n   * Detect if a line has a linebreak and so we need to account for it when moving\r\n   * and counting style.\r\n   * It return always 1 for text and Itext. Textbox has its own implementation\r\n   * @return Number\r\n   */\r\n  missingNewlineOffset(lineIndex: number, skipWrapping?: boolean): 0 | 1;\r\n  missingNewlineOffset(lineIndex: number): 1 {\r\n    return 1;\r\n  }\r\n\r\n  /**\r\n   * Returns 2d representation (lineIndex and charIndex) of cursor\r\n   * @param {Number} selectionStart\r\n   * @param {Boolean} [skipWrapping] consider the location for unwrapped lines. useful to manage styles.\r\n   */\r\n  get2DCursorLocation(selectionStart: number, skipWrapping?: boolean) {\r\n    const lines = skipWrapping ? this._unwrappedTextLines : this._textLines;\r\n    let i: number;\r\n    for (i = 0; i < lines.length; i++) {\r\n      if (selectionStart <= lines[i].length) {\r\n        return {\r\n          lineIndex: i,\r\n          charIndex: selectionStart,\r\n        };\r\n      }\r\n      selectionStart -=\r\n        lines[i].length + this.missingNewlineOffset(i, skipWrapping);\r\n    }\r\n    return {\r\n      lineIndex: i - 1,\r\n      charIndex:\r\n        lines[i - 1].length < selectionStart\r\n          ? lines[i - 1].length\r\n          : selectionStart,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Returns string representation of an instance\r\n   * @return {String} String representation of text object\r\n   */\r\n  toString(): string {\r\n    return `#<Text (${this.complexity()}): { \"text\": \"${\r\n      this.text\r\n    }\", \"fontFamily\": \"${this.fontFamily}\" }>`;\r\n  }\r\n\r\n  /**\r\n   * Return the dimension and the zoom level needed to create a cache canvas\r\n   * big enough to host the object to be cached.\r\n   * @private\r\n   * @param {Object} dim.x width of object to be cached\r\n   * @param {Object} dim.y height of object to be cached\r\n   * @return {Object}.width width of canvas\r\n   * @return {Object}.height height of canvas\r\n   * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\r\n   * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\r\n   */\r\n  _getCacheCanvasDimensions(): TCacheCanvasDimensions {\r\n    const dims = super._getCacheCanvasDimensions();\r\n    const fontSize = this.fontSize;\r\n    dims.width += fontSize * dims.zoomX;\r\n    dims.height += fontSize * dims.zoomY;\r\n    return dims;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {CanvasRenderingContext2D} ctx Context to render on\r\n   */\r\n  _render(ctx: CanvasRenderingContext2D) {\r\n    const path = this.path;\r\n    path && !path.isNotVisible() && path._render(ctx);\r\n    this._setTextStyles(ctx);\r\n    this._renderTextLinesBackground(ctx);\r\n    this._renderTextDecoration(ctx, 'underline');\r\n    this._renderText(ctx);\r\n    this._renderTextDecoration(ctx, 'overline');\r\n    this._renderTextDecoration(ctx, 'linethrough');\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {CanvasRenderingContext2D} ctx Context to render on\r\n   */\r\n  _renderText(ctx: CanvasRenderingContext2D) {\r\n    if (this.paintFirst === STROKE) {\r\n      this._renderTextStroke(ctx);\r\n      this._renderTextFill(ctx);\r\n    } else {\r\n      this._renderTextFill(ctx);\r\n      this._renderTextStroke(ctx);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set the font parameter of the context with the object properties or with charStyle\r\n   * @private\r\n   * @param {CanvasRenderingContext2D} ctx Context to render on\r\n   * @param {Object} [charStyle] object with font style properties\r\n   * @param {String} [charStyle.fontFamily] Font Family\r\n   * @param {Number} [charStyle.fontSize] Font size in pixels. ( without px suffix )\r\n   * @param {String} [charStyle.fontWeight] Font weight\r\n   * @param {String} [charStyle.fontStyle] Font style (italic|normal)\r\n   */\r\n  _setTextStyles(\r\n    ctx: CanvasRenderingContext2D,\r\n    charStyle?: any,\r\n    forMeasuring?: boolean\r\n  ) {\r\n    ctx.textBaseline = 'alphabetic';\r\n    if (this.path) {\r\n      switch (this.pathAlign) {\r\n        case CENTER:\r\n          ctx.textBaseline = 'middle';\r\n          break;\r\n        case 'ascender':\r\n          ctx.textBaseline = TOP;\r\n          break;\r\n        case 'descender':\r\n          ctx.textBaseline = BOTTOM;\r\n          break;\r\n      }\r\n    }\r\n    ctx.font = this._getFontDeclaration(charStyle, forMeasuring);\r\n  }\r\n\r\n  /**\r\n   * calculate and return the text Width measuring each line.\r\n   * @private\r\n   * @param {CanvasRenderingContext2D} ctx Context to render on\r\n   * @return {Number} Maximum width of Text object\r\n   */\r\n  calcTextWidth(): number {\r\n    let maxWidth = this.getLineWidth(0);\r\n\r\n    for (let i = 1, len = this._textLines.length; i < len; i++) {\r\n      const currentLineWidth = this.getLineWidth(i);\r\n      if (currentLineWidth > maxWidth) {\r\n        maxWidth = currentLineWidth;\r\n      }\r\n    }\r\n    return maxWidth;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {String} method Method name (\"fillText\" or \"strokeText\")\r\n   * @param {CanvasRenderingContext2D} ctx Context to render on\r\n   * @param {String} line Text to render\r\n   * @param {Number} left Left position of text\r\n   * @param {Number} top Top position of text\r\n   * @param {Number} lineIndex Index of a line in a text\r\n   */\r\n  _renderTextLine(\r\n    method: 'fillText' | 'strokeText',\r\n    ctx: CanvasRenderingContext2D,\r\n    line: string[],\r\n    left: number,\r\n    top: number,\r\n    lineIndex: number\r\n  ) {\r\n    this._renderChars(method, ctx, line, left, top, lineIndex);\r\n  }\r\n\r\n  /**\r\n   * Renders the text background for lines, taking care of style\r\n   * @private\r\n   * @param {CanvasRenderingContext2D} ctx Context to render on\r\n   */\r\n  _renderTextLinesBackground(ctx: CanvasRenderingContext2D) {\r\n    if (!this.textBackgroundColor && !this.styleHas('textBackgroundColor')) {\r\n      return;\r\n    }\r\n    const originalFill = ctx.fillStyle,\r\n      leftOffset = this._getLeftOffset();\r\n    let lineTopOffset = this._getTopOffset();\r\n\r\n    for (let i = 0, len = this._textLines.length; i < len; i++) {\r\n      const heightOfLine = this.getHeightOfLine(i);\r\n      if (\r\n        !this.textBackgroundColor &&\r\n        !this.styleHas('textBackgroundColor', i)\r\n      ) {\r\n        lineTopOffset += heightOfLine;\r\n        continue;\r\n      }\r\n      const jlen = this._textLines[i].length;\r\n      const lineLeftOffset = this._getLineLeftOffset(i);\r\n      let boxWidth = 0;\r\n      let boxStart = 0;\r\n      let drawStart;\r\n      let currentColor;\r\n      let lastColor = this.getValueOfPropertyAt(i, 0, 'textBackgroundColor');\r\n      for (let j = 0; j < jlen; j++) {\r\n        // at this point charbox are either standard or full with pathInfo if there is a path.\r\n        const charBox = this.__charBounds[i][j] as Required<GraphemeBBox>;\r\n        currentColor = this.getValueOfPropertyAt(i, j, 'textBackgroundColor');\r\n        if (this.path) {\r\n          ctx.save();\r\n          ctx.translate(charBox.renderLeft, charBox.renderTop);\r\n          ctx.rotate(charBox.angle);\r\n          ctx.fillStyle = currentColor;\r\n          currentColor &&\r\n            ctx.fillRect(\r\n              -charBox.width / 2,\r\n              (-heightOfLine / this.lineHeight) * (1 - this._fontSizeFraction),\r\n              charBox.width,\r\n              heightOfLine / this.lineHeight\r\n            );\r\n          ctx.restore();\r\n        } else if (currentColor !== lastColor) {\r\n          drawStart = leftOffset + lineLeftOffset + boxStart;\r\n          if (this.direction === 'rtl') {\r\n            drawStart = this.width - drawStart - boxWidth;\r\n          }\r\n          ctx.fillStyle = lastColor;\r\n          lastColor &&\r\n            ctx.fillRect(\r\n              drawStart,\r\n              lineTopOffset,\r\n              boxWidth,\r\n              heightOfLine / this.lineHeight\r\n            );\r\n          boxStart = charBox.left;\r\n          boxWidth = charBox.width;\r\n          lastColor = currentColor;\r\n        } else {\r\n          boxWidth += charBox.kernedWidth;\r\n        }\r\n      }\r\n      if (currentColor && !this.path) {\r\n        drawStart = leftOffset + lineLeftOffset + boxStart;\r\n        if (this.direction === 'rtl') {\r\n          drawStart = this.width - drawStart - boxWidth;\r\n        }\r\n        ctx.fillStyle = currentColor;\r\n        ctx.fillRect(\r\n          drawStart,\r\n          lineTopOffset,\r\n          boxWidth,\r\n          heightOfLine / this.lineHeight\r\n        );\r\n      }\r\n      lineTopOffset += heightOfLine;\r\n    }\r\n    ctx.fillStyle = originalFill;\r\n    // if there is text background color no\r\n    // other shadows should be casted\r\n    this._removeShadow(ctx);\r\n  }\r\n\r\n  /**\r\n   * measure and return the width of a single character.\r\n   * possibly overridden to accommodate different measure logic or\r\n   * to hook some external lib for character measurement\r\n   * @private\r\n   * @param {String} _char, char to be measured\r\n   * @param {Object} charStyle style of char to be measured\r\n   * @param {String} [previousChar] previous char\r\n   * @param {Object} [prevCharStyle] style of previous char\r\n   */\r\n  _measureChar(\r\n    _char: string,\r\n    charStyle: CompleteTextStyleDeclaration,\r\n    previousChar: string | undefined,\r\n    prevCharStyle: CompleteTextStyleDeclaration | Record<string, never>\r\n  ) {\r\n    const fontCache = cache.getFontCache(charStyle),\r\n      fontDeclaration = this._getFontDeclaration(charStyle),\r\n      couple = previousChar + _char,\r\n      stylesAreEqual =\r\n        previousChar &&\r\n        fontDeclaration === this._getFontDeclaration(prevCharStyle),\r\n      fontMultiplier = charStyle.fontSize / this.CACHE_FONT_SIZE;\r\n    let width: number | undefined,\r\n      coupleWidth: number | undefined,\r\n      previousWidth: number | undefined,\r\n      kernedWidth: number | undefined;\r\n\r\n    if (previousChar && fontCache[previousChar] !== undefined) {\r\n      previousWidth = fontCache[previousChar];\r\n    }\r\n    if (fontCache[_char] !== undefined) {\r\n      kernedWidth = width = fontCache[_char];\r\n    }\r\n    if (stylesAreEqual && fontCache[couple] !== undefined) {\r\n      coupleWidth = fontCache[couple];\r\n      kernedWidth = coupleWidth - previousWidth!;\r\n    }\r\n    if (\r\n      width === undefined ||\r\n      previousWidth === undefined ||\r\n      coupleWidth === undefined\r\n    ) {\r\n      const ctx = getMeasuringContext()!;\r\n      // send a TRUE to specify measuring font size CACHE_FONT_SIZE\r\n      this._setTextStyles(ctx, charStyle, true);\r\n      if (width === undefined) {\r\n        kernedWidth = width = ctx.measureText(_char).width;\r\n        fontCache[_char] = width;\r\n      }\r\n      if (previousWidth === undefined && stylesAreEqual && previousChar) {\r\n        previousWidth = ctx.measureText(previousChar).width;\r\n        fontCache[previousChar] = previousWidth;\r\n      }\r\n      if (stylesAreEqual && coupleWidth === undefined) {\r\n        // we can measure the kerning couple and subtract the width of the previous character\r\n        coupleWidth = ctx.measureText(couple).width;\r\n        fontCache[couple] = coupleWidth;\r\n        // safe to use the non-null since if undefined we defined it before.\r\n        kernedWidth = coupleWidth - previousWidth!;\r\n      }\r\n    }\r\n    return {\r\n      width: width * fontMultiplier,\r\n      kernedWidth: kernedWidth! * fontMultiplier,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Computes height of character at given position\r\n   * @param {Number} line the line index number\r\n   * @param {Number} _char the character index number\r\n   * @return {Number} fontSize of the character\r\n   */\r\n  getHeightOfChar(line: number, _char: number): number {\r\n    return this.getValueOfPropertyAt(line, _char, 'fontSize');\r\n  }\r\n\r\n  /**\r\n   * measure a text line measuring all characters.\r\n   * @param {Number} lineIndex line number\r\n   */\r\n  measureLine(lineIndex: number) {\r\n    const lineInfo = this._measureLine(lineIndex);\r\n    if (this.charSpacing !== 0) {\r\n      lineInfo.width -= this._getWidthOfCharSpacing();\r\n    }\r\n    if (lineInfo.width < 0) {\r\n      lineInfo.width = 0;\r\n    }\r\n    return lineInfo;\r\n  }\r\n\r\n  /**\r\n   * measure every grapheme of a line, populating __charBounds\r\n   * @param {Number} lineIndex\r\n   * @return {Object} object.width total width of characters\r\n   * @return {Object} object.numOfSpaces length of chars that match this._reSpacesAndTabs\r\n   */\r\n  _measureLine(lineIndex: number) {\r\n    let width = 0,\r\n      prevGrapheme: string | undefined,\r\n      graphemeInfo: GraphemeBBox | undefined;\r\n\r\n    const reverse = this.pathSide === RIGHT,\r\n      path = this.path,\r\n      line = this._textLines[lineIndex],\r\n      llength = line.length,\r\n      lineBounds = new Array<GraphemeBBox>(llength);\r\n\r\n    this.__charBounds[lineIndex] = lineBounds;\r\n    for (let i = 0; i < llength; i++) {\r\n      const grapheme = line[i];\r\n      graphemeInfo = this._getGraphemeBox(grapheme, lineIndex, i, prevGrapheme);\r\n      lineBounds[i] = graphemeInfo;\r\n      width += graphemeInfo.kernedWidth;\r\n      prevGrapheme = grapheme;\r\n    }\r\n    // this latest bound box represent the last character of the line\r\n    // to simplify cursor handling in interactive mode.\r\n    lineBounds[llength] = {\r\n      left: graphemeInfo ? graphemeInfo.left + graphemeInfo.width : 0,\r\n      width: 0,\r\n      kernedWidth: 0,\r\n      height: this.fontSize,\r\n      deltaY: 0,\r\n    } as GraphemeBBox;\r\n    if (path && path.segmentsInfo) {\r\n      let positionInPath = 0;\r\n      const totalPathLength =\r\n        path.segmentsInfo[path.segmentsInfo.length - 1].length;\r\n      switch (this.textAlign) {\r\n        case LEFT:\r\n          positionInPath = reverse ? totalPathLength - width : 0;\r\n          break;\r\n        case CENTER:\r\n          positionInPath = (totalPathLength - width) / 2;\r\n          break;\r\n        case RIGHT:\r\n          positionInPath = reverse ? 0 : totalPathLength - width;\r\n          break;\r\n        //todo - add support for justify\r\n      }\r\n      positionInPath += this.pathStartOffset * (reverse ? -1 : 1);\r\n      for (\r\n        let i = reverse ? llength - 1 : 0;\r\n        reverse ? i >= 0 : i < llength;\r\n        reverse ? i-- : i++\r\n      ) {\r\n        graphemeInfo = lineBounds[i];\r\n        if (positionInPath > totalPathLength) {\r\n          positionInPath %= totalPathLength;\r\n        } else if (positionInPath < 0) {\r\n          positionInPath += totalPathLength;\r\n        }\r\n        // it would probably much faster to send all the grapheme position for a line\r\n        // and calculate path position/angle at once.\r\n        this._setGraphemeOnPath(positionInPath, graphemeInfo);\r\n        positionInPath += graphemeInfo.kernedWidth;\r\n      }\r\n    }\r\n    return { width: width, numOfSpaces: 0 };\r\n  }\r\n\r\n  /**\r\n   * Calculate the angle  and the left,top position of the char that follow a path.\r\n   * It appends it to graphemeInfo to be reused later at rendering\r\n   * @private\r\n   * @param {Number} positionInPath to be measured\r\n   * @param {GraphemeBBox} graphemeInfo current grapheme box information\r\n   * @param {Object} startingPoint position of the point\r\n   */\r\n  _setGraphemeOnPath(positionInPath: number, graphemeInfo: GraphemeBBox) {\r\n    const centerPosition = positionInPath + graphemeInfo.kernedWidth / 2,\r\n      path = this.path!;\r\n\r\n    // we are at currentPositionOnPath. we want to know what point on the path is.\r\n    const info = getPointOnPath(path.path, centerPosition, path.segmentsInfo)!;\r\n    graphemeInfo.renderLeft = info.x - path.pathOffset.x;\r\n    graphemeInfo.renderTop = info.y - path.pathOffset.y;\r\n    graphemeInfo.angle = info.angle + (this.pathSide === RIGHT ? Math.PI : 0);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {String} grapheme to be measured\r\n   * @param {Number} lineIndex index of the line where the char is\r\n   * @param {Number} charIndex position in the line\r\n   * @param {String} [prevGrapheme] character preceding the one to be measured\r\n   * @returns {GraphemeBBox} grapheme bbox\r\n   */\r\n  _getGraphemeBox(\r\n    grapheme: string,\r\n    lineIndex: number,\r\n    charIndex: number,\r\n    prevGrapheme?: string,\r\n    skipLeft?: boolean\r\n  ): GraphemeBBox {\r\n    const style = this.getCompleteStyleDeclaration(lineIndex, charIndex),\r\n      prevStyle = prevGrapheme\r\n        ? this.getCompleteStyleDeclaration(lineIndex, charIndex - 1)\r\n        : {},\r\n      info = this._measureChar(grapheme, style, prevGrapheme, prevStyle);\r\n    let kernedWidth = info.kernedWidth,\r\n      width = info.width,\r\n      charSpacing;\r\n\r\n    if (this.charSpacing !== 0) {\r\n      charSpacing = this._getWidthOfCharSpacing();\r\n      width += charSpacing;\r\n      kernedWidth += charSpacing;\r\n    }\r\n\r\n    const box: GraphemeBBox = {\r\n      width,\r\n      left: 0,\r\n      height: style.fontSize,\r\n      kernedWidth,\r\n      deltaY: style.deltaY,\r\n    };\r\n    if (charIndex > 0 && !skipLeft) {\r\n      const previousBox = this.__charBounds[lineIndex][charIndex - 1];\r\n      box.left =\r\n        previousBox.left + previousBox.width + info.kernedWidth - info.width;\r\n    }\r\n    return box;\r\n  }\r\n\r\n  /**\r\n   * Calculate height of line at 'lineIndex'\r\n   * @param {Number} lineIndex index of line to calculate\r\n   * @return {Number}\r\n   */\r\n  getHeightOfLine(lineIndex: number): number {\r\n    if (this.__lineHeights[lineIndex]) {\r\n      return this.__lineHeights[lineIndex];\r\n    }\r\n\r\n    // char 0 is measured before the line cycle because it needs to char\r\n    // emptylines\r\n    let maxHeight = this.getHeightOfChar(lineIndex, 0);\r\n    for (let i = 1, len = this._textLines[lineIndex].length; i < len; i++) {\r\n      maxHeight = Math.max(this.getHeightOfChar(lineIndex, i), maxHeight);\r\n    }\r\n\r\n    return (this.__lineHeights[lineIndex] =\r\n      maxHeight * this.lineHeight * this._fontSizeMult);\r\n  }\r\n\r\n  /**\r\n   * Calculate text box height\r\n   */\r\n  calcTextHeight() {\r\n    let lineHeight,\r\n      height = 0;\r\n    for (let i = 0, len = this._textLines.length; i < len; i++) {\r\n      lineHeight = this.getHeightOfLine(i);\r\n      height += i === len - 1 ? lineHeight / this.lineHeight : lineHeight;\r\n    }\r\n    return height;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @return {Number} Left offset\r\n   */\r\n  _getLeftOffset(): number {\r\n    return this.direction === 'ltr' ? -this.width / 2 : this.width / 2;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @return {Number} Top offset\r\n   */\r\n  _getTopOffset(): number {\r\n    return -this.height / 2;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {CanvasRenderingContext2D} ctx Context to render on\r\n   * @param {String} method Method name (\"fillText\" or \"strokeText\")\r\n   */\r\n  _renderTextCommon(\r\n    ctx: CanvasRenderingContext2D,\r\n    method: 'fillText' | 'strokeText'\r\n  ) {\r\n    ctx.save();\r\n    let lineHeights = 0;\r\n    const left = this._getLeftOffset(),\r\n      top = this._getTopOffset();\r\n    for (let i = 0, len = this._textLines.length; i < len; i++) {\r\n      const heightOfLine = this.getHeightOfLine(i),\r\n        maxHeight = heightOfLine / this.lineHeight,\r\n        leftOffset = this._getLineLeftOffset(i);\r\n      this._renderTextLine(\r\n        method,\r\n        ctx,\r\n        this._textLines[i],\r\n        left + leftOffset,\r\n        top + lineHeights + maxHeight,\r\n        i\r\n      );\r\n      lineHeights += heightOfLine;\r\n    }\r\n    ctx.restore();\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {CanvasRenderingContext2D} ctx Context to render on\r\n   */\r\n  _renderTextFill(ctx: CanvasRenderingContext2D) {\r\n    if (!this.fill && !this.styleHas(FILL)) {\r\n      return;\r\n    }\r\n\r\n    this._renderTextCommon(ctx, 'fillText');\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {CanvasRenderingContext2D} ctx Context to render on\r\n   */\r\n  _renderTextStroke(ctx: CanvasRenderingContext2D) {\r\n    if ((!this.stroke || this.strokeWidth === 0) && this.isEmptyStyles()) {\r\n      return;\r\n    }\r\n\r\n    if (this.shadow && !this.shadow.affectStroke) {\r\n      this._removeShadow(ctx);\r\n    }\r\n\r\n    ctx.save();\r\n    this._setLineDash(ctx, this.strokeDashArray);\r\n    ctx.beginPath();\r\n    this._renderTextCommon(ctx, 'strokeText');\r\n    ctx.closePath();\r\n    ctx.restore();\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {String} method fillText or strokeText.\r\n   * @param {CanvasRenderingContext2D} ctx Context to render on\r\n   * @param {Array} line Content of the line, splitted in an array by grapheme\r\n   * @param {Number} left\r\n   * @param {Number} top\r\n   * @param {Number} lineIndex\r\n   */\r\n  _renderChars(\r\n    method: 'fillText' | 'strokeText',\r\n    ctx: CanvasRenderingContext2D,\r\n    line: Array<any>,\r\n    left: number,\r\n    top: number,\r\n    lineIndex: number\r\n  ) {\r\n    const lineHeight = this.getHeightOfLine(lineIndex),\r\n      isJustify = this.textAlign.includes(JUSTIFY),\r\n      path = this.path,\r\n      shortCut =\r\n        !isJustify &&\r\n        this.charSpacing === 0 &&\r\n        this.isEmptyStyles(lineIndex) &&\r\n        !path,\r\n      isLtr = this.direction === 'ltr',\r\n      sign = this.direction === 'ltr' ? 1 : -1,\r\n      // this was changed in the PR #7674\r\n      // currentDirection = ctx.canvas.getAttribute('dir');\r\n      currentDirection = ctx.direction;\r\n\r\n    let actualStyle,\r\n      nextStyle,\r\n      charsToRender = '',\r\n      charBox,\r\n      boxWidth = 0,\r\n      timeToRender,\r\n      drawingLeft;\r\n\r\n    ctx.save();\r\n    if (currentDirection !== this.direction) {\r\n      ctx.canvas.setAttribute('dir', isLtr ? 'ltr' : 'rtl');\r\n      ctx.direction = isLtr ? 'ltr' : 'rtl';\r\n      ctx.textAlign = isLtr ? LEFT : RIGHT;\r\n    }\r\n    top -= (lineHeight * this._fontSizeFraction) / this.lineHeight;\r\n    if (shortCut) {\r\n      // render all the line in one pass without checking\r\n      // drawingLeft = isLtr ? left : left - this.getLineWidth(lineIndex);\r\n      this._renderChar(method, ctx, lineIndex, 0, line.join(''), left, top);\r\n      ctx.restore();\r\n      return;\r\n    }\r\n    for (let i = 0, len = line.length - 1; i <= len; i++) {\r\n      timeToRender = i === len || this.charSpacing || path;\r\n      charsToRender += line[i];\r\n      charBox = this.__charBounds[lineIndex][i] as Required<GraphemeBBox>;\r\n      if (boxWidth === 0) {\r\n        left += sign * (charBox.kernedWidth - charBox.width);\r\n        boxWidth += charBox.width;\r\n      } else {\r\n        boxWidth += charBox.kernedWidth;\r\n      }\r\n      if (isJustify && !timeToRender) {\r\n        if (this._reSpaceAndTab.test(line[i])) {\r\n          timeToRender = true;\r\n        }\r\n      }\r\n      if (!timeToRender) {\r\n        // if we have charSpacing, we render char by char\r\n        actualStyle =\r\n          actualStyle || this.getCompleteStyleDeclaration(lineIndex, i);\r\n        nextStyle = this.getCompleteStyleDeclaration(lineIndex, i + 1);\r\n        timeToRender = hasStyleChanged(actualStyle, nextStyle, false);\r\n      }\r\n      if (timeToRender) {\r\n        if (path) {\r\n          ctx.save();\r\n          ctx.translate(charBox.renderLeft, charBox.renderTop);\r\n          ctx.rotate(charBox.angle);\r\n          this._renderChar(\r\n            method,\r\n            ctx,\r\n            lineIndex,\r\n            i,\r\n            charsToRender,\r\n            -boxWidth / 2,\r\n            0\r\n          );\r\n          ctx.restore();\r\n        } else {\r\n          drawingLeft = left;\r\n          this._renderChar(\r\n            method,\r\n            ctx,\r\n            lineIndex,\r\n            i,\r\n            charsToRender,\r\n            drawingLeft,\r\n            top\r\n          );\r\n        }\r\n        charsToRender = '';\r\n        actualStyle = nextStyle;\r\n        left += sign * boxWidth;\r\n        boxWidth = 0;\r\n      }\r\n    }\r\n    ctx.restore();\r\n  }\r\n\r\n  /**\r\n   * This function try to patch the missing gradientTransform on canvas gradients.\r\n   * transforming a context to transform the gradient, is going to transform the stroke too.\r\n   * we want to transform the gradient but not the stroke operation, so we create\r\n   * a transformed gradient on a pattern and then we use the pattern instead of the gradient.\r\n   * this method has drawbacks: is slow, is in low resolution, needs a patch for when the size\r\n   * is limited.\r\n   * @private\r\n   * @param {TFiller} filler a fabric gradient instance\r\n   * @return {CanvasPattern} a pattern to use as fill/stroke style\r\n   */\r\n  _applyPatternGradientTransformText(filler: TFiller) {\r\n    const pCanvas = createCanvasElement(),\r\n      // TODO: verify compatibility with strokeUniform\r\n      width = this.width + this.strokeWidth,\r\n      height = this.height + this.strokeWidth,\r\n      pCtx = pCanvas.getContext('2d')!;\r\n    pCanvas.width = width;\r\n    pCanvas.height = height;\r\n    pCtx.beginPath();\r\n    pCtx.moveTo(0, 0);\r\n    pCtx.lineTo(width, 0);\r\n    pCtx.lineTo(width, height);\r\n    pCtx.lineTo(0, height);\r\n    pCtx.closePath();\r\n    pCtx.translate(width / 2, height / 2);\r\n    pCtx.fillStyle = filler.toLive(pCtx)!;\r\n    this._applyPatternGradientTransform(pCtx, filler);\r\n    pCtx.fill();\r\n    return pCtx.createPattern(pCanvas, 'no-repeat')!;\r\n  }\r\n\r\n  handleFiller<T extends 'fill' | 'stroke'>(\r\n    ctx: CanvasRenderingContext2D,\r\n    property: `${T}Style`,\r\n    filler: TFiller | string\r\n  ): { offsetX: number; offsetY: number } {\r\n    let offsetX: number, offsetY: number;\r\n    if (isFiller(filler)) {\r\n      if (\r\n        (filler as Gradient<'linear'>).gradientUnits === 'percentage' ||\r\n        (filler as Gradient<'linear'>).gradientTransform ||\r\n        (filler as Pattern).patternTransform\r\n      ) {\r\n        // need to transform gradient in a pattern.\r\n        // this is a slow process. If you are hitting this codepath, and the object\r\n        // is not using caching, you should consider switching it on.\r\n        // we need a canvas as big as the current object caching canvas.\r\n        offsetX = -this.width / 2;\r\n        offsetY = -this.height / 2;\r\n        ctx.translate(offsetX, offsetY);\r\n        ctx[property] = this._applyPatternGradientTransformText(filler);\r\n        return { offsetX, offsetY };\r\n      } else {\r\n        // is a simple gradient or pattern\r\n        ctx[property] = filler.toLive(ctx)!;\r\n        return this._applyPatternGradientTransform(ctx, filler);\r\n      }\r\n    } else {\r\n      // is a color\r\n      ctx[property] = filler;\r\n    }\r\n    return { offsetX: 0, offsetY: 0 };\r\n  }\r\n\r\n  /**\r\n   * This function prepare the canvas for a stroke style, and stroke and strokeWidth\r\n   * need to be sent in as defined\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {CompleteTextStyleDeclaration} style with stroke and strokeWidth defined\r\n   * @returns\r\n   */\r\n  _setStrokeStyles(\r\n    ctx: CanvasRenderingContext2D,\r\n    {\r\n      stroke,\r\n      strokeWidth,\r\n    }: Pick<CompleteTextStyleDeclaration, 'stroke' | 'strokeWidth'>\r\n  ) {\r\n    ctx.lineWidth = strokeWidth;\r\n    ctx.lineCap = this.strokeLineCap;\r\n    ctx.lineDashOffset = this.strokeDashOffset;\r\n    ctx.lineJoin = this.strokeLineJoin;\r\n    ctx.miterLimit = this.strokeMiterLimit;\r\n    return this.handleFiller(ctx, 'strokeStyle', stroke!);\r\n  }\r\n\r\n  /**\r\n   * This function prepare the canvas for a ill style, and fill\r\n   * need to be sent in as defined\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {CompleteTextStyleDeclaration} style with ill defined\r\n   * @returns\r\n   */\r\n  _setFillStyles(ctx: CanvasRenderingContext2D, { fill }: Pick<this, 'fill'>) {\r\n    return this.handleFiller(ctx, 'fillStyle', fill!);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {String} method\r\n   * @param {CanvasRenderingContext2D} ctx Context to render on\r\n   * @param {Number} lineIndex\r\n   * @param {Number} charIndex\r\n   * @param {String} _char\r\n   * @param {Number} left Left coordinate\r\n   * @param {Number} top Top coordinate\r\n   * @param {Number} lineHeight Height of the line\r\n   */\r\n  _renderChar(\r\n    method: 'fillText' | 'strokeText',\r\n    ctx: CanvasRenderingContext2D,\r\n    lineIndex: number,\r\n    charIndex: number,\r\n    _char: string,\r\n    left: number,\r\n    top: number\r\n  ) {\r\n    const decl = this._getStyleDeclaration(lineIndex, charIndex),\r\n      fullDecl = this.getCompleteStyleDeclaration(lineIndex, charIndex),\r\n      shouldFill = method === 'fillText' && fullDecl.fill,\r\n      shouldStroke =\r\n        method === 'strokeText' && fullDecl.stroke && fullDecl.strokeWidth;\r\n\r\n    if (!shouldStroke && !shouldFill) {\r\n      return;\r\n    }\r\n    ctx.save();\r\n\r\n    ctx.font = this._getFontDeclaration(fullDecl);\r\n\r\n    if (decl.textBackgroundColor) {\r\n      this._removeShadow(ctx);\r\n    }\r\n    if (decl.deltaY) {\r\n      top += decl.deltaY;\r\n    }\r\n\r\n    if (shouldFill) {\r\n      const fillOffsets = this._setFillStyles(ctx, fullDecl);\r\n      ctx.fillText(\r\n        _char,\r\n        left - fillOffsets.offsetX,\r\n        top - fillOffsets.offsetY\r\n      );\r\n    }\r\n\r\n    if (shouldStroke) {\r\n      const strokeOffsets = this._setStrokeStyles(ctx, fullDecl);\r\n      ctx.strokeText(\r\n        _char,\r\n        left - strokeOffsets.offsetX,\r\n        top - strokeOffsets.offsetY\r\n      );\r\n    }\r\n\r\n    ctx.restore();\r\n  }\r\n\r\n  /**\r\n   * Turns the character into a 'superior figure' (i.e. 'superscript')\r\n   * @param {Number} start selection start\r\n   * @param {Number} end selection end\r\n   */\r\n  setSuperscript(start: number, end: number) {\r\n    this._setScript(start, end, this.superscript);\r\n  }\r\n\r\n  /**\r\n   * Turns the character into an 'inferior figure' (i.e. 'subscript')\r\n   * @param {Number} start selection start\r\n   * @param {Number} end selection end\r\n   */\r\n  setSubscript(start: number, end: number) {\r\n    this._setScript(start, end, this.subscript);\r\n  }\r\n\r\n  /**\r\n   * Applies 'schema' at given position\r\n   * @private\r\n   * @param {Number} start selection start\r\n   * @param {Number} end selection end\r\n   * @param {Number} schema\r\n   */\r\n  protected _setScript(\r\n    start: number,\r\n    end: number,\r\n    schema: {\r\n      size: number;\r\n      baseline: number;\r\n    }\r\n  ) {\r\n    const loc = this.get2DCursorLocation(start, true),\r\n      fontSize = this.getValueOfPropertyAt(\r\n        loc.lineIndex,\r\n        loc.charIndex,\r\n        'fontSize'\r\n      ),\r\n      dy = this.getValueOfPropertyAt(loc.lineIndex, loc.charIndex, 'deltaY'),\r\n      style = {\r\n        fontSize: fontSize * schema.size,\r\n        deltaY: dy + fontSize * schema.baseline,\r\n      };\r\n    this.setSelectionStyles(style, start, end);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {Number} lineIndex index text line\r\n   * @return {Number} Line left offset\r\n   */\r\n  _getLineLeftOffset(lineIndex: number): number {\r\n    const lineWidth = this.getLineWidth(lineIndex),\r\n      lineDiff = this.width - lineWidth,\r\n      textAlign = this.textAlign,\r\n      direction = this.direction,\r\n      isEndOfWrapping = this.isEndOfWrapping(lineIndex);\r\n    let leftOffset = 0;\r\n    if (\r\n      textAlign === JUSTIFY ||\r\n      (textAlign === JUSTIFY_CENTER && !isEndOfWrapping) ||\r\n      (textAlign === JUSTIFY_RIGHT && !isEndOfWrapping) ||\r\n      (textAlign === JUSTIFY_LEFT && !isEndOfWrapping)\r\n    ) {\r\n      return 0;\r\n    }\r\n    if (textAlign === CENTER) {\r\n      leftOffset = lineDiff / 2;\r\n    }\r\n    if (textAlign === RIGHT) {\r\n      leftOffset = lineDiff;\r\n    }\r\n    if (textAlign === JUSTIFY_CENTER) {\r\n      leftOffset = lineDiff / 2;\r\n    }\r\n    if (textAlign === JUSTIFY_RIGHT) {\r\n      leftOffset = lineDiff;\r\n    }\r\n    if (direction === 'rtl') {\r\n      if (\r\n        textAlign === RIGHT ||\r\n        textAlign === JUSTIFY ||\r\n        textAlign === JUSTIFY_RIGHT\r\n      ) {\r\n        leftOffset = 0;\r\n      } else if (textAlign === LEFT || textAlign === JUSTIFY_LEFT) {\r\n        leftOffset = -lineDiff;\r\n      } else if (textAlign === CENTER || textAlign === JUSTIFY_CENTER) {\r\n        leftOffset = -lineDiff / 2;\r\n      }\r\n    }\r\n    return leftOffset;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _clearCache() {\r\n    this._forceClearCache = false;\r\n    this.__lineWidths = [];\r\n    this.__lineHeights = [];\r\n    this.__charBounds = [];\r\n  }\r\n\r\n  /**\r\n   * Measure a single line given its index. Used to calculate the initial\r\n   * text bounding box. The values are calculated and stored in __lineWidths cache.\r\n   * @private\r\n   * @param {Number} lineIndex line number\r\n   * @return {Number} Line width\r\n   */\r\n  getLineWidth(lineIndex: number): number {\r\n    if (this.__lineWidths[lineIndex] !== undefined) {\r\n      return this.__lineWidths[lineIndex];\r\n    }\r\n\r\n    const { width } = this.measureLine(lineIndex);\r\n    this.__lineWidths[lineIndex] = width;\r\n    return width;\r\n  }\r\n\r\n  _getWidthOfCharSpacing() {\r\n    if (this.charSpacing !== 0) {\r\n      return (this.fontSize * this.charSpacing) / 1000;\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  /**\r\n   * Retrieves the value of property at given character position\r\n   * @param {Number} lineIndex the line number\r\n   * @param {Number} charIndex the character number\r\n   * @param {String} property the property name\r\n   * @returns the value of 'property'\r\n   */\r\n  getValueOfPropertyAt<T extends StylePropertiesType>(\r\n    lineIndex: number,\r\n    charIndex: number,\r\n    property: T\r\n  ): this[T] {\r\n    const charStyle = this._getStyleDeclaration(lineIndex, charIndex);\r\n    return (charStyle[property] ?? this[property]) as this[T];\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {CanvasRenderingContext2D} ctx Context to render on\r\n   */\r\n  _renderTextDecoration(\r\n    ctx: CanvasRenderingContext2D,\r\n    type: 'underline' | 'linethrough' | 'overline'\r\n  ) {\r\n    if (!this[type] && !this.styleHas(type)) {\r\n      return;\r\n    }\r\n    let topOffset = this._getTopOffset();\r\n    const leftOffset = this._getLeftOffset(),\r\n      path = this.path,\r\n      charSpacing = this._getWidthOfCharSpacing(),\r\n      offsetY = this.offsets[type];\r\n\r\n    for (let i = 0, len = this._textLines.length; i < len; i++) {\r\n      const heightOfLine = this.getHeightOfLine(i);\r\n      if (!this[type] && !this.styleHas(type, i)) {\r\n        topOffset += heightOfLine;\r\n        continue;\r\n      }\r\n      const line = this._textLines[i];\r\n      const maxHeight = heightOfLine / this.lineHeight;\r\n      const lineLeftOffset = this._getLineLeftOffset(i);\r\n      let boxStart = 0;\r\n      let boxWidth = 0;\r\n      let lastDecoration = this.getValueOfPropertyAt(i, 0, type);\r\n      let lastFill = this.getValueOfPropertyAt(i, 0, FILL);\r\n      let currentDecoration;\r\n      let currentFill;\r\n      const top = topOffset + maxHeight * (1 - this._fontSizeFraction);\r\n      let size = this.getHeightOfChar(i, 0);\r\n      let dy = this.getValueOfPropertyAt(i, 0, 'deltaY');\r\n      for (let j = 0, jlen = line.length; j < jlen; j++) {\r\n        const charBox = this.__charBounds[i][j] as Required<GraphemeBBox>;\r\n        currentDecoration = this.getValueOfPropertyAt(i, j, type);\r\n        currentFill = this.getValueOfPropertyAt(i, j, FILL);\r\n        const currentSize = this.getHeightOfChar(i, j);\r\n        const currentDy = this.getValueOfPropertyAt(i, j, 'deltaY');\r\n        if (path && currentDecoration && currentFill) {\r\n          ctx.save();\r\n          // bug? verify lastFill is a valid fill here.\r\n          ctx.fillStyle = lastFill as string;\r\n          ctx.translate(charBox.renderLeft, charBox.renderTop);\r\n          ctx.rotate(charBox.angle);\r\n          ctx.fillRect(\r\n            -charBox.kernedWidth / 2,\r\n            offsetY * currentSize + currentDy,\r\n            charBox.kernedWidth,\r\n            this.fontSize / 15\r\n          );\r\n          ctx.restore();\r\n        } else if (\r\n          (currentDecoration !== lastDecoration ||\r\n            currentFill !== lastFill ||\r\n            currentSize !== size ||\r\n            currentDy !== dy) &&\r\n          boxWidth > 0\r\n        ) {\r\n          let drawStart = leftOffset + lineLeftOffset + boxStart;\r\n          if (this.direction === 'rtl') {\r\n            drawStart = this.width - drawStart - boxWidth;\r\n          }\r\n          if (lastDecoration && lastFill) {\r\n            // bug? verify lastFill is a valid fill here.\r\n            ctx.fillStyle = lastFill as string;\r\n            ctx.fillRect(\r\n              drawStart,\r\n              top + offsetY * size + dy,\r\n              boxWidth,\r\n              this.fontSize / 15\r\n            );\r\n          }\r\n          boxStart = charBox.left;\r\n          boxWidth = charBox.width;\r\n          lastDecoration = currentDecoration;\r\n          lastFill = currentFill;\r\n          size = currentSize;\r\n          dy = currentDy;\r\n        } else {\r\n          boxWidth += charBox.kernedWidth;\r\n        }\r\n      }\r\n      let drawStart = leftOffset + lineLeftOffset + boxStart;\r\n      if (this.direction === 'rtl') {\r\n        drawStart = this.width - drawStart - boxWidth;\r\n      }\r\n      ctx.fillStyle = currentFill as string;\r\n      currentDecoration &&\r\n        currentFill &&\r\n        ctx.fillRect(\r\n          drawStart,\r\n          top + offsetY * size + dy,\r\n          boxWidth - charSpacing,\r\n          this.fontSize / 15\r\n        );\r\n      topOffset += heightOfLine;\r\n    }\r\n    // if there is text background color no\r\n    // other shadows should be casted\r\n    this._removeShadow(ctx);\r\n  }\r\n\r\n  /**\r\n   * return font declaration string for canvas context\r\n   * @param {Object} [styleObject] object\r\n   * @returns {String} font declaration formatted for canvas context.\r\n   */\r\n  _getFontDeclaration(\r\n    {\r\n      fontFamily = this.fontFamily,\r\n      fontStyle = this.fontStyle,\r\n      fontWeight = this.fontWeight,\r\n      fontSize = this.fontSize,\r\n    }: Partial<\r\n      Pick<\r\n        TextStyleDeclaration,\r\n        'fontFamily' | 'fontStyle' | 'fontWeight' | 'fontSize'\r\n      >\r\n    > = {},\r\n    forMeasuring?: boolean\r\n  ): string {\r\n    const parsedFontFamily =\r\n      fontFamily.includes(\"'\") ||\r\n      fontFamily.includes('\"') ||\r\n      fontFamily.includes(',') ||\r\n      FabricText.genericFonts.includes(fontFamily.toLowerCase())\r\n        ? fontFamily\r\n        : `\"${fontFamily}\"`;\r\n    return [\r\n      fontStyle,\r\n      fontWeight,\r\n      `${forMeasuring ? this.CACHE_FONT_SIZE : fontSize}px`,\r\n      parsedFontFamily,\r\n    ].join(' ');\r\n  }\r\n\r\n  /**\r\n   * Renders text instance on a specified context\r\n   * @param {CanvasRenderingContext2D} ctx Context to render on\r\n   */\r\n  render(ctx: CanvasRenderingContext2D) {\r\n    if (!this.visible) {\r\n      return;\r\n    }\r\n    if (\r\n      this.canvas &&\r\n      this.canvas.skipOffscreen &&\r\n      !this.group &&\r\n      !this.isOnScreen()\r\n    ) {\r\n      return;\r\n    }\r\n    if (this._forceClearCache) {\r\n      this.initDimensions();\r\n    }\r\n    super.render(ctx);\r\n  }\r\n\r\n  /**\r\n   * Override this method to customize grapheme splitting\r\n   * @todo the util `graphemeSplit` needs to be injectable in some way.\r\n   * is more comfortable to inject the correct util rather than having to override text\r\n   * in the middle of the prototype chain\r\n   * @param {string} value\r\n   * @returns {string[]} array of graphemes\r\n   */\r\n  graphemeSplit(value: string): string[] {\r\n    return graphemeSplit(value);\r\n  }\r\n\r\n  /**\r\n   * Returns the text as an array of lines.\r\n   * @param {String} text text to split\r\n   * @returns  Lines in the text\r\n   */\r\n  _splitTextIntoLines(text: string): TextLinesInfo {\r\n    const lines = text.split(this._reNewline),\r\n      newLines = new Array<string[]>(lines.length),\r\n      newLine = ['\\n'];\r\n    let newText: string[] = [];\r\n    for (let i = 0; i < lines.length; i++) {\r\n      newLines[i] = this.graphemeSplit(lines[i]);\r\n      newText = newText.concat(newLines[i], newLine);\r\n    }\r\n    newText.pop();\r\n    return {\r\n      _unwrappedLines: newLines,\r\n      lines: lines,\r\n      graphemeText: newText,\r\n      graphemeLines: newLines,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Returns object representation of an instance\r\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n   * @return {Object} Object representation of an instance\r\n   */\r\n  toObject<\r\n    T extends Omit<Props & TClassProperties<this>, keyof SProps>,\r\n    K extends keyof T = never\r\n  >(propertiesToInclude: K[] = []): Pick<T, K> & SProps {\r\n    return {\r\n      ...super.toObject([...additionalProps, ...propertiesToInclude] as K[]),\r\n      styles: stylesToArray(this.styles, this.text),\r\n      ...(this.path ? { path: this.path.toObject() } : {}),\r\n    };\r\n  }\r\n\r\n  set(key: string | any, value?: any) {\r\n    const { textLayoutProperties } = this.constructor as typeof FabricText;\r\n    super.set(key, value);\r\n    let needsDims = false;\r\n    let isAddingPath = false;\r\n    if (typeof key === 'object') {\r\n      for (const _key in key) {\r\n        if (_key === 'path') {\r\n          this.setPathInfo();\r\n        }\r\n        needsDims = needsDims || textLayoutProperties.includes(_key);\r\n        isAddingPath = isAddingPath || _key === 'path';\r\n      }\r\n    } else {\r\n      needsDims = textLayoutProperties.includes(key);\r\n      isAddingPath = key === 'path';\r\n    }\r\n    if (isAddingPath) {\r\n      this.setPathInfo();\r\n    }\r\n    if (needsDims && this.initialized) {\r\n      this.initDimensions();\r\n      this.setCoords();\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Returns complexity of an instance\r\n   * @return {Number} complexity\r\n   */\r\n  complexity(): number {\r\n    return 1;\r\n  }\r\n\r\n  static genericFonts = [\r\n    'sans-serif',\r\n    'serif',\r\n    'cursive',\r\n    'fantasy',\r\n    'monospace',\r\n  ];\r\n\r\n  /* _FROM_SVG_START_ */\r\n\r\n  /**\r\n   * List of attribute names to account for when parsing SVG element (used by {@link FabricText.fromElement})\r\n   * @static\r\n   * @memberOf Text\r\n   * @see: http://www.w3.org/TR/SVG/text.html#TextElement\r\n   */\r\n  static ATTRIBUTE_NAMES = SHARED_ATTRIBUTES.concat(\r\n    'x',\r\n    'y',\r\n    'dx',\r\n    'dy',\r\n    'font-family',\r\n    'font-style',\r\n    'font-weight',\r\n    'font-size',\r\n    'letter-spacing',\r\n    'text-decoration',\r\n    'text-anchor'\r\n  );\r\n\r\n  /**\r\n   * Returns FabricText instance from an SVG element (<b>not yet implemented</b>)\r\n   * @static\r\n   * @memberOf Text\r\n   * @param {HTMLElement} element Element to parse\r\n   * @param {Object} [options] Options object\r\n   */\r\n  static async fromElement(\r\n    element: HTMLElement,\r\n    options: Abortable,\r\n    cssRules?: CSSRules\r\n  ) {\r\n    const parsedAttributes = parseAttributes(\r\n      element,\r\n      FabricText.ATTRIBUTE_NAMES,\r\n      cssRules\r\n    );\r\n\r\n    const {\r\n      textAnchor = LEFT as typeof LEFT | typeof CENTER | typeof RIGHT,\r\n      textDecoration = '',\r\n      dx = 0,\r\n      dy = 0,\r\n      top = 0,\r\n      left = 0,\r\n      fontSize = DEFAULT_SVG_FONT_SIZE,\r\n      strokeWidth = 1,\r\n      ...restOfOptions\r\n    } = { ...options, ...parsedAttributes };\r\n\r\n    const textContent = (element.textContent || '')\r\n      .replace(/^\\s+|\\s+$|\\n+/g, '')\r\n      .replace(/\\s+/g, ' ');\r\n\r\n    // this code here is probably the usual issue for SVG center find\r\n    // this can later looked at again and probably removed.\r\n\r\n    const text = new this(textContent, {\r\n        left: left + dx,\r\n        top: top + dy,\r\n        underline: textDecoration.includes('underline'),\r\n        overline: textDecoration.includes('overline'),\r\n        linethrough: textDecoration.includes('line-through'),\r\n        // we initialize this as 0\r\n        strokeWidth: 0,\r\n        fontSize,\r\n        ...restOfOptions,\r\n      }),\r\n      textHeightScaleFactor = text.getScaledHeight() / text.height,\r\n      lineHeightDiff =\r\n        (text.height + text.strokeWidth) * text.lineHeight - text.height,\r\n      scaledDiff = lineHeightDiff * textHeightScaleFactor,\r\n      textHeight = text.getScaledHeight() + scaledDiff;\r\n\r\n    let offX = 0;\r\n    /*\r\n      Adjust positioning:\r\n        x/y attributes in SVG correspond to the bottom-left corner of text bounding box\r\n        fabric output by default at top, left.\r\n    */\r\n    if (textAnchor === CENTER) {\r\n      offX = text.getScaledWidth() / 2;\r\n    }\r\n    if (textAnchor === RIGHT) {\r\n      offX = text.getScaledWidth();\r\n    }\r\n    text.set({\r\n      left: text.left - offX,\r\n      top:\r\n        text.top -\r\n        (textHeight - text.fontSize * (0.07 + text._fontSizeFraction)) /\r\n          text.lineHeight,\r\n      strokeWidth,\r\n    });\r\n    return text;\r\n  }\r\n\r\n  /* _FROM_SVG_END_ */\r\n\r\n  /**\r\n   * Returns FabricText instance from an object representation\r\n   * @param {Object} object plain js Object to create an instance from\r\n   * @returns {Promise<FabricText>}\r\n   */\r\n  static fromObject<\r\n    T extends TOptions<SerializedTextProps>,\r\n    S extends FabricText\r\n  >(object: T) {\r\n    return this._fromObject<S>(\r\n      {\r\n        ...object,\r\n        styles: stylesFromArray(object.styles || {}, object.text),\r\n      },\r\n      {\r\n        extraParam: 'text',\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\napplyMixins(FabricText, [TextSVGExportMixin]);\r\nclassRegistry.setClass(FabricText);\r\nclassRegistry.setSVGClass(FabricText);\r\n","import type { Canvas } from '../../canvas/Canvas';\r\nimport type {\r\n  DragEventData,\r\n  DropEventData,\r\n  TPointerEvent,\r\n} from '../../EventTypeDefs';\r\nimport { Point } from '../../Point';\r\nimport type { IText } from './IText';\r\nimport { setStyle } from '../../util/dom_style';\r\nimport { cloneDeep } from '../../util/internals/cloneDeep';\r\nimport type { TextStyleDeclaration } from '../Text/StyledText';\r\nimport { getDocumentFromElement } from '../../util/dom_misc';\r\nimport { CHANGED, NONE } from '../../constants';\r\n\r\n/**\r\n * #### Dragging IText/Textbox Lifecycle\r\n * - {@link start} is called from `mousedown` {@link IText#_mouseDownHandler} and determines if dragging should start by testing {@link isPointerOverSelection}\r\n * - if true `mousedown` {@link IText#_mouseDownHandler} is blocked to keep selection\r\n * - if the pointer moves, canvas fires numerous mousemove {@link Canvas#_onMouseMove} that we make sure **aren't** prevented ({@link IText#shouldStartDragging}) in order for the window to start a drag session\r\n * - once/if the session starts canvas calls {@link onDragStart} on the active object to determine if dragging should occur\r\n * - canvas fires relevant drag events that are handled by the handlers defined in this scope\r\n * - {@link end} is called from `mouseup` {@link IText#mouseUpHandler}, blocking IText default click behavior\r\n * - in case the drag session didn't occur, {@link end} handles a click, since logic to do so was blocked during `mousedown`\r\n */\r\nexport class DraggableTextDelegate {\r\n  readonly target: IText;\r\n  private __mouseDownInPlace = false;\r\n  private __dragStartFired = false;\r\n  private __isDraggingOver = false;\r\n  private __dragStartSelection?: {\r\n    selectionStart: number;\r\n    selectionEnd: number;\r\n  };\r\n  private __dragImageDisposer?: VoidFunction;\r\n  private _dispose?: () => void;\r\n\r\n  constructor(target: IText) {\r\n    this.target = target;\r\n    const disposers = [\r\n      this.target.on('dragenter', this.dragEnterHandler.bind(this)),\r\n      this.target.on('dragover', this.dragOverHandler.bind(this)),\r\n      this.target.on('dragleave', this.dragLeaveHandler.bind(this)),\r\n      this.target.on('dragend', this.dragEndHandler.bind(this)),\r\n      this.target.on('drop', this.dropHandler.bind(this)),\r\n    ];\r\n    this._dispose = () => {\r\n      disposers.forEach((d) => d());\r\n      this._dispose = undefined;\r\n    };\r\n  }\r\n\r\n  isPointerOverSelection(e: TPointerEvent) {\r\n    const target = this.target;\r\n    const newSelection = target.getSelectionStartFromPointer(e);\r\n    return (\r\n      target.isEditing &&\r\n      newSelection >= target.selectionStart &&\r\n      newSelection <= target.selectionEnd &&\r\n      target.selectionStart < target.selectionEnd\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @public override this method to disable dragging and default to mousedown logic\r\n   */\r\n  start(e: TPointerEvent) {\r\n    return (this.__mouseDownInPlace = this.isPointerOverSelection(e));\r\n  }\r\n\r\n  /**\r\n   * @public override this method to disable dragging without discarding selection\r\n   */\r\n  isActive() {\r\n    return this.__mouseDownInPlace;\r\n  }\r\n\r\n  /**\r\n   * Ends interaction and sets cursor in case of a click\r\n   * @returns true if was active\r\n   */\r\n  end(e: TPointerEvent) {\r\n    const active = this.isActive();\r\n    if (active && !this.__dragStartFired) {\r\n      // mousedown has been blocked since `active` is true => cursor has not been set.\r\n      // `__dragStartFired` is false => dragging didn't occur, pointer didn't move and is over selection.\r\n      // meaning this is actually a click, `active` is a false positive.\r\n      this.target.setCursorByClick(e);\r\n      this.target.initDelayedCursor(true);\r\n    }\r\n    this.__mouseDownInPlace = false;\r\n    this.__dragStartFired = false;\r\n    this.__isDraggingOver = false;\r\n    return active;\r\n  }\r\n\r\n  getDragStartSelection() {\r\n    return this.__dragStartSelection;\r\n  }\r\n\r\n  /**\r\n   * Override to customize the drag image\r\n   * https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer/setDragImage\r\n   */\r\n  setDragImage(\r\n    e: DragEvent,\r\n    {\r\n      selectionStart,\r\n      selectionEnd,\r\n    }: {\r\n      selectionStart: number;\r\n      selectionEnd: number;\r\n    }\r\n  ) {\r\n    const target = this.target;\r\n    const canvas = target.canvas!;\r\n    const flipFactor = new Point(target.flipX ? -1 : 1, target.flipY ? -1 : 1);\r\n    const boundaries = target._getCursorBoundaries(selectionStart);\r\n    const selectionPosition = new Point(\r\n      boundaries.left + boundaries.leftOffset,\r\n      boundaries.top + boundaries.topOffset\r\n    ).multiply(flipFactor);\r\n    const pos = selectionPosition.transform(target.calcTransformMatrix());\r\n    const pointer = canvas.getScenePoint(e);\r\n    const diff = pointer.subtract(pos);\r\n    const retinaScaling = target.getCanvasRetinaScaling();\r\n    const bbox = target.getBoundingRect();\r\n    const correction = pos.subtract(new Point(bbox.left, bbox.top));\r\n    const vpt = canvas.viewportTransform;\r\n    const offset = correction.add(diff).transform(vpt, true);\r\n    //  prepare instance for drag image snapshot by making all non selected text invisible\r\n    const bgc = target.backgroundColor;\r\n    const styles = cloneDeep(target.styles);\r\n    target.backgroundColor = '';\r\n    const styleOverride = {\r\n      stroke: 'transparent',\r\n      fill: 'transparent',\r\n      textBackgroundColor: 'transparent',\r\n    };\r\n    target.setSelectionStyles(styleOverride, 0, selectionStart);\r\n    target.setSelectionStyles(styleOverride, selectionEnd, target.text.length);\r\n    target.dirty = true;\r\n    const dragImage = target.toCanvasElement({\r\n      enableRetinaScaling: canvas.enableRetinaScaling,\r\n      viewportTransform: true,\r\n    });\r\n    // restore values\r\n    target.backgroundColor = bgc;\r\n    target.styles = styles;\r\n    target.dirty = true;\r\n    //  position drag image offscreen\r\n    setStyle(dragImage, {\r\n      position: 'fixed',\r\n      left: `${-dragImage.width}px`,\r\n      border: NONE,\r\n      width: `${dragImage.width / retinaScaling}px`,\r\n      height: `${dragImage.height / retinaScaling}px`,\r\n    });\r\n    this.__dragImageDisposer && this.__dragImageDisposer();\r\n    this.__dragImageDisposer = () => {\r\n      dragImage.remove();\r\n    };\r\n    getDocumentFromElement(\r\n      (e.target || this.target.hiddenTextarea)! as HTMLElement\r\n    ).body.appendChild(dragImage);\r\n    e.dataTransfer?.setDragImage(dragImage, offset.x, offset.y);\r\n  }\r\n\r\n  /**\r\n   * @returns {boolean} determines whether {@link target} should/shouldn't become a drag source\r\n   */\r\n  onDragStart(e: DragEvent): boolean {\r\n    this.__dragStartFired = true;\r\n    const target = this.target;\r\n    const active = this.isActive();\r\n    if (active && e.dataTransfer) {\r\n      const selection = (this.__dragStartSelection = {\r\n        selectionStart: target.selectionStart,\r\n        selectionEnd: target.selectionEnd,\r\n      });\r\n      const value = target._text\r\n        .slice(selection.selectionStart, selection.selectionEnd)\r\n        .join('');\r\n      const data = { text: target.text, value, ...selection };\r\n      e.dataTransfer.setData('text/plain', value);\r\n      e.dataTransfer.setData(\r\n        'application/fabric',\r\n        JSON.stringify({\r\n          value: value,\r\n          styles: target.getSelectionStyles(\r\n            selection.selectionStart,\r\n            selection.selectionEnd,\r\n            true\r\n          ),\r\n        })\r\n      );\r\n      e.dataTransfer.effectAllowed = 'copyMove';\r\n      this.setDragImage(e, data);\r\n    }\r\n    target.abortCursorAnimation();\r\n    return active;\r\n  }\r\n\r\n  /**\r\n   * use {@link targetCanDrop} to respect overriding\r\n   * @returns {boolean} determines whether {@link target} should/shouldn't become a drop target\r\n   */\r\n  canDrop(e: DragEvent): boolean {\r\n    if (\r\n      this.target.editable &&\r\n      !this.target.getActiveControl() &&\r\n      !e.defaultPrevented\r\n    ) {\r\n      if (this.isActive() && this.__dragStartSelection) {\r\n        //  drag source trying to drop over itself\r\n        //  allow dropping only outside of drag start selection\r\n        const index = this.target.getSelectionStartFromPointer(e);\r\n        const dragStartSelection = this.__dragStartSelection;\r\n        return (\r\n          index < dragStartSelection.selectionStart ||\r\n          index > dragStartSelection.selectionEnd\r\n        );\r\n      }\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * in order to respect overriding {@link IText#canDrop} we call that instead of calling {@link canDrop} directly\r\n   */\r\n  protected targetCanDrop(e: DragEvent) {\r\n    return this.target.canDrop(e);\r\n  }\r\n\r\n  dragEnterHandler({ e }: DragEventData) {\r\n    const canDrop = this.targetCanDrop(e);\r\n    if (!this.__isDraggingOver && canDrop) {\r\n      this.__isDraggingOver = true;\r\n    }\r\n  }\r\n\r\n  dragOverHandler(ev: DragEventData) {\r\n    const { e } = ev;\r\n    const canDrop = this.targetCanDrop(e);\r\n    if (!this.__isDraggingOver && canDrop) {\r\n      this.__isDraggingOver = true;\r\n    } else if (this.__isDraggingOver && !canDrop) {\r\n      //  drop state has changed\r\n      this.__isDraggingOver = false;\r\n    }\r\n    if (this.__isDraggingOver) {\r\n      //  can be dropped, inform browser\r\n      e.preventDefault();\r\n      //  inform event subscribers\r\n      ev.canDrop = true;\r\n      ev.dropTarget = this.target;\r\n    }\r\n  }\r\n\r\n  dragLeaveHandler() {\r\n    if (this.__isDraggingOver || this.isActive()) {\r\n      this.__isDraggingOver = false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Override the `text/plain | application/fabric` types of {@link DragEvent#dataTransfer}\r\n   * in order to change the drop value or to customize styling respectively, by listening to the `drop:before` event\r\n   * https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API/Drag_operations#performing_a_drop\r\n   */\r\n  dropHandler(ev: DropEventData) {\r\n    const { e } = ev;\r\n    const didDrop = e.defaultPrevented;\r\n    this.__isDraggingOver = false;\r\n    // inform browser that the drop has been accepted\r\n    e.preventDefault();\r\n    let insert = e.dataTransfer?.getData('text/plain');\r\n    if (insert && !didDrop) {\r\n      const target = this.target;\r\n      const canvas = target.canvas!;\r\n      let insertAt = target.getSelectionStartFromPointer(e);\r\n      const { styles } = (\r\n        e.dataTransfer!.types.includes('application/fabric')\r\n          ? JSON.parse(e.dataTransfer!.getData('application/fabric'))\r\n          : {}\r\n      ) as { styles: TextStyleDeclaration[] };\r\n      const trailing = insert[Math.max(0, insert.length - 1)];\r\n      const selectionStartOffset = 0;\r\n      //  drag and drop in same instance\r\n      if (this.__dragStartSelection) {\r\n        const selectionStart = this.__dragStartSelection.selectionStart;\r\n        const selectionEnd = this.__dragStartSelection.selectionEnd;\r\n        if (insertAt > selectionStart && insertAt <= selectionEnd) {\r\n          insertAt = selectionStart;\r\n        } else if (insertAt > selectionEnd) {\r\n          insertAt -= selectionEnd - selectionStart;\r\n        }\r\n        target.removeChars(selectionStart, selectionEnd);\r\n        // prevent `dragend` from handling event\r\n        delete this.__dragStartSelection;\r\n      }\r\n      //  remove redundant line break\r\n      if (\r\n        target._reNewline.test(trailing) &&\r\n        (target._reNewline.test(target._text[insertAt]) ||\r\n          insertAt === target._text.length)\r\n      ) {\r\n        insert = insert.trimEnd();\r\n      }\r\n      //  inform subscribers\r\n      ev.didDrop = true;\r\n      ev.dropTarget = target;\r\n      //  finalize\r\n      target.insertChars(insert, styles, insertAt);\r\n      // can this part be moved in an outside event? andrea to check.\r\n      canvas.setActiveObject(target);\r\n      target.enterEditing(e);\r\n      target.selectionStart = Math.min(\r\n        insertAt + selectionStartOffset,\r\n        target._text.length\r\n      );\r\n      target.selectionEnd = Math.min(\r\n        target.selectionStart + insert.length,\r\n        target._text.length\r\n      );\r\n      target.hiddenTextarea!.value = target.text;\r\n      target._updateTextarea();\r\n      target.hiddenTextarea!.focus();\r\n      target.fire(CHANGED, {\r\n        index: insertAt + selectionStartOffset,\r\n        action: 'drop',\r\n      });\r\n      canvas.fire('text:changed', { target });\r\n      canvas.contextTopDirty = true;\r\n      canvas.requestRenderAll();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * fired only on the drag source after drop (if occurred)\r\n   * handle changes to the drag source in case of a drop on another object or a cancellation\r\n   * https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API/Drag_operations#finishing_a_drag\r\n   */\r\n  dragEndHandler({ e }: DragEventData) {\r\n    if (this.isActive() && this.__dragStartFired) {\r\n      //  once the drop event finishes we check if we need to change the drag source\r\n      //  if the drag source received the drop we bail out since the drop handler has already handled logic\r\n      if (this.__dragStartSelection) {\r\n        const target = this.target;\r\n        const canvas = this.target.canvas!;\r\n        const { selectionStart, selectionEnd } = this.__dragStartSelection;\r\n        const dropEffect = e.dataTransfer?.dropEffect || NONE;\r\n        if (dropEffect === NONE) {\r\n          // pointer is back over selection\r\n          target.selectionStart = selectionStart;\r\n          target.selectionEnd = selectionEnd;\r\n          target._updateTextarea();\r\n          target.hiddenTextarea!.focus();\r\n        } else {\r\n          target.clearContextTop();\r\n          if (dropEffect === 'move') {\r\n            target.removeChars(selectionStart, selectionEnd);\r\n            target.selectionStart = target.selectionEnd = selectionStart;\r\n            target.hiddenTextarea &&\r\n              (target.hiddenTextarea.value = target.text);\r\n            target._updateTextarea();\r\n            target.fire(CHANGED, {\r\n              index: selectionStart,\r\n              action: 'dragend',\r\n            });\r\n            canvas.fire('text:changed', { target });\r\n            canvas.requestRenderAll();\r\n          }\r\n          target.exitEditing();\r\n        }\r\n      }\r\n    }\r\n\r\n    this.__dragImageDisposer && this.__dragImageDisposer();\r\n    delete this.__dragImageDisposer;\r\n    delete this.__dragStartSelection;\r\n    this.__isDraggingOver = false;\r\n  }\r\n\r\n  dispose() {\r\n    this._dispose && this._dispose();\r\n  }\r\n}\r\n","import type {\r\n  ObjectEvents,\r\n  TPointerEvent,\r\n  TPointerEventInfo,\r\n} from '../../EventTypeDefs';\r\nimport { Point } from '../../Point';\r\nimport type { FabricObject } from '../Object/FabricObject';\r\nimport { FabricText } from '../Text/Text';\r\nimport { animate } from '../../util/animation/animate';\r\nimport type { TOnAnimationChangeCallback } from '../../util/animation/types';\r\nimport type { ValueAnimation } from '../../util/animation/ValueAnimation';\r\nimport type { TextStyleDeclaration } from '../Text/StyledText';\r\nimport type { SerializedTextProps, TextProps } from '../Text/Text';\r\nimport type { TOptions } from '../../typedefs';\r\nimport { getDocumentFromElement } from '../../util/dom_misc';\r\nimport { LEFT, MODIFIED, RIGHT, reNewline } from '../../constants';\r\nimport type { IText } from './IText';\r\n\r\n/**\r\n *  extend this regex to support non english languages\r\n *\r\n *  - ` `      Matches a SPACE character (char code 32).\r\n *  - `\\n`     Matches a LINE FEED character (char code 10).\r\n *  - `\\.`     Matches a \".\" character (char code 46).\r\n *  - `,`      Matches a \",\" character (char code 44).\r\n *  - `;`      Matches a \";\" character (char code 59).\r\n *  - `!`      Matches a \"!\" character (char code 33).\r\n *  - `\\?`     Matches a \"?\" character (char code 63).\r\n *  - `\\-`     Matches a \"-\" character (char code 45).\r\n */\r\n// eslint-disable-next-line no-useless-escape\r\nconst reNonWord = /[ \\n\\.,;!\\?\\-]/;\r\n\r\nexport type ITextEvents = ObjectEvents & {\r\n  'selection:changed': never;\r\n  changed: never | { index: number; action: string };\r\n  tripleclick: TPointerEventInfo;\r\n  'editing:entered': never | { e: TPointerEvent };\r\n  'editing:exited': never;\r\n};\r\n\r\nexport abstract class ITextBehavior<\r\n  Props extends TOptions<TextProps> = Partial<TextProps>,\r\n  SProps extends SerializedTextProps = SerializedTextProps,\r\n  EventSpec extends ITextEvents = ITextEvents\r\n> extends FabricText<Props, SProps, EventSpec> {\r\n  declare abstract isEditing: boolean;\r\n  declare abstract cursorDelay: number;\r\n  declare abstract selectionStart: number;\r\n  declare abstract selectionEnd: number;\r\n  declare abstract cursorDuration: number;\r\n  declare abstract editable: boolean;\r\n  declare abstract editingBorderColor: string;\r\n\r\n  declare abstract compositionStart: number;\r\n  declare abstract compositionEnd: number;\r\n\r\n  declare abstract hiddenTextarea: HTMLTextAreaElement | null;\r\n\r\n  /**\r\n   * Helps determining when the text is in composition, so that the cursor\r\n   * rendering is altered.\r\n   */\r\n  protected declare inCompositionMode: boolean;\r\n\r\n  protected declare _reSpace: RegExp;\r\n  private declare _currentTickState?: ValueAnimation;\r\n  private declare _currentTickCompleteState?: ValueAnimation;\r\n  protected _currentCursorOpacity = 1;\r\n  private declare _textBeforeEdit: string;\r\n  protected declare __selectionStartOnMouseDown: number;\r\n\r\n  protected declare selected: boolean;\r\n  protected declare cursorOffsetCache: { left?: number; top?: number };\r\n  protected declare _savedProps?: {\r\n    hasControls: boolean;\r\n    borderColor: string;\r\n    lockMovementX: boolean;\r\n    lockMovementY: boolean;\r\n    selectable: boolean;\r\n    hoverCursor: CSSStyleDeclaration['cursor'] | null;\r\n    defaultCursor?: CSSStyleDeclaration['cursor'];\r\n    moveCursor?: CSSStyleDeclaration['cursor'];\r\n  };\r\n  protected declare _selectionDirection: 'left' | 'right' | null;\r\n\r\n  abstract initHiddenTextarea(): void;\r\n  abstract _fireSelectionChanged(): void;\r\n  abstract renderCursorOrSelection(): void;\r\n  abstract getSelectionStartFromPointer(e: TPointerEvent): number;\r\n  abstract _getCursorBoundaries(\r\n    index: number,\r\n    skipCaching?: boolean\r\n  ): {\r\n    left: number;\r\n    top: number;\r\n    leftOffset: number;\r\n    topOffset: number;\r\n  };\r\n\r\n  /**\r\n   * Initializes all the interactive behavior of IText\r\n   */\r\n  initBehavior() {\r\n    this._tick = this._tick.bind(this);\r\n    this._onTickComplete = this._onTickComplete.bind(this);\r\n    this.updateSelectionOnMouseMove =\r\n      this.updateSelectionOnMouseMove.bind(this);\r\n  }\r\n\r\n  onDeselect(options?: { e?: TPointerEvent; object?: FabricObject }) {\r\n    this.isEditing && this.exitEditing();\r\n    this.selected = false;\r\n    return super.onDeselect(options);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _animateCursor({\r\n    toValue,\r\n    duration,\r\n    delay,\r\n    onComplete,\r\n  }: {\r\n    toValue: number;\r\n    duration: number;\r\n    delay?: number;\r\n    onComplete?: TOnAnimationChangeCallback<number, void>;\r\n  }) {\r\n    return animate({\r\n      startValue: this._currentCursorOpacity,\r\n      endValue: toValue,\r\n      duration,\r\n      delay,\r\n      onComplete,\r\n      abort: () =>\r\n        !this.canvas ||\r\n        // we do not want to animate a selection, only cursor\r\n        this.selectionStart !== this.selectionEnd,\r\n      onChange: (value) => {\r\n        this._currentCursorOpacity = value;\r\n        this.renderCursorOrSelection();\r\n      },\r\n    });\r\n  }\r\n\r\n  /**\r\n   * changes the cursor from visible to invisible\r\n   */\r\n  private _tick(delay?: number) {\r\n    this._currentTickState = this._animateCursor({\r\n      toValue: 0,\r\n      duration: this.cursorDuration / 2,\r\n      delay: Math.max(delay || 0, 100),\r\n      onComplete: this._onTickComplete,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Changes the cursor from invisible to visible\r\n   */\r\n  private _onTickComplete() {\r\n    this._currentTickCompleteState?.abort();\r\n    this._currentTickCompleteState = this._animateCursor({\r\n      toValue: 1,\r\n      duration: this.cursorDuration,\r\n      onComplete: this._tick,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Initializes delayed cursor\r\n   */\r\n  initDelayedCursor(restart?: boolean) {\r\n    this.abortCursorAnimation();\r\n    this._tick(restart ? 0 : this.cursorDelay);\r\n  }\r\n\r\n  /**\r\n   * Aborts cursor animation, clears all timeouts and clear textarea context if necessary\r\n   */\r\n  abortCursorAnimation() {\r\n    let shouldClear = false;\r\n    [this._currentTickState, this._currentTickCompleteState].forEach(\r\n      (cursorAnimation) => {\r\n        if (cursorAnimation && !cursorAnimation.isDone()) {\r\n          shouldClear = true;\r\n          cursorAnimation.abort();\r\n        }\r\n      }\r\n    );\r\n\r\n    this._currentCursorOpacity = 1;\r\n\r\n    //  make sure we clear context even if instance is not editing\r\n    if (shouldClear) {\r\n      this.clearContextTop();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Restart tue cursor animation if either is in complete state ( between animations )\r\n   * or if it never started before\r\n   */\r\n  restartCursorIfNeeded() {\r\n    if (\r\n      [this._currentTickState, this._currentTickCompleteState].some(\r\n        (cursorAnimation) => !cursorAnimation || cursorAnimation.isDone()\r\n      )\r\n    ) {\r\n      this.initDelayedCursor();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Selects entire text\r\n   */\r\n  selectAll() {\r\n    this.selectionStart = 0;\r\n    this.selectionEnd = this._text.length;\r\n    this._fireSelectionChanged();\r\n    this._updateTextarea();\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Returns selected text\r\n   * @return {String}\r\n   */\r\n  getSelectedText(): string {\r\n    return this._text.slice(this.selectionStart, this.selectionEnd).join('');\r\n  }\r\n\r\n  /**\r\n   * Find new selection index representing start of current word according to current selection index\r\n   * @param {Number} startFrom Current selection index\r\n   * @return {Number} New selection index\r\n   */\r\n  findWordBoundaryLeft(startFrom: number): number {\r\n    let offset = 0,\r\n      index = startFrom - 1;\r\n\r\n    // remove space before cursor first\r\n    if (this._reSpace.test(this._text[index])) {\r\n      while (this._reSpace.test(this._text[index])) {\r\n        offset++;\r\n        index--;\r\n      }\r\n    }\r\n    while (/\\S/.test(this._text[index]) && index > -1) {\r\n      offset++;\r\n      index--;\r\n    }\r\n\r\n    return startFrom - offset;\r\n  }\r\n\r\n  /**\r\n   * Find new selection index representing end of current word according to current selection index\r\n   * @param {Number} startFrom Current selection index\r\n   * @return {Number} New selection index\r\n   */\r\n  findWordBoundaryRight(startFrom: number): number {\r\n    let offset = 0,\r\n      index = startFrom;\r\n\r\n    // remove space after cursor first\r\n    if (this._reSpace.test(this._text[index])) {\r\n      while (this._reSpace.test(this._text[index])) {\r\n        offset++;\r\n        index++;\r\n      }\r\n    }\r\n    while (/\\S/.test(this._text[index]) && index < this._text.length) {\r\n      offset++;\r\n      index++;\r\n    }\r\n\r\n    return startFrom + offset;\r\n  }\r\n\r\n  /**\r\n   * Find new selection index representing start of current line according to current selection index\r\n   * @param {Number} startFrom Current selection index\r\n   * @return {Number} New selection index\r\n   */\r\n  findLineBoundaryLeft(startFrom: number): number {\r\n    let offset = 0,\r\n      index = startFrom - 1;\r\n\r\n    while (!/\\n/.test(this._text[index]) && index > -1) {\r\n      offset++;\r\n      index--;\r\n    }\r\n\r\n    return startFrom - offset;\r\n  }\r\n\r\n  /**\r\n   * Find new selection index representing end of current line according to current selection index\r\n   * @param {Number} startFrom Current selection index\r\n   * @return {Number} New selection index\r\n   */\r\n  findLineBoundaryRight(startFrom: number): number {\r\n    let offset = 0,\r\n      index = startFrom;\r\n\r\n    while (!/\\n/.test(this._text[index]) && index < this._text.length) {\r\n      offset++;\r\n      index++;\r\n    }\r\n\r\n    return startFrom + offset;\r\n  }\r\n\r\n  /**\r\n   * Finds index corresponding to beginning or end of a word\r\n   * @param {Number} selectionStart Index of a character\r\n   * @param {Number} direction 1 or -1\r\n   * @return {Number} Index of the beginning or end of a word\r\n   */\r\n  searchWordBoundary(selectionStart: number, direction: 1 | -1): number {\r\n    const text = this._text;\r\n    // if we land on a space we move the cursor backwards\r\n    // if we are searching boundary end we move the cursor backwards ONLY if we don't land on a line break\r\n    let index =\r\n        selectionStart > 0 &&\r\n        this._reSpace.test(text[selectionStart]) &&\r\n        (direction === -1 || !reNewline.test(text[selectionStart - 1]))\r\n          ? selectionStart - 1\r\n          : selectionStart,\r\n      _char = text[index];\r\n    while (index > 0 && index < text.length && !reNonWord.test(_char)) {\r\n      index += direction;\r\n      _char = text[index];\r\n    }\r\n    if (direction === -1 && reNonWord.test(_char)) {\r\n      index++;\r\n    }\r\n    return index;\r\n  }\r\n\r\n  /**\r\n   * TODO fix: selectionStart set as 0 will be ignored?\r\n   * Selects a word based on the index\r\n   * @param {Number} selectionStart Index of a character\r\n   */\r\n  selectWord(selectionStart?: number) {\r\n    selectionStart = selectionStart || this.selectionStart;\r\n    // search backwards\r\n    const newSelectionStart = this.searchWordBoundary(selectionStart, -1),\r\n      // search forward\r\n      newSelectionEnd = Math.max(\r\n        newSelectionStart,\r\n        this.searchWordBoundary(selectionStart, 1)\r\n      );\r\n\r\n    this.selectionStart = newSelectionStart;\r\n    this.selectionEnd = newSelectionEnd;\r\n    this._fireSelectionChanged();\r\n    this._updateTextarea();\r\n    this.renderCursorOrSelection();\r\n  }\r\n\r\n  /**\r\n   * TODO fix: selectionStart set as 0 will be ignored?\r\n   * Selects a line based on the index\r\n   * @param {Number} selectionStart Index of a character\r\n   */\r\n  selectLine(selectionStart?: number) {\r\n    selectionStart = selectionStart || this.selectionStart;\r\n    const newSelectionStart = this.findLineBoundaryLeft(selectionStart),\r\n      newSelectionEnd = this.findLineBoundaryRight(selectionStart);\r\n\r\n    this.selectionStart = newSelectionStart;\r\n    this.selectionEnd = newSelectionEnd;\r\n    this._fireSelectionChanged();\r\n    this._updateTextarea();\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Enters editing state\r\n   */\r\n  enterEditing(e?: TPointerEvent) {\r\n    if (this.isEditing || !this.editable) {\r\n      return;\r\n    }\r\n    if (this.canvas) {\r\n      this.canvas.calcOffset();\r\n      this.canvas.textEditingManager.exitTextEditing();\r\n    }\r\n\r\n    this.isEditing = true;\r\n\r\n    this.initHiddenTextarea();\r\n    this.hiddenTextarea!.focus();\r\n    this.hiddenTextarea!.value = this.text;\r\n    this._updateTextarea();\r\n    this._saveEditingProps();\r\n    this._setEditingProps();\r\n    this._textBeforeEdit = this.text;\r\n\r\n    this._tick();\r\n    this.fire('editing:entered', e ? { e } : undefined);\r\n    this._fireSelectionChanged();\r\n    if (this.canvas) {\r\n      // @ts-expect-error in reality it is an IText instance\r\n      this.canvas.fire('text:editing:entered', { target: this, e });\r\n      this.canvas.requestRenderAll();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * called by {@link Canvas#textEditingManager}\r\n   */\r\n  updateSelectionOnMouseMove(e: TPointerEvent) {\r\n    if (this.getActiveControl()) {\r\n      return;\r\n    }\r\n\r\n    const el = this.hiddenTextarea!;\r\n    // regain focus\r\n    getDocumentFromElement(el).activeElement !== el && el.focus();\r\n\r\n    const newSelectionStart = this.getSelectionStartFromPointer(e),\r\n      currentStart = this.selectionStart,\r\n      currentEnd = this.selectionEnd;\r\n    if (\r\n      (newSelectionStart !== this.__selectionStartOnMouseDown ||\r\n        currentStart === currentEnd) &&\r\n      (currentStart === newSelectionStart || currentEnd === newSelectionStart)\r\n    ) {\r\n      return;\r\n    }\r\n    if (newSelectionStart > this.__selectionStartOnMouseDown) {\r\n      this.selectionStart = this.__selectionStartOnMouseDown;\r\n      this.selectionEnd = newSelectionStart;\r\n    } else {\r\n      this.selectionStart = newSelectionStart;\r\n      this.selectionEnd = this.__selectionStartOnMouseDown;\r\n    }\r\n    if (\r\n      this.selectionStart !== currentStart ||\r\n      this.selectionEnd !== currentEnd\r\n    ) {\r\n      this._fireSelectionChanged();\r\n      this._updateTextarea();\r\n      this.renderCursorOrSelection();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _setEditingProps() {\r\n    this.hoverCursor = 'text';\r\n\r\n    if (this.canvas) {\r\n      this.canvas.defaultCursor = this.canvas.moveCursor = 'text';\r\n    }\r\n\r\n    this.borderColor = this.editingBorderColor;\r\n    this.hasControls = this.selectable = false;\r\n    this.lockMovementX = this.lockMovementY = true;\r\n  }\r\n\r\n  /**\r\n   * convert from textarea to grapheme indexes\r\n   */\r\n  fromStringToGraphemeSelection(start: number, end: number, text: string) {\r\n    const smallerTextStart = text.slice(0, start),\r\n      graphemeStart = this.graphemeSplit(smallerTextStart).length;\r\n    if (start === end) {\r\n      return { selectionStart: graphemeStart, selectionEnd: graphemeStart };\r\n    }\r\n    const smallerTextEnd = text.slice(start, end),\r\n      graphemeEnd = this.graphemeSplit(smallerTextEnd).length;\r\n    return {\r\n      selectionStart: graphemeStart,\r\n      selectionEnd: graphemeStart + graphemeEnd,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * convert from fabric to textarea values\r\n   */\r\n  fromGraphemeToStringSelection(\r\n    start: number,\r\n    end: number,\r\n    graphemes: string[]\r\n  ) {\r\n    const smallerTextStart = graphemes.slice(0, start),\r\n      graphemeStart = smallerTextStart.join('').length;\r\n    if (start === end) {\r\n      return { selectionStart: graphemeStart, selectionEnd: graphemeStart };\r\n    }\r\n    const smallerTextEnd = graphemes.slice(start, end),\r\n      graphemeEnd = smallerTextEnd.join('').length;\r\n    return {\r\n      selectionStart: graphemeStart,\r\n      selectionEnd: graphemeStart + graphemeEnd,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _updateTextarea() {\r\n    this.cursorOffsetCache = {};\r\n    if (!this.hiddenTextarea) {\r\n      return;\r\n    }\r\n    if (!this.inCompositionMode) {\r\n      const newSelection = this.fromGraphemeToStringSelection(\r\n        this.selectionStart,\r\n        this.selectionEnd,\r\n        this._text\r\n      );\r\n      this.hiddenTextarea.selectionStart = newSelection.selectionStart;\r\n      this.hiddenTextarea.selectionEnd = newSelection.selectionEnd;\r\n    }\r\n    this.updateTextareaPosition();\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  updateFromTextArea() {\r\n    if (!this.hiddenTextarea) {\r\n      return;\r\n    }\r\n    this.cursorOffsetCache = {};\r\n    const textarea = this.hiddenTextarea;\r\n    this.text = textarea.value;\r\n    this.set('dirty', true);\r\n    this.initDimensions();\r\n    this.setCoords();\r\n    const newSelection = this.fromStringToGraphemeSelection(\r\n      textarea.selectionStart,\r\n      textarea.selectionEnd,\r\n      textarea.value\r\n    );\r\n    this.selectionEnd = this.selectionStart = newSelection.selectionEnd;\r\n    if (!this.inCompositionMode) {\r\n      this.selectionStart = newSelection.selectionStart;\r\n    }\r\n    this.updateTextareaPosition();\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  updateTextareaPosition() {\r\n    if (this.selectionStart === this.selectionEnd) {\r\n      const style = this._calcTextareaPosition();\r\n      this.hiddenTextarea!.style.left = style.left;\r\n      this.hiddenTextarea!.style.top = style.top;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @return {Object} style contains style for hiddenTextarea\r\n   */\r\n  _calcTextareaPosition() {\r\n    if (!this.canvas) {\r\n      return { left: '1px', top: '1px' };\r\n    }\r\n    const desiredPosition = this.inCompositionMode\r\n        ? this.compositionStart\r\n        : this.selectionStart,\r\n      boundaries = this._getCursorBoundaries(desiredPosition),\r\n      cursorLocation = this.get2DCursorLocation(desiredPosition),\r\n      lineIndex = cursorLocation.lineIndex,\r\n      charIndex = cursorLocation.charIndex,\r\n      charHeight =\r\n        this.getValueOfPropertyAt(lineIndex, charIndex, 'fontSize') *\r\n        this.lineHeight,\r\n      leftOffset = boundaries.leftOffset,\r\n      retinaScaling = this.getCanvasRetinaScaling(),\r\n      upperCanvas = this.canvas.upperCanvasEl,\r\n      upperCanvasWidth = upperCanvas.width / retinaScaling,\r\n      upperCanvasHeight = upperCanvas.height / retinaScaling,\r\n      maxWidth = upperCanvasWidth - charHeight,\r\n      maxHeight = upperCanvasHeight - charHeight;\r\n\r\n    const p = new Point(\r\n      boundaries.left + leftOffset,\r\n      boundaries.top + boundaries.topOffset + charHeight\r\n    )\r\n      .transform(this.calcTransformMatrix())\r\n      .transform(this.canvas.viewportTransform)\r\n      .multiply(\r\n        new Point(\r\n          upperCanvas.clientWidth / upperCanvasWidth,\r\n          upperCanvas.clientHeight / upperCanvasHeight\r\n        )\r\n      );\r\n\r\n    if (p.x < 0) {\r\n      p.x = 0;\r\n    }\r\n    if (p.x > maxWidth) {\r\n      p.x = maxWidth;\r\n    }\r\n    if (p.y < 0) {\r\n      p.y = 0;\r\n    }\r\n    if (p.y > maxHeight) {\r\n      p.y = maxHeight;\r\n    }\r\n\r\n    // add canvas offset on document\r\n    p.x += this.canvas._offset.left;\r\n    p.y += this.canvas._offset.top;\r\n\r\n    return {\r\n      left: `${p.x}px`,\r\n      top: `${p.y}px`,\r\n      fontSize: `${charHeight}px`,\r\n      charHeight: charHeight,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _saveEditingProps() {\r\n    this._savedProps = {\r\n      hasControls: this.hasControls,\r\n      borderColor: this.borderColor,\r\n      lockMovementX: this.lockMovementX,\r\n      lockMovementY: this.lockMovementY,\r\n      hoverCursor: this.hoverCursor,\r\n      selectable: this.selectable,\r\n      defaultCursor: this.canvas && this.canvas.defaultCursor,\r\n      moveCursor: this.canvas && this.canvas.moveCursor,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _restoreEditingProps() {\r\n    if (!this._savedProps) {\r\n      return;\r\n    }\r\n\r\n    this.hoverCursor = this._savedProps.hoverCursor;\r\n    this.hasControls = this._savedProps.hasControls;\r\n    this.borderColor = this._savedProps.borderColor;\r\n    this.selectable = this._savedProps.selectable;\r\n    this.lockMovementX = this._savedProps.lockMovementX;\r\n    this.lockMovementY = this._savedProps.lockMovementY;\r\n\r\n    if (this.canvas) {\r\n      this.canvas.defaultCursor =\r\n        this._savedProps.defaultCursor || this.canvas.defaultCursor;\r\n      this.canvas.moveCursor =\r\n        this._savedProps.moveCursor || this.canvas.moveCursor;\r\n    }\r\n\r\n    delete this._savedProps;\r\n  }\r\n\r\n  /**\r\n   * runs the actual logic that exits from editing state, see {@link exitEditing}\r\n   */\r\n  protected _exitEditing() {\r\n    const hiddenTextarea = this.hiddenTextarea;\r\n    this.selected = false;\r\n    this.isEditing = false;\r\n\r\n    if (hiddenTextarea) {\r\n      hiddenTextarea.blur && hiddenTextarea.blur();\r\n      hiddenTextarea.parentNode &&\r\n        hiddenTextarea.parentNode.removeChild(hiddenTextarea);\r\n    }\r\n    this.hiddenTextarea = null;\r\n    this.abortCursorAnimation();\r\n    this.selectionStart !== this.selectionEnd && this.clearContextTop();\r\n  }\r\n\r\n  /**\r\n   * Exits from editing state and fires relevant events\r\n   */\r\n  exitEditing() {\r\n    const isTextChanged = this._textBeforeEdit !== this.text;\r\n    this._exitEditing();\r\n    this.selectionEnd = this.selectionStart;\r\n    this._restoreEditingProps();\r\n    if (this._forceClearCache) {\r\n      this.initDimensions();\r\n      this.setCoords();\r\n    }\r\n    this.fire('editing:exited');\r\n    isTextChanged && this.fire(MODIFIED);\r\n    if (this.canvas) {\r\n      this.canvas.fire('text:editing:exited', {\r\n        target: this as unknown as IText,\r\n      });\r\n      // todo: evaluate add an action to this event\r\n      isTextChanged && this.canvas.fire('object:modified', { target: this });\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _removeExtraneousStyles() {\r\n    for (const prop in this.styles) {\r\n      if (!this._textLines[prop as unknown as number]) {\r\n        delete this.styles[prop];\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * remove and reflow a style block from start to end.\r\n   * @param {Number} start linear start position for removal (included in removal)\r\n   * @param {Number} end linear end position for removal ( excluded from removal )\r\n   */\r\n  removeStyleFromTo(start: number, end: number) {\r\n    const { lineIndex: lineStart, charIndex: charStart } =\r\n        this.get2DCursorLocation(start, true),\r\n      { lineIndex: lineEnd, charIndex: charEnd } = this.get2DCursorLocation(\r\n        end,\r\n        true\r\n      );\r\n    if (lineStart !== lineEnd) {\r\n      // step1 remove the trailing of lineStart\r\n      if (this.styles[lineStart]) {\r\n        for (\r\n          let i = charStart;\r\n          i < this._unwrappedTextLines[lineStart].length;\r\n          i++\r\n        ) {\r\n          delete this.styles[lineStart][i];\r\n        }\r\n      }\r\n      // step2 move the trailing of lineEnd to lineStart if needed\r\n      if (this.styles[lineEnd]) {\r\n        for (\r\n          let i = charEnd;\r\n          i < this._unwrappedTextLines[lineEnd].length;\r\n          i++\r\n        ) {\r\n          const styleObj = this.styles[lineEnd][i];\r\n          if (styleObj) {\r\n            this.styles[lineStart] || (this.styles[lineStart] = {});\r\n            this.styles[lineStart][charStart + i - charEnd] = styleObj;\r\n          }\r\n        }\r\n      }\r\n      // step3 detects lines will be completely removed.\r\n      for (let i = lineStart + 1; i <= lineEnd; i++) {\r\n        delete this.styles[i];\r\n      }\r\n      // step4 shift remaining lines.\r\n      this.shiftLineStyles(lineEnd, lineStart - lineEnd);\r\n    } else {\r\n      // remove and shift left on the same line\r\n      if (this.styles[lineStart]) {\r\n        const styleObj = this.styles[lineStart];\r\n        const diff = charEnd - charStart;\r\n        for (let i = charStart; i < charEnd; i++) {\r\n          delete styleObj[i];\r\n        }\r\n        for (const char in this.styles[lineStart]) {\r\n          const numericChar = parseInt(char, 10);\r\n          if (numericChar >= charEnd) {\r\n            styleObj[numericChar - diff] = styleObj[char];\r\n            delete styleObj[char];\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Shifts line styles up or down\r\n   * @param {Number} lineIndex Index of a line\r\n   * @param {Number} offset Can any number?\r\n   */\r\n  shiftLineStyles(lineIndex: number, offset: number) {\r\n    const clonedStyles = Object.assign({}, this.styles);\r\n    for (const line in this.styles) {\r\n      const numericLine = parseInt(line, 10);\r\n      if (numericLine > lineIndex) {\r\n        this.styles[numericLine + offset] = clonedStyles[numericLine];\r\n        if (!clonedStyles[numericLine - offset]) {\r\n          delete this.styles[numericLine];\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle insertion of more consecutive style lines for when one or more\r\n   * newlines gets added to the text. Since current style needs to be shifted\r\n   * first we shift the current style of the number lines needed, then we add\r\n   * new lines from the last to the first.\r\n   * @param {Number} lineIndex Index of a line\r\n   * @param {Number} charIndex Index of a char\r\n   * @param {Number} qty number of lines to add\r\n   * @param {Array} copiedStyle Array of objects styles\r\n   */\r\n  insertNewlineStyleObject(\r\n    lineIndex: number,\r\n    charIndex: number,\r\n    qty: number,\r\n    copiedStyle?: { [index: number]: TextStyleDeclaration }\r\n  ) {\r\n    const newLineStyles: { [index: number]: TextStyleDeclaration } = {};\r\n    const originalLineLength = this._unwrappedTextLines[lineIndex].length;\r\n    const isEndOfLine = originalLineLength === charIndex;\r\n\r\n    let someStyleIsCarryingOver = false;\r\n    qty || (qty = 1);\r\n    this.shiftLineStyles(lineIndex, qty);\r\n    const currentCharStyle = this.styles[lineIndex]\r\n      ? this.styles[lineIndex][charIndex === 0 ? charIndex : charIndex - 1]\r\n      : undefined;\r\n\r\n    // we clone styles of all chars\r\n    // after cursor onto the current line\r\n    for (const index in this.styles[lineIndex]) {\r\n      const numIndex = parseInt(index, 10);\r\n      if (numIndex >= charIndex) {\r\n        someStyleIsCarryingOver = true;\r\n        newLineStyles[numIndex - charIndex] = this.styles[lineIndex][index];\r\n        // remove lines from the previous line since they're on a new line now\r\n        if (!(isEndOfLine && charIndex === 0)) {\r\n          delete this.styles[lineIndex][index];\r\n        }\r\n      }\r\n    }\r\n    let styleCarriedOver = false;\r\n    if (someStyleIsCarryingOver && !isEndOfLine) {\r\n      // if is end of line, the extra style we copied\r\n      // is probably not something we want\r\n      this.styles[lineIndex + qty] = newLineStyles;\r\n      styleCarriedOver = true;\r\n    }\r\n    if (styleCarriedOver || originalLineLength > charIndex) {\r\n      // skip the last line of since we already prepared it.\r\n      // or contains text without style that we don't want to style\r\n      // just because it changed lines\r\n      qty--;\r\n    }\r\n    // for the all the lines or all the other lines\r\n    // we clone current char style onto the next (otherwise empty) line\r\n    while (qty > 0) {\r\n      if (copiedStyle && copiedStyle[qty - 1]) {\r\n        this.styles[lineIndex + qty] = {\r\n          0: { ...copiedStyle[qty - 1] },\r\n        };\r\n      } else if (currentCharStyle) {\r\n        this.styles[lineIndex + qty] = {\r\n          0: { ...currentCharStyle },\r\n        };\r\n      } else {\r\n        delete this.styles[lineIndex + qty];\r\n      }\r\n      qty--;\r\n    }\r\n    this._forceClearCache = true;\r\n  }\r\n\r\n  /**\r\n   * Inserts style object for a given line/char index\r\n   * @param {Number} lineIndex Index of a line\r\n   * @param {Number} charIndex Index of a char\r\n   * @param {Number} quantity number Style object to insert, if given\r\n   * @param {Array} copiedStyle array of style objects\r\n   */\r\n  insertCharStyleObject(\r\n    lineIndex: number,\r\n    charIndex: number,\r\n    quantity: number,\r\n    copiedStyle?: TextStyleDeclaration[]\r\n  ) {\r\n    if (!this.styles) {\r\n      this.styles = {};\r\n    }\r\n    const currentLineStyles = this.styles[lineIndex],\r\n      currentLineStylesCloned = currentLineStyles\r\n        ? { ...currentLineStyles }\r\n        : {};\r\n\r\n    quantity || (quantity = 1);\r\n    // shift all char styles by quantity forward\r\n    // 0,1,2,3 -> (charIndex=2) -> 0,1,3,4 -> (insert 2) -> 0,1,2,3,4\r\n    for (const index in currentLineStylesCloned) {\r\n      const numericIndex = parseInt(index, 10);\r\n      if (numericIndex >= charIndex) {\r\n        currentLineStyles[numericIndex + quantity] =\r\n          currentLineStylesCloned[numericIndex];\r\n        // only delete the style if there was nothing moved there\r\n        if (!currentLineStylesCloned[numericIndex - quantity]) {\r\n          delete currentLineStyles[numericIndex];\r\n        }\r\n      }\r\n    }\r\n    this._forceClearCache = true;\r\n    if (copiedStyle) {\r\n      while (quantity--) {\r\n        if (!Object.keys(copiedStyle[quantity]).length) {\r\n          continue;\r\n        }\r\n        if (!this.styles[lineIndex]) {\r\n          this.styles[lineIndex] = {};\r\n        }\r\n        this.styles[lineIndex][charIndex + quantity] = {\r\n          ...copiedStyle[quantity],\r\n        };\r\n      }\r\n      return;\r\n    }\r\n    if (!currentLineStyles) {\r\n      return;\r\n    }\r\n    const newStyle = currentLineStyles[charIndex ? charIndex - 1 : 1];\r\n    while (newStyle && quantity--) {\r\n      this.styles[lineIndex][charIndex + quantity] = { ...newStyle };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Inserts style object(s)\r\n   * @param {Array} insertedText Characters at the location where style is inserted\r\n   * @param {Number} start cursor index for inserting style\r\n   * @param {Array} [copiedStyle] array of style objects to insert.\r\n   */\r\n  insertNewStyleBlock(\r\n    insertedText: string[],\r\n    start: number,\r\n    copiedStyle?: TextStyleDeclaration[]\r\n  ) {\r\n    const cursorLoc = this.get2DCursorLocation(start, true),\r\n      addedLines = [0];\r\n    let linesLength = 0;\r\n    // get an array of how many char per lines are being added.\r\n    for (let i = 0; i < insertedText.length; i++) {\r\n      if (insertedText[i] === '\\n') {\r\n        linesLength++;\r\n        addedLines[linesLength] = 0;\r\n      } else {\r\n        addedLines[linesLength]++;\r\n      }\r\n    }\r\n    // for the first line copy the style from the current char position.\r\n    if (addedLines[0] > 0) {\r\n      this.insertCharStyleObject(\r\n        cursorLoc.lineIndex,\r\n        cursorLoc.charIndex,\r\n        addedLines[0],\r\n        copiedStyle\r\n      );\r\n      copiedStyle = copiedStyle && copiedStyle.slice(addedLines[0] + 1);\r\n    }\r\n    linesLength &&\r\n      this.insertNewlineStyleObject(\r\n        cursorLoc.lineIndex,\r\n        cursorLoc.charIndex + addedLines[0],\r\n        linesLength\r\n      );\r\n    let i;\r\n    for (i = 1; i < linesLength; i++) {\r\n      if (addedLines[i] > 0) {\r\n        this.insertCharStyleObject(\r\n          cursorLoc.lineIndex + i,\r\n          0,\r\n          addedLines[i],\r\n          copiedStyle\r\n        );\r\n      } else if (copiedStyle) {\r\n        // this test is required in order to close #6841\r\n        // when a pasted buffer begins with a newline then\r\n        // this.styles[cursorLoc.lineIndex + i] and copiedStyle[0]\r\n        // may be undefined for some reason\r\n        if (this.styles[cursorLoc.lineIndex + i] && copiedStyle[0]) {\r\n          this.styles[cursorLoc.lineIndex + i][0] = copiedStyle[0];\r\n        }\r\n      }\r\n      copiedStyle = copiedStyle && copiedStyle.slice(addedLines[i] + 1);\r\n    }\r\n    if (addedLines[i] > 0) {\r\n      this.insertCharStyleObject(\r\n        cursorLoc.lineIndex + i,\r\n        0,\r\n        addedLines[i],\r\n        copiedStyle\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Removes characters from start/end\r\n   * start/end ar per grapheme position in _text array.\r\n   *\r\n   * @param {Number} start\r\n   * @param {Number} end default to start + 1\r\n   */\r\n  removeChars(start: number, end: number = start + 1) {\r\n    this.removeStyleFromTo(start, end);\r\n    this._text.splice(start, end - start);\r\n    this.text = this._text.join('');\r\n    this.set('dirty', true);\r\n    this.initDimensions();\r\n    this.setCoords();\r\n    this._removeExtraneousStyles();\r\n  }\r\n\r\n  /**\r\n   * insert characters at start position, before start position.\r\n   * start  equal 1 it means the text get inserted between actual grapheme 0 and 1\r\n   * if style array is provided, it must be as the same length of text in graphemes\r\n   * if end is provided and is bigger than start, old text is replaced.\r\n   * start/end ar per grapheme position in _text array.\r\n   *\r\n   * @param {String} text text to insert\r\n   * @param {Array} style array of style objects\r\n   * @param {Number} start\r\n   * @param {Number} end default to start + 1\r\n   */\r\n  insertChars(\r\n    text: string,\r\n    style: TextStyleDeclaration[] | undefined,\r\n    start: number,\r\n    end: number = start\r\n  ) {\r\n    if (end > start) {\r\n      this.removeStyleFromTo(start, end);\r\n    }\r\n    const graphemes = this.graphemeSplit(text);\r\n    this.insertNewStyleBlock(graphemes, start, style);\r\n    this._text = [\r\n      ...this._text.slice(0, start),\r\n      ...graphemes,\r\n      ...this._text.slice(end),\r\n    ];\r\n    this.text = this._text.join('');\r\n    this.set('dirty', true);\r\n    this.initDimensions();\r\n    this.setCoords();\r\n    this._removeExtraneousStyles();\r\n  }\r\n\r\n  /**\r\n   * Set the selectionStart and selectionEnd according to the new position of cursor\r\n   * mimic the key - mouse navigation when shift is pressed.\r\n   */\r\n  setSelectionStartEndWithShift(\r\n    start: number,\r\n    end: number,\r\n    newSelection: number\r\n  ) {\r\n    if (newSelection <= start) {\r\n      if (end === start) {\r\n        this._selectionDirection = LEFT;\r\n      } else if (this._selectionDirection === RIGHT) {\r\n        this._selectionDirection = LEFT;\r\n        this.selectionEnd = start;\r\n      }\r\n      this.selectionStart = newSelection;\r\n    } else if (newSelection > start && newSelection < end) {\r\n      if (this._selectionDirection === RIGHT) {\r\n        this.selectionEnd = newSelection;\r\n      } else {\r\n        this.selectionStart = newSelection;\r\n      }\r\n    } else {\r\n      // newSelection is > selection start and end\r\n      if (end === start) {\r\n        this._selectionDirection = RIGHT;\r\n      } else if (this._selectionDirection === LEFT) {\r\n        this._selectionDirection = RIGHT;\r\n        this.selectionStart = end;\r\n      }\r\n      this.selectionEnd = newSelection;\r\n    }\r\n  }\r\n}\r\n","import { config } from '../../config';\r\nimport { getFabricDocument, getEnv } from '../../env';\r\nimport { capValue } from '../../util/misc/capValue';\r\nimport type { ITextEvents } from './ITextBehavior';\r\nimport { ITextBehavior } from './ITextBehavior';\r\nimport type { TKeyMapIText } from './constants';\r\nimport type { TOptions } from '../../typedefs';\r\nimport type { TextProps, SerializedTextProps } from '../Text/Text';\r\nimport { getDocumentFromElement } from '../../util/dom_misc';\r\nimport { CHANGED, LEFT, RIGHT } from '../../constants';\r\nimport type { IText } from './IText';\r\nimport type { TextStyleDeclaration } from '../Text/StyledText';\r\n\r\nexport abstract class ITextKeyBehavior<\r\n  Props extends TOptions<TextProps> = Partial<TextProps>,\r\n  SProps extends SerializedTextProps = SerializedTextProps,\r\n  EventSpec extends ITextEvents = ITextEvents\r\n> extends ITextBehavior<Props, SProps, EventSpec> {\r\n  /**\r\n   * For functionalities on keyDown\r\n   * Map a special key to a function of the instance/prototype\r\n   * If you need different behavior for ESC or TAB or arrows, you have to change\r\n   * this map setting the name of a function that you build on the IText or\r\n   * your prototype.\r\n   * the map change will affect all Instances unless you need for only some text Instances\r\n   * in that case you have to clone this object and assign your Instance.\r\n   * this.keysMap = Object.assign({}, this.keysMap);\r\n   * The function must be in IText.prototype.myFunction And will receive event as args[0]\r\n   */\r\n  declare keysMap: TKeyMapIText;\r\n\r\n  declare keysMapRtl: TKeyMapIText;\r\n\r\n  /**\r\n   * For functionalities on keyUp + ctrl || cmd\r\n   */\r\n  declare ctrlKeysMapUp: TKeyMapIText;\r\n\r\n  /**\r\n   * For functionalities on keyDown + ctrl || cmd\r\n   */\r\n  declare ctrlKeysMapDown: TKeyMapIText;\r\n\r\n  declare hiddenTextarea: HTMLTextAreaElement | null;\r\n\r\n  /**\r\n   * DOM container to append the hiddenTextarea.\r\n   * An alternative to attaching to the document.body.\r\n   * Useful to reduce laggish redraw of the full document.body tree and\r\n   * also with modals event capturing that won't let the textarea take focus.\r\n   * @type HTMLElement\r\n   * @default\r\n   */\r\n  declare hiddenTextareaContainer?: HTMLElement | null;\r\n\r\n  private declare _clickHandlerInitialized: boolean;\r\n  private declare _copyDone: boolean;\r\n  private declare fromPaste: boolean;\r\n\r\n  /**\r\n   * Initializes hidden textarea (needed to bring up keyboard in iOS)\r\n   */\r\n  initHiddenTextarea() {\r\n    const doc =\r\n      (this.canvas && getDocumentFromElement(this.canvas.getElement())) ||\r\n      getFabricDocument();\r\n    const textarea = doc.createElement('textarea');\r\n    Object.entries({\r\n      autocapitalize: 'off',\r\n      autocorrect: 'off',\r\n      autocomplete: 'off',\r\n      spellcheck: 'false',\r\n      'data-fabric': 'textarea',\r\n      wrap: 'off',\r\n    }).map(([attribute, value]) => textarea.setAttribute(attribute, value));\r\n    const { top, left, fontSize } = this._calcTextareaPosition();\r\n    // line-height: 1px; was removed from the style to fix this:\r\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=870966\r\n    textarea.style.cssText = `position: absolute; top: ${top}; left: ${left}; z-index: -999; opacity: 0; width: 1px; height: 1px; font-size: 1px; padding-top: ${fontSize};`;\r\n\r\n    (this.hiddenTextareaContainer || doc.body).appendChild(textarea);\r\n\r\n    Object.entries({\r\n      blur: 'blur',\r\n      keydown: 'onKeyDown',\r\n      keyup: 'onKeyUp',\r\n      input: 'onInput',\r\n      copy: 'copy',\r\n      cut: 'copy',\r\n      paste: 'paste',\r\n      compositionstart: 'onCompositionStart',\r\n      compositionupdate: 'onCompositionUpdate',\r\n      compositionend: 'onCompositionEnd',\r\n    } as Record<string, keyof this>).map(([eventName, handler]) =>\r\n      textarea.addEventListener(\r\n        eventName,\r\n        (this[handler] as Function).bind(this)\r\n      )\r\n    );\r\n    this.hiddenTextarea = textarea;\r\n  }\r\n\r\n  /**\r\n   * Override this method to customize cursor behavior on textbox blur\r\n   */\r\n  blur() {\r\n    this.abortCursorAnimation();\r\n  }\r\n\r\n  /**\r\n   * Handles keydown event\r\n   * only used for arrows and combination of modifier keys.\r\n   * @param {KeyboardEvent} e Event object\r\n   */\r\n  onKeyDown(e: KeyboardEvent) {\r\n    if (!this.isEditing) {\r\n      return;\r\n    }\r\n    const keyMap = this.direction === 'rtl' ? this.keysMapRtl : this.keysMap;\r\n    if (e.keyCode in keyMap) {\r\n      // @ts-expect-error legacy method calling pattern\r\n      this[keyMap[e.keyCode]](e);\r\n    } else if (e.keyCode in this.ctrlKeysMapDown && (e.ctrlKey || e.metaKey)) {\r\n      // @ts-expect-error legacy method calling pattern\r\n      this[this.ctrlKeysMapDown[e.keyCode]](e);\r\n    } else {\r\n      return;\r\n    }\r\n    e.stopImmediatePropagation();\r\n    e.preventDefault();\r\n    if (e.keyCode >= 33 && e.keyCode <= 40) {\r\n      // if i press an arrow key just update selection\r\n      this.inCompositionMode = false;\r\n      this.clearContextTop();\r\n      this.renderCursorOrSelection();\r\n    } else {\r\n      this.canvas && this.canvas.requestRenderAll();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles keyup event\r\n   * We handle KeyUp because ie11 and edge have difficulties copy/pasting\r\n   * if a copy/cut event fired, keyup is dismissed\r\n   * @param {KeyboardEvent} e Event object\r\n   */\r\n  onKeyUp(e: KeyboardEvent) {\r\n    if (!this.isEditing || this._copyDone || this.inCompositionMode) {\r\n      this._copyDone = false;\r\n      return;\r\n    }\r\n    if (e.keyCode in this.ctrlKeysMapUp && (e.ctrlKey || e.metaKey)) {\r\n      // @ts-expect-error legacy method calling pattern\r\n      this[this.ctrlKeysMapUp[e.keyCode]](e);\r\n    } else {\r\n      return;\r\n    }\r\n    e.stopImmediatePropagation();\r\n    e.preventDefault();\r\n    this.canvas && this.canvas.requestRenderAll();\r\n  }\r\n\r\n  /**\r\n   * Handles onInput event\r\n   * @param {Event} e Event object\r\n   */\r\n  onInput(this: this & { hiddenTextarea: HTMLTextAreaElement }, e: Event) {\r\n    const fromPaste = this.fromPaste;\r\n    this.fromPaste = false;\r\n    e && e.stopPropagation();\r\n    if (!this.isEditing) {\r\n      return;\r\n    }\r\n    const updateAndFire = () => {\r\n      this.updateFromTextArea();\r\n      this.fire(CHANGED);\r\n      if (this.canvas) {\r\n        this.canvas.fire('text:changed', { target: this as unknown as IText });\r\n        this.canvas.requestRenderAll();\r\n      }\r\n    };\r\n    if (this.hiddenTextarea.value === '') {\r\n      this.styles = {};\r\n      updateAndFire();\r\n      return;\r\n    }\r\n    // decisions about style changes.\r\n    const nextText = this._splitTextIntoLines(\r\n        this.hiddenTextarea.value\r\n      ).graphemeText,\r\n      charCount = this._text.length,\r\n      nextCharCount = nextText.length,\r\n      selectionStart = this.selectionStart,\r\n      selectionEnd = this.selectionEnd,\r\n      selection = selectionStart !== selectionEnd;\r\n    let copiedStyle: TextStyleDeclaration[] | undefined,\r\n      removedText,\r\n      charDiff = nextCharCount - charCount,\r\n      removeFrom,\r\n      removeTo;\r\n\r\n    const textareaSelection = this.fromStringToGraphemeSelection(\r\n      this.hiddenTextarea.selectionStart,\r\n      this.hiddenTextarea.selectionEnd,\r\n      this.hiddenTextarea.value\r\n    );\r\n    const backDelete = selectionStart > textareaSelection.selectionStart;\r\n\r\n    if (selection) {\r\n      removedText = this._text.slice(selectionStart, selectionEnd);\r\n      charDiff += selectionEnd - selectionStart;\r\n    } else if (nextCharCount < charCount) {\r\n      if (backDelete) {\r\n        removedText = this._text.slice(selectionEnd + charDiff, selectionEnd);\r\n      } else {\r\n        removedText = this._text.slice(\r\n          selectionStart,\r\n          selectionStart - charDiff\r\n        );\r\n      }\r\n    }\r\n    const insertedText = nextText.slice(\r\n      textareaSelection.selectionEnd - charDiff,\r\n      textareaSelection.selectionEnd\r\n    );\r\n    if (removedText && removedText.length) {\r\n      if (insertedText.length) {\r\n        // let's copy some style before deleting.\r\n        // we want to copy the style before the cursor OR the style at the cursor if selection\r\n        // is bigger than 0.\r\n        copiedStyle = this.getSelectionStyles(\r\n          selectionStart,\r\n          selectionStart + 1,\r\n          false\r\n        );\r\n        // now duplicate the style one for each inserted text.\r\n        copiedStyle = insertedText.map(\r\n          () =>\r\n            // this return an array of references, but that is fine since we are\r\n            // copying the style later.\r\n            copiedStyle![0]\r\n        );\r\n      }\r\n      if (selection) {\r\n        removeFrom = selectionStart;\r\n        removeTo = selectionEnd;\r\n      } else if (backDelete) {\r\n        // detect differences between forwardDelete and backDelete\r\n        removeFrom = selectionEnd - removedText.length;\r\n        removeTo = selectionEnd;\r\n      } else {\r\n        removeFrom = selectionEnd;\r\n        removeTo = selectionEnd + removedText.length;\r\n      }\r\n      this.removeStyleFromTo(removeFrom, removeTo);\r\n    }\r\n    if (insertedText.length) {\r\n      const { copyPasteData } = getEnv();\r\n      if (\r\n        fromPaste &&\r\n        insertedText.join('') === copyPasteData.copiedText &&\r\n        !config.disableStyleCopyPaste\r\n      ) {\r\n        copiedStyle = copyPasteData.copiedTextStyle;\r\n      }\r\n      this.insertNewStyleBlock(insertedText, selectionStart, copiedStyle);\r\n    }\r\n    updateAndFire();\r\n  }\r\n\r\n  /**\r\n   * Composition start\r\n   */\r\n  onCompositionStart() {\r\n    this.inCompositionMode = true;\r\n  }\r\n\r\n  /**\r\n   * Composition end\r\n   */\r\n  onCompositionEnd() {\r\n    this.inCompositionMode = false;\r\n  }\r\n\r\n  onCompositionUpdate({ target }: CompositionEvent) {\r\n    const { selectionStart, selectionEnd } = target as HTMLTextAreaElement;\r\n    this.compositionStart = selectionStart;\r\n    this.compositionEnd = selectionEnd;\r\n    this.updateTextareaPosition();\r\n  }\r\n\r\n  /**\r\n   * Copies selected text\r\n   */\r\n  copy() {\r\n    if (this.selectionStart === this.selectionEnd) {\r\n      //do not cut-copy if no selection\r\n      return;\r\n    }\r\n    const { copyPasteData } = getEnv();\r\n    copyPasteData.copiedText = this.getSelectedText();\r\n    if (!config.disableStyleCopyPaste) {\r\n      copyPasteData.copiedTextStyle = this.getSelectionStyles(\r\n        this.selectionStart,\r\n        this.selectionEnd,\r\n        true\r\n      );\r\n    } else {\r\n      copyPasteData.copiedTextStyle = undefined;\r\n    }\r\n    this._copyDone = true;\r\n  }\r\n\r\n  /**\r\n   * Pastes text\r\n   */\r\n  paste() {\r\n    this.fromPaste = true;\r\n  }\r\n\r\n  /**\r\n   * Finds the width in pixels before the cursor on the same line\r\n   * @private\r\n   * @param {Number} lineIndex\r\n   * @param {Number} charIndex\r\n   * @return {Number} widthBeforeCursor width before cursor\r\n   */\r\n  _getWidthBeforeCursor(lineIndex: number, charIndex: number): number {\r\n    let widthBeforeCursor = this._getLineLeftOffset(lineIndex),\r\n      bound;\r\n\r\n    if (charIndex > 0) {\r\n      bound = this.__charBounds[lineIndex][charIndex - 1];\r\n      widthBeforeCursor += bound.left + bound.width;\r\n    }\r\n    return widthBeforeCursor;\r\n  }\r\n\r\n  /**\r\n   * Gets start offset of a selection\r\n   * @param {KeyboardEvent} e Event object\r\n   * @param {Boolean} isRight\r\n   * @return {Number}\r\n   */\r\n  getDownCursorOffset(e: KeyboardEvent, isRight: boolean): number {\r\n    const selectionProp = this._getSelectionForOffset(e, isRight),\r\n      cursorLocation = this.get2DCursorLocation(selectionProp),\r\n      lineIndex = cursorLocation.lineIndex;\r\n    // if on last line, down cursor goes to end of line\r\n    if (\r\n      lineIndex === this._textLines.length - 1 ||\r\n      e.metaKey ||\r\n      e.keyCode === 34\r\n    ) {\r\n      // move to the end of a text\r\n      return this._text.length - selectionProp;\r\n    }\r\n    const charIndex = cursorLocation.charIndex,\r\n      widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex),\r\n      indexOnOtherLine = this._getIndexOnLine(lineIndex + 1, widthBeforeCursor),\r\n      textAfterCursor = this._textLines[lineIndex].slice(charIndex);\r\n    return (\r\n      textAfterCursor.length +\r\n      indexOnOtherLine +\r\n      1 +\r\n      this.missingNewlineOffset(lineIndex)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * private\r\n   * Helps finding if the offset should be counted from Start or End\r\n   * @param {KeyboardEvent} e Event object\r\n   * @param {Boolean} isRight\r\n   * @return {Number}\r\n   */\r\n  _getSelectionForOffset(e: KeyboardEvent, isRight: boolean): number {\r\n    if (e.shiftKey && this.selectionStart !== this.selectionEnd && isRight) {\r\n      return this.selectionEnd;\r\n    } else {\r\n      return this.selectionStart;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {KeyboardEvent} e Event object\r\n   * @param {Boolean} isRight\r\n   * @return {Number}\r\n   */\r\n  getUpCursorOffset(e: KeyboardEvent, isRight: boolean): number {\r\n    const selectionProp = this._getSelectionForOffset(e, isRight),\r\n      cursorLocation = this.get2DCursorLocation(selectionProp),\r\n      lineIndex = cursorLocation.lineIndex;\r\n    if (lineIndex === 0 || e.metaKey || e.keyCode === 33) {\r\n      // if on first line, up cursor goes to start of line\r\n      return -selectionProp;\r\n    }\r\n    const charIndex = cursorLocation.charIndex,\r\n      widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex),\r\n      indexOnOtherLine = this._getIndexOnLine(lineIndex - 1, widthBeforeCursor),\r\n      textBeforeCursor = this._textLines[lineIndex].slice(0, charIndex),\r\n      missingNewlineOffset = this.missingNewlineOffset(lineIndex - 1);\r\n    // return a negative offset\r\n    return (\r\n      -this._textLines[lineIndex - 1].length +\r\n      indexOnOtherLine -\r\n      textBeforeCursor.length +\r\n      (1 - missingNewlineOffset)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * for a given width it founds the matching character.\r\n   * @private\r\n   */\r\n  _getIndexOnLine(lineIndex: number, width: number) {\r\n    const line = this._textLines[lineIndex],\r\n      lineLeftOffset = this._getLineLeftOffset(lineIndex);\r\n    let widthOfCharsOnLine = lineLeftOffset,\r\n      indexOnLine = 0,\r\n      charWidth,\r\n      foundMatch;\r\n\r\n    for (let j = 0, jlen = line.length; j < jlen; j++) {\r\n      charWidth = this.__charBounds[lineIndex][j].width;\r\n      widthOfCharsOnLine += charWidth;\r\n      if (widthOfCharsOnLine > width) {\r\n        foundMatch = true;\r\n        const leftEdge = widthOfCharsOnLine - charWidth,\r\n          rightEdge = widthOfCharsOnLine,\r\n          offsetFromLeftEdge = Math.abs(leftEdge - width),\r\n          offsetFromRightEdge = Math.abs(rightEdge - width);\r\n\r\n        indexOnLine = offsetFromRightEdge < offsetFromLeftEdge ? j : j - 1;\r\n        break;\r\n      }\r\n    }\r\n\r\n    // reached end\r\n    if (!foundMatch) {\r\n      indexOnLine = line.length - 1;\r\n    }\r\n\r\n    return indexOnLine;\r\n  }\r\n\r\n  /**\r\n   * Moves cursor down\r\n   * @param {KeyboardEvent} e Event object\r\n   */\r\n  moveCursorDown(e: KeyboardEvent) {\r\n    if (\r\n      this.selectionStart >= this._text.length &&\r\n      this.selectionEnd >= this._text.length\r\n    ) {\r\n      return;\r\n    }\r\n    this._moveCursorUpOrDown('Down', e);\r\n  }\r\n\r\n  /**\r\n   * Moves cursor up\r\n   * @param {KeyboardEvent} e Event object\r\n   */\r\n  moveCursorUp(e: KeyboardEvent) {\r\n    if (this.selectionStart === 0 && this.selectionEnd === 0) {\r\n      return;\r\n    }\r\n    this._moveCursorUpOrDown('Up', e);\r\n  }\r\n\r\n  /**\r\n   * Moves cursor up or down, fires the events\r\n   * @param {String} direction 'Up' or 'Down'\r\n   * @param {KeyboardEvent} e Event object\r\n   */\r\n  _moveCursorUpOrDown(direction: 'Up' | 'Down', e: KeyboardEvent) {\r\n    const offset = this[`get${direction}CursorOffset`](\r\n      e,\r\n      this._selectionDirection === RIGHT\r\n    );\r\n    if (e.shiftKey) {\r\n      this.moveCursorWithShift(offset);\r\n    } else {\r\n      this.moveCursorWithoutShift(offset);\r\n    }\r\n    if (offset !== 0) {\r\n      const max = this.text.length;\r\n      this.selectionStart = capValue(0, this.selectionStart, max);\r\n      this.selectionEnd = capValue(0, this.selectionEnd, max);\r\n      // TODO fix: abort and init should be an alternative depending\r\n      // on selectionStart/End being equal or different\r\n      this.abortCursorAnimation();\r\n      this.initDelayedCursor();\r\n      this._fireSelectionChanged();\r\n      this._updateTextarea();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Moves cursor with shift\r\n   * @param {Number} offset\r\n   */\r\n  moveCursorWithShift(offset: number) {\r\n    const newSelection =\r\n      this._selectionDirection === LEFT\r\n        ? this.selectionStart + offset\r\n        : this.selectionEnd + offset;\r\n    this.setSelectionStartEndWithShift(\r\n      this.selectionStart,\r\n      this.selectionEnd,\r\n      newSelection\r\n    );\r\n    return offset !== 0;\r\n  }\r\n\r\n  /**\r\n   * Moves cursor up without shift\r\n   * @param {Number} offset\r\n   */\r\n  moveCursorWithoutShift(offset: number) {\r\n    if (offset < 0) {\r\n      this.selectionStart += offset;\r\n      this.selectionEnd = this.selectionStart;\r\n    } else {\r\n      this.selectionEnd += offset;\r\n      this.selectionStart = this.selectionEnd;\r\n    }\r\n    return offset !== 0;\r\n  }\r\n\r\n  /**\r\n   * Moves cursor left\r\n   * @param {KeyboardEvent} e Event object\r\n   */\r\n  moveCursorLeft(e: KeyboardEvent) {\r\n    if (this.selectionStart === 0 && this.selectionEnd === 0) {\r\n      return;\r\n    }\r\n    this._moveCursorLeftOrRight('Left', e);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @return {Boolean} true if a change happened\r\n   *\r\n   * @todo refactor not to use method name composition\r\n   */\r\n  _move(\r\n    e: KeyboardEvent,\r\n    prop: 'selectionStart' | 'selectionEnd',\r\n    direction: 'Left' | 'Right'\r\n  ): boolean {\r\n    let newValue: number | undefined;\r\n    if (e.altKey) {\r\n      newValue = this[`findWordBoundary${direction}`](this[prop]);\r\n    } else if (e.metaKey || e.keyCode === 35 || e.keyCode === 36) {\r\n      newValue = this[`findLineBoundary${direction}`](this[prop]);\r\n    } else {\r\n      this[prop] += direction === 'Left' ? -1 : 1;\r\n      return true;\r\n    }\r\n    if (typeof newValue !== 'undefined' && this[prop] !== newValue) {\r\n      this[prop] = newValue;\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _moveLeft(e: KeyboardEvent, prop: 'selectionStart' | 'selectionEnd') {\r\n    return this._move(e, prop, 'Left');\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _moveRight(e: KeyboardEvent, prop: 'selectionStart' | 'selectionEnd') {\r\n    return this._move(e, prop, 'Right');\r\n  }\r\n\r\n  /**\r\n   * Moves cursor left without keeping selection\r\n   * @param {KeyboardEvent} e\r\n   */\r\n  moveCursorLeftWithoutShift(e: KeyboardEvent) {\r\n    let change = true;\r\n    this._selectionDirection = LEFT;\r\n\r\n    // only move cursor when there is no selection,\r\n    // otherwise we discard it, and leave cursor on same place\r\n    if (\r\n      this.selectionEnd === this.selectionStart &&\r\n      this.selectionStart !== 0\r\n    ) {\r\n      change = this._moveLeft(e, 'selectionStart');\r\n    }\r\n    this.selectionEnd = this.selectionStart;\r\n    return change;\r\n  }\r\n\r\n  /**\r\n   * Moves cursor left while keeping selection\r\n   * @param {KeyboardEvent} e\r\n   */\r\n  moveCursorLeftWithShift(e: KeyboardEvent) {\r\n    if (\r\n      this._selectionDirection === RIGHT &&\r\n      this.selectionStart !== this.selectionEnd\r\n    ) {\r\n      return this._moveLeft(e, 'selectionEnd');\r\n    } else if (this.selectionStart !== 0) {\r\n      this._selectionDirection = LEFT;\r\n      return this._moveLeft(e, 'selectionStart');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Moves cursor right\r\n   * @param {KeyboardEvent} e Event object\r\n   */\r\n  moveCursorRight(e: KeyboardEvent) {\r\n    if (\r\n      this.selectionStart >= this._text.length &&\r\n      this.selectionEnd >= this._text.length\r\n    ) {\r\n      return;\r\n    }\r\n    this._moveCursorLeftOrRight('Right', e);\r\n  }\r\n\r\n  /**\r\n   * Moves cursor right or Left, fires event\r\n   * @param {String} direction 'Left', 'Right'\r\n   * @param {KeyboardEvent} e Event object\r\n   */\r\n  _moveCursorLeftOrRight(direction: 'Left' | 'Right', e: KeyboardEvent) {\r\n    const actionName = `moveCursor${direction}${\r\n      e.shiftKey ? 'WithShift' : 'WithoutShift'\r\n    }` as const;\r\n    this._currentCursorOpacity = 1;\r\n    if (this[actionName](e)) {\r\n      // TODO fix: abort and init should be an alternative depending\r\n      // on selectionStart/End being equal or different\r\n      this.abortCursorAnimation();\r\n      this.initDelayedCursor();\r\n      this._fireSelectionChanged();\r\n      this._updateTextarea();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Moves cursor right while keeping selection\r\n   * @param {KeyboardEvent} e\r\n   */\r\n  moveCursorRightWithShift(e: KeyboardEvent) {\r\n    if (\r\n      this._selectionDirection === LEFT &&\r\n      this.selectionStart !== this.selectionEnd\r\n    ) {\r\n      return this._moveRight(e, 'selectionStart');\r\n    } else if (this.selectionEnd !== this._text.length) {\r\n      this._selectionDirection = RIGHT;\r\n      return this._moveRight(e, 'selectionEnd');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Moves cursor right without keeping selection\r\n   * @param {KeyboardEvent} e Event object\r\n   */\r\n  moveCursorRightWithoutShift(e: KeyboardEvent) {\r\n    let changed = true;\r\n    this._selectionDirection = RIGHT;\r\n\r\n    if (this.selectionStart === this.selectionEnd) {\r\n      changed = this._moveRight(e, 'selectionStart');\r\n      this.selectionEnd = this.selectionStart;\r\n    } else {\r\n      this.selectionStart = this.selectionEnd;\r\n    }\r\n    return changed;\r\n  }\r\n}\r\n","import type { TPointerEvent, TPointerEventInfo } from '../../EventTypeDefs';\r\nimport type { XY } from '../../Point';\r\nimport { Point } from '../../Point';\r\nimport { stopEvent } from '../../util/dom_event';\r\nimport { invertTransform } from '../../util/misc/matrix';\r\nimport { DraggableTextDelegate } from './DraggableTextDelegate';\r\nimport type { ITextEvents } from './ITextBehavior';\r\nimport { ITextKeyBehavior } from './ITextKeyBehavior';\r\nimport type { TOptions } from '../../typedefs';\r\nimport type { TextProps, SerializedTextProps } from '../Text/Text';\r\n\r\n/**\r\n * `LEFT_CLICK === 0`\r\n */\r\nconst notALeftClick = (e: Event) => !!(e as MouseEvent).button;\r\n\r\nexport abstract class ITextClickBehavior<\r\n  Props extends TOptions<TextProps> = Partial<TextProps>,\r\n  SProps extends SerializedTextProps = SerializedTextProps,\r\n  EventSpec extends ITextEvents = ITextEvents\r\n> extends ITextKeyBehavior<Props, SProps, EventSpec> {\r\n  private declare __lastSelected: boolean;\r\n  private declare __lastClickTime: number;\r\n  private declare __lastLastClickTime: number;\r\n  private declare __lastPointer: XY | Record<string, never>;\r\n  private declare __newClickTime: number;\r\n\r\n  protected draggableTextDelegate: DraggableTextDelegate;\r\n\r\n  initBehavior() {\r\n    // Initializes event handlers related to cursor or selection\r\n    this.on('mousedown', this._mouseDownHandler);\r\n    this.on('mousedown:before', this._mouseDownHandlerBefore);\r\n    this.on('mouseup', this.mouseUpHandler);\r\n    this.on('mousedblclick', this.doubleClickHandler);\r\n    this.on('tripleclick', this.tripleClickHandler);\r\n\r\n    // Initializes \"dbclick\" event handler\r\n    this.__lastClickTime = +new Date();\r\n    // for triple click\r\n    this.__lastLastClickTime = +new Date();\r\n    this.__lastPointer = {};\r\n    this.on('mousedown', this.onMouseDown);\r\n\r\n    // @ts-expect-error in reality it is an IText instance\r\n    this.draggableTextDelegate = new DraggableTextDelegate(this);\r\n\r\n    super.initBehavior();\r\n  }\r\n\r\n  /**\r\n   * If this method returns true a mouse move operation over a text selection\r\n   * will not prevent the native mouse event allowing the browser to start a drag operation.\r\n   * shouldStartDragging can be read 'do not prevent default for mouse move event'\r\n   * To prevent drag and drop between objects both shouldStartDragging and onDragStart should return false\r\n   * @returns\r\n   */\r\n  shouldStartDragging() {\r\n    return this.draggableTextDelegate.isActive();\r\n  }\r\n\r\n  /**\r\n   * @public override this method to control whether instance should/shouldn't become a drag source,\r\n   * @see also {@link DraggableTextDelegate#isActive}\r\n   * To prevent drag and drop between objects both shouldStartDragging and onDragStart should return false\r\n   * @returns {boolean} should handle event\r\n   */\r\n  onDragStart(e: DragEvent) {\r\n    return this.draggableTextDelegate.onDragStart(e);\r\n  }\r\n\r\n  /**\r\n   * @public override this method to control whether instance should/shouldn't become a drop target\r\n   */\r\n  canDrop(e: DragEvent) {\r\n    return this.draggableTextDelegate.canDrop(e);\r\n  }\r\n\r\n  /**\r\n   * Default event handler to simulate triple click\r\n   * @private\r\n   */\r\n  onMouseDown(options: TPointerEventInfo) {\r\n    if (!this.canvas) {\r\n      return;\r\n    }\r\n    this.__newClickTime = +new Date();\r\n    const newPointer = options.pointer;\r\n    if (this.isTripleClick(newPointer)) {\r\n      this.fire('tripleclick', options);\r\n      stopEvent(options.e);\r\n    }\r\n    this.__lastLastClickTime = this.__lastClickTime;\r\n    this.__lastClickTime = this.__newClickTime;\r\n    this.__lastPointer = newPointer;\r\n    this.__lastSelected = this.selected && !this.getActiveControl();\r\n  }\r\n\r\n  isTripleClick(newPointer: XY) {\r\n    return (\r\n      this.__newClickTime - this.__lastClickTime < 500 &&\r\n      this.__lastClickTime - this.__lastLastClickTime < 500 &&\r\n      this.__lastPointer.x === newPointer.x &&\r\n      this.__lastPointer.y === newPointer.y\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Default handler for double click, select a word\r\n   */\r\n  doubleClickHandler(options: TPointerEventInfo) {\r\n    if (!this.isEditing) {\r\n      return;\r\n    }\r\n    this.selectWord(this.getSelectionStartFromPointer(options.e));\r\n  }\r\n\r\n  /**\r\n   * Default handler for triple click, select a line\r\n   */\r\n  tripleClickHandler(options: TPointerEventInfo) {\r\n    if (!this.isEditing) {\r\n      return;\r\n    }\r\n    this.selectLine(this.getSelectionStartFromPointer(options.e));\r\n  }\r\n\r\n  /**\r\n   * Default event handler for the basic functionalities needed on _mouseDown\r\n   * can be overridden to do something different.\r\n   * Scope of this implementation is: find the click position, set selectionStart\r\n   * find selectionEnd, initialize the drawing of either cursor or selection area\r\n   * initializing a mousedDown on a text area will cancel fabricjs knowledge of\r\n   * current compositionMode. It will be set to false.\r\n   */\r\n  _mouseDownHandler({ e }: TPointerEventInfo) {\r\n    if (\r\n      !this.canvas ||\r\n      !this.editable ||\r\n      notALeftClick(e) ||\r\n      this.getActiveControl()\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    if (this.draggableTextDelegate.start(e)) {\r\n      return;\r\n    }\r\n\r\n    this.canvas.textEditingManager.register(this);\r\n\r\n    if (this.selected) {\r\n      this.inCompositionMode = false;\r\n      this.setCursorByClick(e);\r\n    }\r\n\r\n    if (this.isEditing) {\r\n      this.__selectionStartOnMouseDown = this.selectionStart;\r\n      if (this.selectionStart === this.selectionEnd) {\r\n        this.abortCursorAnimation();\r\n      }\r\n      this.renderCursorOrSelection();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Default event handler for the basic functionalities needed on mousedown:before\r\n   * can be overridden to do something different.\r\n   * Scope of this implementation is: verify the object is already selected when mousing down\r\n   */\r\n  _mouseDownHandlerBefore({ e }: TPointerEventInfo) {\r\n    if (!this.canvas || !this.editable || notALeftClick(e)) {\r\n      return;\r\n    }\r\n    // we want to avoid that an object that was selected and then becomes unselectable,\r\n    // may trigger editing mode in some way.\r\n    this.selected = this === this.canvas._activeObject;\r\n  }\r\n\r\n  /**\r\n   * standard handler for mouse up, overridable\r\n   * @private\r\n   */\r\n  mouseUpHandler({ e, transform }: TPointerEventInfo) {\r\n    const didDrag = this.draggableTextDelegate.end(e);\r\n    if (this.canvas) {\r\n      this.canvas.textEditingManager.unregister(this);\r\n\r\n      const activeObject = this.canvas._activeObject;\r\n      if (activeObject && activeObject !== this) {\r\n        // avoid running this logic when there is an active object\r\n        // this because is possible with shift click and fast clicks,\r\n        // to rapidly deselect and reselect this object and trigger an enterEdit\r\n        return;\r\n      }\r\n    }\r\n    if (\r\n      !this.editable ||\r\n      (this.group && !this.group.interactive) ||\r\n      (transform && transform.actionPerformed) ||\r\n      notALeftClick(e) ||\r\n      didDrag\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    if (this.__lastSelected && !this.getActiveControl()) {\r\n      this.selected = false;\r\n      this.__lastSelected = false;\r\n      this.enterEditing(e);\r\n      if (this.selectionStart === this.selectionEnd) {\r\n        this.initDelayedCursor(true);\r\n      } else {\r\n        this.renderCursorOrSelection();\r\n      }\r\n    } else {\r\n      this.selected = true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Changes cursor location in a text depending on passed pointer (x/y) object\r\n   * @param {TPointerEvent} e Event object\r\n   */\r\n  setCursorByClick(e: TPointerEvent) {\r\n    const newSelection = this.getSelectionStartFromPointer(e),\r\n      start = this.selectionStart,\r\n      end = this.selectionEnd;\r\n    if (e.shiftKey) {\r\n      this.setSelectionStartEndWithShift(start, end, newSelection);\r\n    } else {\r\n      this.selectionStart = newSelection;\r\n      this.selectionEnd = newSelection;\r\n    }\r\n    if (this.isEditing) {\r\n      this._fireSelectionChanged();\r\n      this._updateTextarea();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns index of a character corresponding to where an object was clicked\r\n   * @param {TPointerEvent} e Event object\r\n   * @return {Number} Index of a character\r\n   */\r\n  getSelectionStartFromPointer(e: TPointerEvent): number {\r\n    const mouseOffset = this.canvas!.getScenePoint(e)\r\n      .transform(invertTransform(this.calcTransformMatrix()))\r\n      .add(new Point(-this._getLeftOffset(), -this._getTopOffset()));\r\n    let height = 0,\r\n      charIndex = 0,\r\n      lineIndex = 0;\r\n\r\n    for (let i = 0; i < this._textLines.length; i++) {\r\n      if (height <= mouseOffset.y) {\r\n        height += this.getHeightOfLine(i);\r\n        lineIndex = i;\r\n        if (i > 0) {\r\n          charIndex +=\r\n            this._textLines[i - 1].length + this.missingNewlineOffset(i - 1);\r\n        }\r\n      } else {\r\n        break;\r\n      }\r\n    }\r\n    const lineLeftOffset = Math.abs(this._getLineLeftOffset(lineIndex));\r\n    let width = lineLeftOffset;\r\n    const charLength = this._textLines[lineIndex].length;\r\n    const chars = this.__charBounds[lineIndex];\r\n    for (let j = 0; j < charLength; j++) {\r\n      // i removed something about flipX here, check.\r\n      const charWidth = chars[j].kernedWidth;\r\n      const widthAfter = width + charWidth;\r\n      if (mouseOffset.x <= widthAfter) {\r\n        // if the pointer is closer to the end of the char we increment charIndex\r\n        // in order to position the cursor after the char\r\n        if (\r\n          Math.abs(mouseOffset.x - widthAfter) <=\r\n          Math.abs(mouseOffset.x - width)\r\n        ) {\r\n          charIndex++;\r\n        }\r\n        break;\r\n      }\r\n      width = widthAfter;\r\n      charIndex++;\r\n    }\r\n\r\n    return Math.min(\r\n      // if object is horizontally flipped, mirror cursor location from the end\r\n      this.flipX ? charLength - charIndex : charIndex,\r\n      this._text.length\r\n    );\r\n  }\r\n}\r\n","export type TKeyMapIText = Record<\r\n  KeyboardEvent['keyCode'],\r\n  CursorHandlingMethods\r\n>;\r\n\r\nexport type CursorHandlingMethods =\r\n  | 'moveCursorUp'\r\n  | 'moveCursorDown'\r\n  | 'moveCursorLeft'\r\n  | 'moveCursorRight'\r\n  | 'exitEditing'\r\n  | 'copy'\r\n  | 'cut'\r\n  | 'selectAll';\r\n\r\nconst MOVE_CURSOR_UP: CursorHandlingMethods = 'moveCursorUp';\r\nconst MOVE_CURSOR_DOWN: CursorHandlingMethods = 'moveCursorDown';\r\nconst MOVE_CURSOR_LEFT: CursorHandlingMethods = 'moveCursorLeft';\r\nconst MOVE_CURSOR_RIGHT: CursorHandlingMethods = 'moveCursorRight';\r\nconst EXIT_EDITING: CursorHandlingMethods = 'exitEditing';\r\n\r\n// @TODO look into import { Key } from 'ts-key-enum';\r\n// and transition from keyCode to Key\r\n// also reduce string duplication\r\nexport const keysMap: TKeyMapIText = {\r\n  9: EXIT_EDITING,\r\n  27: EXIT_EDITING,\r\n  33: MOVE_CURSOR_UP,\r\n  34: MOVE_CURSOR_DOWN,\r\n  35: MOVE_CURSOR_RIGHT,\r\n  36: MOVE_CURSOR_LEFT,\r\n  37: MOVE_CURSOR_LEFT,\r\n  38: MOVE_CURSOR_UP,\r\n  39: MOVE_CURSOR_RIGHT,\r\n  40: MOVE_CURSOR_DOWN,\r\n};\r\n\r\nexport const keysMapRtl: TKeyMapIText = {\r\n  9: EXIT_EDITING,\r\n  27: EXIT_EDITING,\r\n  33: MOVE_CURSOR_UP,\r\n  34: MOVE_CURSOR_DOWN,\r\n  35: MOVE_CURSOR_LEFT,\r\n  36: MOVE_CURSOR_RIGHT,\r\n  37: MOVE_CURSOR_RIGHT,\r\n  38: MOVE_CURSOR_UP,\r\n  39: MOVE_CURSOR_LEFT,\r\n  40: MOVE_CURSOR_DOWN,\r\n};\r\n\r\n/**\r\n * For functionalities on keyUp + ctrl || cmd\r\n */\r\nexport const ctrlKeysMapUp: TKeyMapIText = {\r\n  67: 'copy',\r\n  // there was a reason this wasn't deleted. for now leave it here\r\n  88: 'cut',\r\n};\r\n\r\n/**\r\n * For functionalities on keyDown + ctrl || cmd\r\n */\r\nexport const ctrlKeysMapDown: TKeyMapIText = {\r\n  65: 'selectAll',\r\n};\r\n","import { Canvas } from '../../canvas/Canvas';\r\nimport type { ITextEvents } from './ITextBehavior';\r\nimport { ITextClickBehavior } from './ITextClickBehavior';\r\nimport {\r\n  ctrlKeysMapDown,\r\n  ctrlKeysMapUp,\r\n  keysMap,\r\n  keysMapRtl,\r\n} from './constants';\r\nimport type { TClassProperties, TFiller, TOptions } from '../../typedefs';\r\nimport { classRegistry } from '../../ClassRegistry';\r\nimport type { SerializedTextProps, TextProps } from '../Text/Text';\r\nimport {\r\n  JUSTIFY,\r\n  JUSTIFY_CENTER,\r\n  JUSTIFY_LEFT,\r\n  JUSTIFY_RIGHT,\r\n} from '../Text/constants';\r\nimport { CENTER, FILL, LEFT, RIGHT } from '../../constants';\r\nimport type { ObjectToCanvasElementOptions } from '../Object/Object';\r\n\r\ntype CursorBoundaries = {\r\n  left: number;\r\n  top: number;\r\n  leftOffset: number;\r\n  topOffset: number;\r\n};\r\n\r\n// Declare IText protected properties to workaround TS\r\nconst protectedDefaultValues = {\r\n  _selectionDirection: null,\r\n  _reSpace: /\\s|\\r?\\n/,\r\n  inCompositionMode: false,\r\n};\r\n\r\nexport const iTextDefaultValues: Partial<TClassProperties<IText>> = {\r\n  selectionStart: 0,\r\n  selectionEnd: 0,\r\n  selectionColor: 'rgba(17,119,255,0.3)',\r\n  isEditing: false,\r\n  editable: true,\r\n  editingBorderColor: 'rgba(102,153,255,0.25)',\r\n  cursorWidth: 2,\r\n  cursorColor: '',\r\n  cursorDelay: 1000,\r\n  cursorDuration: 600,\r\n  caching: true,\r\n  hiddenTextareaContainer: null,\r\n  keysMap,\r\n  keysMapRtl,\r\n  ctrlKeysMapDown,\r\n  ctrlKeysMapUp,\r\n  ...protectedDefaultValues,\r\n};\r\n\r\n// @TODO this is not complete\r\ninterface UniqueITextProps {\r\n  selectionStart: number;\r\n  selectionEnd: number;\r\n}\r\n\r\nexport interface SerializedITextProps\r\n  extends SerializedTextProps,\r\n    UniqueITextProps {}\r\n\r\nexport interface ITextProps extends TextProps, UniqueITextProps {}\r\n\r\n/**\r\n * @fires changed\r\n * @fires selection:changed\r\n * @fires editing:entered\r\n * @fires editing:exited\r\n * @fires dragstart\r\n * @fires drag drag event firing on the drag source\r\n * @fires dragend\r\n * @fires copy\r\n * @fires cut\r\n * @fires paste\r\n *\r\n * #### Supported key combinations\r\n * ```\r\n *   Move cursor:                    left, right, up, down\r\n *   Select character:               shift + left, shift + right\r\n *   Select text vertically:         shift + up, shift + down\r\n *   Move cursor by word:            alt + left, alt + right\r\n *   Select words:                   shift + alt + left, shift + alt + right\r\n *   Move cursor to line start/end:  cmd + left, cmd + right or home, end\r\n *   Select till start/end of line:  cmd + shift + left, cmd + shift + right or shift + home, shift + end\r\n *   Jump to start/end of text:      cmd + up, cmd + down\r\n *   Select till start/end of text:  cmd + shift + up, cmd + shift + down or shift + pgUp, shift + pgDown\r\n *   Delete character:               backspace\r\n *   Delete word:                    alt + backspace\r\n *   Delete line:                    cmd + backspace\r\n *   Forward delete:                 delete\r\n *   Copy text:                      ctrl/cmd + c\r\n *   Paste text:                     ctrl/cmd + v\r\n *   Cut text:                       ctrl/cmd + x\r\n *   Select entire text:             ctrl/cmd + a\r\n *   Quit editing                    tab or esc\r\n * ```\r\n *\r\n * #### Supported mouse/touch combination\r\n * ```\r\n *   Position cursor:                click/touch\r\n *   Create selection:               click/touch & drag\r\n *   Create selection:               click & shift + click\r\n *   Select word:                    double click\r\n *   Select line:                    triple click\r\n * ```\r\n */\r\nexport class IText<\r\n    Props extends TOptions<ITextProps> = Partial<ITextProps>,\r\n    SProps extends SerializedITextProps = SerializedITextProps,\r\n    EventSpec extends ITextEvents = ITextEvents\r\n  >\r\n  extends ITextClickBehavior<Props, SProps, EventSpec>\r\n  implements UniqueITextProps\r\n{\r\n  /**\r\n   * Index where text selection starts (or where cursor is when there is no selection)\r\n   * @type Number\r\n   * @default\r\n   */\r\n  declare selectionStart: number;\r\n\r\n  /**\r\n   * Index where text selection ends\r\n   * @type Number\r\n   * @default\r\n   */\r\n  declare selectionEnd: number;\r\n\r\n  declare compositionStart: number;\r\n\r\n  declare compositionEnd: number;\r\n\r\n  /**\r\n   * Color of text selection\r\n   * @type String\r\n   * @default\r\n   */\r\n  declare selectionColor: string;\r\n\r\n  /**\r\n   * Indicates whether text is in editing mode\r\n   * @type Boolean\r\n   * @default\r\n   */\r\n  declare isEditing: boolean;\r\n\r\n  /**\r\n   * Indicates whether a text can be edited\r\n   * @type Boolean\r\n   * @default\r\n   */\r\n  declare editable: boolean;\r\n\r\n  /**\r\n   * Border color of text object while it's in editing mode\r\n   * @type String\r\n   * @default\r\n   */\r\n  declare editingBorderColor: string;\r\n\r\n  /**\r\n   * Width of cursor (in px)\r\n   * @type Number\r\n   * @default\r\n   */\r\n  declare cursorWidth: number;\r\n\r\n  /**\r\n   * Color of text cursor color in editing mode.\r\n   * if not set (default) will take color from the text.\r\n   * if set to a color value that fabric can understand, it will\r\n   * be used instead of the color of the text at the current position.\r\n   * @type String\r\n   * @default\r\n   */\r\n  declare cursorColor: string;\r\n\r\n  /**\r\n   * Delay between cursor blink (in ms)\r\n   * @type Number\r\n   * @default\r\n   */\r\n  declare cursorDelay: number;\r\n\r\n  /**\r\n   * Duration of cursor fade in (in ms)\r\n   * @type Number\r\n   * @default\r\n   */\r\n  declare cursorDuration: number;\r\n\r\n  declare compositionColor: string;\r\n\r\n  /**\r\n   * Indicates whether internal text char widths can be cached\r\n   * @type Boolean\r\n   * @default\r\n   */\r\n  declare caching: boolean;\r\n\r\n  static ownDefaults = iTextDefaultValues;\r\n\r\n  static getDefaults(): Record<string, any> {\r\n    return { ...super.getDefaults(), ...IText.ownDefaults };\r\n  }\r\n\r\n  static type = 'IText';\r\n\r\n  get type() {\r\n    const type = super.type;\r\n    // backward compatibility\r\n    return type === 'itext' ? 'i-text' : type;\r\n  }\r\n\r\n  /**\r\n   * Constructor\r\n   * @param {String} text Text string\r\n   * @param {Object} [options] Options object\r\n   */\r\n  constructor(text: string, options?: Props) {\r\n    super(text, { ...IText.ownDefaults, ...options } as Props);\r\n    this.initBehavior();\r\n  }\r\n\r\n  /**\r\n   * While editing handle differently\r\n   * @private\r\n   * @param {string} key\r\n   * @param {*} value\r\n   */\r\n  _set(key: string, value: any) {\r\n    if (this.isEditing && this._savedProps && key in this._savedProps) {\r\n      // @ts-expect-error irritating TS\r\n      this._savedProps[key] = value;\r\n      return this;\r\n    }\r\n    if (key === 'canvas') {\r\n      this.canvas instanceof Canvas &&\r\n        this.canvas.textEditingManager.remove(this);\r\n      value instanceof Canvas && value.textEditingManager.add(this);\r\n    }\r\n    return super._set(key, value);\r\n  }\r\n\r\n  /**\r\n   * Sets selection start (left boundary of a selection)\r\n   * @param {Number} index Index to set selection start to\r\n   */\r\n  setSelectionStart(index: number) {\r\n    index = Math.max(index, 0);\r\n    this._updateAndFire('selectionStart', index);\r\n  }\r\n\r\n  /**\r\n   * Sets selection end (right boundary of a selection)\r\n   * @param {Number} index Index to set selection end to\r\n   */\r\n  setSelectionEnd(index: number) {\r\n    index = Math.min(index, this.text.length);\r\n    this._updateAndFire('selectionEnd', index);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {String} property 'selectionStart' or 'selectionEnd'\r\n   * @param {Number} index new position of property\r\n   */\r\n  protected _updateAndFire(\r\n    property: 'selectionStart' | 'selectionEnd',\r\n    index: number\r\n  ) {\r\n    if (this[property] !== index) {\r\n      this._fireSelectionChanged();\r\n      this[property] = index;\r\n    }\r\n    this._updateTextarea();\r\n  }\r\n\r\n  /**\r\n   * Fires the even of selection changed\r\n   * @private\r\n   */\r\n  _fireSelectionChanged() {\r\n    this.fire('selection:changed');\r\n    this.canvas && this.canvas.fire('text:selection:changed', { target: this });\r\n  }\r\n\r\n  /**\r\n   * Initialize text dimensions. Render all text on given context\r\n   * or on a offscreen canvas to get the text width with measureText.\r\n   * Updates this.width and this.height with the proper values.\r\n   * Does not return dimensions.\r\n   * @private\r\n   */\r\n  initDimensions() {\r\n    this.isEditing && this.initDelayedCursor();\r\n    super.initDimensions();\r\n  }\r\n\r\n  /**\r\n   * Gets style of a current selection/cursor (at the start position)\r\n   * if startIndex or endIndex are not provided, selectionStart or selectionEnd will be used.\r\n   * @param {Number} startIndex Start index to get styles at\r\n   * @param {Number} endIndex End index to get styles at, if not specified selectionEnd or startIndex + 1\r\n   * @param {Boolean} [complete] get full style or not\r\n   * @return {Array} styles an array with one, zero or more Style objects\r\n   */\r\n  getSelectionStyles(\r\n    startIndex: number = this.selectionStart || 0,\r\n    endIndex: number = this.selectionEnd,\r\n    complete?: boolean\r\n  ) {\r\n    return super.getSelectionStyles(startIndex, endIndex, complete);\r\n  }\r\n\r\n  /**\r\n   * Sets style of a current selection, if no selection exist, do not set anything.\r\n   * @param {Object} [styles] Styles object\r\n   * @param {Number} [startIndex] Start index to get styles at\r\n   * @param {Number} [endIndex] End index to get styles at, if not specified selectionEnd or startIndex + 1\r\n   */\r\n  setSelectionStyles(\r\n    styles: object,\r\n    startIndex: number = this.selectionStart || 0,\r\n    endIndex: number = this.selectionEnd\r\n  ) {\r\n    return super.setSelectionStyles(styles, startIndex, endIndex);\r\n  }\r\n\r\n  /**\r\n   * Returns 2d representation (lineIndex and charIndex) of cursor (or selection start)\r\n   * @param {Number} [selectionStart] Optional index. When not given, current selectionStart is used.\r\n   * @param {Boolean} [skipWrapping] consider the location for unwrapped lines. useful to manage styles.\r\n   */\r\n  get2DCursorLocation(\r\n    selectionStart = this.selectionStart,\r\n    skipWrapping?: boolean\r\n  ) {\r\n    return super.get2DCursorLocation(selectionStart, skipWrapping);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {CanvasRenderingContext2D} ctx Context to render on\r\n   */\r\n  render(ctx: CanvasRenderingContext2D) {\r\n    super.render(ctx);\r\n    // clear the cursorOffsetCache, so we ensure to calculate once per renderCursor\r\n    // the correct position but not at every cursor animation.\r\n    this.cursorOffsetCache = {};\r\n    this.renderCursorOrSelection();\r\n  }\r\n\r\n  /**\r\n   * @override block cursor/selection logic while rendering the exported canvas\r\n   * @todo this workaround should be replaced with a more robust solution\r\n   */\r\n  toCanvasElement(options?: ObjectToCanvasElementOptions): HTMLCanvasElement {\r\n    const isEditing = this.isEditing;\r\n    this.isEditing = false;\r\n    const canvas = super.toCanvasElement(options);\r\n    this.isEditing = isEditing;\r\n    return canvas;\r\n  }\r\n\r\n  /**\r\n   * Renders cursor or selection (depending on what exists)\r\n   * it does on the contextTop. If contextTop is not available, do nothing.\r\n   */\r\n  renderCursorOrSelection() {\r\n    if (!this.isEditing) {\r\n      return;\r\n    }\r\n    const ctx = this.clearContextTop(true);\r\n    if (!ctx) {\r\n      return;\r\n    }\r\n    const boundaries = this._getCursorBoundaries();\r\n    if (this.selectionStart === this.selectionEnd) {\r\n      this.renderCursor(ctx, boundaries);\r\n    } else {\r\n      this.renderSelection(ctx, boundaries);\r\n    }\r\n    this.canvas!.contextTopDirty = true;\r\n    ctx.restore();\r\n  }\r\n\r\n  /**\r\n   * Returns cursor boundaries (left, top, leftOffset, topOffset)\r\n   * left/top are left/top of entire text box\r\n   * leftOffset/topOffset are offset from that left/top point of a text box\r\n   * @private\r\n   * @param {number} [index] index from start\r\n   * @param {boolean} [skipCaching]\r\n   */\r\n  _getCursorBoundaries(\r\n    index: number = this.selectionStart,\r\n    skipCaching?: boolean\r\n  ): CursorBoundaries {\r\n    const left = this._getLeftOffset(),\r\n      top = this._getTopOffset(),\r\n      offsets = this._getCursorBoundariesOffsets(index, skipCaching);\r\n    return {\r\n      left: left,\r\n      top: top,\r\n      leftOffset: offsets.left,\r\n      topOffset: offsets.top,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Caches and returns cursor left/top offset relative to instance's center point\r\n   * @private\r\n   * @param {number} index index from start\r\n   * @param {boolean} [skipCaching]\r\n   */\r\n  _getCursorBoundariesOffsets(\r\n    index: number,\r\n    skipCaching?: boolean\r\n  ): { left: number; top: number } {\r\n    if (skipCaching) {\r\n      return this.__getCursorBoundariesOffsets(index);\r\n    }\r\n    if (this.cursorOffsetCache && 'top' in this.cursorOffsetCache) {\r\n      return this.cursorOffsetCache as { left: number; top: number };\r\n    }\r\n    return (this.cursorOffsetCache = this.__getCursorBoundariesOffsets(index));\r\n  }\r\n\r\n  /**\r\n   * Calculates cursor left/top offset relative to instance's center point\r\n   * @private\r\n   * @param {number} index index from start\r\n   */\r\n  __getCursorBoundariesOffsets(index: number) {\r\n    let topOffset = 0,\r\n      leftOffset = 0;\r\n    const { charIndex, lineIndex } = this.get2DCursorLocation(index);\r\n\r\n    for (let i = 0; i < lineIndex; i++) {\r\n      topOffset += this.getHeightOfLine(i);\r\n    }\r\n    const lineLeftOffset = this._getLineLeftOffset(lineIndex);\r\n    const bound = this.__charBounds[lineIndex][charIndex];\r\n    bound && (leftOffset = bound.left);\r\n    if (\r\n      this.charSpacing !== 0 &&\r\n      charIndex === this._textLines[lineIndex].length\r\n    ) {\r\n      leftOffset -= this._getWidthOfCharSpacing();\r\n    }\r\n    const boundaries = {\r\n      top: topOffset,\r\n      left: lineLeftOffset + (leftOffset > 0 ? leftOffset : 0),\r\n    };\r\n    if (this.direction === 'rtl') {\r\n      if (\r\n        this.textAlign === RIGHT ||\r\n        this.textAlign === JUSTIFY ||\r\n        this.textAlign === JUSTIFY_RIGHT\r\n      ) {\r\n        boundaries.left *= -1;\r\n      } else if (this.textAlign === LEFT || this.textAlign === JUSTIFY_LEFT) {\r\n        boundaries.left = lineLeftOffset - (leftOffset > 0 ? leftOffset : 0);\r\n      } else if (\r\n        this.textAlign === CENTER ||\r\n        this.textAlign === JUSTIFY_CENTER\r\n      ) {\r\n        boundaries.left = lineLeftOffset - (leftOffset > 0 ? leftOffset : 0);\r\n      }\r\n    }\r\n    return boundaries;\r\n  }\r\n\r\n  /**\r\n   * Renders cursor on context Top, outside the animation cycle, on request\r\n   * Used for the drag/drop effect.\r\n   * If contextTop is not available, do nothing.\r\n   */\r\n  renderCursorAt(selectionStart: number) {\r\n    const boundaries = this._getCursorBoundaries(selectionStart, true);\r\n    this._renderCursor(this.canvas!.contextTop, boundaries, selectionStart);\r\n  }\r\n\r\n  /**\r\n   * Renders cursor\r\n   * @param {Object} boundaries\r\n   * @param {CanvasRenderingContext2D} ctx transformed context to draw on\r\n   */\r\n  renderCursor(ctx: CanvasRenderingContext2D, boundaries: CursorBoundaries) {\r\n    this._renderCursor(ctx, boundaries, this.selectionStart);\r\n  }\r\n\r\n  _renderCursor(\r\n    ctx: CanvasRenderingContext2D,\r\n    boundaries: CursorBoundaries,\r\n    selectionStart: number\r\n  ) {\r\n    const cursorLocation = this.get2DCursorLocation(selectionStart),\r\n      lineIndex = cursorLocation.lineIndex,\r\n      charIndex =\r\n        cursorLocation.charIndex > 0 ? cursorLocation.charIndex - 1 : 0,\r\n      charHeight = this.getValueOfPropertyAt(lineIndex, charIndex, 'fontSize'),\r\n      multiplier = this.getObjectScaling().x * this.canvas!.getZoom(),\r\n      cursorWidth = this.cursorWidth / multiplier,\r\n      dy = this.getValueOfPropertyAt(lineIndex, charIndex, 'deltaY'),\r\n      topOffset =\r\n        boundaries.topOffset +\r\n        ((1 - this._fontSizeFraction) * this.getHeightOfLine(lineIndex)) /\r\n          this.lineHeight -\r\n        charHeight * (1 - this._fontSizeFraction);\r\n\r\n    if (this.inCompositionMode) {\r\n      // TODO: investigate why there isn't a return inside the if,\r\n      // and why can't happen at the top of the function\r\n      this.renderSelection(ctx, boundaries);\r\n    }\r\n    ctx.fillStyle =\r\n      this.cursorColor ||\r\n      (this.getValueOfPropertyAt(lineIndex, charIndex, FILL) as string);\r\n    ctx.globalAlpha = this._currentCursorOpacity;\r\n    ctx.fillRect(\r\n      boundaries.left + boundaries.leftOffset - cursorWidth / 2,\r\n      topOffset + boundaries.top + dy,\r\n      cursorWidth,\r\n      charHeight\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Renders text selection\r\n   * @param {Object} boundaries Object with left/top/leftOffset/topOffset\r\n   * @param {CanvasRenderingContext2D} ctx transformed context to draw on\r\n   */\r\n  renderSelection(ctx: CanvasRenderingContext2D, boundaries: CursorBoundaries) {\r\n    const selection = {\r\n      selectionStart: this.inCompositionMode\r\n        ? this.hiddenTextarea!.selectionStart\r\n        : this.selectionStart,\r\n      selectionEnd: this.inCompositionMode\r\n        ? this.hiddenTextarea!.selectionEnd\r\n        : this.selectionEnd,\r\n    };\r\n    this._renderSelection(ctx, selection, boundaries);\r\n  }\r\n\r\n  /**\r\n   * Renders drag start text selection\r\n   */\r\n  renderDragSourceEffect() {\r\n    const dragStartSelection =\r\n      this.draggableTextDelegate.getDragStartSelection()!;\r\n    this._renderSelection(\r\n      this.canvas!.contextTop,\r\n      dragStartSelection,\r\n      this._getCursorBoundaries(dragStartSelection.selectionStart, true)\r\n    );\r\n  }\r\n\r\n  renderDropTargetEffect(e: DragEvent) {\r\n    const dragSelection = this.getSelectionStartFromPointer(e);\r\n    this.renderCursorAt(dragSelection);\r\n  }\r\n\r\n  /**\r\n   * Renders text selection\r\n   * @private\r\n   * @param {{ selectionStart: number, selectionEnd: number }} selection\r\n   * @param {Object} boundaries Object with left/top/leftOffset/topOffset\r\n   * @param {CanvasRenderingContext2D} ctx transformed context to draw on\r\n   */\r\n  _renderSelection(\r\n    ctx: CanvasRenderingContext2D,\r\n    selection: { selectionStart: number; selectionEnd: number },\r\n    boundaries: CursorBoundaries\r\n  ) {\r\n    const selectionStart = selection.selectionStart,\r\n      selectionEnd = selection.selectionEnd,\r\n      isJustify = this.textAlign.includes(JUSTIFY),\r\n      start = this.get2DCursorLocation(selectionStart),\r\n      end = this.get2DCursorLocation(selectionEnd),\r\n      startLine = start.lineIndex,\r\n      endLine = end.lineIndex,\r\n      startChar = start.charIndex < 0 ? 0 : start.charIndex,\r\n      endChar = end.charIndex < 0 ? 0 : end.charIndex;\r\n\r\n    for (let i = startLine; i <= endLine; i++) {\r\n      const lineOffset = this._getLineLeftOffset(i) || 0;\r\n      let lineHeight = this.getHeightOfLine(i),\r\n        realLineHeight = 0,\r\n        boxStart = 0,\r\n        boxEnd = 0;\r\n\r\n      if (i === startLine) {\r\n        boxStart = this.__charBounds[startLine][startChar].left;\r\n      }\r\n      if (i >= startLine && i < endLine) {\r\n        boxEnd =\r\n          isJustify && !this.isEndOfWrapping(i)\r\n            ? this.width\r\n            : this.getLineWidth(i) || 5; // WTF is this 5?\r\n      } else if (i === endLine) {\r\n        if (endChar === 0) {\r\n          boxEnd = this.__charBounds[endLine][endChar].left;\r\n        } else {\r\n          const charSpacing = this._getWidthOfCharSpacing();\r\n          boxEnd =\r\n            this.__charBounds[endLine][endChar - 1].left +\r\n            this.__charBounds[endLine][endChar - 1].width -\r\n            charSpacing;\r\n        }\r\n      }\r\n      realLineHeight = lineHeight;\r\n      if (this.lineHeight < 1 || (i === endLine && this.lineHeight > 1)) {\r\n        lineHeight /= this.lineHeight;\r\n      }\r\n      let drawStart = boundaries.left + lineOffset + boxStart,\r\n        drawHeight = lineHeight,\r\n        extraTop = 0;\r\n      const drawWidth = boxEnd - boxStart;\r\n      if (this.inCompositionMode) {\r\n        ctx.fillStyle = this.compositionColor || 'black';\r\n        drawHeight = 1;\r\n        extraTop = lineHeight;\r\n      } else {\r\n        ctx.fillStyle = this.selectionColor;\r\n      }\r\n      if (this.direction === 'rtl') {\r\n        if (\r\n          this.textAlign === RIGHT ||\r\n          this.textAlign === JUSTIFY ||\r\n          this.textAlign === JUSTIFY_RIGHT\r\n        ) {\r\n          drawStart = this.width - drawStart - drawWidth;\r\n        } else if (this.textAlign === LEFT || this.textAlign === JUSTIFY_LEFT) {\r\n          drawStart = boundaries.left + lineOffset - boxEnd;\r\n        } else if (\r\n          this.textAlign === CENTER ||\r\n          this.textAlign === JUSTIFY_CENTER\r\n        ) {\r\n          drawStart = boundaries.left + lineOffset - boxEnd;\r\n        }\r\n      }\r\n      ctx.fillRect(\r\n        drawStart,\r\n        boundaries.top + boundaries.topOffset + extraTop,\r\n        drawWidth,\r\n        drawHeight\r\n      );\r\n      boundaries.topOffset += realLineHeight;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * High level function to know the height of the cursor.\r\n   * the currentChar is the one that precedes the cursor\r\n   * Returns fontSize of char at the current cursor\r\n   * Unused from the library, is for the end user\r\n   * @return {Number} Character font size\r\n   */\r\n  getCurrentCharFontSize(): number {\r\n    const cp = this._getCurrentCharIndex();\r\n    return this.getValueOfPropertyAt(cp.l, cp.c, 'fontSize');\r\n  }\r\n\r\n  /**\r\n   * High level function to know the color of the cursor.\r\n   * the currentChar is the one that precedes the cursor\r\n   * Returns color (fill) of char at the current cursor\r\n   * if the text object has a pattern or gradient for filler, it will return that.\r\n   * Unused by the library, is for the end user\r\n   * @return {String | TFiller} Character color (fill)\r\n   */\r\n  getCurrentCharColor(): string | TFiller | null {\r\n    const cp = this._getCurrentCharIndex();\r\n    return this.getValueOfPropertyAt(cp.l, cp.c, FILL);\r\n  }\r\n\r\n  /**\r\n   * Returns the cursor position for the getCurrent.. functions\r\n   * @private\r\n   */\r\n  _getCurrentCharIndex() {\r\n    const cursorPosition = this.get2DCursorLocation(this.selectionStart, true),\r\n      charIndex =\r\n        cursorPosition.charIndex > 0 ? cursorPosition.charIndex - 1 : 0;\r\n    return { l: cursorPosition.lineIndex, c: charIndex };\r\n  }\r\n\r\n  dispose() {\r\n    this._exitEditing();\r\n    this.draggableTextDelegate.dispose();\r\n    super.dispose();\r\n  }\r\n}\r\n\r\nclassRegistry.setClass(IText);\r\n// legacy\r\nclassRegistry.setClass(IText, 'i-text');\r\n","import type { TClassProperties, TOptions } from '../typedefs';\r\nimport { IText } from './IText/IText';\r\nimport { classRegistry } from '../ClassRegistry';\r\nimport { createTextboxDefaultControls } from '../controls/commonControls';\r\nimport { JUSTIFY } from './Text/constants';\r\nimport type { TextStyleDeclaration } from './Text/StyledText';\r\nimport type { SerializedITextProps, ITextProps } from './IText/IText';\r\nimport type { ITextEvents } from './IText/ITextBehavior';\r\nimport type { TextLinesInfo } from './Text/Text';\r\nimport type { Control } from '../controls/Control';\r\n\r\n// @TODO: Many things here are configuration related and shouldn't be on the class nor prototype\r\n// regexes, list of properties that are not suppose to change by instances, magic consts.\r\n// this will be a separated effort\r\nexport const textboxDefaultValues: Partial<TClassProperties<Textbox>> = {\r\n  minWidth: 20,\r\n  dynamicMinWidth: 2,\r\n  lockScalingFlip: true,\r\n  noScaleCache: false,\r\n  _wordJoiners: /[ \\t\\r]/,\r\n  splitByGrapheme: false,\r\n};\r\n\r\nexport type GraphemeData = {\r\n  wordsData: {\r\n    word: string[];\r\n    width: number;\r\n  }[][];\r\n  largestWordWidth: number;\r\n};\r\n\r\nexport type StyleMap = Record<string, { line: number; offset: number }>;\r\n\r\n// @TODO this is not complete\r\ninterface UniqueTextboxProps {\r\n  minWidth: number;\r\n  splitByGrapheme: boolean;\r\n  dynamicMinWidth: number;\r\n  _wordJoiners: RegExp;\r\n}\r\n\r\nexport interface SerializedTextboxProps\r\n  extends SerializedITextProps,\r\n    Pick<UniqueTextboxProps, 'minWidth' | 'splitByGrapheme'> {}\r\n\r\nexport interface TextboxProps extends ITextProps, UniqueTextboxProps {}\r\n\r\n/**\r\n * Textbox class, based on IText, allows the user to resize the text rectangle\r\n * and wraps lines automatically. Textboxes have their Y scaling locked, the\r\n * user can only change width. Height is adjusted automatically based on the\r\n * wrapping of lines.\r\n */\r\nexport class Textbox<\r\n    Props extends TOptions<TextboxProps> = Partial<TextboxProps>,\r\n    SProps extends SerializedTextboxProps = SerializedTextboxProps,\r\n    EventSpec extends ITextEvents = ITextEvents\r\n  >\r\n  extends IText<Props, SProps, EventSpec>\r\n  implements UniqueTextboxProps\r\n{\r\n  /**\r\n   * Minimum width of textbox, in pixels.\r\n   * @type Number\r\n   * @default\r\n   */\r\n  declare minWidth: number;\r\n\r\n  /**\r\n   * Minimum calculated width of a textbox, in pixels.\r\n   * fixed to 2 so that an empty textbox cannot go to 0\r\n   * and is still selectable without text.\r\n   * @type Number\r\n   * @default\r\n   */\r\n  declare dynamicMinWidth: number;\r\n\r\n  /**\r\n   * Use this boolean property in order to split strings that have no white space concept.\r\n   * this is a cheap way to help with chinese/japanese\r\n   * @type Boolean\r\n   * @since 2.6.0\r\n   */\r\n  declare splitByGrapheme: boolean;\r\n\r\n  declare _wordJoiners: RegExp;\r\n\r\n  declare _styleMap: StyleMap;\r\n\r\n  declare isWrapping: boolean;\r\n\r\n  static type = 'Textbox';\r\n\r\n  static textLayoutProperties = [...IText.textLayoutProperties, 'width'];\r\n\r\n  static ownDefaults = textboxDefaultValues;\r\n\r\n  static getDefaults(): Record<string, any> {\r\n    return {\r\n      ...super.getDefaults(),\r\n      ...Textbox.ownDefaults,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Constructor\r\n   * @param {String} text Text string\r\n   * @param {Object} [options] Options object\r\n   */\r\n  constructor(text: string, options?: Props) {\r\n    super(text, { ...Textbox.ownDefaults, ...options } as Props);\r\n  }\r\n\r\n  /**\r\n   * Creates the default control object.\r\n   * If you prefer to have on instance of controls shared among all objects\r\n   * make this function return an empty object and add controls to the ownDefaults object\r\n   */\r\n  static createControls(): { controls: Record<string, Control> } {\r\n    return { controls: createTextboxDefaultControls() };\r\n  }\r\n\r\n  /**\r\n   * Unlike superclass's version of this function, Textbox does not update\r\n   * its width.\r\n   * @private\r\n   * @override\r\n   */\r\n  initDimensions() {\r\n    if (!this.initialized) {\r\n      return;\r\n    }\r\n    this.isEditing && this.initDelayedCursor();\r\n    this._clearCache();\r\n    // clear dynamicMinWidth as it will be different after we re-wrap line\r\n    this.dynamicMinWidth = 0;\r\n    // wrap lines\r\n    this._styleMap = this._generateStyleMap(this._splitText());\r\n    // if after wrapping, the width is smaller than dynamicMinWidth, change the width and re-wrap\r\n    if (this.dynamicMinWidth > this.width) {\r\n      this._set('width', this.dynamicMinWidth);\r\n    }\r\n    if (this.textAlign.includes(JUSTIFY)) {\r\n      // once text is measured we need to make space fatter to make justified text.\r\n      this.enlargeSpaces();\r\n    }\r\n    // clear cache and re-calculate height\r\n    this.height = this.calcTextHeight();\r\n  }\r\n\r\n  /**\r\n   * Generate an object that translates the style object so that it is\r\n   * broken up by visual lines (new lines and automatic wrapping).\r\n   * The original text styles object is broken up by actual lines (new lines only),\r\n   * which is only sufficient for Text / IText\r\n   * @private\r\n   */\r\n  _generateStyleMap(textInfo: TextLinesInfo): StyleMap {\r\n    let realLineCount = 0,\r\n      realLineCharCount = 0,\r\n      charCount = 0;\r\n    const map: StyleMap = {};\r\n\r\n    for (let i = 0; i < textInfo.graphemeLines.length; i++) {\r\n      if (textInfo.graphemeText[charCount] === '\\n' && i > 0) {\r\n        realLineCharCount = 0;\r\n        charCount++;\r\n        realLineCount++;\r\n      } else if (\r\n        !this.splitByGrapheme &&\r\n        this._reSpaceAndTab.test(textInfo.graphemeText[charCount]) &&\r\n        i > 0\r\n      ) {\r\n        // this case deals with space's that are removed from end of lines when wrapping\r\n        realLineCharCount++;\r\n        charCount++;\r\n      }\r\n\r\n      map[i] = { line: realLineCount, offset: realLineCharCount };\r\n\r\n      charCount += textInfo.graphemeLines[i].length;\r\n      realLineCharCount += textInfo.graphemeLines[i].length;\r\n    }\r\n\r\n    return map;\r\n  }\r\n\r\n  /**\r\n   * Returns true if object has a style property or has it on a specified line\r\n   * @param {Number} lineIndex\r\n   * @return {Boolean}\r\n   */\r\n  styleHas(property: keyof TextStyleDeclaration, lineIndex: number): boolean {\r\n    if (this._styleMap && !this.isWrapping) {\r\n      const map = this._styleMap[lineIndex];\r\n      if (map) {\r\n        lineIndex = map.line;\r\n      }\r\n    }\r\n    return super.styleHas(property, lineIndex);\r\n  }\r\n\r\n  /**\r\n   * Returns true if object has no styling or no styling in a line\r\n   * @param {Number} lineIndex , lineIndex is on wrapped lines.\r\n   * @return {Boolean}\r\n   */\r\n  isEmptyStyles(lineIndex: number): boolean {\r\n    if (!this.styles) {\r\n      return true;\r\n    }\r\n    let offset = 0,\r\n      nextLineIndex = lineIndex + 1,\r\n      nextOffset: number,\r\n      shouldLimit = false;\r\n    const map = this._styleMap[lineIndex],\r\n      mapNextLine = this._styleMap[lineIndex + 1];\r\n    if (map) {\r\n      lineIndex = map.line;\r\n      offset = map.offset;\r\n    }\r\n    if (mapNextLine) {\r\n      nextLineIndex = mapNextLine.line;\r\n      shouldLimit = nextLineIndex === lineIndex;\r\n      nextOffset = mapNextLine.offset;\r\n    }\r\n    const obj =\r\n      typeof lineIndex === 'undefined'\r\n        ? this.styles\r\n        : { line: this.styles[lineIndex] };\r\n    for (const p1 in obj) {\r\n      for (const p2 in obj[p1]) {\r\n        const p2Number = parseInt(p2, 10);\r\n        if (p2Number >= offset && (!shouldLimit || p2Number < nextOffset!)) {\r\n          // eslint-disable-next-line no-unused-vars\r\n          for (const p3 in obj[p1][p2]) {\r\n            return false;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @protected\r\n   * @param {Number} lineIndex\r\n   * @param {Number} charIndex\r\n   * @return {TextStyleDeclaration} a style object reference to the existing one or a new empty object when undefined\r\n   */\r\n  _getStyleDeclaration(\r\n    lineIndex: number,\r\n    charIndex: number\r\n  ): TextStyleDeclaration {\r\n    if (this._styleMap && !this.isWrapping) {\r\n      const map = this._styleMap[lineIndex];\r\n      if (!map) {\r\n        return {};\r\n      }\r\n      lineIndex = map.line;\r\n      charIndex = map.offset + charIndex;\r\n    }\r\n    return super._getStyleDeclaration(lineIndex, charIndex);\r\n  }\r\n\r\n  /**\r\n   * @param {Number} lineIndex\r\n   * @param {Number} charIndex\r\n   * @param {Object} style\r\n   * @private\r\n   */\r\n  protected _setStyleDeclaration(\r\n    lineIndex: number,\r\n    charIndex: number,\r\n    style: object\r\n  ) {\r\n    const map = this._styleMap[lineIndex];\r\n    super._setStyleDeclaration(map.line, map.offset + charIndex, style);\r\n  }\r\n\r\n  /**\r\n   * @param {Number} lineIndex\r\n   * @param {Number} charIndex\r\n   * @private\r\n   */\r\n  protected _deleteStyleDeclaration(lineIndex: number, charIndex: number) {\r\n    const map = this._styleMap[lineIndex];\r\n    super._deleteStyleDeclaration(map.line, map.offset + charIndex);\r\n  }\r\n\r\n  /**\r\n   * probably broken need a fix\r\n   * Returns the real style line that correspond to the wrapped lineIndex line\r\n   * Used just to verify if the line does exist or not.\r\n   * @param {Number} lineIndex\r\n   * @returns {Boolean} if the line exists or not\r\n   * @private\r\n   */\r\n  protected _getLineStyle(lineIndex: number): boolean {\r\n    const map = this._styleMap[lineIndex];\r\n    return !!this.styles[map.line];\r\n  }\r\n\r\n  /**\r\n   * Set the line style to an empty object so that is initialized\r\n   * @param {Number} lineIndex\r\n   * @param {Object} style\r\n   * @private\r\n   */\r\n  protected _setLineStyle(lineIndex: number) {\r\n    const map = this._styleMap[lineIndex];\r\n    super._setLineStyle(map.line);\r\n  }\r\n\r\n  /**\r\n   * Wraps text using the 'width' property of Textbox. First this function\r\n   * splits text on newlines, so we preserve newlines entered by the user.\r\n   * Then it wraps each line using the width of the Textbox by calling\r\n   * _wrapLine().\r\n   * @param {Array} lines The string array of text that is split into lines\r\n   * @param {Number} desiredWidth width you want to wrap to\r\n   * @returns {Array} Array of lines\r\n   */\r\n  _wrapText(lines: string[], desiredWidth: number): string[][] {\r\n    this.isWrapping = true;\r\n    // extract all thewords and the widths to optimally wrap lines.\r\n    const data = this.getGraphemeDataForRender(lines);\r\n    const wrapped: string[][] = [];\r\n    for (let i = 0; i < data.wordsData.length; i++) {\r\n      wrapped.push(...this._wrapLine(i, desiredWidth, data));\r\n    }\r\n    this.isWrapping = false;\r\n    return wrapped;\r\n  }\r\n\r\n  /**\r\n   * For each line of text terminated by an hard line stop,\r\n   * measure each word width and extract the largest word from all.\r\n   * The returned words here are the one that at the end will be rendered.\r\n   * @param {string[]} lines the lines we need to measure\r\n   *\r\n   */\r\n  getGraphemeDataForRender(lines: string[]): GraphemeData {\r\n    const splitByGrapheme = this.splitByGrapheme,\r\n      infix = splitByGrapheme ? '' : ' ';\r\n\r\n    let largestWordWidth = 0;\r\n\r\n    const data = lines.map((line, lineIndex) => {\r\n      let offset = 0;\r\n      const wordsOrGraphemes = splitByGrapheme\r\n        ? this.graphemeSplit(line)\r\n        : this.wordSplit(line);\r\n\r\n      if (wordsOrGraphemes.length === 0) {\r\n        return [{ word: [], width: 0 }];\r\n      }\r\n\r\n      return wordsOrGraphemes.map((word: string) => {\r\n        // if using splitByGrapheme words are already in graphemes.\r\n        const graphemeArray = splitByGrapheme\r\n          ? [word]\r\n          : this.graphemeSplit(word);\r\n        const width = this._measureWord(graphemeArray, lineIndex, offset);\r\n        largestWordWidth = Math.max(width, largestWordWidth);\r\n        offset += graphemeArray.length + infix.length;\r\n        return { word: graphemeArray, width };\r\n      });\r\n    });\r\n\r\n    return {\r\n      wordsData: data,\r\n      largestWordWidth,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Helper function to measure a string of text, given its lineIndex and charIndex offset\r\n   * It gets called when charBounds are not available yet.\r\n   * Override if necessary\r\n   * Use with {@link Textbox#wordSplit}\r\n   *\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   * @param {String} text\r\n   * @param {number} lineIndex\r\n   * @param {number} charOffset\r\n   * @returns {number}\r\n   */\r\n  _measureWord(word: string[], lineIndex: number, charOffset = 0): number {\r\n    let width = 0,\r\n      prevGrapheme;\r\n    const skipLeft = true;\r\n    for (let i = 0, len = word.length; i < len; i++) {\r\n      const box = this._getGraphemeBox(\r\n        word[i],\r\n        lineIndex,\r\n        i + charOffset,\r\n        prevGrapheme,\r\n        skipLeft\r\n      );\r\n      width += box.kernedWidth;\r\n      prevGrapheme = word[i];\r\n    }\r\n    return width;\r\n  }\r\n\r\n  /**\r\n   * Override this method to customize word splitting\r\n   * Use with {@link Textbox#_measureWord}\r\n   * @param {string} value\r\n   * @returns {string[]} array of words\r\n   */\r\n  wordSplit(value: string): string[] {\r\n    return value.split(this._wordJoiners);\r\n  }\r\n\r\n  /**\r\n   * Wraps a line of text using the width of the Textbox as desiredWidth\r\n   * and leveraging the known width o words from GraphemeData\r\n   * @private\r\n   * @param {Number} lineIndex\r\n   * @param {Number} desiredWidth width you want to wrap the line to\r\n   * @param {GraphemeData} graphemeData an object containing all the lines' words width.\r\n   * @param {Number} reservedSpace space to remove from wrapping for custom functionalities\r\n   * @returns {Array} Array of line(s) into which the given text is wrapped\r\n   * to.\r\n   */\r\n  _wrapLine(\r\n    lineIndex: number,\r\n    desiredWidth: number,\r\n    { largestWordWidth, wordsData }: GraphemeData,\r\n    reservedSpace = 0\r\n  ): string[][] {\r\n    const additionalSpace = this._getWidthOfCharSpacing(),\r\n      splitByGrapheme = this.splitByGrapheme,\r\n      graphemeLines = [],\r\n      infix = splitByGrapheme ? '' : ' ';\r\n\r\n    let lineWidth = 0,\r\n      line: string[] = [],\r\n      // spaces in different languages?\r\n      offset = 0,\r\n      infixWidth = 0,\r\n      lineJustStarted = true;\r\n\r\n    desiredWidth -= reservedSpace;\r\n\r\n    const maxWidth = Math.max(\r\n      desiredWidth,\r\n      largestWordWidth,\r\n      this.dynamicMinWidth\r\n    );\r\n    // layout words\r\n    const data = wordsData[lineIndex];\r\n    offset = 0;\r\n    let i;\r\n    for (i = 0; i < data.length; i++) {\r\n      const { word, width: wordWidth } = data[i];\r\n      offset += word.length;\r\n\r\n      lineWidth += infixWidth + wordWidth - additionalSpace;\r\n      if (lineWidth > maxWidth && !lineJustStarted) {\r\n        graphemeLines.push(line);\r\n        line = [];\r\n        lineWidth = wordWidth;\r\n        lineJustStarted = true;\r\n      } else {\r\n        lineWidth += additionalSpace;\r\n      }\r\n\r\n      if (!lineJustStarted && !splitByGrapheme) {\r\n        line.push(infix);\r\n      }\r\n      line = line.concat(word);\r\n\r\n      infixWidth = splitByGrapheme\r\n        ? 0\r\n        : this._measureWord([infix], lineIndex, offset);\r\n      offset++;\r\n      lineJustStarted = false;\r\n    }\r\n\r\n    i && graphemeLines.push(line);\r\n\r\n    // TODO: this code is probably not necessary anymore.\r\n    // it can be moved out of this function since largestWordWidth is now\r\n    // known in advance\r\n    if (largestWordWidth + reservedSpace > this.dynamicMinWidth) {\r\n      this.dynamicMinWidth = largestWordWidth - additionalSpace + reservedSpace;\r\n    }\r\n    return graphemeLines;\r\n  }\r\n\r\n  /**\r\n   * Detect if the text line is ended with an hard break\r\n   * text and itext do not have wrapping, return false\r\n   * @param {Number} lineIndex text to split\r\n   * @return {Boolean}\r\n   */\r\n  isEndOfWrapping(lineIndex: number): boolean {\r\n    if (!this._styleMap[lineIndex + 1]) {\r\n      // is last line, return true;\r\n      return true;\r\n    }\r\n    if (this._styleMap[lineIndex + 1].line !== this._styleMap[lineIndex].line) {\r\n      // this is last line before a line break, return true;\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Detect if a line has a linebreak and so we need to account for it when moving\r\n   * and counting style.\r\n   * This is important only for splitByGrapheme at the end of wrapping.\r\n   * If we are not wrapping the offset is always 1\r\n   * @return Number\r\n   */\r\n  missingNewlineOffset(lineIndex: number, skipWrapping?: boolean): 0 | 1 {\r\n    if (this.splitByGrapheme && !skipWrapping) {\r\n      return this.isEndOfWrapping(lineIndex) ? 1 : 0;\r\n    }\r\n    return 1;\r\n  }\r\n\r\n  /**\r\n   * Gets lines of text to render in the Textbox. This function calculates\r\n   * text wrapping on the fly every time it is called.\r\n   * @param {String} text text to split\r\n   * @returns {Array} Array of lines in the Textbox.\r\n   * @override\r\n   */\r\n  _splitTextIntoLines(text: string) {\r\n    const newText = super._splitTextIntoLines(text),\r\n      graphemeLines = this._wrapText(newText.lines, this.width),\r\n      lines = new Array(graphemeLines.length);\r\n    for (let i = 0; i < graphemeLines.length; i++) {\r\n      lines[i] = graphemeLines[i].join('');\r\n    }\r\n    newText.lines = lines;\r\n    newText.graphemeLines = graphemeLines;\r\n    return newText;\r\n  }\r\n\r\n  getMinWidth() {\r\n    return Math.max(this.minWidth, this.dynamicMinWidth);\r\n  }\r\n\r\n  _removeExtraneousStyles() {\r\n    const linesToKeep = new Map();\r\n    for (const prop in this._styleMap) {\r\n      const propNumber = parseInt(prop, 10);\r\n      if (this._textLines[propNumber]) {\r\n        const lineIndex = this._styleMap[prop].line;\r\n        linesToKeep.set(`${lineIndex}`, true);\r\n      }\r\n    }\r\n    for (const prop in this.styles) {\r\n      if (!linesToKeep.has(prop)) {\r\n        delete this.styles[prop];\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns object representation of an instance\r\n   * @method toObject\r\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n   * @return {Object} object representation of an instance\r\n   */\r\n  // cant use ts-expect-error because of ts 5.3 cross check\r\n  // @ts-ignore TS this typing limitations\r\n  toObject<\r\n    T extends Omit<Props & TClassProperties<this>, keyof SProps>,\r\n    K extends keyof T = never\r\n  >(propertiesToInclude: K[] = []): Pick<T, K> & SProps {\r\n    return super.toObject<T, K>([\r\n      'minWidth',\r\n      'splitByGrapheme',\r\n      ...propertiesToInclude,\r\n    ] as K[]) as Pick<T, K> & SProps;\r\n  }\r\n}\r\n\r\nclassRegistry.setClass(Textbox);\r\n","import { Point } from '../../Point';\r\nimport type { FabricObject } from '../../shapes/Object/FabricObject';\r\nimport { makeBoundingBoxFromPoints } from '../../util/misc/boundingBoxFromPoints';\r\nimport { sendPointToPlane } from '../../util/misc/planeChange';\r\nimport type { LayoutStrategyResult, StrictLayoutContext } from '../types';\r\nimport { LayoutStrategy } from './LayoutStrategy';\r\nimport { getObjectBounds } from './utils';\r\nimport { classRegistry } from '../../ClassRegistry';\r\n\r\n/**\r\n * Layout will adjust the bounding box to match the clip path bounding box.\r\n */\r\nexport class ClipPathLayout extends LayoutStrategy {\r\n  static readonly type = 'clip-path';\r\n\r\n  shouldPerformLayout(context: StrictLayoutContext): boolean {\r\n    return !!context.target.clipPath && super.shouldPerformLayout(context);\r\n  }\r\n\r\n  shouldLayoutClipPath() {\r\n    return false;\r\n  }\r\n\r\n  calcLayoutResult(\r\n    context: StrictLayoutContext,\r\n    objects: FabricObject[]\r\n  ): LayoutStrategyResult | undefined {\r\n    const { target } = context;\r\n    const { clipPath, group } = target;\r\n    if (!clipPath || !this.shouldPerformLayout(context)) {\r\n      return;\r\n    }\r\n    // TODO: remove stroke calculation from this case\r\n    const { width, height } = makeBoundingBoxFromPoints(\r\n      getObjectBounds(target, clipPath as FabricObject)\r\n    );\r\n    const size = new Point(width, height);\r\n    if (clipPath.absolutePositioned) {\r\n      //  we want the center point to exist in group's containing plane\r\n      const clipPathCenter = sendPointToPlane(\r\n        clipPath.getRelativeCenterPoint(),\r\n        undefined,\r\n        group ? group.calcTransformMatrix() : undefined\r\n      );\r\n      return {\r\n        center: clipPathCenter,\r\n        size,\r\n      };\r\n    } else {\r\n      //  we want the center point to exist in group's containing plane, so we send it upwards\r\n      const clipPathCenter = clipPath\r\n        .getRelativeCenterPoint()\r\n        .transform(target.calcOwnMatrix(), true);\r\n      if (this.shouldPerformLayout(context)) {\r\n        // the clip path is positioned relative to the group's center which is affected by the bbox\r\n        // so we first calculate the bbox\r\n        const { center = new Point(), correction = new Point() } =\r\n          this.calcBoundingBox(objects, context) || {};\r\n        return {\r\n          center: center.add(clipPathCenter),\r\n          correction: correction.subtract(clipPathCenter),\r\n          size,\r\n        };\r\n      } else {\r\n        return {\r\n          center: target.getRelativeCenterPoint().add(clipPathCenter),\r\n          size,\r\n        };\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nclassRegistry.setClass(ClipPathLayout);\r\n","import { Point } from '../../Point';\r\nimport type {\r\n  InitializationLayoutContext,\r\n  LayoutStrategyResult,\r\n  StrictLayoutContext,\r\n} from '../types';\r\nimport { LayoutStrategy } from './LayoutStrategy';\r\nimport { classRegistry } from '../../ClassRegistry';\r\n\r\n/**\r\n * Layout will keep target's initial size.\r\n */\r\nexport class FixedLayout extends LayoutStrategy {\r\n  static readonly type = 'fixed';\r\n\r\n  /**\r\n   * @override respect target's initial size\r\n   */\r\n  getInitialSize(\r\n    { target }: StrictLayoutContext & InitializationLayoutContext,\r\n    { size }: Pick<LayoutStrategyResult, 'center' | 'size'>\r\n  ): Point {\r\n    return new Point(target.width || size.x, target.height || size.y);\r\n  }\r\n}\r\n\r\nclassRegistry.setClass(FixedLayout);\r\n","import { LayoutManager } from './LayoutManager';\r\nimport type { RegistrationContext, StrictLayoutContext } from './types';\r\nimport type { Group } from '../shapes/Group';\r\n\r\n/**\r\n * Today the LayoutManager class also takes care of subscribing event handlers\r\n * to update the group layout when the group is interactive and a transform is applied\r\n * to a child object.\r\n * The ActiveSelection is never interactive, but it could contain objects from\r\n * groups that are.\r\n * The standard LayoutManager would subscribe the children of the activeSelection to\r\n * perform layout changes to the active selection itself, what we need instead is that\r\n * the transformation applied to the active selection will trigger changes to the\r\n * original group of the children ( the one referenced under the parent property )\r\n * This subclass of the LayoutManager has a single duty to fill the gap of this difference.`\r\n */\r\nexport class ActiveSelectionLayoutManager extends LayoutManager {\r\n  subscribeTargets(\r\n    context: RegistrationContext & Partial<StrictLayoutContext>\r\n  ): void {\r\n    const activeSelection = context.target;\r\n    const parents = context.targets.reduce((parents, target) => {\r\n      target.parent && parents.add(target.parent);\r\n      return parents;\r\n    }, new Set<Group>());\r\n    parents.forEach((parent) => {\r\n      parent.layoutManager.subscribeTargets({\r\n        target: parent,\r\n        targets: [activeSelection],\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * unsubscribe from parent only if all its children were deselected\r\n   */\r\n  unsubscribeTargets(\r\n    context: RegistrationContext & Partial<StrictLayoutContext>\r\n  ): void {\r\n    const activeSelection = context.target;\r\n    const selectedObjects = activeSelection.getObjects();\r\n    const parents = context.targets.reduce((parents, target) => {\r\n      target.parent && parents.add(target.parent);\r\n      return parents;\r\n    }, new Set<Group>());\r\n    parents.forEach((parent) => {\r\n      !selectedObjects.some((object) => object.parent === parent) &&\r\n        parent.layoutManager.unsubscribeTargets({\r\n          target: parent,\r\n          targets: [activeSelection],\r\n        });\r\n    });\r\n  }\r\n}\r\n","import type { ControlRenderingStyleOverride } from '../controls/controlRendering';\r\nimport { classRegistry } from '../ClassRegistry';\r\nimport type { GroupProps } from './Group';\r\nimport { Group } from './Group';\r\nimport type { FabricObject } from './Object/FabricObject';\r\nimport {\r\n  LAYOUT_TYPE_ADDED,\r\n  LAYOUT_TYPE_REMOVED,\r\n} from '../LayoutManager/constants';\r\nimport type { TClassProperties } from '../typedefs';\r\nimport { log } from '../util/internals/console';\r\nimport { ActiveSelectionLayoutManager } from '../LayoutManager/ActiveSelectionLayoutManager';\r\n\r\nexport type MultiSelectionStacking = 'canvas-stacking' | 'selection-order';\r\n\r\nexport interface ActiveSelectionOptions extends GroupProps {\r\n  multiSelectionStacking: MultiSelectionStacking;\r\n}\r\n\r\nconst activeSelectionDefaultValues: Partial<TClassProperties<ActiveSelection>> =\r\n  {\r\n    multiSelectionStacking: 'canvas-stacking',\r\n  };\r\n\r\n/**\r\n * Used by Canvas to manage selection.\r\n *\r\n * @example\r\n * class MyActiveSelection extends ActiveSelection {\r\n *   ...\r\n * }\r\n *\r\n * // override the default `ActiveSelection` class\r\n * classRegistry.setClass(MyActiveSelection)\r\n */\r\nexport class ActiveSelection extends Group {\r\n  static type = 'ActiveSelection';\r\n\r\n  static ownDefaults: Record<string, any> = activeSelectionDefaultValues;\r\n\r\n  static getDefaults(): Record<string, any> {\r\n    return { ...super.getDefaults(), ...ActiveSelection.ownDefaults };\r\n  }\r\n\r\n  /**\r\n   * The ActiveSelection needs to use the ActiveSelectionLayoutManager\r\n   * or selections on interactive groups may be broken\r\n   */\r\n  declare layoutManager: ActiveSelectionLayoutManager;\r\n\r\n  /**\r\n   * controls how selected objects are added during a multiselection event\r\n   * - `canvas-stacking` adds the selected object to the active selection while respecting canvas object stacking order\r\n   * - `selection-order` adds the selected object to the top of the stack,\r\n   * meaning that the stack is ordered by the order in which objects were selected\r\n   * @default `canvas-stacking`\r\n   */\r\n  declare multiSelectionStacking: MultiSelectionStacking;\r\n\r\n  constructor(\r\n    objects: FabricObject[] = [],\r\n    options: Partial<ActiveSelectionOptions> = {}\r\n  ) {\r\n    super();\r\n    Object.assign(this, ActiveSelection.ownDefaults);\r\n    this.setOptions(options);\r\n    const { left, top, layoutManager } = options;\r\n    this.groupInit(objects, {\r\n      left,\r\n      top,\r\n      layoutManager: layoutManager ?? new ActiveSelectionLayoutManager(),\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _shouldSetNestedCoords() {\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @override we don't want the selection monitor to be active\r\n   */\r\n  __objectSelectionMonitor() {\r\n    //  noop\r\n  }\r\n\r\n  /**\r\n   * Adds objects with respect to {@link multiSelectionStacking}\r\n   * @param targets object to add to selection\r\n   */\r\n  multiSelectAdd(...targets: FabricObject[]) {\r\n    if (this.multiSelectionStacking === 'selection-order') {\r\n      this.add(...targets);\r\n    } else {\r\n      //  respect object stacking as it is on canvas\r\n      //  perf enhancement for large ActiveSelection: consider a binary search of `isInFrontOf`\r\n      targets.forEach((target) => {\r\n        const index = this._objects.findIndex((obj) => obj.isInFrontOf(target));\r\n        const insertAt =\r\n          index === -1\r\n            ? //  `target` is in front of all other objects\r\n              this.size()\r\n            : index;\r\n        this.insertAt(insertAt, target);\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @override block ancestors/descendants of selected objects from being selected to prevent a circular object tree\r\n   */\r\n  canEnterGroup(object: FabricObject) {\r\n    if (\r\n      this.getObjects().some(\r\n        (o) => o.isDescendantOf(object) || object.isDescendantOf(o)\r\n      )\r\n    ) {\r\n      //  prevent circular object tree\r\n      log(\r\n        'error',\r\n        'ActiveSelection: circular object trees are not supported, this call has no effect'\r\n      );\r\n      return false;\r\n    }\r\n\r\n    return super.canEnterGroup(object);\r\n  }\r\n\r\n  /**\r\n   * Change an object so that it can be part of an active selection.\r\n   * this method is called by multiselectAdd from canvas code.\r\n   * @private\r\n   * @param {FabricObject} object\r\n   * @param {boolean} [removeParentTransform] true if object is in canvas coordinate plane\r\n   */\r\n  enterGroup(object: FabricObject, removeParentTransform?: boolean) {\r\n    // This condition check that the object has currently a group, and the group\r\n    // is also its parent, meaning that is not in an active selection, but is\r\n    // in a normal group.\r\n    if (object.parent && object.parent === object.group) {\r\n      // Disconnect the object from the group functionalities, but keep the ref parent intact\r\n      // for later re-enter\r\n      object.parent._exitGroup(object);\r\n      // in this case the object is probably inside an active selection.\r\n    } else if (object.group && object.parent !== object.group) {\r\n      // in this case group.remove will also clear the old parent reference.\r\n      object.group.remove(object);\r\n    }\r\n    // enter the active selection from a render perspective\r\n    // the object will be in the objects array of both the ActiveSelection and the Group\r\n    // but referenced in the group's _activeObjects so that it won't be rendered twice.\r\n    this._enterGroup(object, removeParentTransform);\r\n  }\r\n\r\n  /**\r\n   * we want objects to retain their canvas ref when exiting instance\r\n   * @private\r\n   * @param {FabricObject} object\r\n   * @param {boolean} [removeParentTransform] true if object should exit group without applying group's transform to it\r\n   */\r\n  exitGroup(object: FabricObject, removeParentTransform?: boolean) {\r\n    this._exitGroup(object, removeParentTransform);\r\n    // return to parent\r\n    object.parent && object.parent._enterGroup(object, true);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {'added'|'removed'} type\r\n   * @param {FabricObject[]} targets\r\n   */\r\n  _onAfterObjectsChange(type: 'added' | 'removed', targets: FabricObject[]) {\r\n    super._onAfterObjectsChange(type, targets);\r\n    const groups = new Set<Group>();\r\n    targets.forEach((object) => {\r\n      const { parent } = object;\r\n      parent && groups.add(parent);\r\n    });\r\n    if (type === LAYOUT_TYPE_REMOVED) {\r\n      //  invalidate groups' layout and mark as dirty\r\n      groups.forEach((group) => {\r\n        group._onAfterObjectsChange(LAYOUT_TYPE_ADDED, targets);\r\n      });\r\n    } else {\r\n      //  mark groups as dirty\r\n      groups.forEach((group) => {\r\n        group._set('dirty', true);\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @override remove all objects\r\n   */\r\n  onDeselect() {\r\n    this.removeAll();\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Returns string representation of a group\r\n   * @return {String}\r\n   */\r\n  toString() {\r\n    return `#<ActiveSelection: (${this.complexity()})>`;\r\n  }\r\n\r\n  /**\r\n   * Decide if the object should cache or not. Create its own cache level\r\n   * objectCaching is a global flag, wins over everything\r\n   * needsItsOwnCache should be used when the object drawing method requires\r\n   * a cache step. None of the fabric classes requires it.\r\n   * Generally you do not cache objects in groups because the group outside is cached.\r\n   * @return {Boolean}\r\n   */\r\n  shouldCache() {\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Check if this group or its parent group are caching, recursively up\r\n   * @return {Boolean}\r\n   */\r\n  isOnACache() {\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Renders controls and borders for the object\r\n   * @param {CanvasRenderingContext2D} ctx Context to render on\r\n   * @param {Object} [styleOverride] properties to override the object style\r\n   * @param {Object} [childrenOverride] properties to override the children overrides\r\n   */\r\n  _renderControls(\r\n    ctx: CanvasRenderingContext2D,\r\n    styleOverride?: ControlRenderingStyleOverride,\r\n    childrenOverride?: ControlRenderingStyleOverride\r\n  ) {\r\n    ctx.save();\r\n    ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\r\n    const options = {\r\n      hasControls: false,\r\n      ...childrenOverride,\r\n      forActiveSelection: true,\r\n    };\r\n    for (let i = 0; i < this._objects.length; i++) {\r\n      this._objects[i]._renderControls(ctx, options);\r\n    }\r\n    super._renderControls(ctx, styleOverride);\r\n    ctx.restore();\r\n  }\r\n}\r\n\r\nclassRegistry.setClass(ActiveSelection);\r\nclassRegistry.setClass(ActiveSelection, 'activeSelection');\r\n","/**\r\n * Canvas 2D filter backend.\r\n */\r\nimport type { BaseFilter } from './BaseFilter';\r\nimport type { T2DPipelineState, TPipelineResources } from './typedefs';\r\n\r\nexport class Canvas2dFilterBackend {\r\n  /**\r\n   * Experimental. This object is a sort of repository of help layers used to avoid\r\n   * of recreating them during frequent filtering. If you are previewing a filter with\r\n   * a slider you probably do not want to create help layers every filter step.\r\n   * in this object there will be appended some canvases, created once, resized sometimes\r\n   * cleared never. Clearing is left to the developer.\r\n   **/\r\n  resources: TPipelineResources = {};\r\n\r\n  /**\r\n   * Apply a set of filters against a source image and draw the filtered output\r\n   * to the provided destination canvas.\r\n   *\r\n   * @param {EnhancedFilter} filters The filter to apply.\r\n   * @param {HTMLImageElement|HTMLCanvasElement} sourceElement The source to be filtered.\r\n   * @param {Number} sourceWidth The width of the source input.\r\n   * @param {Number} sourceHeight The height of the source input.\r\n   * @param {HTMLCanvasElement} targetCanvas The destination for filtered output to be drawn.\r\n   */\r\n  applyFilters(\r\n    filters: BaseFilter<string, Record<string, any>>[],\r\n    sourceElement: CanvasImageSource,\r\n    sourceWidth: number,\r\n    sourceHeight: number,\r\n    targetCanvas: HTMLCanvasElement\r\n  ): T2DPipelineState | void {\r\n    const ctx = targetCanvas.getContext('2d');\r\n    if (!ctx) {\r\n      return;\r\n    }\r\n    ctx.drawImage(sourceElement, 0, 0, sourceWidth, sourceHeight);\r\n    const imageData = ctx.getImageData(0, 0, sourceWidth, sourceHeight);\r\n    const originalImageData = ctx.getImageData(0, 0, sourceWidth, sourceHeight);\r\n    const pipelineState: T2DPipelineState = {\r\n      sourceWidth,\r\n      sourceHeight,\r\n      imageData,\r\n      originalEl: sourceElement,\r\n      originalImageData,\r\n      canvasEl: targetCanvas,\r\n      ctx,\r\n      filterBackend: this,\r\n    };\r\n    filters.forEach((filter) => {\r\n      filter.applyTo(pipelineState);\r\n    });\r\n    const { imageData: imageDataPostFilter } = pipelineState;\r\n    if (\r\n      imageDataPostFilter.width !== sourceWidth ||\r\n      imageDataPostFilter.height !== sourceHeight\r\n    ) {\r\n      targetCanvas.width = imageDataPostFilter.width;\r\n      targetCanvas.height = imageDataPostFilter.height;\r\n    }\r\n    ctx.putImageData(imageDataPostFilter, 0, 0);\r\n    return pipelineState;\r\n  }\r\n}\r\n","import { config } from '../config';\r\nimport { createCanvasElement } from '../util/misc/dom';\r\nimport type {\r\n  TWebGLPipelineState,\r\n  TProgramCache,\r\n  TTextureCache,\r\n  TPipelineResources,\r\n} from './typedefs';\r\nimport type { BaseFilter } from './BaseFilter';\r\n\r\nexport class WebGLFilterBackend {\r\n  declare tileSize: number;\r\n\r\n  /**\r\n   * Define ...\r\n   **/\r\n  aPosition: Float32Array = new Float32Array([0, 0, 0, 1, 1, 0, 1, 1]);\r\n\r\n  /**\r\n   * If GLPut data is the fastest operation, or if forced, this buffer will be used\r\n   * to transfer the data back in the 2d logic\r\n   **/\r\n  declare imageBuffer?: ArrayBuffer;\r\n\r\n  declare canvas: HTMLCanvasElement;\r\n\r\n  /**\r\n   * The Webgl context that will execute the operations for filtering\r\n   **/\r\n  declare gl: WebGLRenderingContext;\r\n\r\n  /**\r\n   * Keyed map for shader cache\r\n   **/\r\n  declare programCache: TProgramCache;\r\n\r\n  /**\r\n   * Keyed map for texture cache\r\n   **/\r\n  declare textureCache: TTextureCache;\r\n\r\n  /**\r\n   * Contains GPU info for debug\r\n   **/\r\n  declare gpuInfo: any;\r\n\r\n  /**\r\n   * Experimental. This object is a sort of repository of help layers used to avoid\r\n   * of recreating them during frequent filtering. If you are previewing a filter with\r\n   * a slider you probably do not want to create help layers every filter step.\r\n   * in this object there will be appended some canvases, created once, resized sometimes\r\n   * cleared never. Clearing is left to the developer.\r\n   **/\r\n  resources: TPipelineResources = {};\r\n\r\n  constructor({ tileSize = config.textureSize } = {}) {\r\n    this.tileSize = tileSize;\r\n    this.setupGLContext(tileSize, tileSize);\r\n    this.captureGPUInfo();\r\n  }\r\n\r\n  /**\r\n   * Setup a WebGL context suitable for filtering, and bind any needed event handlers.\r\n   */\r\n  setupGLContext(width: number, height: number): void {\r\n    this.dispose();\r\n    this.createWebGLCanvas(width, height);\r\n  }\r\n\r\n  /**\r\n   * Create a canvas element and associated WebGL context and attaches them as\r\n   * class properties to the GLFilterBackend class.\r\n   */\r\n  createWebGLCanvas(width: number, height: number): void {\r\n    const canvas = createCanvasElement();\r\n    canvas.width = width;\r\n    canvas.height = height;\r\n    const glOptions = {\r\n        alpha: true,\r\n        premultipliedAlpha: false,\r\n        depth: false,\r\n        stencil: false,\r\n        antialias: false,\r\n      },\r\n      gl = canvas.getContext('webgl', glOptions) as WebGLRenderingContext;\r\n\r\n    if (!gl) {\r\n      return;\r\n    }\r\n    gl.clearColor(0, 0, 0, 0);\r\n    // this canvas can fire webglcontextlost and webglcontextrestored\r\n    this.canvas = canvas;\r\n    this.gl = gl;\r\n  }\r\n\r\n  /**\r\n   * Attempts to apply the requested filters to the source provided, drawing the filtered output\r\n   * to the provided target canvas.\r\n   *\r\n   * @param {Array} filters The filters to apply.\r\n   * @param {TexImageSource} source The source to be filtered.\r\n   * @param {Number} width The width of the source input.\r\n   * @param {Number} height The height of the source input.\r\n   * @param {HTMLCanvasElement} targetCanvas The destination for filtered output to be drawn.\r\n   * @param {String|undefined} cacheKey A key used to cache resources related to the source. If\r\n   * omitted, caching will be skipped.\r\n   */\r\n  applyFilters(\r\n    filters: BaseFilter<string, Record<string, any>>[],\r\n    source: TexImageSource,\r\n    width: number,\r\n    height: number,\r\n    targetCanvas: HTMLCanvasElement,\r\n    cacheKey?: string\r\n  ): TWebGLPipelineState | undefined {\r\n    const gl = this.gl;\r\n    const ctx = targetCanvas.getContext('2d');\r\n    if (!gl || !ctx) {\r\n      return;\r\n    }\r\n    let cachedTexture;\r\n    if (cacheKey) {\r\n      cachedTexture = this.getCachedTexture(cacheKey, source);\r\n    }\r\n    const pipelineState: TWebGLPipelineState = {\r\n      originalWidth:\r\n        (source as HTMLImageElement).width ||\r\n        // @ts-expect-error is this a bug? should this be naturalWidth? or is this the pipeline state?\r\n        (source as HTMLImageElement).originalWidth ||\r\n        0,\r\n      originalHeight:\r\n        (source as HTMLImageElement).height ||\r\n        // @ts-expect-error is this a bug? should this be naturalHeight? or is this the pipeline state?\r\n        (source as HTMLImageElement).originalHeight ||\r\n        0,\r\n      sourceWidth: width,\r\n      sourceHeight: height,\r\n      destinationWidth: width,\r\n      destinationHeight: height,\r\n      context: gl,\r\n      sourceTexture: this.createTexture(\r\n        gl,\r\n        width,\r\n        height,\r\n        !cachedTexture ? source : undefined\r\n      ),\r\n      targetTexture: this.createTexture(gl, width, height),\r\n      originalTexture:\r\n        cachedTexture ||\r\n        this.createTexture(\r\n          gl,\r\n          width,\r\n          height,\r\n          !cachedTexture ? source : undefined\r\n        )!,\r\n      passes: filters.length,\r\n      webgl: true,\r\n      aPosition: this.aPosition,\r\n      programCache: this.programCache,\r\n      pass: 0,\r\n      filterBackend: this,\r\n      targetCanvas: targetCanvas,\r\n    };\r\n    const tempFbo = gl.createFramebuffer();\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, tempFbo);\r\n    filters.forEach((filter: any) => {\r\n      filter && filter.applyTo(pipelineState);\r\n    });\r\n    resizeCanvasIfNeeded(pipelineState);\r\n    this.copyGLTo2D(gl, pipelineState);\r\n    gl.bindTexture(gl.TEXTURE_2D, null);\r\n    gl.deleteTexture(pipelineState.sourceTexture);\r\n    gl.deleteTexture(pipelineState.targetTexture);\r\n    gl.deleteFramebuffer(tempFbo);\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    return pipelineState;\r\n  }\r\n\r\n  /**\r\n   * Detach event listeners, remove references, and clean up caches.\r\n   */\r\n  dispose() {\r\n    if (this.canvas) {\r\n      // we are disposing, we don't care about the fact\r\n      // that the canvas shouldn't be null.\r\n      // @ts-expect-error disposing\r\n      this.canvas = null;\r\n      // @ts-expect-error disposing\r\n      this.gl = null;\r\n    }\r\n    this.clearWebGLCaches();\r\n  }\r\n\r\n  /**\r\n   * Wipe out WebGL-related caches.\r\n   */\r\n  clearWebGLCaches() {\r\n    this.programCache = {};\r\n    this.textureCache = {};\r\n  }\r\n\r\n  /**\r\n   * Create a WebGL texture object.\r\n   *\r\n   * Accepts specific dimensions to initialize the texture to or a source image.\r\n   *\r\n   * @param {WebGLRenderingContext} gl The GL context to use for creating the texture.\r\n   * @param {number} width The width to initialize the texture at.\r\n   * @param {number} height The height to initialize the texture.\r\n   * @param {TexImageSource} textureImageSource A source for the texture data.\r\n   * @param {number} filter gl.NEAREST default or gl.LINEAR filters for the texture.\r\n   * This filter is very useful for LUTs filters. If you need interpolation use gl.LINEAR\r\n   * @returns {WebGLTexture}\r\n   */\r\n  createTexture(\r\n    gl: WebGLRenderingContext,\r\n    width: number,\r\n    height: number,\r\n    textureImageSource?: TexImageSource,\r\n    filter?:\r\n      | WebGLRenderingContextBase['NEAREST']\r\n      | WebGLRenderingContextBase['LINEAR']\r\n  ) {\r\n    const {\r\n      NEAREST,\r\n      TEXTURE_2D,\r\n      RGBA,\r\n      UNSIGNED_BYTE,\r\n      CLAMP_TO_EDGE,\r\n      TEXTURE_MAG_FILTER,\r\n      TEXTURE_MIN_FILTER,\r\n      TEXTURE_WRAP_S,\r\n      TEXTURE_WRAP_T,\r\n    } = gl;\r\n    const texture = gl.createTexture();\r\n    gl.bindTexture(TEXTURE_2D, texture);\r\n    gl.texParameteri(TEXTURE_2D, TEXTURE_MAG_FILTER, filter || NEAREST);\r\n    gl.texParameteri(TEXTURE_2D, TEXTURE_MIN_FILTER, filter || NEAREST);\r\n    gl.texParameteri(TEXTURE_2D, TEXTURE_WRAP_S, CLAMP_TO_EDGE);\r\n    gl.texParameteri(TEXTURE_2D, TEXTURE_WRAP_T, CLAMP_TO_EDGE);\r\n    if (textureImageSource) {\r\n      gl.texImage2D(\r\n        TEXTURE_2D,\r\n        0,\r\n        RGBA,\r\n        RGBA,\r\n        UNSIGNED_BYTE,\r\n        textureImageSource\r\n      );\r\n    } else {\r\n      gl.texImage2D(\r\n        TEXTURE_2D,\r\n        0,\r\n        RGBA,\r\n        width,\r\n        height,\r\n        0,\r\n        RGBA,\r\n        UNSIGNED_BYTE,\r\n        null\r\n      );\r\n    }\r\n    return texture;\r\n  }\r\n\r\n  /**\r\n   * Can be optionally used to get a texture from the cache array\r\n   *\r\n   * If an existing texture is not found, a new texture is created and cached.\r\n   *\r\n   * @param {String} uniqueId A cache key to use to find an existing texture.\r\n   * @param {HTMLImageElement|HTMLCanvasElement} textureImageSource A source to use to create the\r\n   * texture cache entry if one does not already exist.\r\n   */\r\n  getCachedTexture(\r\n    uniqueId: string,\r\n    textureImageSource: TexImageSource,\r\n    filter?:\r\n      | WebGLRenderingContextBase['NEAREST']\r\n      | WebGLRenderingContextBase['LINEAR']\r\n  ): WebGLTexture | null {\r\n    const { textureCache } = this;\r\n    if (textureCache[uniqueId]) {\r\n      return textureCache[uniqueId];\r\n    } else {\r\n      const texture = this.createTexture(\r\n        this.gl,\r\n        (textureImageSource as HTMLImageElement).width,\r\n        (textureImageSource as HTMLImageElement).height,\r\n        textureImageSource,\r\n        filter\r\n      );\r\n      if (texture) {\r\n        textureCache[uniqueId] = texture;\r\n      }\r\n      return texture;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clear out cached resources related to a source image that has been\r\n   * filtered previously.\r\n   *\r\n   * @param {String} cacheKey The cache key provided when the source image was filtered.\r\n   */\r\n  evictCachesForKey(cacheKey: string) {\r\n    if (this.textureCache[cacheKey]) {\r\n      this.gl.deleteTexture(this.textureCache[cacheKey]);\r\n      delete this.textureCache[cacheKey];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Copy an input WebGL canvas on to an output 2D canvas.\r\n   *\r\n   * The WebGL canvas is assumed to be upside down, with the top-left pixel of the\r\n   * desired output image appearing in the bottom-left corner of the WebGL canvas.\r\n   *\r\n   * @param {WebGLRenderingContext} sourceContext The WebGL context to copy from.\r\n   * @param {Object} pipelineState The 2D target canvas to copy on to.\r\n   */\r\n  copyGLTo2D(gl: WebGLRenderingContext, pipelineState: TWebGLPipelineState) {\r\n    const glCanvas = gl.canvas,\r\n      targetCanvas = pipelineState.targetCanvas,\r\n      ctx = targetCanvas.getContext('2d');\r\n    if (!ctx) {\r\n      return;\r\n    }\r\n    ctx.translate(0, targetCanvas.height); // move it down again\r\n    ctx.scale(1, -1); // vertical flip\r\n    // where is my image on the big glcanvas?\r\n    const sourceY = glCanvas.height - targetCanvas.height;\r\n    ctx.drawImage(\r\n      glCanvas,\r\n      0,\r\n      sourceY,\r\n      targetCanvas.width,\r\n      targetCanvas.height,\r\n      0,\r\n      0,\r\n      targetCanvas.width,\r\n      targetCanvas.height\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Copy an input WebGL canvas on to an output 2D canvas using 2d canvas' putImageData\r\n   * API. Measurably faster than using ctx.drawImage in Firefox (version 54 on OSX Sierra).\r\n   *\r\n   * @param {WebGLRenderingContext} sourceContext The WebGL context to copy from.\r\n   * @param {HTMLCanvasElement} targetCanvas The 2D target canvas to copy on to.\r\n   * @param {Object} pipelineState The 2D target canvas to copy on to.\r\n   */\r\n  copyGLTo2DPutImageData(\r\n    this: Required<WebGLFilterBackend>,\r\n    gl: WebGLRenderingContext,\r\n    pipelineState: TWebGLPipelineState\r\n  ) {\r\n    const targetCanvas = pipelineState.targetCanvas,\r\n      ctx = targetCanvas.getContext('2d'),\r\n      dWidth = pipelineState.destinationWidth,\r\n      dHeight = pipelineState.destinationHeight,\r\n      numBytes = dWidth * dHeight * 4;\r\n    if (!ctx) {\r\n      return;\r\n    }\r\n    const u8 = new Uint8Array(this.imageBuffer, 0, numBytes);\r\n    const u8Clamped = new Uint8ClampedArray(this.imageBuffer, 0, numBytes);\r\n\r\n    gl.readPixels(0, 0, dWidth, dHeight, gl.RGBA, gl.UNSIGNED_BYTE, u8);\r\n    const imgData = new ImageData(u8Clamped, dWidth, dHeight);\r\n    ctx.putImageData(imgData, 0, 0);\r\n  }\r\n\r\n  /**\r\n   * Attempt to extract GPU information strings from a WebGL context.\r\n   *\r\n   * Useful information when debugging or blacklisting specific GPUs.\r\n   *\r\n   * @returns {Object} A GPU info object with renderer and vendor strings.\r\n   */\r\n  captureGPUInfo() {\r\n    if (this.gpuInfo) {\r\n      return this.gpuInfo;\r\n    }\r\n    const gl = this.gl,\r\n      gpuInfo = { renderer: '', vendor: '' };\r\n    if (!gl) {\r\n      return gpuInfo;\r\n    }\r\n    const ext = gl.getExtension('WEBGL_debug_renderer_info');\r\n    if (ext) {\r\n      const renderer = gl.getParameter(ext.UNMASKED_RENDERER_WEBGL);\r\n      const vendor = gl.getParameter(ext.UNMASKED_VENDOR_WEBGL);\r\n      if (renderer) {\r\n        gpuInfo.renderer = renderer.toLowerCase();\r\n      }\r\n      if (vendor) {\r\n        gpuInfo.vendor = vendor.toLowerCase();\r\n      }\r\n    }\r\n    this.gpuInfo = gpuInfo;\r\n    return gpuInfo;\r\n  }\r\n}\r\n\r\nfunction resizeCanvasIfNeeded(pipelineState: TWebGLPipelineState): void {\r\n  const targetCanvas = pipelineState.targetCanvas,\r\n    width = targetCanvas.width,\r\n    height = targetCanvas.height,\r\n    dWidth = pipelineState.destinationWidth,\r\n    dHeight = pipelineState.destinationHeight;\r\n\r\n  if (width !== dWidth || height !== dHeight) {\r\n    targetCanvas.width = dWidth;\r\n    targetCanvas.height = dHeight;\r\n  }\r\n}\r\n","import { config } from '../config';\r\nimport { getEnv } from '../env';\r\nimport { createCanvasElement } from '../util/misc/dom';\r\nimport { Canvas2dFilterBackend } from './Canvas2dFilterBackend';\r\nimport { WebGLFilterBackend } from './WebGLFilterBackend';\r\n\r\nexport type FilterBackend = WebGLFilterBackend | Canvas2dFilterBackend;\r\n\r\nlet filterBackend: FilterBackend;\r\n\r\n/**\r\n * Verifies if it is possible to initialize webgl or fallback on a canvas2d filtering backend\r\n */\r\nexport function initFilterBackend(): FilterBackend {\r\n  const { WebGLProbe } = getEnv();\r\n  WebGLProbe.queryWebGL(createCanvasElement());\r\n  if (config.enableGLFiltering && WebGLProbe.isSupported(config.textureSize)) {\r\n    return new WebGLFilterBackend({ tileSize: config.textureSize });\r\n  } else {\r\n    return new Canvas2dFilterBackend();\r\n  }\r\n}\r\n\r\n/**\r\n * Get the current fabricJS filter backend  or initialize one if not available yet\r\n * @param [strict] pass `true` to create the backend if it wasn't created yet (default behavior),\r\n * pass `false` to get the backend ref without mutating it\r\n */\r\nexport function getFilterBackend(strict = true): FilterBackend {\r\n  if (!filterBackend && strict) {\r\n    filterBackend = initFilterBackend();\r\n  }\r\n  return filterBackend;\r\n}\r\n\r\nexport function setFilterBackend(backend: FilterBackend) {\r\n  filterBackend = backend;\r\n}\r\n","import { getFabricDocument, getEnv } from '../env';\r\nimport type { BaseFilter } from '../filters/BaseFilter';\r\nimport { getFilterBackend } from '../filters/FilterBackend';\r\nimport { SHARED_ATTRIBUTES } from '../parser/attributes';\r\nimport { parseAttributes } from '../parser/parseAttributes';\r\nimport type {\r\n  TClassProperties,\r\n  TCrossOrigin,\r\n  TSize,\r\n  Abortable,\r\n  TOptions,\r\n} from '../typedefs';\r\nimport { uid } from '../util/internals/uid';\r\nimport { createCanvasElement } from '../util/misc/dom';\r\nimport { findScaleToCover, findScaleToFit } from '../util/misc/findScaleTo';\r\nimport type { LoadImageOptions } from '../util/misc/objectEnlive';\r\nimport {\r\n  enlivenObjectEnlivables,\r\n  enlivenObjects,\r\n  loadImage,\r\n} from '../util/misc/objectEnlive';\r\nimport { parsePreserveAspectRatioAttribute } from '../util/misc/svgParsing';\r\nimport { classRegistry } from '../ClassRegistry';\r\nimport { FabricObject, cacheProperties } from './Object/FabricObject';\r\nimport type { FabricObjectProps, SerializedObjectProps } from './Object/types';\r\nimport type { ObjectEvents } from '../EventTypeDefs';\r\nimport { WebGLFilterBackend } from '../filters/WebGLFilterBackend';\r\nimport { FILL, NONE } from '../constants';\r\nimport { getDocumentFromElement } from '../util/dom_misc';\r\nimport type { CSSRules } from '../parser/typedefs';\r\nimport type { Resize } from '../filters/Resize';\r\nimport type { TCachedFabricObject } from './Object/Object';\r\nimport { log } from '../util/internals/console';\r\n\r\n// @todo Would be nice to have filtering code not imported directly.\r\n\r\nexport type ImageSource =\r\n  | HTMLImageElement\r\n  | HTMLVideoElement\r\n  | HTMLCanvasElement;\r\n\r\ninterface UniqueImageProps {\r\n  srcFromAttribute: boolean;\r\n  minimumScaleTrigger: number;\r\n  cropX: number;\r\n  cropY: number;\r\n  imageSmoothing: boolean;\r\n  filters: BaseFilter<string, Record<string, any>>[];\r\n  resizeFilter?: Resize;\r\n}\r\n\r\nexport const imageDefaultValues: Partial<TClassProperties<FabricImage>> = {\r\n  strokeWidth: 0,\r\n  srcFromAttribute: false,\r\n  minimumScaleTrigger: 0.5,\r\n  cropX: 0,\r\n  cropY: 0,\r\n  imageSmoothing: true,\r\n};\r\n\r\nexport interface SerializedImageProps extends SerializedObjectProps {\r\n  src: string;\r\n  crossOrigin: TCrossOrigin;\r\n  filters: any[];\r\n  resizeFilter?: any;\r\n  cropX: number;\r\n  cropY: number;\r\n}\r\n\r\nexport interface ImageProps extends FabricObjectProps, UniqueImageProps {}\r\n\r\nconst IMAGE_PROPS = ['cropX', 'cropY'] as const;\r\n\r\n/**\r\n * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#images}\r\n */\r\nexport class FabricImage<\r\n    Props extends TOptions<ImageProps> = Partial<ImageProps>,\r\n    SProps extends SerializedImageProps = SerializedImageProps,\r\n    EventSpec extends ObjectEvents = ObjectEvents\r\n  >\r\n  extends FabricObject<Props, SProps, EventSpec>\r\n  implements ImageProps\r\n{\r\n  /**\r\n   * When calling {@link FabricImage.getSrc}, return value from element src with `element.getAttribute('src')`.\r\n   * This allows for relative urls as image src.\r\n   * @since 2.7.0\r\n   * @type Boolean\r\n   * @default false\r\n   */\r\n  declare srcFromAttribute: boolean;\r\n\r\n  /**\r\n   * private\r\n   * contains last value of scaleX to detect\r\n   * if the Image got resized after the last Render\r\n   * @type Number\r\n   */\r\n  protected _lastScaleX = 1;\r\n\r\n  /**\r\n   * private\r\n   * contains last value of scaleY to detect\r\n   * if the Image got resized after the last Render\r\n   * @type Number\r\n   */\r\n  protected _lastScaleY = 1;\r\n\r\n  /**\r\n   * private\r\n   * contains last value of scaling applied by the apply filter chain\r\n   * @type Number\r\n   */\r\n  protected _filterScalingX = 1;\r\n\r\n  /**\r\n   * private\r\n   * contains last value of scaling applied by the apply filter chain\r\n   * @type Number\r\n   */\r\n  protected _filterScalingY = 1;\r\n\r\n  /**\r\n   * minimum scale factor under which any resizeFilter is triggered to resize the image\r\n   * 0 will disable the automatic resize. 1 will trigger automatically always.\r\n   * number bigger than 1 are not implemented yet.\r\n   * @type Number\r\n   */\r\n  declare minimumScaleTrigger: number;\r\n\r\n  /**\r\n   * key used to retrieve the texture representing this image\r\n   * @since 2.0.0\r\n   * @type String\r\n   * @default\r\n   */\r\n  declare cacheKey: string;\r\n\r\n  /**\r\n   * Image crop in pixels from original image size.\r\n   * @since 2.0.0\r\n   * @type Number\r\n   * @default\r\n   */\r\n  declare cropX: number;\r\n\r\n  /**\r\n   * Image crop in pixels from original image size.\r\n   * @since 2.0.0\r\n   * @type Number\r\n   * @default\r\n   */\r\n  declare cropY: number;\r\n\r\n  /**\r\n   * Indicates whether this canvas will use image smoothing when painting this image.\r\n   * Also influence if the cacheCanvas for this image uses imageSmoothing\r\n   * @since 4.0.0-beta.11\r\n   * @type Boolean\r\n   * @default\r\n   */\r\n  declare imageSmoothing: boolean;\r\n\r\n  declare preserveAspectRatio: string;\r\n\r\n  protected declare src: string;\r\n\r\n  declare filters: BaseFilter<string, Record<string, any>>[];\r\n  declare resizeFilter: Resize;\r\n\r\n  declare _element: ImageSource;\r\n  declare _filteredEl?: HTMLCanvasElement;\r\n  declare _originalElement: ImageSource;\r\n\r\n  static type = 'Image';\r\n\r\n  static cacheProperties = [...cacheProperties, ...IMAGE_PROPS];\r\n\r\n  static ownDefaults = imageDefaultValues;\r\n\r\n  static getDefaults(): Record<string, any> {\r\n    return {\r\n      ...super.getDefaults(),\r\n      ...FabricImage.ownDefaults,\r\n    };\r\n  }\r\n  /**\r\n   * Constructor\r\n   * Image can be initialized with any canvas drawable or a string.\r\n   * The string should be a url and will be loaded as an image.\r\n   * Canvas and Image element work out of the box, while videos require extra code to work.\r\n   * Please check video element events for seeking.\r\n   * @param {ImageSource | string} element Image element\r\n   * @param {Object} [options] Options object\r\n   */\r\n  constructor(elementId: string, options?: Props);\r\n  constructor(element: ImageSource, options?: Props);\r\n  constructor(arg0: ImageSource | string, options?: Props) {\r\n    super();\r\n    this.filters = [];\r\n    Object.assign(this, FabricImage.ownDefaults);\r\n    this.setOptions(options);\r\n    this.cacheKey = `texture${uid()}`;\r\n    this.setElement(\r\n      typeof arg0 === 'string'\r\n        ? ((\r\n            (this.canvas && getDocumentFromElement(this.canvas.getElement())) ||\r\n            getFabricDocument()\r\n          ).getElementById(arg0) as ImageSource)\r\n        : arg0,\r\n      options\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Returns image element which this instance if based on\r\n   */\r\n  getElement() {\r\n    return this._element;\r\n  }\r\n\r\n  /**\r\n   * Sets image element for this instance to a specified one.\r\n   * If filters defined they are applied to new image.\r\n   * You might need to call `canvas.renderAll` and `object.setCoords` after replacing, to render new image and update controls area.\r\n   * @param {HTMLImageElement} element\r\n   * @param {Partial<TSize>} [size] Options object\r\n   */\r\n  setElement(element: ImageSource, size: Partial<TSize> = {}) {\r\n    this.removeTexture(this.cacheKey);\r\n    this.removeTexture(`${this.cacheKey}_filtered`);\r\n    this._element = element;\r\n    this._originalElement = element;\r\n    this._setWidthHeight(size);\r\n    element.classList.add(FabricImage.CSS_CANVAS);\r\n    if (this.filters.length !== 0) {\r\n      this.applyFilters();\r\n    }\r\n    // resizeFilters work on the already filtered copy.\r\n    // we need to apply resizeFilters AFTER normal filters.\r\n    // applyResizeFilters is run more often than normal filters\r\n    // and is triggered by user interactions rather than dev code\r\n    if (this.resizeFilter) {\r\n      this.applyResizeFilters();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Delete a single texture if in webgl mode\r\n   */\r\n  removeTexture(key: string) {\r\n    const backend = getFilterBackend(false);\r\n    if (backend instanceof WebGLFilterBackend) {\r\n      backend.evictCachesForKey(key);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Delete textures, reference to elements and eventually JSDOM cleanup\r\n   */\r\n  dispose() {\r\n    super.dispose();\r\n    this.removeTexture(this.cacheKey);\r\n    this.removeTexture(`${this.cacheKey}_filtered`);\r\n    this._cacheContext = null;\r\n    (\r\n      ['_originalElement', '_element', '_filteredEl', '_cacheCanvas'] as const\r\n    ).forEach((elementKey) => {\r\n      const el = this[elementKey];\r\n      el && getEnv().dispose(el);\r\n      // @ts-expect-error disposing\r\n      this[elementKey] = undefined;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get the crossOrigin value (of the corresponding image element)\r\n   */\r\n  getCrossOrigin(): string | null {\r\n    return (\r\n      this._originalElement &&\r\n      ((this._originalElement as any).crossOrigin || null)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Returns original size of an image\r\n   */\r\n  getOriginalSize() {\r\n    const element = this.getElement() as any;\r\n    if (!element) {\r\n      return {\r\n        width: 0,\r\n        height: 0,\r\n      };\r\n    }\r\n    return {\r\n      width: element.naturalWidth || element.width,\r\n      height: element.naturalHeight || element.height,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {CanvasRenderingContext2D} ctx Context to render on\r\n   */\r\n  _stroke(ctx: CanvasRenderingContext2D) {\r\n    if (!this.stroke || this.strokeWidth === 0) {\r\n      return;\r\n    }\r\n    const w = this.width / 2,\r\n      h = this.height / 2;\r\n    ctx.beginPath();\r\n    ctx.moveTo(-w, -h);\r\n    ctx.lineTo(w, -h);\r\n    ctx.lineTo(w, h);\r\n    ctx.lineTo(-w, h);\r\n    ctx.lineTo(-w, -h);\r\n    ctx.closePath();\r\n  }\r\n\r\n  /**\r\n   * Returns object representation of an instance\r\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\r\n   * @return {Object} Object representation of an instance\r\n   */\r\n  toObject<\r\n    T extends Omit<Props & TClassProperties<this>, keyof SProps>,\r\n    K extends keyof T = never\r\n  >(propertiesToInclude: K[] = []): Pick<T, K> & SProps {\r\n    const filters: Record<string, any>[] = [];\r\n    this.filters.forEach((filterObj) => {\r\n      filterObj && filters.push(filterObj.toObject());\r\n    });\r\n    return {\r\n      ...super.toObject([...IMAGE_PROPS, ...propertiesToInclude]),\r\n      src: this.getSrc(),\r\n      crossOrigin: this.getCrossOrigin(),\r\n      filters,\r\n      ...(this.resizeFilter\r\n        ? { resizeFilter: this.resizeFilter.toObject() }\r\n        : {}),\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Returns true if an image has crop applied, inspecting values of cropX,cropY,width,height.\r\n   * @return {Boolean}\r\n   */\r\n  hasCrop() {\r\n    return (\r\n      !!this.cropX ||\r\n      !!this.cropY ||\r\n      this.width < this._element.width ||\r\n      this.height < this._element.height\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Returns svg representation of an instance\r\n   * @return {string[]} an array of strings with the specific svg representation\r\n   * of the instance\r\n   */\r\n  _toSVG() {\r\n    const imageMarkup: string[] = [],\r\n      element = this._element,\r\n      x = -this.width / 2,\r\n      y = -this.height / 2;\r\n    let svgString: string[] = [],\r\n      strokeSvg: string[] = [],\r\n      clipPath = '',\r\n      imageRendering = '';\r\n    if (!element) {\r\n      return [];\r\n    }\r\n    if (this.hasCrop()) {\r\n      const clipPathId = uid();\r\n      svgString.push(\r\n        '<clipPath id=\"imageCrop_' + clipPathId + '\">\\n',\r\n        '\\t<rect x=\"' +\r\n          x +\r\n          '\" y=\"' +\r\n          y +\r\n          '\" width=\"' +\r\n          this.width +\r\n          '\" height=\"' +\r\n          this.height +\r\n          '\" />\\n',\r\n        '</clipPath>\\n'\r\n      );\r\n      clipPath = ' clip-path=\"url(#imageCrop_' + clipPathId + ')\" ';\r\n    }\r\n    if (!this.imageSmoothing) {\r\n      imageRendering = ' image-rendering=\"optimizeSpeed\"';\r\n    }\r\n    imageMarkup.push(\r\n      '\\t<image ',\r\n      'COMMON_PARTS',\r\n      `xlink:href=\"${this.getSvgSrc(true)}\" x=\"${x - this.cropX}\" y=\"${\r\n        y - this.cropY\r\n        // we're essentially moving origin of transformation from top/left corner to the center of the shape\r\n        // by wrapping it in container <g> element with actual transformation, then offsetting object to the top/left\r\n        // so that object's center aligns with container's left/top\r\n      }\" width=\"${\r\n        element.width || (element as HTMLImageElement).naturalWidth\r\n      }\" height=\"${\r\n        element.height || (element as HTMLImageElement).naturalHeight\r\n      }\"${imageRendering}${clipPath}></image>\\n`\r\n    );\r\n\r\n    if (this.stroke || this.strokeDashArray) {\r\n      const origFill = this.fill;\r\n      this.fill = null;\r\n      strokeSvg = [\r\n        `\\t<rect x=\"${x}\" y=\"${y}\" width=\"${this.width}\" height=\"${\r\n          this.height\r\n        }\" style=\"${this.getSvgStyles()}\" />\\n`,\r\n      ];\r\n      this.fill = origFill;\r\n    }\r\n    if (this.paintFirst !== FILL) {\r\n      svgString = svgString.concat(strokeSvg, imageMarkup);\r\n    } else {\r\n      svgString = svgString.concat(imageMarkup, strokeSvg);\r\n    }\r\n    return svgString;\r\n  }\r\n\r\n  /**\r\n   * Returns source of an image\r\n   * @param {Boolean} filtered indicates if the src is needed for svg\r\n   * @return {String} Source of an image\r\n   */\r\n  getSrc(filtered?: boolean): string {\r\n    const element = filtered ? this._element : this._originalElement;\r\n    if (element) {\r\n      if ((element as HTMLCanvasElement).toDataURL) {\r\n        return (element as HTMLCanvasElement).toDataURL();\r\n      }\r\n\r\n      if (this.srcFromAttribute) {\r\n        return element.getAttribute('src') || '';\r\n      } else {\r\n        return (element as HTMLImageElement).src;\r\n      }\r\n    } else {\r\n      return this.src || '';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Alias for getSrc\r\n   * @param filtered\r\n   * @deprecated\r\n   */\r\n  getSvgSrc(filtered?: boolean) {\r\n    return this.getSrc(filtered);\r\n  }\r\n\r\n  /**\r\n   * Loads and sets source of an image\\\r\n   * **IMPORTANT**: It is recommended to abort loading tasks before calling this method to prevent race conditions and unnecessary networking\r\n   * @param {String} src Source string (URL)\r\n   * @param {LoadImageOptions} [options] Options object\r\n   */\r\n  setSrc(src: string, { crossOrigin, signal }: LoadImageOptions = {}) {\r\n    return loadImage(src, { crossOrigin, signal }).then((img) => {\r\n      typeof crossOrigin !== 'undefined' && this.set({ crossOrigin });\r\n      this.setElement(img);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Returns string representation of an instance\r\n   * @return {String} String representation of an instance\r\n   */\r\n  toString() {\r\n    return `#<Image: { src: \"${this.getSrc()}\" }>`;\r\n  }\r\n\r\n  applyResizeFilters() {\r\n    const filter = this.resizeFilter,\r\n      minimumScale = this.minimumScaleTrigger,\r\n      objectScale = this.getTotalObjectScaling(),\r\n      scaleX = objectScale.x,\r\n      scaleY = objectScale.y,\r\n      elementToFilter = this._filteredEl || this._originalElement;\r\n    if (this.group) {\r\n      this.set('dirty', true);\r\n    }\r\n    if (!filter || (scaleX > minimumScale && scaleY > minimumScale)) {\r\n      this._element = elementToFilter;\r\n      this._filterScalingX = 1;\r\n      this._filterScalingY = 1;\r\n      this._lastScaleX = scaleX;\r\n      this._lastScaleY = scaleY;\r\n      return;\r\n    }\r\n    const canvasEl = createCanvasElement(),\r\n      sourceWidth = elementToFilter.width,\r\n      sourceHeight = elementToFilter.height;\r\n    canvasEl.width = sourceWidth;\r\n    canvasEl.height = sourceHeight;\r\n    this._element = canvasEl;\r\n    this._lastScaleX = filter.scaleX = scaleX;\r\n    this._lastScaleY = filter.scaleY = scaleY;\r\n    getFilterBackend().applyFilters(\r\n      [filter],\r\n      elementToFilter,\r\n      sourceWidth,\r\n      sourceHeight,\r\n      this._element\r\n    );\r\n    this._filterScalingX = canvasEl.width / this._originalElement.width;\r\n    this._filterScalingY = canvasEl.height / this._originalElement.height;\r\n  }\r\n\r\n  /**\r\n   * Applies filters assigned to this image (from \"filters\" array) or from filter param\r\n   * @method applyFilters\r\n   * @param {Array} filters to be applied\r\n   * @param {Boolean} forResizing specify if the filter operation is a resize operation\r\n   */\r\n  applyFilters(\r\n    filters: BaseFilter<string, Record<string, any>>[] = this.filters || []\r\n  ) {\r\n    filters = filters.filter((filter) => filter && !filter.isNeutralState());\r\n    this.set('dirty', true);\r\n\r\n    // needs to clear out or WEBGL will not resize correctly\r\n    this.removeTexture(`${this.cacheKey}_filtered`);\r\n\r\n    if (filters.length === 0) {\r\n      this._element = this._originalElement;\r\n      // this is unsafe and needs to be rethinkend\r\n      this._filteredEl = undefined;\r\n      this._filterScalingX = 1;\r\n      this._filterScalingY = 1;\r\n      return;\r\n    }\r\n\r\n    const imgElement = this._originalElement,\r\n      sourceWidth =\r\n        (imgElement as HTMLImageElement).naturalWidth || imgElement.width,\r\n      sourceHeight =\r\n        (imgElement as HTMLImageElement).naturalHeight || imgElement.height;\r\n\r\n    if (this._element === this._originalElement) {\r\n      // if the _element a reference to _originalElement\r\n      // we need to create a new element to host the filtered pixels\r\n      const canvasEl = createCanvasElement();\r\n      canvasEl.width = sourceWidth;\r\n      canvasEl.height = sourceHeight;\r\n      this._element = canvasEl;\r\n      this._filteredEl = canvasEl;\r\n    } else if (this._filteredEl) {\r\n      // if the _element is it own element,\r\n      // and we also have a _filteredEl, then we clean up _filteredEl\r\n      // and we assign it to _element.\r\n      // in this way we invalidate the eventual old resize filtered element\r\n      this._element = this._filteredEl;\r\n      this._filteredEl\r\n        .getContext('2d')!\r\n        .clearRect(0, 0, sourceWidth, sourceHeight);\r\n      // we also need to resize again at next renderAll, so remove saved _lastScaleX/Y\r\n      this._lastScaleX = 1;\r\n      this._lastScaleY = 1;\r\n    }\r\n    getFilterBackend().applyFilters(\r\n      filters,\r\n      this._originalElement,\r\n      sourceWidth,\r\n      sourceHeight,\r\n      this._element as HTMLCanvasElement\r\n    );\r\n    if (\r\n      this._originalElement.width !== this._element.width ||\r\n      this._originalElement.height !== this._element.height\r\n    ) {\r\n      this._filterScalingX = this._element.width / this._originalElement.width;\r\n      this._filterScalingY =\r\n        this._element.height / this._originalElement.height;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {CanvasRenderingContext2D} ctx Context to render on\r\n   */\r\n  _render(ctx: CanvasRenderingContext2D) {\r\n    ctx.imageSmoothingEnabled = this.imageSmoothing;\r\n    if (this.isMoving !== true && this.resizeFilter && this._needsResize()) {\r\n      this.applyResizeFilters();\r\n    }\r\n    this._stroke(ctx);\r\n    this._renderPaintInOrder(ctx);\r\n  }\r\n\r\n  /**\r\n   * Paint the cached copy of the object on the target context.\r\n   * it will set the imageSmoothing for the draw operation\r\n   * @param {CanvasRenderingContext2D} ctx Context to render on\r\n   */\r\n  drawCacheOnCanvas(\r\n    this: TCachedFabricObject<FabricImage>,\r\n    ctx: CanvasRenderingContext2D\r\n  ) {\r\n    ctx.imageSmoothingEnabled = this.imageSmoothing;\r\n    // cant use ts-expect-error because of ts 5.3 cross check\r\n    // @ts-ignore TS doesn't respect this type casting\r\n    super.drawCacheOnCanvas(ctx);\r\n  }\r\n\r\n  /**\r\n   * Decide if the object should cache or not. Create its own cache level\r\n   * needsItsOwnCache should be used when the object drawing method requires\r\n   * a cache step. None of the fabric classes requires it.\r\n   * Generally you do not cache objects in groups because the group outside is cached.\r\n   * This is the special image version where we would like to avoid caching where possible.\r\n   * Essentially images do not benefit from caching. They may require caching, and in that\r\n   * case we do it. Also caching an image usually ends in a loss of details.\r\n   * A full performance audit should be done.\r\n   * @return {Boolean}\r\n   */\r\n  shouldCache() {\r\n    return this.needsItsOwnCache();\r\n  }\r\n\r\n  _renderFill(ctx: CanvasRenderingContext2D) {\r\n    const elementToDraw = this._element;\r\n    if (!elementToDraw) {\r\n      return;\r\n    }\r\n    const scaleX = this._filterScalingX,\r\n      scaleY = this._filterScalingY,\r\n      w = this.width,\r\n      h = this.height,\r\n      // crop values cannot be lesser than 0.\r\n      cropX = Math.max(this.cropX, 0),\r\n      cropY = Math.max(this.cropY, 0),\r\n      elWidth =\r\n        (elementToDraw as HTMLImageElement).naturalWidth || elementToDraw.width,\r\n      elHeight =\r\n        (elementToDraw as HTMLImageElement).naturalHeight ||\r\n        elementToDraw.height,\r\n      sX = cropX * scaleX,\r\n      sY = cropY * scaleY,\r\n      // the width height cannot exceed element width/height, starting from the crop offset.\r\n      sW = Math.min(w * scaleX, elWidth - sX),\r\n      sH = Math.min(h * scaleY, elHeight - sY),\r\n      x = -w / 2,\r\n      y = -h / 2,\r\n      maxDestW = Math.min(w, elWidth / scaleX - cropX),\r\n      maxDestH = Math.min(h, elHeight / scaleY - cropY);\r\n\r\n    elementToDraw &&\r\n      ctx.drawImage(elementToDraw, sX, sY, sW, sH, x, y, maxDestW, maxDestH);\r\n  }\r\n\r\n  /**\r\n   * needed to check if image needs resize\r\n   * @private\r\n   */\r\n  _needsResize() {\r\n    const scale = this.getTotalObjectScaling();\r\n    return scale.x !== this._lastScaleX || scale.y !== this._lastScaleY;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @deprecated unused\r\n   */\r\n  _resetWidthHeight() {\r\n    this.set(this.getOriginalSize());\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * Set the width and the height of the image object, using the element or the\r\n   * options.\r\n   */\r\n  _setWidthHeight({ width, height }: Partial<TSize> = {}) {\r\n    const size = this.getOriginalSize();\r\n    this.width = width || size.width;\r\n    this.height = height || size.height;\r\n  }\r\n\r\n  /**\r\n   * Calculate offset for center and scale factor for the image in order to respect\r\n   * the preserveAspectRatio attribute\r\n   * @private\r\n   */\r\n  parsePreserveAspectRatioAttribute() {\r\n    const pAR = parsePreserveAspectRatioAttribute(\r\n        this.preserveAspectRatio || ''\r\n      ),\r\n      pWidth = this.width,\r\n      pHeight = this.height,\r\n      parsedAttributes = { width: pWidth, height: pHeight };\r\n    let rWidth = this._element.width,\r\n      rHeight = this._element.height,\r\n      scaleX = 1,\r\n      scaleY = 1,\r\n      offsetLeft = 0,\r\n      offsetTop = 0,\r\n      cropX = 0,\r\n      cropY = 0,\r\n      offset;\r\n\r\n    if (pAR && (pAR.alignX !== NONE || pAR.alignY !== NONE)) {\r\n      if (pAR.meetOrSlice === 'meet') {\r\n        scaleX = scaleY = findScaleToFit(this._element, parsedAttributes);\r\n        offset = (pWidth - rWidth * scaleX) / 2;\r\n        if (pAR.alignX === 'Min') {\r\n          offsetLeft = -offset;\r\n        }\r\n        if (pAR.alignX === 'Max') {\r\n          offsetLeft = offset;\r\n        }\r\n        offset = (pHeight - rHeight * scaleY) / 2;\r\n        if (pAR.alignY === 'Min') {\r\n          offsetTop = -offset;\r\n        }\r\n        if (pAR.alignY === 'Max') {\r\n          offsetTop = offset;\r\n        }\r\n      }\r\n      if (pAR.meetOrSlice === 'slice') {\r\n        scaleX = scaleY = findScaleToCover(this._element, parsedAttributes);\r\n        offset = rWidth - pWidth / scaleX;\r\n        if (pAR.alignX === 'Mid') {\r\n          cropX = offset / 2;\r\n        }\r\n        if (pAR.alignX === 'Max') {\r\n          cropX = offset;\r\n        }\r\n        offset = rHeight - pHeight / scaleY;\r\n        if (pAR.alignY === 'Mid') {\r\n          cropY = offset / 2;\r\n        }\r\n        if (pAR.alignY === 'Max') {\r\n          cropY = offset;\r\n        }\r\n        rWidth = pWidth / scaleX;\r\n        rHeight = pHeight / scaleY;\r\n      }\r\n    } else {\r\n      scaleX = pWidth / rWidth;\r\n      scaleY = pHeight / rHeight;\r\n    }\r\n    return {\r\n      width: rWidth,\r\n      height: rHeight,\r\n      scaleX,\r\n      scaleY,\r\n      offsetLeft,\r\n      offsetTop,\r\n      cropX,\r\n      cropY,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Default CSS class name for canvas\r\n   * @static\r\n   * @type String\r\n   * @default\r\n   */\r\n  static CSS_CANVAS = 'canvas-img';\r\n\r\n  /**\r\n   * List of attribute names to account for when parsing SVG element (used by {@link FabricImage.fromElement})\r\n   * @static\r\n   * @see {@link http://www.w3.org/TR/SVG/struct.html#ImageElement}\r\n   */\r\n  static ATTRIBUTE_NAMES = [\r\n    ...SHARED_ATTRIBUTES,\r\n    'x',\r\n    'y',\r\n    'width',\r\n    'height',\r\n    'preserveAspectRatio',\r\n    'xlink:href',\r\n    'crossOrigin',\r\n    'image-rendering',\r\n  ];\r\n\r\n  /**\r\n   * Creates an instance of FabricImage from its object representation\r\n   * @static\r\n   * @param {Object} object Object to create an instance from\r\n   * @param {object} [options] Options object\r\n   * @param {AbortSignal} [options.signal] handle aborting, see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\r\n   * @returns {Promise<FabricImage>}\r\n   */\r\n  static fromObject<T extends TOptions<SerializedImageProps>>(\r\n    { filters: f, resizeFilter: rf, src, crossOrigin, type, ...object }: T,\r\n    options?: Abortable\r\n  ) {\r\n    return Promise.all([\r\n      loadImage(src!, { ...options, crossOrigin }),\r\n      f && enlivenObjects<BaseFilter<string>>(f, options),\r\n      // TODO: redundant - handled by enlivenObjectEnlivables\r\n      rf && enlivenObjects<BaseFilter<'Resize'>>([rf], options),\r\n      enlivenObjectEnlivables(object, options),\r\n    ]).then(([el, filters = [], [resizeFilter] = [], hydratedProps = {}]) => {\r\n      return new this(el, {\r\n        ...object,\r\n        // TODO: this creates a difference between image creation and restoring from JSON\r\n        src,\r\n        filters,\r\n        resizeFilter,\r\n        ...hydratedProps,\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Creates an instance of Image from an URL string\r\n   * @static\r\n   * @param {String} url URL to create an image from\r\n   * @param {LoadImageOptions} [options] Options object\r\n   * @returns {Promise<FabricImage>}\r\n   */\r\n  static fromURL<T extends TOptions<ImageProps>>(\r\n    url: string,\r\n    { crossOrigin = null, signal }: LoadImageOptions = {},\r\n    imageOptions?: T\r\n  ): Promise<FabricImage> {\r\n    return loadImage(url, { crossOrigin, signal }).then(\r\n      (img) => new this(img, imageOptions)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Returns {@link FabricImage} instance from an SVG element\r\n   * @static\r\n   * @param {HTMLElement} element Element to parse\r\n   * @param {Object} [options] Options object\r\n   * @param {AbortSignal} [options.signal] handle aborting, see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\r\n   * @param {Function} callback Callback to execute when Image object is created\r\n   */\r\n  static async fromElement(\r\n    element: HTMLElement,\r\n    options: Abortable = {},\r\n    cssRules?: CSSRules\r\n  ) {\r\n    const parsedAttributes = parseAttributes(\r\n      element,\r\n      this.ATTRIBUTE_NAMES,\r\n      cssRules\r\n    );\r\n    return this.fromURL(\r\n      parsedAttributes['xlink:href'],\r\n      options,\r\n      parsedAttributes\r\n    ).catch((err) => {\r\n      log('log', 'Unable to parse Image', err);\r\n      return null;\r\n    });\r\n  }\r\n}\r\n\r\nclassRegistry.setClass(FabricImage);\r\nclassRegistry.setSVGClass(FabricImage);\r\n","import { svgNS } from './constants';\r\nimport {\r\n  parsePreserveAspectRatioAttribute,\r\n  parseUnit,\r\n} from '../util/misc/svgParsing';\r\nimport { svgViewBoxElementsRegEx, reViewBoxAttrValue } from './constants';\r\nimport { NONE } from '../constants';\r\n\r\nexport type ParsedViewboxTransform = Partial<{\r\n  width: number;\r\n  height: number;\r\n  minX: number;\r\n  minY: number;\r\n  viewBoxWidth: number;\r\n  viewBoxHeight: number;\r\n}>;\r\n\r\n/**\r\n * Add a <g> element that envelop all child elements and makes the viewbox transformMatrix descend on all elements\r\n */\r\nexport function applyViewboxTransform(\r\n  element: Element\r\n): ParsedViewboxTransform {\r\n  if (!svgViewBoxElementsRegEx.test(element.nodeName)) {\r\n    return {};\r\n  }\r\n  const viewBoxAttr: string | null = element.getAttribute('viewBox');\r\n  let scaleX = 1;\r\n  let scaleY = 1;\r\n  let minX = 0;\r\n  let minY = 0;\r\n  let matrix;\r\n  let el;\r\n  const widthAttr = element.getAttribute('width');\r\n  const heightAttr = element.getAttribute('height');\r\n  const x = element.getAttribute('x') || 0;\r\n  const y = element.getAttribute('y') || 0;\r\n  const goodViewbox = viewBoxAttr && reViewBoxAttrValue.test(viewBoxAttr);\r\n  const missingViewBox = !goodViewbox;\r\n  const missingDimAttr =\r\n    !widthAttr || !heightAttr || widthAttr === '100%' || heightAttr === '100%';\r\n\r\n  let translateMatrix = '';\r\n  let widthDiff = 0;\r\n  let heightDiff = 0;\r\n\r\n  if (missingViewBox) {\r\n    if (\r\n      (x || y) &&\r\n      element.parentNode &&\r\n      element.parentNode.nodeName !== '#document'\r\n    ) {\r\n      translateMatrix =\r\n        ' translate(' + parseUnit(x || '0') + ' ' + parseUnit(y || '0') + ') ';\r\n      matrix = (element.getAttribute('transform') || '') + translateMatrix;\r\n      element.setAttribute('transform', matrix);\r\n      element.removeAttribute('x');\r\n      element.removeAttribute('y');\r\n    }\r\n  }\r\n\r\n  if (missingViewBox && missingDimAttr) {\r\n    return {\r\n      width: 0,\r\n      height: 0,\r\n    };\r\n  }\r\n\r\n  const parsedDim: ParsedViewboxTransform = {\r\n    width: 0,\r\n    height: 0,\r\n  };\r\n\r\n  if (missingViewBox) {\r\n    parsedDim.width = parseUnit(widthAttr!);\r\n    parsedDim.height = parseUnit(heightAttr!);\r\n    // set a transform for elements that have x y and are inner(only) SVGs\r\n    return parsedDim;\r\n  }\r\n\r\n  const pasedViewBox = viewBoxAttr.match(reViewBoxAttrValue)!;\r\n  minX = -parseFloat(pasedViewBox[1]);\r\n  minY = -parseFloat(pasedViewBox[2]);\r\n  const viewBoxWidth = parseFloat(pasedViewBox[3]);\r\n  const viewBoxHeight = parseFloat(pasedViewBox[4]);\r\n  parsedDim.minX = minX;\r\n  parsedDim.minY = minY;\r\n  parsedDim.viewBoxWidth = viewBoxWidth;\r\n  parsedDim.viewBoxHeight = viewBoxHeight;\r\n  if (!missingDimAttr) {\r\n    parsedDim.width = parseUnit(widthAttr);\r\n    parsedDim.height = parseUnit(heightAttr);\r\n    scaleX = parsedDim.width / viewBoxWidth;\r\n    scaleY = parsedDim.height / viewBoxHeight;\r\n  } else {\r\n    parsedDim.width = viewBoxWidth;\r\n    parsedDim.height = viewBoxHeight;\r\n  }\r\n\r\n  // default is to preserve aspect ratio\r\n  const preserveAspectRatio = parsePreserveAspectRatioAttribute(\r\n    element.getAttribute('preserveAspectRatio') || ''\r\n  );\r\n  if (preserveAspectRatio.alignX !== NONE) {\r\n    //translate all container for the effect of Mid, Min, Max\r\n    if (preserveAspectRatio.meetOrSlice === 'meet') {\r\n      scaleY = scaleX = scaleX > scaleY ? scaleY : scaleX;\r\n      // calculate additional translation to move the viewbox\r\n    }\r\n    if (preserveAspectRatio.meetOrSlice === 'slice') {\r\n      scaleY = scaleX = scaleX > scaleY ? scaleX : scaleY;\r\n      // calculate additional translation to move the viewbox\r\n    }\r\n    widthDiff = parsedDim.width - viewBoxWidth * scaleX;\r\n    heightDiff = parsedDim.height - viewBoxHeight * scaleX;\r\n    if (preserveAspectRatio.alignX === 'Mid') {\r\n      widthDiff /= 2;\r\n    }\r\n    if (preserveAspectRatio.alignY === 'Mid') {\r\n      heightDiff /= 2;\r\n    }\r\n    if (preserveAspectRatio.alignX === 'Min') {\r\n      widthDiff = 0;\r\n    }\r\n    if (preserveAspectRatio.alignY === 'Min') {\r\n      heightDiff = 0;\r\n    }\r\n  }\r\n\r\n  if (\r\n    scaleX === 1 &&\r\n    scaleY === 1 &&\r\n    minX === 0 &&\r\n    minY === 0 &&\r\n    x === 0 &&\r\n    y === 0\r\n  ) {\r\n    return parsedDim;\r\n  }\r\n  if ((x || y) && element.parentNode!.nodeName !== '#document') {\r\n    translateMatrix =\r\n      ' translate(' + parseUnit(x || '0') + ' ' + parseUnit(y || '0') + ') ';\r\n  }\r\n\r\n  matrix =\r\n    translateMatrix +\r\n    ' matrix(' +\r\n    scaleX +\r\n    ' 0' +\r\n    ' 0 ' +\r\n    scaleY +\r\n    ' ' +\r\n    (minX * scaleX + widthDiff) +\r\n    ' ' +\r\n    (minY * scaleY + heightDiff) +\r\n    ') ';\r\n  // seems unused.\r\n  // parsedDim.viewboxTransform = parseTransformAttribute(matrix);\r\n  if (element.nodeName === 'svg') {\r\n    el = element.ownerDocument.createElementNS(svgNS, 'g');\r\n    // element.firstChild != null\r\n    while (element.firstChild) {\r\n      el.appendChild(element.firstChild);\r\n    }\r\n    element.appendChild(el);\r\n  } else {\r\n    el = element;\r\n    el.removeAttribute('x');\r\n    el.removeAttribute('y');\r\n    matrix = el.getAttribute('transform') + matrix;\r\n  }\r\n  el.setAttribute('transform', matrix);\r\n  return parsedDim;\r\n}\r\n","export const getTagName = (node: Element) => node.tagName.replace('svg:', '');\r\n","import { svgInvalidAncestors } from './constants';\r\nimport { getSvgRegex } from './getSvgRegex';\r\nimport { getTagName } from './getTagName';\r\n\r\nconst svgInvalidAncestorsRegEx = getSvgRegex(svgInvalidAncestors);\r\n\r\nexport function hasInvalidAncestor(element: Element) {\r\n  let _element: Element | null = element;\r\n  while (_element && (_element = _element.parentElement)) {\r\n    if (\r\n      _element &&\r\n      _element.nodeName &&\r\n      svgInvalidAncestorsRegEx.test(getTagName(_element)) &&\r\n      !_element.getAttribute('instantiated_by_use')\r\n    ) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n","export function getMultipleNodes(\r\n  doc: Document,\r\n  nodeNames: string[]\r\n): Element[] {\r\n  let nodeName,\r\n    nodeArray: Element[] = [],\r\n    nodeList,\r\n    i,\r\n    len;\r\n  for (i = 0, len = nodeNames.length; i < len; i++) {\r\n    nodeName = nodeNames[i];\r\n    nodeList = doc.getElementsByTagNameNS(\r\n      'http://www.w3.org/2000/svg',\r\n      nodeName\r\n    );\r\n    nodeArray = nodeArray.concat(Array.from(nodeList));\r\n  }\r\n  return nodeArray;\r\n}\r\n","const gradientsAttrs = [\r\n  'gradientTransform',\r\n  'x1',\r\n  'x2',\r\n  'y1',\r\n  'y2',\r\n  'gradientUnits',\r\n  'cx',\r\n  'cy',\r\n  'r',\r\n  'fx',\r\n  'fy',\r\n];\r\nconst xlinkAttr = 'xlink:href';\r\n\r\nexport function recursivelyParseGradientsXlink(\r\n  doc: Document,\r\n  gradient: Element\r\n) {\r\n  const xLink = gradient.getAttribute(xlinkAttr)?.slice(1) || '',\r\n    referencedGradient = doc.getElementById(xLink);\r\n  if (referencedGradient && referencedGradient.getAttribute(xlinkAttr)) {\r\n    recursivelyParseGradientsXlink(doc, referencedGradient as Element);\r\n  }\r\n  if (referencedGradient) {\r\n    gradientsAttrs.forEach((attr) => {\r\n      const value = referencedGradient.getAttribute(attr);\r\n      if (!gradient.hasAttribute(attr) && value) {\r\n        gradient.setAttribute(attr, value);\r\n      }\r\n    });\r\n    if (!gradient.children.length) {\r\n      const referenceClone = referencedGradient.cloneNode(true);\r\n      while (referenceClone.firstChild) {\r\n        gradient.appendChild(referenceClone.firstChild);\r\n      }\r\n    }\r\n  }\r\n  gradient.removeAttribute(xlinkAttr);\r\n}\r\n","import { getMultipleNodes } from './getMultipleNodes';\r\nimport { recursivelyParseGradientsXlink } from './recursivelyParseGradientsXlink';\r\n\r\nconst tagArray = [\r\n  'linearGradient',\r\n  'radialGradient',\r\n  'svg:linearGradient',\r\n  'svg:radialGradient',\r\n];\r\n\r\n/**\r\n * Parses an SVG document, returning all of the gradient declarations found in it\r\n * @param {SVGDocument} doc SVG document to parse\r\n * @return {Object} Gradient definitions; key corresponds to element id, value -- to gradient definition element\r\n */\r\nexport function getGradientDefs(\r\n  doc: Document\r\n): Record<string, SVGGradientElement> {\r\n  const elList = getMultipleNodes(doc, tagArray);\r\n  const gradientDefs: Record<string, SVGGradientElement> = {};\r\n  let j = elList.length;\r\n  while (j--) {\r\n    const el = elList[j];\r\n    if (el.getAttribute('xlink:href')) {\r\n      recursivelyParseGradientsXlink(doc, el);\r\n    }\r\n    const id = el.getAttribute('id');\r\n    if (id) {\r\n      gradientDefs[id] = el as SVGGradientElement;\r\n    }\r\n  }\r\n  return gradientDefs;\r\n}\r\n","import type { CSSRules } from './typedefs';\r\n\r\n/**\r\n * Returns CSS rules for a given SVG document\r\n * @param {HTMLElement} doc SVG document to parse\r\n * @return {Object} CSS rules of this document\r\n */\r\nexport function getCSSRules(doc: Document) {\r\n  const styles = doc.getElementsByTagName('style');\r\n  let i;\r\n  let len;\r\n  const allRules: CSSRules = {};\r\n\r\n  // very crude parsing of style contents\r\n  for (i = 0, len = styles.length; i < len; i++) {\r\n    const styleContents = (styles[i].textContent || '').replace(\r\n      // remove comments\r\n      /\\/\\*[\\s\\S]*?\\*\\//g,\r\n      ''\r\n    );\r\n\r\n    if (styleContents.trim() === '') {\r\n      continue;\r\n    }\r\n    // recovers all the rule in this form `body { style code... }`\r\n    // rules = styleContents.match(/[^{]*\\{[\\s\\S]*?\\}/g);\r\n    styleContents\r\n      .split('}')\r\n      // remove empty rules and remove everything if we didn't split in at least 2 pieces\r\n      .filter((rule, index, array) => array.length > 1 && rule.trim())\r\n      // at this point we have hopefully an array of rules `body { style code... `\r\n      .forEach((rule) => {\r\n        // if there is more than one opening bracket and the rule starts with '@', it is likely\r\n        // a nested at-rule like @media, @supports, @scope, etc. Ignore these as the code below\r\n        // can not handle it.\r\n        if (\r\n          (rule.match(/{/g) || []).length > 1 &&\r\n          rule.trim().startsWith('@')\r\n        ) {\r\n          return;\r\n        }\r\n\r\n        const match = rule.split('{'),\r\n          ruleObj: Record<string, string> = {},\r\n          declaration = match[1].trim(),\r\n          propertyValuePairs = declaration.split(';').filter(function (pair) {\r\n            return pair.trim();\r\n          });\r\n\r\n        for (i = 0, len = propertyValuePairs.length; i < len; i++) {\r\n          const pair = propertyValuePairs[i].split(':'),\r\n            property = pair[0].trim(),\r\n            value = pair[1].trim();\r\n          ruleObj[property] = value;\r\n        }\r\n        rule = match[0].trim();\r\n        rule.split(',').forEach((_rule) => {\r\n          _rule = _rule.replace(/^svg/i, '').trim();\r\n          if (_rule === '') {\r\n            return;\r\n          }\r\n          allRules[_rule] = {\r\n            ...(allRules[_rule] || {}),\r\n            ...ruleObj,\r\n          };\r\n        });\r\n      });\r\n  }\r\n  return allRules;\r\n}\r\n","import { Gradient } from '../gradient/Gradient';\r\nimport { Group } from '../shapes/Group';\r\nimport { FabricImage } from '../shapes/Image';\r\nimport { classRegistry } from '../ClassRegistry';\r\nimport {\r\n  invertTransform,\r\n  multiplyTransformMatrices,\r\n  qrDecompose,\r\n} from '../util/misc/matrix';\r\nimport { removeTransformMatrixForSvgParsing } from '../util/transform_matrix_removal';\r\nimport type { FabricObject } from '../shapes/Object/FabricObject';\r\nimport { Point } from '../Point';\r\nimport { CENTER, FILL, STROKE } from '../constants';\r\nimport { getGradientDefs } from './getGradientDefs';\r\nimport { getCSSRules } from './getCSSRules';\r\nimport type { LoadImageOptions } from '../util';\r\nimport type { CSSRules, TSvgReviverCallback } from './typedefs';\r\nimport type { ParsedViewboxTransform } from './applyViewboxTransform';\r\nimport type { SVGOptions } from '../gradient';\r\nimport { getTagName } from './getTagName';\r\nimport { parseTransformAttribute } from './parseTransformAttribute';\r\n\r\nconst findTag = (el: Element) =>\r\n  classRegistry.getSVGClass(getTagName(el).toLowerCase());\r\n\r\ntype StorageType = {\r\n  fill: SVGGradientElement;\r\n  stroke: SVGGradientElement;\r\n  clipPath: Element[];\r\n};\r\n\r\ntype NotParsedFabricObject = FabricObject & {\r\n  fill: string;\r\n  stroke: string;\r\n  clipPath?: string;\r\n  clipRule?: CanvasFillRule;\r\n};\r\n\r\nexport class ElementsParser {\r\n  declare elements: Element[];\r\n  declare options: LoadImageOptions & ParsedViewboxTransform;\r\n  declare reviver?: TSvgReviverCallback;\r\n  declare regexUrl: RegExp;\r\n  declare doc: Document;\r\n  declare clipPaths: Record<string, Element[]>;\r\n  declare gradientDefs: Record<string, SVGGradientElement>;\r\n  declare cssRules: CSSRules;\r\n\r\n  constructor(\r\n    elements: Element[],\r\n    options: LoadImageOptions & ParsedViewboxTransform,\r\n    reviver: TSvgReviverCallback | undefined,\r\n    doc: Document,\r\n    clipPaths: Record<string, Element[]>\r\n  ) {\r\n    this.elements = elements;\r\n    this.options = options;\r\n    this.reviver = reviver;\r\n    this.regexUrl = /^url\\(['\"]?#([^'\"]+)['\"]?\\)/g;\r\n    this.doc = doc;\r\n    this.clipPaths = clipPaths;\r\n    this.gradientDefs = getGradientDefs(doc);\r\n    this.cssRules = getCSSRules(doc);\r\n  }\r\n\r\n  parse(): Promise<Array<FabricObject | null>> {\r\n    return Promise.all(\r\n      this.elements.map((element) => this.createObject(element))\r\n    );\r\n  }\r\n\r\n  async createObject(el: Element): Promise<FabricObject | null> {\r\n    const klass = findTag(el);\r\n    if (klass) {\r\n      const obj: NotParsedFabricObject = await klass.fromElement(\r\n        el,\r\n        this.options,\r\n        this.cssRules\r\n      );\r\n      this.resolveGradient(obj, el, FILL);\r\n      this.resolveGradient(obj, el, STROKE);\r\n      if (obj instanceof FabricImage && obj._originalElement) {\r\n        removeTransformMatrixForSvgParsing(\r\n          obj,\r\n          obj.parsePreserveAspectRatioAttribute()\r\n        );\r\n      } else {\r\n        removeTransformMatrixForSvgParsing(obj);\r\n      }\r\n      await this.resolveClipPath(obj, el);\r\n      this.reviver && this.reviver(el, obj);\r\n      return obj;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  extractPropertyDefinition(\r\n    obj: NotParsedFabricObject,\r\n    property: 'fill' | 'stroke' | 'clipPath',\r\n    storage: Record<string, StorageType[typeof property]>\r\n  ): StorageType[typeof property] | undefined {\r\n    const value = obj[property]!,\r\n      regex = this.regexUrl;\r\n    if (!regex.test(value)) {\r\n      return undefined;\r\n    }\r\n    // verify: can we remove the 'g' flag? and remove lastIndex changes?\r\n    regex.lastIndex = 0;\r\n    // we passed the regex test, so we know is not null;\r\n    const id = regex.exec(value)![1];\r\n    regex.lastIndex = 0;\r\n    // @todo fix this\r\n    return storage[id];\r\n  }\r\n\r\n  resolveGradient(\r\n    obj: NotParsedFabricObject,\r\n    el: Element,\r\n    property: 'fill' | 'stroke'\r\n  ) {\r\n    const gradientDef = this.extractPropertyDefinition(\r\n      obj,\r\n      property,\r\n      this.gradientDefs\r\n    ) as SVGGradientElement;\r\n    if (gradientDef) {\r\n      const opacityAttr = el.getAttribute(property + '-opacity');\r\n      const gradient = Gradient.fromElement(gradientDef, obj, {\r\n        ...this.options,\r\n        opacity: opacityAttr,\r\n      } as SVGOptions);\r\n      obj.set(property, gradient);\r\n    }\r\n  }\r\n\r\n  // TODO: resolveClipPath could be run once per clippath with minor work per object.\r\n  // is a refactor that i m not sure is worth on this code\r\n  async resolveClipPath(obj: NotParsedFabricObject, usingElement: Element) {\r\n    const clipPathElements = this.extractPropertyDefinition(\r\n      obj,\r\n      'clipPath',\r\n      this.clipPaths\r\n    ) as Element[];\r\n    if (clipPathElements) {\r\n      const objTransformInv = invertTransform(obj.calcTransformMatrix());\r\n      const clipPathTag = clipPathElements[0].parentElement!;\r\n      let clipPathOwner = usingElement;\r\n      while (\r\n        clipPathOwner.parentElement &&\r\n        clipPathOwner.getAttribute('clip-path') !== obj.clipPath\r\n      ) {\r\n        clipPathOwner = clipPathOwner.parentElement;\r\n      }\r\n      // move the clipPath tag as sibling to the real element that is using it\r\n      clipPathOwner.parentElement!.appendChild(clipPathTag!);\r\n\r\n      // this multiplication order could be opposite.\r\n      // but i don't have an svg to test it\r\n      // at the first SVG that has a transform on both places and is misplaced\r\n      // try to invert this multiplication order\r\n      const finalTransform = parseTransformAttribute(\r\n        `${clipPathOwner.getAttribute('transform') || ''} ${\r\n          clipPathTag.getAttribute('originalTransform') || ''\r\n        }`\r\n      );\r\n\r\n      clipPathTag.setAttribute(\r\n        'transform',\r\n        `matrix(${finalTransform.join(',')})`\r\n      );\r\n\r\n      const container = await Promise.all(\r\n        clipPathElements.map((clipPathElement) => {\r\n          return findTag(clipPathElement)\r\n            .fromElement(clipPathElement, this.options, this.cssRules)\r\n            .then((enlivedClippath: NotParsedFabricObject) => {\r\n              removeTransformMatrixForSvgParsing(enlivedClippath);\r\n              enlivedClippath.fillRule = enlivedClippath.clipRule!;\r\n              delete enlivedClippath.clipRule;\r\n              return enlivedClippath;\r\n            });\r\n        })\r\n      );\r\n      const clipPath =\r\n        container.length === 1 ? container[0] : new Group(container);\r\n      const gTransform = multiplyTransformMatrices(\r\n        objTransformInv,\r\n        clipPath.calcTransformMatrix()\r\n      );\r\n      if (clipPath.clipPath) {\r\n        await this.resolveClipPath(clipPath, clipPathOwner);\r\n      }\r\n      const { scaleX, scaleY, angle, skewX, translateX, translateY } =\r\n        qrDecompose(gTransform);\r\n      clipPath.set({\r\n        flipX: false,\r\n        flipY: false,\r\n      });\r\n      clipPath.set({\r\n        scaleX,\r\n        scaleY,\r\n        angle,\r\n        skewX,\r\n        skewY: 0,\r\n      });\r\n      clipPath.setPositionByOrigin(\r\n        new Point(translateX, translateY),\r\n        CENTER,\r\n        CENTER\r\n      );\r\n      obj.clipPath = clipPath;\r\n    } else {\r\n      // if clip-path does not resolve to any element, delete the property.\r\n      delete obj.clipPath;\r\n      return;\r\n    }\r\n  }\r\n}\r\n","import { applyViewboxTransform } from './applyViewboxTransform';\r\nimport { svgValidTagNamesRegEx } from './constants';\r\nimport { hasInvalidAncestor } from './hasInvalidAncestor';\r\nimport { parseUseDirectives } from './parseUseDirectives';\r\nimport type { SVGParsingOutput, TSvgReviverCallback } from './typedefs';\r\nimport type { LoadImageOptions } from '../util/misc/objectEnlive';\r\nimport { ElementsParser } from './elements_parser';\r\nimport { log, SignalAbortedError } from '../util/internals/console';\r\nimport { getTagName } from './getTagName';\r\n\r\nconst isValidSvgTag = (el: Element) =>\r\n  svgValidTagNamesRegEx.test(getTagName(el));\r\n\r\nexport const createEmptyResponse = (): SVGParsingOutput => ({\r\n  objects: [],\r\n  elements: [],\r\n  options: {},\r\n  allElements: [],\r\n});\r\n\r\n/**\r\n * Parses an SVG document, converts it to an array of corresponding fabric.* instances and passes them to a callback\r\n * @static\r\n * @function\r\n * @memberOf fabric\r\n * @param {HTMLElement} doc SVG document to parse\r\n * @param {TSvgParsedCallback} callback Invoked when the parsing is done, with null if parsing wasn't possible with the list of svg nodes.\r\n * @param {TSvgReviverCallback} [reviver] Extra callback for further parsing of SVG elements, called after each fabric object has been created.\r\n * Takes as input the original svg element and the generated `FabricObject` as arguments. Used to inspect extra properties not parsed by fabric,\r\n * or extra custom manipulation\r\n * @param {Object} [options] Object containing options for parsing\r\n * @param {String} [options.crossOrigin] crossOrigin setting to use for external resources\r\n * @param {AbortSignal} [options.signal] handle aborting, see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\r\n * @return {SVGParsingOutput}\r\n * {@link SVGParsingOutput} also receives `allElements` array as the last argument. This is the full list of svg nodes available in the document.\r\n * You may want to use it if you are trying to regroup the objects as they were originally grouped in the SVG. ( This was the reason why it was added )\r\n */\r\nexport async function parseSVGDocument(\r\n  doc: Document,\r\n  reviver?: TSvgReviverCallback,\r\n  { crossOrigin, signal }: LoadImageOptions = {}\r\n): Promise<SVGParsingOutput> {\r\n  if (signal && signal.aborted) {\r\n    log('log', new SignalAbortedError('parseSVGDocument'));\r\n    // this is an unhappy path, we dont care about speed\r\n    return createEmptyResponse();\r\n  }\r\n  const documentElement = doc.documentElement;\r\n  parseUseDirectives(doc);\r\n\r\n  const descendants = Array.from(documentElement.getElementsByTagName('*')),\r\n    options = {\r\n      ...applyViewboxTransform(documentElement),\r\n      crossOrigin,\r\n      signal,\r\n    };\r\n\r\n  const elements = descendants.filter((el) => {\r\n    applyViewboxTransform(el);\r\n    return isValidSvgTag(el) && !hasInvalidAncestor(el); // http://www.w3.org/TR/SVG/struct.html#DefsElement\r\n  });\r\n  if (!elements || (elements && !elements.length)) {\r\n    return {\r\n      ...createEmptyResponse(),\r\n      options,\r\n      allElements: descendants,\r\n    };\r\n  }\r\n  const localClipPaths: Record<string, Element[]> = {};\r\n  descendants\r\n    .filter((el) => getTagName(el) === 'clipPath')\r\n    .forEach((el) => {\r\n      el.setAttribute('originalTransform', el.getAttribute('transform') || '');\r\n      const id = el.getAttribute('id')!;\r\n      localClipPaths[id] = Array.from(el.getElementsByTagName('*')).filter(\r\n        (el) => isValidSvgTag(el)\r\n      );\r\n    });\r\n\r\n  // Precedence of rules:   style > class > attribute\r\n  const elementParser = new ElementsParser(\r\n    elements,\r\n    options,\r\n    reviver,\r\n    doc,\r\n    localClipPaths\r\n  );\r\n\r\n  const instances = await elementParser.parse();\r\n\r\n  return {\r\n    objects: instances,\r\n    elements,\r\n    options,\r\n    allElements: descendants,\r\n  };\r\n}\r\n","import { svgNS } from './constants';\r\nimport { getMultipleNodes } from './getMultipleNodes';\r\nimport { applyViewboxTransform } from './applyViewboxTransform';\r\n\r\nexport function parseUseDirectives(doc: Document) {\r\n  const nodelist = getMultipleNodes(doc, ['use', 'svg:use']);\r\n  let i = 0;\r\n  while (nodelist.length && i < nodelist.length) {\r\n    const el = nodelist[i],\r\n      xlinkAttribute = el.getAttribute('xlink:href') || el.getAttribute('href');\r\n\r\n    if (xlinkAttribute === null) {\r\n      return;\r\n    }\r\n\r\n    const xlink = xlinkAttribute.slice(1);\r\n    const x = el.getAttribute('x') || 0;\r\n    const y = el.getAttribute('y') || 0;\r\n    const el2Orig = doc.getElementById(xlink);\r\n    if (el2Orig === null) {\r\n      // if we can't find the target of the xlink, consider this use tag bad, similar to no xlink\r\n      return;\r\n    }\r\n    let el2 = el2Orig.cloneNode(true) as Element;\r\n    let currentTrans =\r\n      (el2.getAttribute('transform') || '') +\r\n      ' translate(' +\r\n      x +\r\n      ', ' +\r\n      y +\r\n      ')';\r\n    const oldLength = nodelist.length;\r\n    const namespace = svgNS;\r\n\r\n    applyViewboxTransform(el2);\r\n    if (/^svg$/i.test(el2.nodeName)) {\r\n      const el3 = el2.ownerDocument.createElementNS(namespace, 'g');\r\n      for (\r\n        let j = 0, attrs = el2.attributes, len = attrs.length;\r\n        j < len;\r\n        j++\r\n      ) {\r\n        const attr: Attr | null = attrs.item(j);\r\n        attr && el3.setAttributeNS(namespace, attr.nodeName, attr.nodeValue!);\r\n      }\r\n      // el2.firstChild != null\r\n      while (el2.firstChild) {\r\n        el3.appendChild(el2.firstChild);\r\n      }\r\n      el2 = el3;\r\n    }\r\n\r\n    for (let j = 0, attrs = el.attributes, len = attrs.length; j < len; j++) {\r\n      const attr = attrs.item(j);\r\n      if (!attr) {\r\n        continue;\r\n      }\r\n      const { nodeName, nodeValue } = attr;\r\n      if (\r\n        nodeName === 'x' ||\r\n        nodeName === 'y' ||\r\n        nodeName === 'xlink:href' ||\r\n        nodeName === 'href'\r\n      ) {\r\n        continue;\r\n      }\r\n\r\n      if (nodeName === 'transform') {\r\n        currentTrans = nodeValue + ' ' + currentTrans;\r\n      } else {\r\n        el2.setAttribute(nodeName, nodeValue!);\r\n      }\r\n    }\r\n\r\n    el2.setAttribute('transform', currentTrans);\r\n    el2.setAttribute('instantiated_by_use', '1');\r\n    el2.removeAttribute('id');\r\n    const parentNode = el.parentNode;\r\n    parentNode!.replaceChild(el2, el);\r\n    // some browsers do not shorten nodelist after replaceChild (IE8)\r\n    if (nodelist.length === oldLength) {\r\n      i++;\r\n    }\r\n  }\r\n}\r\n","import { Point } from '../Point';\r\nimport { Control } from './Control';\r\nimport type { TMat2D } from '../typedefs';\r\nimport type { Polyline } from '../shapes/Polyline';\r\nimport { multiplyTransformMatrices } from '../util/misc/matrix';\r\nimport type {\r\n  TModificationEvents,\r\n  TPointerEvent,\r\n  Transform,\r\n  TransformActionHandler,\r\n} from '../EventTypeDefs';\r\nimport { wrapWithFireEvent } from './wrapWithFireEvent';\r\nimport { sendPointToPlane } from '../util';\r\nimport { MODIFY_POLY } from '../constants';\r\n\r\nconst ACTION_NAME: TModificationEvents = MODIFY_POLY;\r\n\r\ntype TTransformAnchor = Transform & { pointIndex: number };\r\n\r\n/**\r\n * This function locates the controls.\r\n * It'll be used both for drawing and for interaction.\r\n */\r\nexport const createPolyPositionHandler = (pointIndex: number) => {\r\n  return function (dim: Point, finalMatrix: TMat2D, polyObject: Polyline) {\r\n    const { points, pathOffset } = polyObject;\r\n    return new Point(points[pointIndex])\r\n      .subtract(pathOffset)\r\n      .transform(\r\n        multiplyTransformMatrices(\r\n          polyObject.getViewportTransform(),\r\n          polyObject.calcTransformMatrix()\r\n        )\r\n      );\r\n  };\r\n};\r\n\r\n/**\r\n * This function defines what the control does.\r\n * It'll be called on every mouse move after a control has been clicked and is being dragged.\r\n * The function receives as argument the mouse event, the current transform object\r\n * and the current position in canvas coordinate `transform.target` is a reference to the\r\n * current object being transformed.\r\n */\r\nexport const polyActionHandler = (\r\n  eventData: TPointerEvent,\r\n  transform: TTransformAnchor,\r\n  x: number,\r\n  y: number\r\n) => {\r\n  const { target, pointIndex } = transform;\r\n  const poly = target as Polyline;\r\n  const mouseLocalPosition = sendPointToPlane(\r\n    new Point(x, y),\r\n    undefined,\r\n    poly.calcOwnMatrix()\r\n  );\r\n\r\n  poly.points[pointIndex] = mouseLocalPosition.add(poly.pathOffset);\r\n  poly.setDimensions();\r\n\r\n  return true;\r\n};\r\n\r\n/**\r\n * Keep the polygon in the same position when we change its `width`/`height`/`top`/`left`.\r\n */\r\nexport const factoryPolyActionHandler = (\r\n  pointIndex: number,\r\n  fn: TransformActionHandler<TTransformAnchor>\r\n) => {\r\n  return function (\r\n    eventData: TPointerEvent,\r\n    transform: Transform,\r\n    x: number,\r\n    y: number\r\n  ) {\r\n    const poly = transform.target as Polyline,\r\n      anchorPoint = new Point(\r\n        poly.points[(pointIndex > 0 ? pointIndex : poly.points.length) - 1]\r\n      ),\r\n      anchorPointInParentPlane = anchorPoint\r\n        .subtract(poly.pathOffset)\r\n        .transform(poly.calcOwnMatrix()),\r\n      actionPerformed = fn(eventData, { ...transform, pointIndex }, x, y);\r\n\r\n    const newAnchorPointInParentPlane = anchorPoint\r\n      .subtract(poly.pathOffset)\r\n      .transform(poly.calcOwnMatrix());\r\n\r\n    const diff = newAnchorPointInParentPlane.subtract(anchorPointInParentPlane);\r\n    poly.left -= diff.x;\r\n    poly.top -= diff.y;\r\n\r\n    return actionPerformed;\r\n  };\r\n};\r\n\r\nexport const createPolyActionHandler = (pointIndex: number) =>\r\n  wrapWithFireEvent(\r\n    ACTION_NAME,\r\n    factoryPolyActionHandler(pointIndex, polyActionHandler)\r\n  );\r\n\r\nexport function createPolyControls(\r\n  poly: Polyline,\r\n  options?: Partial<Control>\r\n): Record<string, Control>;\r\nexport function createPolyControls(\r\n  numOfControls: number,\r\n  options?: Partial<Control>\r\n): Record<string, Control>;\r\nexport function createPolyControls(\r\n  arg0: number | Polyline,\r\n  options: Partial<Control> = {}\r\n) {\r\n  const controls = {} as Record<string, Control>;\r\n  for (\r\n    let idx = 0;\r\n    idx < (typeof arg0 === 'number' ? arg0 : arg0.points.length);\r\n    idx++\r\n  ) {\r\n    controls[`p${idx}`] = new Control({\r\n      actionName: ACTION_NAME,\r\n      positionHandler: createPolyPositionHandler(idx),\r\n      actionHandler: createPolyActionHandler(idx),\r\n      ...options,\r\n    });\r\n  }\r\n  return controls;\r\n}\r\n","import { getFabricWindow } from '../env';\r\nimport { createCanvasElement } from '../util/misc/dom';\r\nimport { WebGLFilterBackend } from './WebGLFilterBackend';\r\nimport type { TWebGLPipelineState, T2DPipelineState } from './typedefs';\r\n\r\nexport const isWebGLPipelineState = (\r\n  options: TWebGLPipelineState | T2DPipelineState\r\n): options is TWebGLPipelineState => {\r\n  return (options as TWebGLPipelineState).webgl !== undefined;\r\n};\r\n\r\n/**\r\n * Pick a method to copy data from GL context to 2d canvas.  In some browsers using\r\n * drawImage should be faster, but is also bugged for a small combination of old hardware\r\n * and drivers.\r\n * putImageData is faster than drawImage for that specific operation.\r\n */\r\nexport const isPutImageFaster = (width: number, height: number): boolean => {\r\n  const targetCanvas = createCanvasElement();\r\n  const sourceCanvas = createCanvasElement();\r\n  const gl = sourceCanvas.getContext('webgl')!;\r\n  // eslint-disable-next-line no-undef\r\n  const imageBuffer = new ArrayBuffer(width * height * 4);\r\n\r\n  const testContext = {\r\n    imageBuffer: imageBuffer,\r\n  } as unknown as Required<WebGLFilterBackend>;\r\n  const testPipelineState = {\r\n    destinationWidth: width,\r\n    destinationHeight: height,\r\n    targetCanvas: targetCanvas,\r\n  } as unknown as TWebGLPipelineState;\r\n  let startTime;\r\n  targetCanvas.width = width;\r\n  targetCanvas.height = height;\r\n\r\n  startTime = getFabricWindow().performance.now();\r\n  WebGLFilterBackend.prototype.copyGLTo2D.call(\r\n    testContext,\r\n    gl,\r\n    testPipelineState\r\n  );\r\n  const drawImageTime = getFabricWindow().performance.now() - startTime;\r\n\r\n  startTime = getFabricWindow().performance.now();\r\n  WebGLFilterBackend.prototype.copyGLTo2DPutImageData.call(\r\n    testContext,\r\n    gl,\r\n    testPipelineState\r\n  );\r\n  const putImageDataTime = getFabricWindow().performance.now() - startTime;\r\n\r\n  return drawImageTime > putImageDataTime;\r\n};\r\n","export const highPsourceCode = `precision highp float`;\r\n\r\nexport const identityFragmentShader = `\r\n    ${highPsourceCode};\r\n    varying vec2 vTexCoord;\r\n    uniform sampler2D uTexture;\r\n    void main() {\r\n      gl_FragColor = texture2D(uTexture, vTexCoord);\r\n    }`;\r\n\r\nexport const vertexSource = `\r\n    attribute vec2 aPosition;\r\n    varying vec2 vTexCoord;\r\n    void main() {\r\n      vTexCoord = aPosition;\r\n      gl_Position = vec4(aPosition * 2.0 - 1.0, 0.0, 1.0);\r\n    }`;\r\n","import { getEnv } from '../env';\r\nimport { createCanvasElement } from '../util/misc/dom';\r\nimport type {\r\n  T2DPipelineState,\r\n  TWebGLAttributeLocationMap,\r\n  TWebGLPipelineState,\r\n  TWebGLProgramCacheItem,\r\n  TWebGLUniformLocationMap,\r\n} from './typedefs';\r\nimport { isWebGLPipelineState } from './utils';\r\nimport {\r\n  highPsourceCode,\r\n  identityFragmentShader,\r\n  vertexSource,\r\n} from './shaders/baseFilter';\r\nimport type { Abortable } from '../typedefs';\r\nimport { FabricError } from '../util/internals/console';\r\n\r\nconst regex = new RegExp(highPsourceCode, 'g');\r\n\r\nexport class BaseFilter<\r\n  Name extends string,\r\n  OwnProps extends Record<string, any> = object\r\n> {\r\n  /**\r\n   * Filter type\r\n   * @param {String} type\r\n   * @default\r\n   */\r\n  get type(): Name {\r\n    return (this.constructor as typeof BaseFilter).type as Name;\r\n  }\r\n\r\n  /**\r\n   * The class type. Used to identify which class this is.\r\n   * This is used for serialization purposes and internally it can be used\r\n   * to identify classes. As a developer you could use `instance of Class`\r\n   * but to avoid importing all the code and blocking tree shaking we try\r\n   * to avoid doing that.\r\n   */\r\n  static type = 'BaseFilter';\r\n\r\n  /**\r\n   * Contains the uniform locations for the fragment shader.\r\n   * uStepW and uStepH are handled by the BaseFilter, each filter class\r\n   * needs to specify all the one that are needed\r\n   */\r\n  static uniformLocations: string[] = [];\r\n\r\n  declare static defaults: Record<string, unknown>;\r\n\r\n  /**\r\n   * Constructor\r\n   * @param {Object} [options] Options object\r\n   */\r\n  constructor({\r\n    type,\r\n    ...options\r\n  }: { type?: never } & Partial<OwnProps> & Record<string, any> = {}) {\r\n    Object.assign(\r\n      this,\r\n      (this.constructor as typeof BaseFilter).defaults,\r\n      options\r\n    );\r\n  }\r\n\r\n  protected getFragmentSource(): string {\r\n    return identityFragmentShader;\r\n  }\r\n\r\n  getVertexSource(): string {\r\n    return vertexSource;\r\n  }\r\n\r\n  /**\r\n   * Compile this filter's shader program.\r\n   *\r\n   * @param {WebGLRenderingContext} gl The GL canvas context to use for shader compilation.\r\n   * @param {String} fragmentSource fragmentShader source for compilation\r\n   * @param {String} vertexSource vertexShader source for compilation\r\n   */\r\n  createProgram(\r\n    gl: WebGLRenderingContext,\r\n    fragmentSource: string = this.getFragmentSource(),\r\n    vertexSource: string = this.getVertexSource()\r\n  ) {\r\n    const {\r\n      WebGLProbe: { GLPrecision = 'highp' },\r\n    } = getEnv();\r\n    if (GLPrecision !== 'highp') {\r\n      fragmentSource = fragmentSource.replace(\r\n        regex,\r\n        highPsourceCode.replace('highp', GLPrecision)\r\n      );\r\n    }\r\n    const vertexShader = gl.createShader(gl.VERTEX_SHADER);\r\n    const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\r\n    const program = gl.createProgram();\r\n\r\n    if (!vertexShader || !fragmentShader || !program) {\r\n      throw new FabricError(\r\n        'Vertex, fragment shader or program creation error'\r\n      );\r\n    }\r\n    gl.shaderSource(vertexShader, vertexSource);\r\n    gl.compileShader(vertexShader);\r\n    if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\r\n      throw new FabricError(\r\n        `Vertex shader compile error for ${this.type}: ${gl.getShaderInfoLog(\r\n          vertexShader\r\n        )}`\r\n      );\r\n    }\r\n\r\n    gl.shaderSource(fragmentShader, fragmentSource);\r\n    gl.compileShader(fragmentShader);\r\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\r\n      throw new FabricError(\r\n        `Fragment shader compile error for ${this.type}: ${gl.getShaderInfoLog(\r\n          fragmentShader\r\n        )}`\r\n      );\r\n    }\r\n\r\n    gl.attachShader(program, vertexShader);\r\n    gl.attachShader(program, fragmentShader);\r\n    gl.linkProgram(program);\r\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\r\n      throw new FabricError(\r\n        `Shader link error for \"${this.type}\" ${gl.getProgramInfoLog(program)}`\r\n      );\r\n    }\r\n\r\n    const uniformLocations = this.getUniformLocations(gl, program) || {};\r\n    uniformLocations.uStepW = gl.getUniformLocation(program, 'uStepW');\r\n    uniformLocations.uStepH = gl.getUniformLocation(program, 'uStepH');\r\n\r\n    return {\r\n      program,\r\n      attributeLocations: this.getAttributeLocations(gl, program),\r\n      uniformLocations,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Return a map of attribute names to WebGLAttributeLocation objects.\r\n   *\r\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\r\n   * @param {WebGLShaderProgram} program The shader program from which to take attribute locations.\r\n   * @returns {Object} A map of attribute names to attribute locations.\r\n   */\r\n  getAttributeLocations(\r\n    gl: WebGLRenderingContext,\r\n    program: WebGLProgram\r\n  ): TWebGLAttributeLocationMap {\r\n    return {\r\n      aPosition: gl.getAttribLocation(program, 'aPosition'),\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Return a map of uniform names to WebGLUniformLocation objects.\r\n   *\r\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\r\n   * @param {WebGLShaderProgram} program The shader program from which to take uniform locations.\r\n   * @returns {Object} A map of uniform names to uniform locations.\r\n   */\r\n  getUniformLocations(\r\n    gl: WebGLRenderingContext,\r\n    program: WebGLProgram\r\n  ): TWebGLUniformLocationMap {\r\n    const locations = (this.constructor as unknown as typeof BaseFilter<string>)\r\n      .uniformLocations;\r\n\r\n    const uniformLocations: Record<string, WebGLUniformLocation | null> = {};\r\n    for (let i = 0; i < locations.length; i++) {\r\n      uniformLocations[locations[i]] = gl.getUniformLocation(\r\n        program,\r\n        locations[i]\r\n      );\r\n    }\r\n    return uniformLocations;\r\n  }\r\n\r\n  /**\r\n   * Send attribute data from this filter to its shader program on the GPU.\r\n   *\r\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\r\n   * @param {Object} attributeLocations A map of shader attribute names to their locations.\r\n   */\r\n  sendAttributeData(\r\n    gl: WebGLRenderingContext,\r\n    attributeLocations: Record<string, number>,\r\n    aPositionData: Float32Array\r\n  ) {\r\n    const attributeLocation = attributeLocations.aPosition;\r\n    const buffer = gl.createBuffer();\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\r\n    gl.enableVertexAttribArray(attributeLocation);\r\n    gl.vertexAttribPointer(attributeLocation, 2, gl.FLOAT, false, 0, 0);\r\n    gl.bufferData(gl.ARRAY_BUFFER, aPositionData, gl.STATIC_DRAW);\r\n  }\r\n\r\n  _setupFrameBuffer(options: TWebGLPipelineState) {\r\n    const gl = options.context;\r\n    if (options.passes > 1) {\r\n      const width = options.destinationWidth;\r\n      const height = options.destinationHeight;\r\n      if (options.sourceWidth !== width || options.sourceHeight !== height) {\r\n        gl.deleteTexture(options.targetTexture);\r\n        options.targetTexture = options.filterBackend.createTexture(\r\n          gl,\r\n          width,\r\n          height\r\n        );\r\n      }\r\n      gl.framebufferTexture2D(\r\n        gl.FRAMEBUFFER,\r\n        gl.COLOR_ATTACHMENT0,\r\n        gl.TEXTURE_2D,\r\n        options.targetTexture,\r\n        0\r\n      );\r\n    } else {\r\n      // draw last filter on canvas and not to framebuffer.\r\n      gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n      gl.finish();\r\n    }\r\n  }\r\n\r\n  _swapTextures(options: TWebGLPipelineState) {\r\n    options.passes--;\r\n    options.pass++;\r\n    const temp = options.targetTexture;\r\n    options.targetTexture = options.sourceTexture;\r\n    options.sourceTexture = temp;\r\n  }\r\n\r\n  /**\r\n   * Generic isNeutral implementation for one parameter based filters.\r\n   * Used only in image applyFilters to discard filters that will not have an effect\r\n   * on the image\r\n   * Other filters may need their own version ( ColorMatrix, HueRotation, gamma, ComposedFilter )\r\n   * @param {Object} options\r\n   **/\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n  isNeutralState(options?: any): boolean {\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Apply this filter to the input image data provided.\r\n   *\r\n   * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.\r\n   *\r\n   * @param {Object} options\r\n   * @param {Number} options.passes The number of filters remaining to be executed\r\n   * @param {Boolean} options.webgl Whether to use webgl to render the filter.\r\n   * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\r\n   * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\r\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\r\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\r\n   */\r\n  applyTo(options: TWebGLPipelineState | T2DPipelineState) {\r\n    if (isWebGLPipelineState(options)) {\r\n      this._setupFrameBuffer(options);\r\n      this.applyToWebGL(options);\r\n      this._swapTextures(options);\r\n    } else {\r\n      this.applyTo2d(options);\r\n    }\r\n  }\r\n\r\n  applyTo2d(options: T2DPipelineState): void {\r\n    // override by subclass\r\n  }\r\n\r\n  /**\r\n   * Returns a string that represent the current selected shader code for the filter.\r\n   * Used to force recompilation when parameters change or to retrieve the shader from cache\r\n   * @type string\r\n   **/\r\n  getCacheKey(): string {\r\n    return this.type;\r\n  }\r\n\r\n  /**\r\n   * Retrieves the cached shader.\r\n   * @param {Object} options\r\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\r\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\r\n   * @return {WebGLProgram} the compiled program shader\r\n   */\r\n  retrieveShader(options: TWebGLPipelineState): TWebGLProgramCacheItem {\r\n    const key = this.getCacheKey();\r\n    if (!options.programCache[key]) {\r\n      options.programCache[key] = this.createProgram(options.context);\r\n    }\r\n    return options.programCache[key];\r\n  }\r\n\r\n  /**\r\n   * Apply this filter using webgl.\r\n   *\r\n   * @param {Object} options\r\n   * @param {Number} options.passes The number of filters remaining to be executed\r\n   * @param {Boolean} options.webgl Whether to use webgl to render the filter.\r\n   * @param {WebGLTexture} options.originalTexture The texture of the original input image.\r\n   * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\r\n   * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\r\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\r\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\r\n   */\r\n  applyToWebGL(options: TWebGLPipelineState) {\r\n    const gl = options.context;\r\n    const shader = this.retrieveShader(options);\r\n    if (options.pass === 0 && options.originalTexture) {\r\n      gl.bindTexture(gl.TEXTURE_2D, options.originalTexture);\r\n    } else {\r\n      gl.bindTexture(gl.TEXTURE_2D, options.sourceTexture);\r\n    }\r\n    gl.useProgram(shader.program);\r\n    this.sendAttributeData(gl, shader.attributeLocations, options.aPosition);\r\n\r\n    gl.uniform1f(shader.uniformLocations.uStepW, 1 / options.sourceWidth);\r\n    gl.uniform1f(shader.uniformLocations.uStepH, 1 / options.sourceHeight);\r\n\r\n    this.sendUniformData(gl, shader.uniformLocations);\r\n    gl.viewport(0, 0, options.destinationWidth, options.destinationHeight);\r\n    gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\r\n  }\r\n\r\n  bindAdditionalTexture(\r\n    gl: WebGLRenderingContext,\r\n    texture: WebGLTexture,\r\n    textureUnit: number\r\n  ) {\r\n    gl.activeTexture(textureUnit);\r\n    gl.bindTexture(gl.TEXTURE_2D, texture);\r\n    // reset active texture to 0 as usual\r\n    gl.activeTexture(gl.TEXTURE0);\r\n  }\r\n\r\n  unbindAdditionalTexture(gl: WebGLRenderingContext, textureUnit: number) {\r\n    gl.activeTexture(textureUnit);\r\n    gl.bindTexture(gl.TEXTURE_2D, null);\r\n    gl.activeTexture(gl.TEXTURE0);\r\n  }\r\n\r\n  /**\r\n   * Send uniform data from this filter to its shader program on the GPU.\r\n   *\r\n   * Intended to be overridden by subclasses.\r\n   *\r\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\r\n   * @param {Object} uniformLocations A map of shader uniform names to their locations.\r\n   */\r\n  sendUniformData(\r\n    gl: WebGLRenderingContext,\r\n    uniformLocations: TWebGLUniformLocationMap\r\n  ): void {\r\n    // override by subclass\r\n  }\r\n\r\n  /**\r\n   * If needed by a 2d filter, this functions can create an helper canvas to be used\r\n   * remember that options.targetCanvas is available for use till end of chain.\r\n   */\r\n  createHelpLayer(options: T2DPipelineState) {\r\n    if (!options.helpLayer) {\r\n      const helpLayer = createCanvasElement();\r\n      helpLayer.width = options.sourceWidth;\r\n      helpLayer.height = options.sourceHeight;\r\n      options.helpLayer = helpLayer;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns object representation of an instance\r\n   * @return {Object} Object representation of an instance\r\n   */\r\n  toObject(): { type: Name } & OwnProps {\r\n    const defaultKeys = Object.keys(\r\n      (this.constructor as typeof BaseFilter).defaults\r\n    ) as (keyof OwnProps)[];\r\n\r\n    return {\r\n      type: this.type,\r\n      ...defaultKeys.reduce<OwnProps>((acc, key) => {\r\n        //@ts-expect-error TS doesn't get i want an object that looks like this\r\n        acc[key] = this[key as keyof this];\r\n        return acc;\r\n      }, {} as OwnProps),\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Returns a JSON representation of an instance\r\n   * @return {Object} JSON\r\n   */\r\n  toJSON() {\r\n    // delegate, not alias\r\n    return this.toObject();\r\n  }\r\n\r\n  static async fromObject(\r\n    { type, ...filterOptions }: Record<string, any>,\r\n    options: Abortable\r\n  ): Promise<BaseFilter<string, object>> {\r\n    return new this(filterOptions);\r\n  }\r\n}\r\n","export const blendColorFragmentSource = {\r\n  multiply: 'gl_FragColor.rgb *= uColor.rgb;\\n',\r\n  screen:\r\n    'gl_FragColor.rgb = 1.0 - (1.0 - gl_FragColor.rgb) * (1.0 - uColor.rgb);\\n',\r\n  add: 'gl_FragColor.rgb += uColor.rgb;\\n',\r\n  difference: 'gl_FragColor.rgb = abs(gl_FragColor.rgb - uColor.rgb);\\n',\r\n  subtract: 'gl_FragColor.rgb -= uColor.rgb;\\n',\r\n  lighten: 'gl_FragColor.rgb = max(gl_FragColor.rgb, uColor.rgb);\\n',\r\n  darken: 'gl_FragColor.rgb = min(gl_FragColor.rgb, uColor.rgb);\\n',\r\n  exclusion:\r\n    'gl_FragColor.rgb += uColor.rgb - 2.0 * (uColor.rgb * gl_FragColor.rgb);\\n',\r\n  overlay: `\r\n    if (uColor.r < 0.5) {\r\n      gl_FragColor.r *= 2.0 * uColor.r;\r\n    } else {\r\n      gl_FragColor.r = 1.0 - 2.0 * (1.0 - gl_FragColor.r) * (1.0 - uColor.r);\r\n    }\r\n    if (uColor.g < 0.5) {\r\n      gl_FragColor.g *= 2.0 * uColor.g;\r\n    } else {\r\n      gl_FragColor.g = 1.0 - 2.0 * (1.0 - gl_FragColor.g) * (1.0 - uColor.g);\r\n    }\r\n    if (uColor.b < 0.5) {\r\n      gl_FragColor.b *= 2.0 * uColor.b;\r\n    } else {\r\n      gl_FragColor.b = 1.0 - 2.0 * (1.0 - gl_FragColor.b) * (1.0 - uColor.b);\r\n    }\r\n    `,\r\n  tint: `\r\n    gl_FragColor.rgb *= (1.0 - uColor.a);\r\n    gl_FragColor.rgb += uColor.rgb;\r\n    `,\r\n} as const;\r\n","import { Color } from '../color/Color';\r\nimport { BaseFilter } from './BaseFilter';\r\nimport type { T2DPipelineState, TWebGLUniformLocationMap } from './typedefs';\r\nimport { classRegistry } from '../ClassRegistry';\r\nimport { blendColorFragmentSource } from './shaders/blendColor';\r\n\r\nexport type TBlendMode =\r\n  | 'multiply'\r\n  | 'add'\r\n  | 'difference'\r\n  | 'screen'\r\n  | 'subtract'\r\n  | 'darken'\r\n  | 'lighten'\r\n  | 'overlay'\r\n  | 'exclusion'\r\n  | 'tint';\r\n\r\ntype BlendColorOwnProps = {\r\n  color: string;\r\n  mode: TBlendMode;\r\n  alpha: number;\r\n};\r\n\r\nexport const blendColorDefaultValues: BlendColorOwnProps = {\r\n  color: '#F95C63',\r\n  mode: 'multiply',\r\n  alpha: 1,\r\n};\r\n\r\n/**\r\n * Color Blend filter class\r\n * @example\r\n * const filter = new BlendColor({\r\n *  color: '#000',\r\n *  mode: 'multiply'\r\n * });\r\n *\r\n * const filter = new BlendImage({\r\n *  image: fabricImageObject,\r\n *  mode: 'multiply'\r\n * });\r\n * object.filters.push(filter);\r\n * object.applyFilters();\r\n * canvas.renderAll();\r\n */\r\nexport class BlendColor extends BaseFilter<'BlendColor', BlendColorOwnProps> {\r\n  /**\r\n   * Color to make the blend operation with. default to a reddish color since black or white\r\n   * gives always strong result.\r\n   * @type String\r\n   * @default\r\n   **/\r\n  declare color: BlendColorOwnProps['color'];\r\n\r\n  /**\r\n   * Blend mode for the filter: one of multiply, add, difference, screen, subtract,\r\n   * darken, lighten, overlay, exclusion, tint.\r\n   * @type String\r\n   * @default\r\n   **/\r\n  declare mode: BlendColorOwnProps['mode'];\r\n  /**\r\n   * alpha value. represent the strength of the blend color operation.\r\n   * @type Number\r\n   * @default\r\n   **/\r\n  declare alpha: BlendColorOwnProps['alpha'];\r\n\r\n  static defaults = blendColorDefaultValues;\r\n\r\n  static type = 'BlendColor';\r\n\r\n  static uniformLocations = ['uColor'];\r\n\r\n  getCacheKey() {\r\n    return `${this.type}_${this.mode}`;\r\n  }\r\n\r\n  protected getFragmentSource(): string {\r\n    return `\r\n      precision highp float;\r\n      uniform sampler2D uTexture;\r\n      uniform vec4 uColor;\r\n      varying vec2 vTexCoord;\r\n      void main() {\r\n        vec4 color = texture2D(uTexture, vTexCoord);\r\n        gl_FragColor = color;\r\n        if (color.a > 0.0) {\r\n          ${blendColorFragmentSource[this.mode]}\r\n        }\r\n      }\r\n      `;\r\n  }\r\n\r\n  /**\r\n   * Apply the Blend operation to a Uint8ClampedArray representing the pixels of an image.\r\n   *\r\n   * @param {Object} options\r\n   * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\r\n   */\r\n  applyTo2d({ imageData: { data } }: T2DPipelineState) {\r\n    const source = new Color(this.color).getSource();\r\n    const tr = source[0] * this.alpha;\r\n    const tg = source[1] * this.alpha;\r\n    const tb = source[2] * this.alpha;\r\n    const alpha1 = 1 - this.alpha;\r\n\r\n    for (let i = 0; i < data.length; i += 4) {\r\n      const r = data[i];\r\n      const g = data[i + 1];\r\n      const b = data[i + 2];\r\n\r\n      switch (this.mode) {\r\n        case 'multiply':\r\n          data[i] = (r * tr) / 255;\r\n          data[i + 1] = (g * tg) / 255;\r\n          data[i + 2] = (b * tb) / 255;\r\n          break;\r\n        case 'screen':\r\n          data[i] = 255 - ((255 - r) * (255 - tr)) / 255;\r\n          data[i + 1] = 255 - ((255 - g) * (255 - tg)) / 255;\r\n          data[i + 2] = 255 - ((255 - b) * (255 - tb)) / 255;\r\n          break;\r\n        case 'add':\r\n          data[i] = r + tr;\r\n          data[i + 1] = g + tg;\r\n          data[i + 2] = b + tb;\r\n          break;\r\n        case 'difference':\r\n          data[i] = Math.abs(r - tr);\r\n          data[i + 1] = Math.abs(g - tg);\r\n          data[i + 2] = Math.abs(b - tb);\r\n          break;\r\n        case 'subtract':\r\n          data[i] = r - tr;\r\n          data[i + 1] = g - tg;\r\n          data[i + 2] = b - tb;\r\n          break;\r\n        case 'darken':\r\n          data[i] = Math.min(r, tr);\r\n          data[i + 1] = Math.min(g, tg);\r\n          data[i + 2] = Math.min(b, tb);\r\n          break;\r\n        case 'lighten':\r\n          data[i] = Math.max(r, tr);\r\n          data[i + 1] = Math.max(g, tg);\r\n          data[i + 2] = Math.max(b, tb);\r\n          break;\r\n        case 'overlay':\r\n          data[i] =\r\n            tr < 128\r\n              ? (2 * r * tr) / 255\r\n              : 255 - (2 * (255 - r) * (255 - tr)) / 255;\r\n          data[i + 1] =\r\n            tg < 128\r\n              ? (2 * g * tg) / 255\r\n              : 255 - (2 * (255 - g) * (255 - tg)) / 255;\r\n          data[i + 2] =\r\n            tb < 128\r\n              ? (2 * b * tb) / 255\r\n              : 255 - (2 * (255 - b) * (255 - tb)) / 255;\r\n          break;\r\n        case 'exclusion':\r\n          data[i] = tr + r - (2 * tr * r) / 255;\r\n          data[i + 1] = tg + g - (2 * tg * g) / 255;\r\n          data[i + 2] = tb + b - (2 * tb * b) / 255;\r\n          break;\r\n        case 'tint':\r\n          data[i] = tr + r * alpha1;\r\n          data[i + 1] = tg + g * alpha1;\r\n          data[i + 2] = tb + b * alpha1;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Send data from this filter to its shader program's uniforms.\r\n   *\r\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\r\n   */\r\n  sendUniformData(\r\n    gl: WebGLRenderingContext,\r\n    uniformLocations: TWebGLUniformLocationMap\r\n  ) {\r\n    const source = new Color(this.color).getSource();\r\n    source[0] = (this.alpha * source[0]) / 255;\r\n    source[1] = (this.alpha * source[1]) / 255;\r\n    source[2] = (this.alpha * source[2]) / 255;\r\n    source[3] = this.alpha;\r\n    gl.uniform4fv(uniformLocations.uColor, source);\r\n  }\r\n}\r\n\r\nclassRegistry.setClass(BlendColor);\r\n","import type { TBlendImageMode } from '../BlendImage';\r\n\r\nexport const fragmentSource: Record<TBlendImageMode, string> = {\r\n  multiply: `\r\n    precision highp float;\r\n    uniform sampler2D uTexture;\r\n    uniform sampler2D uImage;\r\n    uniform vec4 uColor;\r\n    varying vec2 vTexCoord;\r\n    varying vec2 vTexCoord2;\r\n    void main() {\r\n      vec4 color = texture2D(uTexture, vTexCoord);\r\n      vec4 color2 = texture2D(uImage, vTexCoord2);\r\n      color.rgba *= color2.rgba;\r\n      gl_FragColor = color;\r\n    }\r\n    `,\r\n  mask: `\r\n    precision highp float;\r\n    uniform sampler2D uTexture;\r\n    uniform sampler2D uImage;\r\n    uniform vec4 uColor;\r\n    varying vec2 vTexCoord;\r\n    varying vec2 vTexCoord2;\r\n    void main() {\r\n      vec4 color = texture2D(uTexture, vTexCoord);\r\n      vec4 color2 = texture2D(uImage, vTexCoord2);\r\n      color.a = color2.a;\r\n      gl_FragColor = color;\r\n    }\r\n    `,\r\n} as const;\r\n\r\nexport const vertexSource = `\r\n    attribute vec2 aPosition;\r\n    varying vec2 vTexCoord;\r\n    varying vec2 vTexCoord2;\r\n    uniform mat3 uTransformMatrix;\r\n    void main() {\r\n      vTexCoord = aPosition;\r\n      vTexCoord2 = (uTransformMatrix * vec3(aPosition, 1.0)).xy;\r\n      gl_Position = vec4(aPosition * 2.0 - 1.0, 0.0, 1.0);\r\n    }\r\n    ` as const;\r\n","import { FabricImage } from '../shapes/Image';\r\nimport { createCanvasElement } from '../util/misc/dom';\r\nimport { BaseFilter } from './BaseFilter';\r\nimport type {\r\n  T2DPipelineState,\r\n  TWebGLPipelineState,\r\n  TWebGLUniformLocationMap,\r\n} from './typedefs';\r\nimport type { WebGLFilterBackend } from './WebGLFilterBackend';\r\nimport { classRegistry } from '../ClassRegistry';\r\nimport { fragmentSource, vertexSource } from './shaders/blendImage';\r\n\r\nexport type TBlendImageMode = 'multiply' | 'mask';\r\n\r\ntype BlendImageOwnProps = {\r\n  mode: TBlendImageMode;\r\n  alpha: number;\r\n};\r\n\r\nexport const blendImageDefaultValues: BlendImageOwnProps = {\r\n  mode: 'multiply',\r\n  alpha: 1,\r\n};\r\n\r\n/**\r\n * Image Blend filter class\r\n * @example\r\n * const filter = new filters.BlendColor({\r\n *  color: '#000',\r\n *  mode: 'multiply'\r\n * });\r\n *\r\n * const filter = new BlendImage({\r\n *  image: fabricImageObject,\r\n *  mode: 'multiply'\r\n * });\r\n * object.filters.push(filter);\r\n * object.applyFilters();\r\n * canvas.renderAll();\r\n */\r\nexport class BlendImage extends BaseFilter<'BlendImage', BlendImageOwnProps> {\r\n  /**\r\n   * Image to make the blend operation with.\r\n   **/\r\n  declare image: FabricImage;\r\n\r\n  /**\r\n   * Blend mode for the filter: either 'multiply' or 'mask'. 'multiply' will\r\n   * multiply the values of each channel (R, G, B, and A) of the filter image by\r\n   * their corresponding values in the base image. 'mask' will only look at the\r\n   * alpha channel of the filter image, and apply those values to the base\r\n   * image's alpha channel.\r\n   * @type String\r\n   * @default\r\n   **/\r\n  declare mode: BlendImageOwnProps['mode'];\r\n\r\n  /**\r\n   * alpha value. represent the strength of the blend image operation.\r\n   * not implemented.\r\n   **/\r\n  declare alpha: BlendImageOwnProps['alpha'];\r\n\r\n  static type = 'BlendImage';\r\n\r\n  static defaults = blendImageDefaultValues;\r\n\r\n  static uniformLocations = ['uTransformMatrix', 'uImage'];\r\n\r\n  getCacheKey() {\r\n    return `${this.type}_${this.mode}`;\r\n  }\r\n\r\n  getFragmentSource(): string {\r\n    return fragmentSource[this.mode];\r\n  }\r\n\r\n  getVertexSource(): string {\r\n    return vertexSource;\r\n  }\r\n\r\n  applyToWebGL(options: TWebGLPipelineState) {\r\n    const gl = options.context,\r\n      texture = this.createTexture(options.filterBackend, this.image);\r\n    this.bindAdditionalTexture(gl, texture!, gl.TEXTURE1);\r\n    super.applyToWebGL(options);\r\n    this.unbindAdditionalTexture(gl, gl.TEXTURE1);\r\n  }\r\n\r\n  createTexture(backend: WebGLFilterBackend, image: FabricImage) {\r\n    return backend.getCachedTexture(image.cacheKey, image.getElement());\r\n  }\r\n\r\n  /**\r\n   * Calculate a transformMatrix to adapt the image to blend over\r\n   * @param {Object} options\r\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\r\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\r\n   */\r\n  calculateMatrix() {\r\n    const image = this.image,\r\n      { width, height } = image.getElement();\r\n    return [\r\n      1 / image.scaleX,\r\n      0,\r\n      0,\r\n      0,\r\n      1 / image.scaleY,\r\n      0,\r\n      -image.left / width,\r\n      -image.top / height,\r\n      1,\r\n    ];\r\n  }\r\n\r\n  /**\r\n   * Apply the Blend operation to a Uint8ClampedArray representing the pixels of an image.\r\n   *\r\n   * @param {Object} options\r\n   * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\r\n   */\r\n  applyTo2d({\r\n    imageData: { data, width, height },\r\n    filterBackend: { resources },\r\n  }: T2DPipelineState) {\r\n    const image = this.image;\r\n    if (!resources.blendImage) {\r\n      resources.blendImage = createCanvasElement();\r\n    }\r\n    const canvas1 = resources.blendImage;\r\n    const context = canvas1.getContext('2d')!;\r\n    if (canvas1.width !== width || canvas1.height !== height) {\r\n      canvas1.width = width;\r\n      canvas1.height = height;\r\n    } else {\r\n      context.clearRect(0, 0, width, height);\r\n    }\r\n    context.setTransform(\r\n      image.scaleX,\r\n      0,\r\n      0,\r\n      image.scaleY,\r\n      image.left,\r\n      image.top\r\n    );\r\n    context.drawImage(image.getElement(), 0, 0, width, height);\r\n    const blendData = context.getImageData(0, 0, width, height).data;\r\n    for (let i = 0; i < data.length; i += 4) {\r\n      const r = data[i];\r\n      const g = data[i + 1];\r\n      const b = data[i + 2];\r\n      const a = data[i + 3];\r\n\r\n      const tr = blendData[i];\r\n      const tg = blendData[i + 1];\r\n      const tb = blendData[i + 2];\r\n      const ta = blendData[i + 3];\r\n\r\n      switch (this.mode) {\r\n        case 'multiply':\r\n          data[i] = (r * tr) / 255;\r\n          data[i + 1] = (g * tg) / 255;\r\n          data[i + 2] = (b * tb) / 255;\r\n          data[i + 3] = (a * ta) / 255;\r\n          break;\r\n        case 'mask':\r\n          data[i + 3] = ta;\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Send data from this filter to its shader program's uniforms.\r\n   *\r\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\r\n   */\r\n  sendUniformData(\r\n    gl: WebGLRenderingContext,\r\n    uniformLocations: TWebGLUniformLocationMap\r\n  ) {\r\n    const matrix = this.calculateMatrix();\r\n    gl.uniform1i(uniformLocations.uImage, 1); // texture unit 1.\r\n    gl.uniformMatrix3fv(uniformLocations.uTransformMatrix, false, matrix);\r\n  }\r\n\r\n  /**\r\n   * Returns object representation of an instance\r\n   * TODO: Handle the possibility of missing image better.\r\n   * As of now a BlendImage filter without image can't be used with fromObject\r\n   * @return {Object} Object representation of an instance\r\n   */\r\n  toObject(): {\r\n    type: 'BlendImage';\r\n    image: ReturnType<FabricImage['toObject']>;\r\n  } & BlendImageOwnProps {\r\n    return {\r\n      ...super.toObject(),\r\n      image: this.image && this.image.toObject(),\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Create filter instance from an object representation\r\n   * @static\r\n   * @param {object} object Object to create an instance from\r\n   * @param {object} [options]\r\n   * @param {AbortSignal} [options.signal] handle aborting image loading, see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\r\n   * @returns {Promise<BlendImage>}\r\n   */\r\n  static async fromObject(\r\n    { type, image, ...filterOptions }: Record<string, any>,\r\n    options: { signal: AbortSignal }\r\n  ): Promise<BaseFilter<'BlendImage', BlendImageOwnProps>> {\r\n    return FabricImage.fromObject(image, options).then(\r\n      (enlivedImage) =>\r\n        new this({ ...filterOptions, image: enlivedImage }) as BlendImage\r\n    );\r\n  }\r\n}\r\n\r\nclassRegistry.setClass(BlendImage);\r\n","import { createCanvasElement } from '../util/misc/dom';\r\nimport { BaseFilter } from './BaseFilter';\r\nimport type {\r\n  TWebGLPipelineState,\r\n  T2DPipelineState,\r\n  TWebGLUniformLocationMap,\r\n} from './typedefs';\r\nimport { isWebGLPipelineState } from './utils';\r\nimport { classRegistry } from '../ClassRegistry';\r\nimport { fragmentSource } from './shaders/blur';\r\n\r\ntype BlurOwnProps = {\r\n  blur: number;\r\n};\r\n\r\nexport const blurDefaultValues: BlurOwnProps = {\r\n  blur: 0,\r\n};\r\n\r\n/**\r\n * Blur filter class\r\n * @example\r\n * const filter = new Blur({\r\n *   blur: 0.5\r\n * });\r\n * object.filters.push(filter);\r\n * object.applyFilters();\r\n * canvas.renderAll();\r\n */\r\nexport class Blur extends BaseFilter<'Blur', BlurOwnProps> {\r\n  /**\r\n   * blur value, in percentage of image dimensions.\r\n   * specific to keep the image blur constant at different resolutions\r\n   * range between 0 and 1.\r\n   * @type Number\r\n   * @default\r\n   */\r\n  declare blur: BlurOwnProps['blur'];\r\n\r\n  declare horizontal: boolean;\r\n  declare aspectRatio: number;\r\n\r\n  static type = 'Blur';\r\n\r\n  static defaults = blurDefaultValues;\r\n\r\n  static uniformLocations = ['uDelta'];\r\n\r\n  getFragmentSource(): string {\r\n    return fragmentSource;\r\n  }\r\n\r\n  applyTo(options: TWebGLPipelineState | T2DPipelineState) {\r\n    if (isWebGLPipelineState(options)) {\r\n      // this aspectRatio is used to give the same blur to vertical and horizontal\r\n      this.aspectRatio = options.sourceWidth / options.sourceHeight;\r\n      options.passes++;\r\n      this._setupFrameBuffer(options);\r\n      this.horizontal = true;\r\n      this.applyToWebGL(options);\r\n      this._swapTextures(options);\r\n      this._setupFrameBuffer(options);\r\n      this.horizontal = false;\r\n      this.applyToWebGL(options);\r\n      this._swapTextures(options);\r\n    } else {\r\n      this.applyTo2d(options);\r\n    }\r\n  }\r\n\r\n  applyTo2d(options: T2DPipelineState) {\r\n    options.imageData = this.simpleBlur(options);\r\n  }\r\n\r\n  simpleBlur({\r\n    ctx,\r\n    imageData,\r\n    filterBackend: { resources },\r\n  }: T2DPipelineState) {\r\n    const { width, height } = imageData;\r\n    if (!resources.blurLayer1) {\r\n      resources.blurLayer1 = createCanvasElement();\r\n      resources.blurLayer2 = createCanvasElement();\r\n    }\r\n    const canvas1 = resources.blurLayer1!;\r\n    const canvas2 = resources.blurLayer2!;\r\n    if (canvas1.width !== width || canvas1.height !== height) {\r\n      canvas2.width = canvas1.width = width;\r\n      canvas2.height = canvas1.height = height;\r\n    }\r\n    const ctx1 = canvas1.getContext('2d')!,\r\n      ctx2 = canvas2.getContext('2d')!,\r\n      nSamples = 15,\r\n      blur = this.blur * 0.06 * 0.5;\r\n    let random, percent, j, i;\r\n\r\n    // load first canvas\r\n    ctx1.putImageData(imageData, 0, 0);\r\n    ctx2.clearRect(0, 0, width, height);\r\n\r\n    for (i = -nSamples; i <= nSamples; i++) {\r\n      random = (Math.random() - 0.5) / 4;\r\n      percent = i / nSamples;\r\n      j = blur * percent * width + random;\r\n      ctx2.globalAlpha = 1 - Math.abs(percent);\r\n      ctx2.drawImage(canvas1, j, random);\r\n      ctx1.drawImage(canvas2, 0, 0);\r\n      ctx2.globalAlpha = 1;\r\n      ctx2.clearRect(0, 0, canvas2.width, canvas2.height);\r\n    }\r\n    for (i = -nSamples; i <= nSamples; i++) {\r\n      random = (Math.random() - 0.5) / 4;\r\n      percent = i / nSamples;\r\n      j = blur * percent * height + random;\r\n      ctx2.globalAlpha = 1 - Math.abs(percent);\r\n      ctx2.drawImage(canvas1, random, j);\r\n      ctx1.drawImage(canvas2, 0, 0);\r\n      ctx2.globalAlpha = 1;\r\n      ctx2.clearRect(0, 0, canvas2.width, canvas2.height);\r\n    }\r\n    ctx.drawImage(canvas1, 0, 0);\r\n    const newImageData = ctx.getImageData(0, 0, canvas1.width, canvas1.height);\r\n    ctx1.globalAlpha = 1;\r\n    ctx1.clearRect(0, 0, canvas1.width, canvas1.height);\r\n    return newImageData;\r\n  }\r\n\r\n  /**\r\n   * Send data from this filter to its shader program's uniforms.\r\n   *\r\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\r\n   */\r\n  sendUniformData(\r\n    gl: WebGLRenderingContext,\r\n    uniformLocations: TWebGLUniformLocationMap\r\n  ) {\r\n    const delta = this.chooseRightDelta();\r\n    gl.uniform2fv(uniformLocations.uDelta, delta);\r\n  }\r\n\r\n  isNeutralState() {\r\n    return this.blur === 0;\r\n  }\r\n\r\n  /**\r\n   * choose right value of image percentage to blur with\r\n   * @returns {Array} a numeric array with delta values\r\n   */\r\n  chooseRightDelta() {\r\n    let blurScale = 1;\r\n    const delta = [0, 0];\r\n    if (this.horizontal) {\r\n      if (this.aspectRatio > 1) {\r\n        // image is wide, i want to shrink radius horizontal\r\n        blurScale = 1 / this.aspectRatio;\r\n      }\r\n    } else {\r\n      if (this.aspectRatio < 1) {\r\n        // image is tall, i want to shrink radius vertical\r\n        blurScale = this.aspectRatio;\r\n      }\r\n    }\r\n    const blur = blurScale * this.blur * 0.12;\r\n    if (this.horizontal) {\r\n      delta[0] = blur;\r\n    } else {\r\n      delta[1] = blur;\r\n    }\r\n    return delta;\r\n  }\r\n}\r\n\r\nclassRegistry.setClass(Blur);\r\n","export const fragmentSource = `\r\n    precision highp float;\r\n    uniform sampler2D uTexture;\r\n    uniform vec2 uDelta;\r\n    varying vec2 vTexCoord;\r\n    const float nSamples = 15.0;\r\n    vec3 v3offset = vec3(12.9898, 78.233, 151.7182);\r\n    float random(vec3 scale) {\r\n      /* use the fragment position for a different seed per-pixel */\r\n      return fract(sin(dot(gl_FragCoord.xyz, scale)) * 43758.5453);\r\n    }\r\n    void main() {\r\n      vec4 color = vec4(0.0);\r\n      float total = 0.0;\r\n      float offset = random(v3offset);\r\n      for (float t = -nSamples; t <= nSamples; t++) {\r\n        float percent = (t + offset - 0.5) / nSamples;\r\n        float weight = 1.0 - abs(percent);\r\n        color += texture2D(uTexture, vTexCoord + uDelta * percent) * weight;\r\n        total += weight;\r\n      }\r\n      gl_FragColor = color / total;\r\n    }\r\n  ` as const;\r\n","import { BaseFilter } from './BaseFilter';\r\nimport type { T2DPipelineState, TWebGLUniformLocationMap } from './typedefs';\r\nimport { classRegistry } from '../ClassRegistry';\r\nimport { fragmentSource } from './shaders/brightness';\r\n\r\ntype BrightnessOwnProps = {\r\n  brightness: number;\r\n};\r\n\r\nexport const brightnessDefaultValues: BrightnessOwnProps = {\r\n  brightness: 0,\r\n};\r\n\r\n/**\r\n * Brightness filter class\r\n * @example\r\n * const filter = new Brightness({\r\n *   brightness: 0.05\r\n * });\r\n * object.filters.push(filter);\r\n * object.applyFilters();\r\n */\r\nexport class Brightness extends BaseFilter<'Brightness', BrightnessOwnProps> {\r\n  /**\r\n   * Brightness value, from -1 to 1.\r\n   * translated to -255 to 255 for 2d\r\n   * 0.0039215686 is the part of 1 that get translated to 1 in 2d\r\n   * @param {Number} brightness\r\n   * @default\r\n   */\r\n  declare brightness: BrightnessOwnProps['brightness'];\r\n\r\n  static type = 'Brightness';\r\n\r\n  static defaults = brightnessDefaultValues;\r\n\r\n  static uniformLocations = ['uBrightness'];\r\n\r\n  getFragmentSource() {\r\n    return fragmentSource;\r\n  }\r\n\r\n  /**\r\n   * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\r\n   *\r\n   * @param {Object} options\r\n   * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\r\n   */\r\n  applyTo2d({ imageData: { data } }: T2DPipelineState) {\r\n    const brightness = Math.round(this.brightness * 255);\r\n    for (let i = 0; i < data.length; i += 4) {\r\n      data[i] = data[i] + brightness;\r\n      data[i + 1] = data[i + 1] + brightness;\r\n      data[i + 2] = data[i + 2] + brightness;\r\n    }\r\n  }\r\n\r\n  isNeutralState() {\r\n    return this.brightness === 0;\r\n  }\r\n\r\n  /**\r\n   * Send data from this filter to its shader program's uniforms.\r\n   *\r\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\r\n   */\r\n  sendUniformData(\r\n    gl: WebGLRenderingContext,\r\n    uniformLocations: TWebGLUniformLocationMap\r\n  ) {\r\n    gl.uniform1f(uniformLocations.uBrightness, this.brightness);\r\n  }\r\n}\r\n\r\nclassRegistry.setClass(Brightness);\r\n","export const fragmentSource = `\r\n  precision highp float;\r\n  uniform sampler2D uTexture;\r\n  uniform float uBrightness;\r\n  varying vec2 vTexCoord;\r\n  void main() {\r\n    vec4 color = texture2D(uTexture, vTexCoord);\r\n    color.rgb += uBrightness;\r\n    gl_FragColor = color;\r\n  }\r\n`;\r\n","import { BaseFilter } from './BaseFilter';\r\nimport type {\r\n  T2DPipelineState,\r\n  TMatColorMatrix,\r\n  TWebGLUniformLocationMap,\r\n} from './typedefs';\r\nimport { classRegistry } from '../ClassRegistry';\r\nimport { fragmentSource } from './shaders/colorMatrix';\r\n\r\ntype ColorMatrixOwnProps = {\r\n  matrix: TMatColorMatrix;\r\n  colorsOnly: boolean;\r\n};\r\n\r\nexport const colorMatrixDefaultValues: ColorMatrixOwnProps = {\r\n  matrix: [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0],\r\n  colorsOnly: true,\r\n};\r\n\r\n/**\r\n   * Color Matrix filter class\r\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\r\n   * @see {@Link http://phoboslab.org/log/2013/11/fast-image-filters-with-webgl demo}\r\n   * @example <caption>Kodachrome filter</caption>\r\n   * const filter = new ColorMatrix({\r\n   *  matrix: [\r\n       1.1285582396593525, -0.3967382283601348, -0.03992559172921793, 0, 63.72958762196502,\r\n       -0.16404339962244616, 1.0835251566291304, -0.05498805115633132, 0, 24.732407896706203,\r\n       -0.16786010706155763, -0.5603416277695248, 1.6014850761964943, 0, 35.62982807460946,\r\n       0, 0, 0, 1, 0\r\n      ]\r\n   * });\r\n   * object.filters.push(filter);\r\n   * object.applyFilters();\r\n   */\r\nexport class ColorMatrix<\r\n  Name extends string = 'ColorMatrix',\r\n  OwnProps extends object = ColorMatrixOwnProps\r\n> extends BaseFilter<Name, OwnProps> {\r\n  /**\r\n   * Colormatrix for pixels.\r\n   * array of 20 floats. Numbers in positions 4, 9, 14, 19 loose meaning\r\n   * outside the -1, 1 range.\r\n   * 0.0039215686 is the part of 1 that get translated to 1 in 2d\r\n   * @param {Array} matrix array of 20 numbers.\r\n   * @default\r\n   */\r\n  declare matrix: ColorMatrixOwnProps['matrix'];\r\n\r\n  /**\r\n   * Lock the colormatrix on the color part, skipping alpha, mainly for non webgl scenario\r\n   * to save some calculation\r\n   * @type Boolean\r\n   * @default true\r\n   */\r\n  declare colorsOnly: ColorMatrixOwnProps['colorsOnly'];\r\n\r\n  static type = 'ColorMatrix';\r\n\r\n  static defaults = colorMatrixDefaultValues;\r\n\r\n  static uniformLocations = ['uColorMatrix', 'uConstants'];\r\n\r\n  getFragmentSource(): string {\r\n    return fragmentSource;\r\n  }\r\n\r\n  /**\r\n   * Apply the ColorMatrix operation to a Uint8Array representing the pixels of an image.\r\n   *\r\n   * @param {Object} options\r\n   * @param {ImageData} options.imageData The Uint8Array to be filtered.\r\n   */\r\n  applyTo2d(options: T2DPipelineState) {\r\n    const imageData = options.imageData,\r\n      data = imageData.data,\r\n      m = this.matrix,\r\n      colorsOnly = this.colorsOnly;\r\n\r\n    for (let i = 0; i < data.length; i += 4) {\r\n      const r = data[i];\r\n      const g = data[i + 1];\r\n      const b = data[i + 2];\r\n      if (colorsOnly) {\r\n        data[i] = r * m[0] + g * m[1] + b * m[2] + m[4] * 255;\r\n        data[i + 1] = r * m[5] + g * m[6] + b * m[7] + m[9] * 255;\r\n        data[i + 2] = r * m[10] + g * m[11] + b * m[12] + m[14] * 255;\r\n      } else {\r\n        const a = data[i + 3];\r\n        data[i] = r * m[0] + g * m[1] + b * m[2] + a * m[3] + m[4] * 255;\r\n        data[i + 1] = r * m[5] + g * m[6] + b * m[7] + a * m[8] + m[9] * 255;\r\n        data[i + 2] =\r\n          r * m[10] + g * m[11] + b * m[12] + a * m[13] + m[14] * 255;\r\n        data[i + 3] =\r\n          r * m[15] + g * m[16] + b * m[17] + a * m[18] + m[19] * 255;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Send data from this filter to its shader program's uniforms.\r\n   *\r\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\r\n   */\r\n  sendUniformData(\r\n    gl: WebGLRenderingContext,\r\n    uniformLocations: TWebGLUniformLocationMap\r\n  ) {\r\n    const m = this.matrix,\r\n      matrix = [\r\n        m[0],\r\n        m[1],\r\n        m[2],\r\n        m[3],\r\n        m[5],\r\n        m[6],\r\n        m[7],\r\n        m[8],\r\n        m[10],\r\n        m[11],\r\n        m[12],\r\n        m[13],\r\n        m[15],\r\n        m[16],\r\n        m[17],\r\n        m[18],\r\n      ],\r\n      constants = [m[4], m[9], m[14], m[19]];\r\n    gl.uniformMatrix4fv(uniformLocations.uColorMatrix, false, matrix);\r\n    gl.uniform4fv(uniformLocations.uConstants, constants);\r\n  }\r\n\r\n  toObject() {\r\n    return {\r\n      ...super.toObject(),\r\n      matrix: [...this.matrix] as TMatColorMatrix,\r\n    };\r\n  }\r\n}\r\n\r\nclassRegistry.setClass(ColorMatrix);\r\n","export const fragmentSource = `\r\n  precision highp float;\r\n  uniform sampler2D uTexture;\r\n  varying vec2 vTexCoord;\r\n  uniform mat4 uColorMatrix;\r\n  uniform vec4 uConstants;\r\n  void main() {\r\n    vec4 color = texture2D(uTexture, vTexCoord);\r\n    color *= uColorMatrix;\r\n    color += uConstants;\r\n    gl_FragColor = color;\r\n  }`;\r\n","import { ColorMatrix } from './ColorMatrix';\r\nimport { classRegistry } from '../ClassRegistry';\r\nimport type { TMatColorMatrix } from './typedefs';\r\n\r\ntype FixedFiltersOwnProps = {\r\n  colorsOnly: boolean;\r\n};\r\n\r\nexport function createColorMatrixFilter(key: string, matrix: TMatColorMatrix) {\r\n  const newClass = class extends ColorMatrix<typeof key, FixedFiltersOwnProps> {\r\n    static type = key;\r\n\r\n    static defaults = {\r\n      colorsOnly: false,\r\n      matrix,\r\n    };\r\n\r\n    //@ts-expect-error TS wants matrix to be exported.\r\n    toObject(): { type: string } & FixedFiltersOwnProps {\r\n      return { type: this.type, colorsOnly: this.colorsOnly };\r\n    }\r\n  };\r\n  classRegistry.setClass(newClass, key);\r\n  return newClass as typeof ColorMatrix<typeof key, FixedFiltersOwnProps>;\r\n}\r\n\r\nexport const Brownie = createColorMatrixFilter(\r\n  'Brownie',\r\n  [\r\n    0.5997, 0.34553, -0.27082, 0, 0.186, -0.0377, 0.86095, 0.15059, 0, -0.1449,\r\n    0.24113, -0.07441, 0.44972, 0, -0.02965, 0, 0, 0, 1, 0,\r\n  ]\r\n);\r\n\r\nexport const Vintage = createColorMatrixFilter(\r\n  'Vintage',\r\n  [\r\n    0.62793, 0.32021, -0.03965, 0, 0.03784, 0.02578, 0.64411, 0.03259, 0,\r\n    0.02926, 0.0466, -0.08512, 0.52416, 0, 0.02023, 0, 0, 0, 1, 0,\r\n  ]\r\n);\r\n\r\nexport const Kodachrome = createColorMatrixFilter(\r\n  'Kodachrome',\r\n  [\r\n    1.12855, -0.39673, -0.03992, 0, 0.24991, -0.16404, 1.08352, -0.05498, 0,\r\n    0.09698, -0.16786, -0.56034, 1.60148, 0, 0.13972, 0, 0, 0, 1, 0,\r\n  ]\r\n);\r\n\r\nexport const Technicolor = createColorMatrixFilter(\r\n  'Technicolor',\r\n  [\r\n    1.91252, -0.85453, -0.09155, 0, 0.04624, -0.30878, 1.76589, -0.10601, 0,\r\n    -0.27589, -0.2311, -0.75018, 1.84759, 0, 0.12137, 0, 0, 0, 1, 0,\r\n  ]\r\n);\r\n\r\nexport const Polaroid = createColorMatrixFilter(\r\n  'Polaroid',\r\n  [\r\n    1.438, -0.062, -0.062, 0, 0, -0.122, 1.378, -0.122, 0, 0, -0.016, -0.016,\r\n    1.483, 0, 0, 0, 0, 0, 1, 0,\r\n  ]\r\n);\r\n\r\nexport const Sepia = createColorMatrixFilter(\r\n  'Sepia',\r\n  [\r\n    0.393, 0.769, 0.189, 0, 0, 0.349, 0.686, 0.168, 0, 0, 0.272, 0.534, 0.131,\r\n    0, 0, 0, 0, 0, 1, 0,\r\n  ]\r\n);\r\n\r\nexport const BlackWhite = createColorMatrixFilter(\r\n  'BlackWhite',\r\n  [\r\n    1.5, 1.5, 1.5, 0, -1, 1.5, 1.5, 1.5, 0, -1, 1.5, 1.5, 1.5, 0, -1, 0, 0, 0,\r\n    1, 0,\r\n  ]\r\n);\r\n","import { BaseFilter } from './BaseFilter';\r\nimport type { T2DPipelineState, TWebGLPipelineState } from './typedefs';\r\nimport { isWebGLPipelineState } from './utils';\r\nimport { classRegistry } from '../ClassRegistry';\r\n\r\ntype ComposedOwnProps = {\r\n  subFilters: BaseFilter<string, object>[];\r\n};\r\n\r\n/**\r\n * A container class that knows how to apply a sequence of filters to an input image.\r\n */\r\nexport class Composed extends BaseFilter<'Composed', ComposedOwnProps> {\r\n  /**\r\n   * A non sparse array of filters to apply\r\n   */\r\n  declare subFilters: ComposedOwnProps['subFilters'];\r\n\r\n  static type = 'Composed';\r\n\r\n  constructor(\r\n    options: { subFilters?: BaseFilter<string, object>[] } & Record<\r\n      string,\r\n      any\r\n    > = {}\r\n  ) {\r\n    super(options);\r\n    this.subFilters = options.subFilters || [];\r\n  }\r\n\r\n  /**\r\n   * Apply this container's filters to the input image provided.\r\n   *\r\n   * @param {Object} options\r\n   * @param {Number} options.passes The number of filters remaining to be applied.\r\n   */\r\n  applyTo(options: TWebGLPipelineState | T2DPipelineState) {\r\n    if (isWebGLPipelineState(options)) {\r\n      options.passes += this.subFilters.length - 1;\r\n    }\r\n    this.subFilters.forEach((filter) => {\r\n      filter.applyTo(options);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Serialize this filter into JSON.\r\n   * @returns {Object} A JSON representation of this filter.\r\n   */\r\n  //@ts-expect-error TS doesn't like this toObject\r\n  toObject(): {\r\n    type: 'Composed';\r\n    subFilters: ReturnType<BaseFilter<string, object>['toObject']>[];\r\n  } {\r\n    return {\r\n      type: this.type,\r\n      subFilters: this.subFilters.map((filter) => filter.toObject()),\r\n    };\r\n  }\r\n\r\n  isNeutralState() {\r\n    return !this.subFilters.some((filter) => !filter.isNeutralState());\r\n  }\r\n\r\n  /**\r\n   * Deserialize a JSON definition of a ComposedFilter into a concrete instance.\r\n   * @static\r\n   * @param {oject} object Object to create an instance from\r\n   * @param {object} [options]\r\n   * @param {AbortSignal} [options.signal] handle aborting `BlendImage` filter loading, see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\r\n   * @returns {Promise<Composed>}\r\n   */\r\n  static fromObject(\r\n    object: Record<string, any>,\r\n    options: { signal: AbortSignal }\r\n  ): Promise<Composed> {\r\n    return Promise.all(\r\n      ((object.subFilters || []) as BaseFilter<string, object>[]).map(\r\n        (filter) =>\r\n          classRegistry\r\n            .getClass<typeof BaseFilter>(filter.type)\r\n            .fromObject(filter, options)\r\n      )\r\n    ).then(\r\n      (enlivedFilters) => new this({ subFilters: enlivedFilters }) as Composed\r\n    );\r\n  }\r\n}\r\n\r\nclassRegistry.setClass(Composed);\r\n","import { BaseFilter } from './BaseFilter';\r\nimport type { T2DPipelineState, TWebGLUniformLocationMap } from './typedefs';\r\nimport { classRegistry } from '../ClassRegistry';\r\nimport { fragmentSource } from './shaders/constrast';\r\n\r\ntype ContrastOwnProps = {\r\n  contrast: number;\r\n};\r\n\r\nexport const contrastDefaultValues: ContrastOwnProps = {\r\n  contrast: 0,\r\n};\r\n\r\n/**\r\n * Contrast filter class\r\n * @example\r\n * const filter = new Contrast({\r\n *   contrast: 0.25\r\n * });\r\n * object.filters.push(filter);\r\n * object.applyFilters();\r\n */\r\nexport class Contrast extends BaseFilter<'Contrast', ContrastOwnProps> {\r\n  /**\r\n   * contrast value, range from -1 to 1.\r\n   * @param {Number} contrast\r\n   * @default 0\r\n   */\r\n  declare contrast: ContrastOwnProps['contrast'];\r\n\r\n  static type = 'Contrast';\r\n\r\n  static defaults = contrastDefaultValues;\r\n\r\n  static uniformLocations = ['uContrast'];\r\n\r\n  getFragmentSource() {\r\n    return fragmentSource;\r\n  }\r\n\r\n  isNeutralState() {\r\n    return this.contrast === 0;\r\n  }\r\n\r\n  /**\r\n   * Apply the Contrast operation to a Uint8Array representing the pixels of an image.\r\n   *\r\n   * @param {Object} options\r\n   * @param {ImageData} options.imageData The Uint8Array to be filtered.\r\n   */\r\n  applyTo2d({ imageData: { data } }: T2DPipelineState) {\r\n    const contrast = Math.floor(this.contrast * 255),\r\n      contrastF = (259 * (contrast + 255)) / (255 * (259 - contrast));\r\n\r\n    for (let i = 0; i < data.length; i += 4) {\r\n      data[i] = contrastF * (data[i] - 128) + 128;\r\n      data[i + 1] = contrastF * (data[i + 1] - 128) + 128;\r\n      data[i + 2] = contrastF * (data[i + 2] - 128) + 128;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Send data from this filter to its shader program's uniforms.\r\n   *\r\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\r\n   */\r\n  sendUniformData(\r\n    gl: WebGLRenderingContext,\r\n    uniformLocations: TWebGLUniformLocationMap\r\n  ) {\r\n    gl.uniform1f(uniformLocations.uContrast, this.contrast);\r\n  }\r\n}\r\n\r\nclassRegistry.setClass(Contrast);\r\n","export const fragmentSource = `\r\n  precision highp float;\r\n  uniform sampler2D uTexture;\r\n  uniform float uContrast;\r\n  varying vec2 vTexCoord;\r\n  void main() {\r\n    vec4 color = texture2D(uTexture, vTexCoord);\r\n    float contrastF = 1.015 * (uContrast + 1.0) / (1.0 * (1.015 - uContrast));\r\n    color.rgb = contrastF * (color.rgb - 0.5) + 0.5;\r\n    gl_FragColor = color;\r\n  }`;\r\n","export const fragmentSource = {\r\n  Convolute_3_1: `\r\n    precision highp float;\r\n    uniform sampler2D uTexture;\r\n    uniform float uMatrix[9];\r\n    uniform float uStepW;\r\n    uniform float uStepH;\r\n    varying vec2 vTexCoord;\r\n    void main() {\r\n      vec4 color = vec4(0, 0, 0, 0);\r\n      for (float h = 0.0; h < 3.0; h+=1.0) {\r\n        for (float w = 0.0; w < 3.0; w+=1.0) {\r\n          vec2 matrixPos = vec2(uStepW * (w - 1), uStepH * (h - 1));\r\n          color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 3.0 + w)];\r\n        }\r\n      }\r\n      gl_FragColor = color;\r\n    }\r\n    `,\r\n  Convolute_3_0: `\r\n    precision highp float;\r\n    uniform sampler2D uTexture;\r\n    uniform float uMatrix[9];\r\n    uniform float uStepW;\r\n    uniform float uStepH;\r\n    varying vec2 vTexCoord;\r\n    void main() {\r\n      vec4 color = vec4(0, 0, 0, 1);\r\n      for (float h = 0.0; h < 3.0; h+=1.0) {\r\n        for (float w = 0.0; w < 3.0; w+=1.0) {\r\n          vec2 matrixPos = vec2(uStepW * (w - 1.0), uStepH * (h - 1.0));\r\n          color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 3.0 + w)];\r\n        }\r\n      }\r\n      float alpha = texture2D(uTexture, vTexCoord).a;\r\n      gl_FragColor = color;\r\n      gl_FragColor.a = alpha;\r\n    }\r\n    `,\r\n  Convolute_5_1: `\r\n    precision highp float;\r\n    uniform sampler2D uTexture;\r\n    uniform float uMatrix[25];\r\n    uniform float uStepW;\r\n    uniform float uStepH;\r\n    varying vec2 vTexCoord;\r\n    void main() {\r\n      vec4 color = vec4(0, 0, 0, 0);\r\n      for (float h = 0.0; h < 5.0; h+=1.0) {\r\n        for (float w = 0.0; w < 5.0; w+=1.0) {\r\n          vec2 matrixPos = vec2(uStepW * (w - 2.0), uStepH * (h - 2.0));\r\n          color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 5.0 + w)];\r\n        }\r\n      }\r\n      gl_FragColor = color;\r\n    }\r\n    `,\r\n  Convolute_5_0: `\r\n    precision highp float;\r\n    uniform sampler2D uTexture;\r\n    uniform float uMatrix[25];\r\n    uniform float uStepW;\r\n    uniform float uStepH;\r\n    varying vec2 vTexCoord;\r\n    void main() {\r\n      vec4 color = vec4(0, 0, 0, 1);\r\n      for (float h = 0.0; h < 5.0; h+=1.0) {\r\n        for (float w = 0.0; w < 5.0; w+=1.0) {\r\n          vec2 matrixPos = vec2(uStepW * (w - 2.0), uStepH * (h - 2.0));\r\n          color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 5.0 + w)];\r\n        }\r\n      }\r\n      float alpha = texture2D(uTexture, vTexCoord).a;\r\n      gl_FragColor = color;\r\n      gl_FragColor.a = alpha;\r\n    }\r\n    `,\r\n  Convolute_7_1: `\r\n    precision highp float;\r\n    uniform sampler2D uTexture;\r\n    uniform float uMatrix[49];\r\n    uniform float uStepW;\r\n    uniform float uStepH;\r\n    varying vec2 vTexCoord;\r\n    void main() {\r\n      vec4 color = vec4(0, 0, 0, 0);\r\n      for (float h = 0.0; h < 7.0; h+=1.0) {\r\n        for (float w = 0.0; w < 7.0; w+=1.0) {\r\n          vec2 matrixPos = vec2(uStepW * (w - 3.0), uStepH * (h - 3.0));\r\n          color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 7.0 + w)];\r\n        }\r\n      }\r\n      gl_FragColor = color;\r\n    }\r\n    `,\r\n  Convolute_7_0: `\r\n    precision highp float;\r\n    uniform sampler2D uTexture;\r\n    uniform float uMatrix[49];\r\n    uniform float uStepW;\r\n    uniform float uStepH;\r\n    varying vec2 vTexCoord;\r\n    void main() {\r\n      vec4 color = vec4(0, 0, 0, 1);\r\n      for (float h = 0.0; h < 7.0; h+=1.0) {\r\n        for (float w = 0.0; w < 7.0; w+=1.0) {\r\n          vec2 matrixPos = vec2(uStepW * (w - 3.0), uStepH * (h - 3.0));\r\n          color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 7.0 + w)];\r\n        }\r\n      }\r\n      float alpha = texture2D(uTexture, vTexCoord).a;\r\n      gl_FragColor = color;\r\n      gl_FragColor.a = alpha;\r\n    }\r\n    `,\r\n  Convolute_9_1: `\r\n    precision highp float;\r\n    uniform sampler2D uTexture;\r\n    uniform float uMatrix[81];\r\n    uniform float uStepW;\r\n    uniform float uStepH;\r\n    varying vec2 vTexCoord;\r\n    void main() {\r\n      vec4 color = vec4(0, 0, 0, 0);\r\n      for (float h = 0.0; h < 9.0; h+=1.0) {\r\n        for (float w = 0.0; w < 9.0; w+=1.0) {\r\n          vec2 matrixPos = vec2(uStepW * (w - 4.0), uStepH * (h - 4.0));\r\n          color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 9.0 + w)];\r\n        }\r\n      }\r\n      gl_FragColor = color;\r\n    }\r\n    `,\r\n  Convolute_9_0: `\r\n    precision highp float;\r\n    uniform sampler2D uTexture;\r\n    uniform float uMatrix[81];\r\n    uniform float uStepW;\r\n    uniform float uStepH;\r\n    varying vec2 vTexCoord;\r\n    void main() {\r\n      vec4 color = vec4(0, 0, 0, 1);\r\n      for (float h = 0.0; h < 9.0; h+=1.0) {\r\n        for (float w = 0.0; w < 9.0; w+=1.0) {\r\n          vec2 matrixPos = vec2(uStepW * (w - 4.0), uStepH * (h - 4.0));\r\n          color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 9.0 + w)];\r\n        }\r\n      }\r\n      float alpha = texture2D(uTexture, vTexCoord).a;\r\n      gl_FragColor = color;\r\n      gl_FragColor.a = alpha;\r\n    }\r\n    `,\r\n};\r\n","import { BaseFilter } from './BaseFilter';\r\nimport type { T2DPipelineState, TWebGLUniformLocationMap } from './typedefs';\r\nimport { classRegistry } from '../ClassRegistry';\r\nimport { fragmentSource } from './shaders/convolute';\r\n\r\nexport type ConvoluteOwnProps = {\r\n  opaque: boolean;\r\n  matrix: number[];\r\n};\r\n\r\nexport const convoluteDefaultValues: ConvoluteOwnProps = {\r\n  opaque: false,\r\n  matrix: [0, 0, 0, 0, 1, 0, 0, 0, 0],\r\n};\r\n\r\n/**\r\n * Adapted from <a href=\"http://www.html5rocks.com/en/tutorials/canvas/imagefilters/\">html5rocks article</a>\r\n * @example <caption>Sharpen filter</caption>\r\n * const filter = new Convolute({\r\n *   matrix: [ 0, -1,  0,\r\n *            -1,  5, -1,\r\n *             0, -1,  0 ]\r\n * });\r\n * object.filters.push(filter);\r\n * object.applyFilters();\r\n * canvas.renderAll();\r\n * @example <caption>Blur filter</caption>\r\n * const filter = new Convolute({\r\n *   matrix: [ 1/9, 1/9, 1/9,\r\n *             1/9, 1/9, 1/9,\r\n *             1/9, 1/9, 1/9 ]\r\n * });\r\n * object.filters.push(filter);\r\n * object.applyFilters();\r\n * canvas.renderAll();\r\n * @example <caption>Emboss filter</caption>\r\n * const filter = new Convolute({\r\n *   matrix: [ 1,   1,  1,\r\n *             1, 0.7, -1,\r\n *            -1,  -1, -1 ]\r\n * });\r\n * object.filters.push(filter);\r\n * object.applyFilters();\r\n * canvas.renderAll();\r\n * @example <caption>Emboss filter with opaqueness</caption>\r\n * const filter = new Convolute({\r\n *   opaque: true,\r\n *   matrix: [ 1,   1,  1,\r\n *             1, 0.7, -1,\r\n *            -1,  -1, -1 ]\r\n * });\r\n * object.filters.push(filter);\r\n * object.applyFilters();\r\n * canvas.renderAll();\r\n */\r\nexport class Convolute extends BaseFilter<'Convolute', ConvoluteOwnProps> {\r\n  /*\r\n   * Opaque value (true/false)\r\n   */\r\n  declare opaque: ConvoluteOwnProps['opaque'];\r\n\r\n  /*\r\n   * matrix for the filter, max 9x9\r\n   */\r\n  declare matrix: ConvoluteOwnProps['matrix'];\r\n\r\n  static type = 'Convolute';\r\n\r\n  static defaults = convoluteDefaultValues;\r\n\r\n  static uniformLocations = ['uMatrix', 'uOpaque', 'uHalfSize', 'uSize'];\r\n\r\n  getCacheKey() {\r\n    return `${this.type}_${Math.sqrt(this.matrix.length)}_${\r\n      this.opaque ? 1 : 0\r\n    }` as keyof typeof fragmentSource;\r\n  }\r\n\r\n  getFragmentSource() {\r\n    return fragmentSource[this.getCacheKey()];\r\n  }\r\n\r\n  /**\r\n   * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\r\n   *\r\n   * @param {Object} options\r\n   * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\r\n   */\r\n  applyTo2d(options: T2DPipelineState) {\r\n    const imageData = options.imageData,\r\n      data = imageData.data,\r\n      weights = this.matrix,\r\n      side = Math.round(Math.sqrt(weights.length)),\r\n      halfSide = Math.floor(side / 2),\r\n      sw = imageData.width,\r\n      sh = imageData.height,\r\n      output = options.ctx.createImageData(sw, sh),\r\n      dst = output.data,\r\n      // go through the destination image pixels\r\n      alphaFac = this.opaque ? 1 : 0;\r\n    let r, g, b, a, dstOff, scx, scy, srcOff, wt, x, y, cx, cy;\r\n\r\n    for (y = 0; y < sh; y++) {\r\n      for (x = 0; x < sw; x++) {\r\n        dstOff = (y * sw + x) * 4;\r\n        // calculate the weighed sum of the source image pixels that\r\n        // fall under the convolution matrix\r\n        r = 0;\r\n        g = 0;\r\n        b = 0;\r\n        a = 0;\r\n\r\n        for (cy = 0; cy < side; cy++) {\r\n          for (cx = 0; cx < side; cx++) {\r\n            scy = y + cy - halfSide;\r\n            scx = x + cx - halfSide;\r\n\r\n            // eslint-disable-next-line max-depth\r\n            if (scy < 0 || scy >= sh || scx < 0 || scx >= sw) {\r\n              continue;\r\n            }\r\n\r\n            srcOff = (scy * sw + scx) * 4;\r\n            wt = weights[cy * side + cx];\r\n\r\n            r += data[srcOff] * wt;\r\n            g += data[srcOff + 1] * wt;\r\n            b += data[srcOff + 2] * wt;\r\n            // eslint-disable-next-line max-depth\r\n            if (!alphaFac) {\r\n              a += data[srcOff + 3] * wt;\r\n            }\r\n          }\r\n        }\r\n        dst[dstOff] = r;\r\n        dst[dstOff + 1] = g;\r\n        dst[dstOff + 2] = b;\r\n        if (!alphaFac) {\r\n          dst[dstOff + 3] = a;\r\n        } else {\r\n          dst[dstOff + 3] = data[dstOff + 3];\r\n        }\r\n      }\r\n    }\r\n    options.imageData = output;\r\n  }\r\n\r\n  /**\r\n   * Send data from this filter to its shader program's uniforms.\r\n   *\r\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\r\n   */\r\n  sendUniformData(\r\n    gl: WebGLRenderingContext,\r\n    uniformLocations: TWebGLUniformLocationMap\r\n  ) {\r\n    gl.uniform1fv(uniformLocations.uMatrix, this.matrix);\r\n  }\r\n\r\n  /**\r\n   * Returns object representation of an instance\r\n   * @return {Object} Object representation of an instance\r\n   */\r\n  toObject() {\r\n    return {\r\n      ...super.toObject(),\r\n      opaque: this.opaque,\r\n      matrix: [...this.matrix],\r\n    };\r\n  }\r\n}\r\n\r\nclassRegistry.setClass(Convolute);\r\n","export const fragmentSource = `\r\n  precision highp float;\r\n  uniform sampler2D uTexture;\r\n  uniform vec3 uGamma;\r\n  varying vec2 vTexCoord;\r\n  void main() {\r\n    vec4 color = texture2D(uTexture, vTexCoord);\r\n    vec3 correction = (1.0 / uGamma);\r\n    color.r = pow(color.r, correction.r);\r\n    color.g = pow(color.g, correction.g);\r\n    color.b = pow(color.b, correction.b);\r\n    gl_FragColor = color;\r\n    gl_FragColor.rgb *= color.a;\r\n  }\r\n`;\r\n","import { BaseFilter } from './BaseFilter';\r\nimport { classRegistry } from '../ClassRegistry';\r\nimport { fragmentSource } from './shaders/gamma';\r\nimport type { T2DPipelineState, TWebGLUniformLocationMap } from './typedefs';\r\n\r\nconst GAMMA = 'Gamma' as const;\r\n\r\nexport type GammaInput = [number, number, number];\r\n\r\nexport type GammaOwnProps = {\r\n  gamma: GammaInput;\r\n};\r\n\r\nexport const gammaDefaultValues: GammaOwnProps = {\r\n  gamma: [1, 1, 1],\r\n};\r\n\r\n/**\r\n * Gamma filter class\r\n * @example\r\n * const filter = new Gamma({\r\n *   gamma: [1, 0.5, 2.1]\r\n * });\r\n * object.filters.push(filter);\r\n * object.applyFilters();\r\n */\r\nexport class Gamma extends BaseFilter<typeof GAMMA, GammaOwnProps> {\r\n  /**\r\n   * Gamma array value, from 0.01 to 2.2.\r\n   * @param {Array} gamma\r\n   * @default\r\n   */\r\n  declare gamma: GammaOwnProps['gamma'];\r\n  declare rgbValues?: {\r\n    r: Uint8Array;\r\n    g: Uint8Array;\r\n    b: Uint8Array;\r\n  };\r\n\r\n  static type = GAMMA;\r\n\r\n  static defaults = gammaDefaultValues;\r\n\r\n  static uniformLocations = ['uGamma'];\r\n\r\n  getFragmentSource() {\r\n    return fragmentSource;\r\n  }\r\n\r\n  constructor(options: { gamma?: GammaInput } = {}) {\r\n    super(options);\r\n    this.gamma =\r\n      options.gamma ||\r\n      ((\r\n        this.constructor as typeof Gamma\r\n      ).defaults.gamma.concat() as GammaInput);\r\n  }\r\n\r\n  /**\r\n   * Apply the Gamma operation to a Uint8Array representing the pixels of an image.\r\n   *\r\n   * @param {Object} options\r\n   * @param {ImageData} options.imageData The Uint8Array to be filtered.\r\n   */\r\n  applyTo2d({ imageData: { data } }: T2DPipelineState) {\r\n    const gamma = this.gamma,\r\n      rInv = 1 / gamma[0],\r\n      gInv = 1 / gamma[1],\r\n      bInv = 1 / gamma[2];\r\n\r\n    if (!this.rgbValues) {\r\n      this.rgbValues = {\r\n        r: new Uint8Array(256),\r\n        g: new Uint8Array(256),\r\n        b: new Uint8Array(256),\r\n      };\r\n    }\r\n\r\n    // This is an optimization - pre-compute a look-up table for each color channel\r\n    // instead of performing these pow calls for each pixel in the image.\r\n    const rgb = this.rgbValues;\r\n    for (let i = 0; i < 256; i++) {\r\n      rgb.r[i] = Math.pow(i / 255, rInv) * 255;\r\n      rgb.g[i] = Math.pow(i / 255, gInv) * 255;\r\n      rgb.b[i] = Math.pow(i / 255, bInv) * 255;\r\n    }\r\n    for (let i = 0; i < data.length; i += 4) {\r\n      data[i] = rgb.r[data[i]];\r\n      data[i + 1] = rgb.g[data[i + 1]];\r\n      data[i + 2] = rgb.b[data[i + 2]];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Send data from this filter to its shader program's uniforms.\r\n   *\r\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\r\n   */\r\n  sendUniformData(\r\n    gl: WebGLRenderingContext,\r\n    uniformLocations: TWebGLUniformLocationMap\r\n  ) {\r\n    gl.uniform3fv(uniformLocations.uGamma, this.gamma);\r\n  }\r\n\r\n  isNeutralState() {\r\n    const { gamma } = this;\r\n    return gamma[0] === 1 && gamma[1] === 1 && gamma[2] === 1;\r\n  }\r\n\r\n  toObject(): { type: typeof GAMMA; gamma: GammaInput } {\r\n    return {\r\n      type: GAMMA,\r\n      gamma: this.gamma.concat() as GammaInput,\r\n    };\r\n  }\r\n}\r\n\r\nclassRegistry.setClass(Gamma);\r\n","import type { TGrayscaleMode } from '../Grayscale';\r\n\r\nexport const fragmentSource: Record<TGrayscaleMode, string> = {\r\n  average: `\r\n    precision highp float;\r\n    uniform sampler2D uTexture;\r\n    varying vec2 vTexCoord;\r\n    void main() {\r\n      vec4 color = texture2D(uTexture, vTexCoord);\r\n      float average = (color.r + color.b + color.g) / 3.0;\r\n      gl_FragColor = vec4(average, average, average, color.a);\r\n    }\r\n    `,\r\n  lightness: `\r\n    precision highp float;\r\n    uniform sampler2D uTexture;\r\n    uniform int uMode;\r\n    varying vec2 vTexCoord;\r\n    void main() {\r\n      vec4 col = texture2D(uTexture, vTexCoord);\r\n      float average = (max(max(col.r, col.g),col.b) + min(min(col.r, col.g),col.b)) / 2.0;\r\n      gl_FragColor = vec4(average, average, average, col.a);\r\n    }\r\n    `,\r\n  luminosity: `\r\n    precision highp float;\r\n    uniform sampler2D uTexture;\r\n    uniform int uMode;\r\n    varying vec2 vTexCoord;\r\n    void main() {\r\n      vec4 col = texture2D(uTexture, vTexCoord);\r\n      float average = 0.21 * col.r + 0.72 * col.g + 0.07 * col.b;\r\n      gl_FragColor = vec4(average, average, average, col.a);\r\n    }\r\n    `,\r\n};\r\n","import { BaseFilter } from './BaseFilter';\r\nimport type { T2DPipelineState, TWebGLUniformLocationMap } from './typedefs';\r\nimport { classRegistry } from '../ClassRegistry';\r\nimport { fragmentSource } from './shaders/grayscale';\r\n\r\nexport type TGrayscaleMode = 'average' | 'lightness' | 'luminosity';\r\n\r\ntype GrayscaleOwnProps = {\r\n  mode: TGrayscaleMode;\r\n};\r\n\r\nexport const grayscaleDefaultValues: GrayscaleOwnProps = {\r\n  mode: 'average',\r\n};\r\n\r\n/**\r\n * Grayscale image filter class\r\n * @example\r\n * const filter = new Grayscale();\r\n * object.filters.push(filter);\r\n * object.applyFilters();\r\n */\r\nexport class Grayscale extends BaseFilter<'Grayscale', GrayscaleOwnProps> {\r\n  declare mode: TGrayscaleMode;\r\n\r\n  static type = 'Grayscale';\r\n\r\n  static defaults = grayscaleDefaultValues;\r\n\r\n  static uniformLocations = ['uMode'];\r\n\r\n  /**\r\n   * Apply the Grayscale operation to a Uint8Array representing the pixels of an image.\r\n   *\r\n   * @param {Object} options\r\n   * @param {ImageData} options.imageData The Uint8Array to be filtered.\r\n   */\r\n  applyTo2d({ imageData: { data } }: T2DPipelineState) {\r\n    for (let i = 0, value: number; i < data.length; i += 4) {\r\n      switch (this.mode) {\r\n        case 'average':\r\n          value = (data[i] + data[i + 1] + data[i + 2]) / 3;\r\n          break;\r\n        case 'lightness':\r\n          value =\r\n            (Math.min(data[i], data[i + 1], data[i + 2]) +\r\n              Math.max(data[i], data[i + 1], data[i + 2])) /\r\n            2;\r\n          break;\r\n        case 'luminosity':\r\n          value = 0.21 * data[i] + 0.72 * data[i + 1] + 0.07 * data[i + 2];\r\n          break;\r\n      }\r\n\r\n      data[i] = value;\r\n      data[i + 1] = value;\r\n      data[i + 2] = value;\r\n    }\r\n  }\r\n\r\n  getCacheKey() {\r\n    return `${this.type}_${this.mode}`;\r\n  }\r\n\r\n  getFragmentSource() {\r\n    return fragmentSource[this.mode];\r\n  }\r\n\r\n  /**\r\n   * Send data from this filter to its shader program's uniforms.\r\n   *\r\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\r\n   */\r\n  sendUniformData(\r\n    gl: WebGLRenderingContext,\r\n    uniformLocations: TWebGLUniformLocationMap\r\n  ) {\r\n    const mode = 1;\r\n    gl.uniform1i(uniformLocations.uMode, mode);\r\n  }\r\n\r\n  /**\r\n   * Grayscale filter isNeutralState implementation\r\n   * The filter is never neutral\r\n   * on the image\r\n   **/\r\n  isNeutralState() {\r\n    return false;\r\n  }\r\n}\r\n\r\nclassRegistry.setClass(Grayscale);\r\n","import { cos } from '../util/misc/cos';\r\nimport { sin } from '../util/misc/sin';\r\nimport { ColorMatrix } from './ColorMatrix';\r\nimport type { TWebGLPipelineState, T2DPipelineState } from './typedefs';\r\nimport { classRegistry } from '../ClassRegistry';\r\n\r\nexport type HueRotationOwnProps = {\r\n  rotation: number;\r\n};\r\n\r\nexport const hueRotationDefaultValues: HueRotationOwnProps = {\r\n  rotation: 0,\r\n};\r\n\r\n/**\r\n * HueRotation filter class\r\n * @example\r\n * const filter = new HueRotation({\r\n *   rotation: -0.5\r\n * });\r\n * object.filters.push(filter);\r\n * object.applyFilters();\r\n */\r\nexport class HueRotation extends ColorMatrix<\r\n  'HueRotation',\r\n  HueRotationOwnProps\r\n> {\r\n  /**\r\n   * HueRotation value, from -1 to 1.\r\n   */\r\n  declare rotation: HueRotationOwnProps['rotation'];\r\n\r\n  static type = 'HueRotation';\r\n\r\n  static defaults = hueRotationDefaultValues;\r\n\r\n  calculateMatrix() {\r\n    const rad = this.rotation * Math.PI,\r\n      cosine = cos(rad),\r\n      sine = sin(rad),\r\n      aThird = 1 / 3,\r\n      aThirdSqtSin = Math.sqrt(aThird) * sine,\r\n      OneMinusCos = 1 - cosine;\r\n    this.matrix = [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0];\r\n    this.matrix[0] = cosine + OneMinusCos / 3;\r\n    this.matrix[1] = aThird * OneMinusCos - aThirdSqtSin;\r\n    this.matrix[2] = aThird * OneMinusCos + aThirdSqtSin;\r\n    this.matrix[5] = aThird * OneMinusCos + aThirdSqtSin;\r\n    this.matrix[6] = cosine + aThird * OneMinusCos;\r\n    this.matrix[7] = aThird * OneMinusCos - aThirdSqtSin;\r\n    this.matrix[10] = aThird * OneMinusCos - aThirdSqtSin;\r\n    this.matrix[11] = aThird * OneMinusCos + aThirdSqtSin;\r\n    this.matrix[12] = cosine + aThird * OneMinusCos;\r\n  }\r\n\r\n  isNeutralState() {\r\n    return this.rotation === 0;\r\n  }\r\n\r\n  applyTo(options: TWebGLPipelineState | T2DPipelineState) {\r\n    this.calculateMatrix();\r\n    super.applyTo(options);\r\n  }\r\n\r\n  //@ts-expect-error TS and classes with different methods\r\n  toObject(): { type: 'HueRotation'; rotation: number } {\r\n    return {\r\n      type: this.type,\r\n      rotation: this.rotation,\r\n    };\r\n  }\r\n}\r\n\r\nclassRegistry.setClass(HueRotation);\r\n","import { BaseFilter } from './BaseFilter';\r\nimport type { T2DPipelineState, TWebGLUniformLocationMap } from './typedefs';\r\nimport { classRegistry } from '../ClassRegistry';\r\nimport { fragmentSource } from './shaders/invert';\r\n\r\nexport type InvertOwnProps = {\r\n  alpha: boolean;\r\n  invert: boolean;\r\n};\r\n\r\nexport const invertDefaultValues: InvertOwnProps = {\r\n  alpha: false,\r\n  invert: true,\r\n};\r\n\r\n/**\r\n * @example\r\n * const filter = new Invert();\r\n * object.filters.push(filter);\r\n * object.applyFilters(canvas.renderAll.bind(canvas));\r\n */\r\nexport class Invert extends BaseFilter<'Invert', InvertOwnProps> {\r\n  /**\r\n   * Invert also alpha.\r\n   * @param {Boolean} alpha\r\n   * @default\r\n   **/\r\n  declare alpha: InvertOwnProps['alpha'];\r\n\r\n  /**\r\n   * Filter invert. if false, does nothing\r\n   * @param {Boolean} invert\r\n   * @default\r\n   */\r\n  declare invert: InvertOwnProps['invert'];\r\n\r\n  static type = 'Invert';\r\n\r\n  static defaults = invertDefaultValues;\r\n\r\n  static uniformLocations = ['uInvert', 'uAlpha'];\r\n\r\n  /**\r\n   * Apply the Invert operation to a Uint8Array representing the pixels of an image.\r\n   *\r\n   * @param {Object} options\r\n   * @param {ImageData} options.imageData The Uint8Array to be filtered.\r\n   */\r\n  applyTo2d({ imageData: { data } }: T2DPipelineState) {\r\n    for (let i = 0; i < data.length; i += 4) {\r\n      data[i] = 255 - data[i];\r\n      data[i + 1] = 255 - data[i + 1];\r\n      data[i + 2] = 255 - data[i + 2];\r\n\r\n      if (this.alpha) {\r\n        data[i + 3] = 255 - data[i + 3];\r\n      }\r\n    }\r\n  }\r\n\r\n  protected getFragmentSource(): string {\r\n    return fragmentSource;\r\n  }\r\n\r\n  /**\r\n   * Invert filter isNeutralState implementation\r\n   * Used only in image applyFilters to discard filters that will not have an effect\r\n   * on the image\r\n   * @param {Object} options\r\n   **/\r\n  isNeutralState() {\r\n    return !this.invert;\r\n  }\r\n\r\n  /**\r\n   * Send data from this filter to its shader program's uniforms.\r\n   *\r\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\r\n   */\r\n  sendUniformData(\r\n    gl: WebGLRenderingContext,\r\n    uniformLocations: TWebGLUniformLocationMap\r\n  ) {\r\n    gl.uniform1i(uniformLocations.uInvert, Number(this.invert));\r\n    gl.uniform1i(uniformLocations.uAlpha, Number(this.alpha));\r\n  }\r\n}\r\n\r\nclassRegistry.setClass(Invert);\r\n","export const fragmentSource = `\r\n  precision highp float;\r\n  uniform sampler2D uTexture;\r\n  uniform int uInvert;\r\n  uniform int uAlpha;\r\n  varying vec2 vTexCoord;\r\n  void main() {\r\n    vec4 color = texture2D(uTexture, vTexCoord);\r\n    if (uInvert == 1) {\r\n      if (uAlpha == 1) {\r\n        gl_FragColor = vec4(1.0 - color.r,1.0 -color.g,1.0 -color.b,1.0 -color.a);\r\n      } else {\r\n        gl_FragColor = vec4(1.0 - color.r,1.0 -color.g,1.0 -color.b,color.a);\r\n      }\r\n    } else {\r\n      gl_FragColor = color;\r\n    }\r\n  }\r\n`;\r\n","import { BaseFilter } from './BaseFilter';\r\nimport type { T2DPipelineState, TWebGLUniformLocationMap } from './typedefs';\r\nimport { classRegistry } from '../ClassRegistry';\r\nimport { fragmentSource } from './shaders/noise';\r\n\r\nexport type NoiseOwnProps = {\r\n  noise: number;\r\n};\r\n\r\nexport const noiseDefaultValues: NoiseOwnProps = {\r\n  noise: 0,\r\n};\r\n\r\n/**\r\n * Noise filter class\r\n * @example\r\n * const filter = new Noise({\r\n *   noise: 700\r\n * });\r\n * object.filters.push(filter);\r\n * object.applyFilters();\r\n * canvas.renderAll();\r\n */\r\nexport class Noise extends BaseFilter<'Noise', NoiseOwnProps> {\r\n  /**\r\n   * Noise value, from\r\n   * @param {Number} noise\r\n   * @default\r\n   */\r\n  declare noise: NoiseOwnProps['noise'];\r\n\r\n  static type = 'Noise';\r\n\r\n  static defaults = noiseDefaultValues;\r\n\r\n  static uniformLocations = ['uNoise', 'uSeed'];\r\n\r\n  getFragmentSource() {\r\n    return fragmentSource;\r\n  }\r\n\r\n  /**\r\n   * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\r\n   *\r\n   * @param {Object} options\r\n   * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\r\n   */\r\n  applyTo2d({ imageData: { data } }: T2DPipelineState) {\r\n    const noise = this.noise;\r\n    for (let i = 0; i < data.length; i += 4) {\r\n      const rand = (0.5 - Math.random()) * noise;\r\n      data[i] += rand;\r\n      data[i + 1] += rand;\r\n      data[i + 2] += rand;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Send data from this filter to its shader program's uniforms.\r\n   *\r\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\r\n   */\r\n  sendUniformData(\r\n    gl: WebGLRenderingContext,\r\n    uniformLocations: TWebGLUniformLocationMap\r\n  ) {\r\n    gl.uniform1f(uniformLocations.uNoise, this.noise / 255);\r\n    gl.uniform1f(uniformLocations.uSeed, Math.random());\r\n  }\r\n\r\n  isNeutralState() {\r\n    return this.noise === 0;\r\n  }\r\n}\r\n\r\nclassRegistry.setClass(Noise);\r\n","export const fragmentSource = `\r\n  precision highp float;\r\n  uniform sampler2D uTexture;\r\n  uniform float uStepH;\r\n  uniform float uNoise;\r\n  uniform float uSeed;\r\n  varying vec2 vTexCoord;\r\n  float rand(vec2 co, float seed, float vScale) {\r\n    return fract(sin(dot(co.xy * vScale ,vec2(12.9898 , 78.233))) * 43758.5453 * (seed + 0.01) / 2.0);\r\n  }\r\n  void main() {\r\n    vec4 color = texture2D(uTexture, vTexCoord);\r\n    color.rgb += (0.5 - rand(vTexCoord, uSeed, 0.1 / uStepH)) * uNoise;\r\n    gl_FragColor = color;\r\n  }\r\n`;\r\n","import { BaseFilter } from './BaseFilter';\r\nimport type { T2DPipelineState, TWebGLUniformLocationMap } from './typedefs';\r\nimport { classRegistry } from '../ClassRegistry';\r\nimport { fragmentSource } from './shaders/pixelate';\r\n\r\nexport type PixelateOwnProps = {\r\n  blocksize: number;\r\n};\r\n\r\nexport const pixelateDefaultValues: PixelateOwnProps = {\r\n  blocksize: 4,\r\n};\r\n\r\n/**\r\n * Pixelate filter class\r\n * @example\r\n * const filter = new Pixelate({\r\n *   blocksize: 8\r\n * });\r\n * object.filters.push(filter);\r\n * object.applyFilters();\r\n */\r\nexport class Pixelate extends BaseFilter<'Pixelate', PixelateOwnProps> {\r\n  declare blocksize: PixelateOwnProps['blocksize'];\r\n\r\n  static type = 'Pixelate';\r\n\r\n  static defaults = pixelateDefaultValues;\r\n\r\n  static uniformLocations = ['uBlocksize'];\r\n\r\n  /**\r\n   * Apply the Pixelate operation to a Uint8ClampedArray representing the pixels of an image.\r\n   *\r\n   * @param {Object} options\r\n   * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\r\n   */\r\n  applyTo2d({ imageData: { data, width, height } }: T2DPipelineState) {\r\n    for (let i = 0; i < height; i += this.blocksize) {\r\n      for (let j = 0; j < width; j += this.blocksize) {\r\n        const index = i * 4 * width + j * 4;\r\n        const r = data[index];\r\n        const g = data[index + 1];\r\n        const b = data[index + 2];\r\n        const a = data[index + 3];\r\n\r\n        for (let _i = i; _i < Math.min(i + this.blocksize, height); _i++) {\r\n          for (let _j = j; _j < Math.min(j + this.blocksize, width); _j++) {\r\n            const index = _i * 4 * width + _j * 4;\r\n            data[index] = r;\r\n            data[index + 1] = g;\r\n            data[index + 2] = b;\r\n            data[index + 3] = a;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Indicate when the filter is not gonna apply changes to the image\r\n   **/\r\n  isNeutralState() {\r\n    return this.blocksize === 1;\r\n  }\r\n\r\n  protected getFragmentSource(): string {\r\n    return fragmentSource;\r\n  }\r\n\r\n  /**\r\n   * Send data from this filter to its shader program's uniforms.\r\n   *\r\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\r\n   */\r\n  sendUniformData(\r\n    gl: WebGLRenderingContext,\r\n    uniformLocations: TWebGLUniformLocationMap\r\n  ) {\r\n    gl.uniform1f(uniformLocations.uBlocksize, this.blocksize);\r\n  }\r\n}\r\n\r\nclassRegistry.setClass(Pixelate);\r\n","export const fragmentSource = `\r\n  precision highp float;\r\n  uniform sampler2D uTexture;\r\n  uniform float uBlocksize;\r\n  uniform float uStepW;\r\n  uniform float uStepH;\r\n  varying vec2 vTexCoord;\r\n  void main() {\r\n    float blockW = uBlocksize * uStepW;\r\n    float blockH = uBlocksize * uStepW;\r\n    int posX = int(vTexCoord.x / blockW);\r\n    int posY = int(vTexCoord.y / blockH);\r\n    float fposX = float(posX);\r\n    float fposY = float(posY);\r\n    vec2 squareCoords = vec2(fposX * blockW, fposY * blockH);\r\n    vec4 color = texture2D(uTexture, squareCoords);\r\n    gl_FragColor = color;\r\n  }\r\n`;\r\n","import { classRegistry } from '../ClassRegistry';\r\nimport { Color } from '../color/Color';\r\nimport { BaseFilter } from './BaseFilter';\r\nimport { fragmentShader } from './shaders/removeColor';\r\nimport type { T2DPipelineState, TWebGLUniformLocationMap } from './typedefs';\r\n\r\nexport type RemoveColorOwnProps = {\r\n  color: string;\r\n  distance: number;\r\n  useAlpha: boolean;\r\n};\r\n\r\nexport const removeColorDefaultValues: RemoveColorOwnProps = {\r\n  color: '#FFFFFF',\r\n  distance: 0.02,\r\n  useAlpha: false,\r\n};\r\n\r\n/**\r\n * Remove white filter class\r\n * @example\r\n * const filter = new RemoveColor({\r\n *   threshold: 0.2,\r\n * });\r\n * object.filters.push(filter);\r\n * object.applyFilters();\r\n * canvas.renderAll();\r\n */\r\nexport class RemoveColor extends BaseFilter<\r\n  'RemoveColor',\r\n  RemoveColorOwnProps\r\n> {\r\n  /**\r\n   * Color to remove, in any format understood by {@link Color}.\r\n   * @param {String} type\r\n   * @default\r\n   */\r\n  declare color: RemoveColorOwnProps['color'];\r\n\r\n  /**\r\n   * distance to actual color, as value up or down from each r,g,b\r\n   * between 0 and 1\r\n   **/\r\n  declare distance: RemoveColorOwnProps['distance'];\r\n\r\n  /**\r\n   * For color to remove inside distance, use alpha channel for a smoother deletion\r\n   * NOT IMPLEMENTED YET\r\n   **/\r\n  declare useAlpha: RemoveColorOwnProps['useAlpha'];\r\n\r\n  static type = 'RemoveColor';\r\n\r\n  static defaults = removeColorDefaultValues;\r\n\r\n  static uniformLocations = ['uLow', 'uHigh'];\r\n\r\n  getFragmentSource() {\r\n    return fragmentShader;\r\n  }\r\n\r\n  /**\r\n   * Applies filter to canvas element\r\n   * @param {Object} canvasEl Canvas element to apply filter to\r\n   */\r\n  applyTo2d({ imageData: { data } }: T2DPipelineState) {\r\n    const distance = this.distance * 255,\r\n      source = new Color(this.color).getSource(),\r\n      lowC = [source[0] - distance, source[1] - distance, source[2] - distance],\r\n      highC = [\r\n        source[0] + distance,\r\n        source[1] + distance,\r\n        source[2] + distance,\r\n      ];\r\n\r\n    for (let i = 0; i < data.length; i += 4) {\r\n      const r = data[i];\r\n      const g = data[i + 1];\r\n      const b = data[i + 2];\r\n\r\n      if (\r\n        r > lowC[0] &&\r\n        g > lowC[1] &&\r\n        b > lowC[2] &&\r\n        r < highC[0] &&\r\n        g < highC[1] &&\r\n        b < highC[2]\r\n      ) {\r\n        data[i + 3] = 0;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Send data from this filter to its shader program's uniforms.\r\n   *\r\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\r\n   */\r\n  sendUniformData(\r\n    gl: WebGLRenderingContext,\r\n    uniformLocations: TWebGLUniformLocationMap\r\n  ) {\r\n    const source = new Color(this.color).getSource(),\r\n      distance = this.distance,\r\n      lowC = [\r\n        0 + source[0] / 255 - distance,\r\n        0 + source[1] / 255 - distance,\r\n        0 + source[2] / 255 - distance,\r\n        1,\r\n      ],\r\n      highC = [\r\n        source[0] / 255 + distance,\r\n        source[1] / 255 + distance,\r\n        source[2] / 255 + distance,\r\n        1,\r\n      ];\r\n    gl.uniform4fv(uniformLocations.uLow, lowC);\r\n    gl.uniform4fv(uniformLocations.uHigh, highC);\r\n  }\r\n}\r\n\r\nclassRegistry.setClass(RemoveColor);\r\n","export const fragmentShader = `\r\nprecision highp float;\r\nuniform sampler2D uTexture;\r\nuniform vec4 uLow;\r\nuniform vec4 uHigh;\r\nvarying vec2 vTexCoord;\r\nvoid main() {\r\n  gl_FragColor = texture2D(uTexture, vTexCoord);\r\n  if(all(greaterThan(gl_FragColor.rgb,uLow.rgb)) && all(greaterThan(uHigh.rgb,gl_FragColor.rgb))) {\r\n    gl_FragColor.a = 0.0;\r\n  }\r\n}\r\n`;\r\n","import { BaseFilter } from './BaseFilter';\r\nimport type {\r\n  T2DPipelineState,\r\n  TWebGLPipelineState,\r\n  TWebGLUniformLocationMap,\r\n} from './typedefs';\r\nimport { isWebGLPipelineState } from './utils';\r\nimport { classRegistry } from '../ClassRegistry';\r\nimport { createCanvasElement } from '../util/misc/dom';\r\nimport type { XY } from '../Point';\r\n\r\nexport type TResizeType = 'bilinear' | 'hermite' | 'sliceHack' | 'lanczos';\r\n\r\nexport type ResizeOwnProps = {\r\n  resizeType: TResizeType;\r\n  scaleX: number;\r\n  scaleY: number;\r\n  lanczosLobes: number;\r\n};\r\n\r\nexport const resizeDefaultValues: ResizeOwnProps = {\r\n  resizeType: 'hermite',\r\n  scaleX: 1,\r\n  scaleY: 1,\r\n  lanczosLobes: 3,\r\n};\r\n\r\ntype ResizeDuring2DResize = Resize & {\r\n  rcpScaleX: number;\r\n  rcpScaleY: number;\r\n};\r\n\r\ntype ResizeDuringWEBGLResize = Resize & {\r\n  rcpScaleX: number;\r\n  rcpScaleY: number;\r\n  horizontal: boolean;\r\n  width: number;\r\n  height: number;\r\n  taps: number[];\r\n  tempScale: number;\r\n  dH: number;\r\n  dW: number;\r\n};\r\n\r\n/**\r\n * Resize image filter class\r\n * @example\r\n * const filter = new Resize();\r\n * object.filters.push(filter);\r\n * object.applyFilters(canvas.renderAll.bind(canvas));\r\n */\r\nexport class Resize extends BaseFilter<'Resize', ResizeOwnProps> {\r\n  /**\r\n   * Resize type\r\n   * for webgl resizeType is just lanczos, for canvas2d can be:\r\n   * bilinear, hermite, sliceHack, lanczos.\r\n   * @default\r\n   */\r\n  declare resizeType: ResizeOwnProps['resizeType'];\r\n\r\n  /**\r\n   * Scale factor for resizing, x axis\r\n   * @param {Number} scaleX\r\n   * @default\r\n   */\r\n  declare scaleX: ResizeOwnProps['scaleX'];\r\n\r\n  /**\r\n   * Scale factor for resizing, y axis\r\n   * @param {Number} scaleY\r\n   * @default\r\n   */\r\n  declare scaleY: ResizeOwnProps['scaleY'];\r\n\r\n  /**\r\n   * LanczosLobes parameter for lanczos filter, valid for resizeType lanczos\r\n   * @param {Number} lanczosLobes\r\n   * @default\r\n   */\r\n  declare lanczosLobes: ResizeOwnProps['lanczosLobes'];\r\n\r\n  static type = 'Resize';\r\n\r\n  static defaults = resizeDefaultValues;\r\n\r\n  static uniformLocations = ['uDelta', 'uTaps'];\r\n\r\n  /**\r\n   * Send data from this filter to its shader program's uniforms.\r\n   *\r\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\r\n   */\r\n  sendUniformData(\r\n    this: ResizeDuringWEBGLResize,\r\n    gl: WebGLRenderingContext,\r\n    uniformLocations: TWebGLUniformLocationMap\r\n  ) {\r\n    gl.uniform2fv(\r\n      uniformLocations.uDelta,\r\n      this.horizontal ? [1 / this.width, 0] : [0, 1 / this.height]\r\n    );\r\n    gl.uniform1fv(uniformLocations.uTaps, this.taps);\r\n  }\r\n\r\n  getFilterWindow(this: ResizeDuringWEBGLResize) {\r\n    const scale = this.tempScale;\r\n    return Math.ceil(this.lanczosLobes / scale);\r\n  }\r\n\r\n  getCacheKey(this: ResizeDuringWEBGLResize): string {\r\n    const filterWindow = this.getFilterWindow();\r\n    return `${this.type}_${filterWindow}`;\r\n  }\r\n\r\n  getFragmentSource(this: ResizeDuringWEBGLResize): string {\r\n    const filterWindow = this.getFilterWindow();\r\n    return this.generateShader(filterWindow);\r\n  }\r\n\r\n  getTaps(this: ResizeDuringWEBGLResize) {\r\n    const lobeFunction = this.lanczosCreate(this.lanczosLobes),\r\n      scale = this.tempScale,\r\n      filterWindow = this.getFilterWindow(),\r\n      taps = new Array(filterWindow);\r\n    for (let i = 1; i <= filterWindow; i++) {\r\n      taps[i - 1] = lobeFunction(i * scale);\r\n    }\r\n    return taps;\r\n  }\r\n\r\n  /**\r\n   * Generate vertex and shader sources from the necessary steps numbers\r\n   * @param {Number} filterWindow\r\n   */\r\n  generateShader(filterWindow: number) {\r\n    const offsets = new Array(filterWindow);\r\n    for (let i = 1; i <= filterWindow; i++) {\r\n      offsets[i - 1] = `${i}.0 * uDelta`;\r\n    }\r\n    return `\r\n      precision highp float;\r\n      uniform sampler2D uTexture;\r\n      uniform vec2 uDelta;\r\n      varying vec2 vTexCoord;\r\n      uniform float uTaps[${filterWindow}];\r\n      void main() {\r\n        vec4 color = texture2D(uTexture, vTexCoord);\r\n        float sum = 1.0;\r\n        ${offsets\r\n          .map(\r\n            (offset, i) => `\r\n              color += texture2D(uTexture, vTexCoord + ${offset}) * uTaps[${i}] + texture2D(uTexture, vTexCoord - ${offset}) * uTaps[${i}];\r\n              sum += 2.0 * uTaps[${i}];\r\n            `\r\n          )\r\n          .join('\\n')}\r\n        gl_FragColor = color / sum;\r\n      }\r\n    `;\r\n  }\r\n\r\n  applyToForWebgl(this: ResizeDuringWEBGLResize, options: TWebGLPipelineState) {\r\n    options.passes++;\r\n    this.width = options.sourceWidth;\r\n    this.horizontal = true;\r\n    this.dW = Math.round(this.width * this.scaleX);\r\n    this.dH = options.sourceHeight;\r\n    this.tempScale = this.dW / this.width;\r\n    this.taps = this.getTaps();\r\n    options.destinationWidth = this.dW;\r\n    super.applyTo(options);\r\n    options.sourceWidth = options.destinationWidth;\r\n\r\n    this.height = options.sourceHeight;\r\n    this.horizontal = false;\r\n    this.dH = Math.round(this.height * this.scaleY);\r\n    this.tempScale = this.dH / this.height;\r\n    this.taps = this.getTaps();\r\n    options.destinationHeight = this.dH;\r\n    super.applyTo(options);\r\n    options.sourceHeight = options.destinationHeight;\r\n  }\r\n\r\n  /**\r\n   * Apply the resize filter to the image\r\n   * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.\r\n   *\r\n   * @param {Object} options\r\n   * @param {Number} options.passes The number of filters remaining to be executed\r\n   * @param {Boolean} options.webgl Whether to use webgl to render the filter.\r\n   * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\r\n   * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\r\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\r\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\r\n   */\r\n  applyTo(options: TWebGLPipelineState | T2DPipelineState) {\r\n    if (isWebGLPipelineState(options)) {\r\n      (this as unknown as ResizeDuringWEBGLResize).applyToForWebgl(options);\r\n    } else {\r\n      (this as unknown as ResizeDuring2DResize).applyTo2d(options);\r\n    }\r\n  }\r\n\r\n  isNeutralState() {\r\n    return this.scaleX === 1 && this.scaleY === 1;\r\n  }\r\n\r\n  lanczosCreate(lobes: number) {\r\n    return (x: number) => {\r\n      if (x >= lobes || x <= -lobes) {\r\n        return 0.0;\r\n      }\r\n      if (x < 1.1920929e-7 && x > -1.1920929e-7) {\r\n        return 1.0;\r\n      }\r\n      x *= Math.PI;\r\n      const xx = x / lobes;\r\n      return ((Math.sin(x) / x) * Math.sin(xx)) / xx;\r\n    };\r\n  }\r\n\r\n  applyTo2d(this: ResizeDuring2DResize, options: T2DPipelineState) {\r\n    const imageData = options.imageData,\r\n      scaleX = this.scaleX,\r\n      scaleY = this.scaleY;\r\n\r\n    this.rcpScaleX = 1 / scaleX;\r\n    this.rcpScaleY = 1 / scaleY;\r\n\r\n    const oW = imageData.width;\r\n    const oH = imageData.height;\r\n    const dW = Math.round(oW * scaleX);\r\n    const dH = Math.round(oH * scaleY);\r\n    let newData: ImageData;\r\n\r\n    if (this.resizeType === 'sliceHack') {\r\n      newData = this.sliceByTwo(options, oW, oH, dW, dH);\r\n    } else if (this.resizeType === 'hermite') {\r\n      newData = this.hermiteFastResize(options, oW, oH, dW, dH);\r\n    } else if (this.resizeType === 'bilinear') {\r\n      newData = this.bilinearFiltering(options, oW, oH, dW, dH);\r\n    } else if (this.resizeType === 'lanczos') {\r\n      newData = this.lanczosResize(options, oW, oH, dW, dH);\r\n    } else {\r\n      // this should never trigger, is here just for safety net.\r\n      newData = new ImageData(dW, dH);\r\n    }\r\n    options.imageData = newData;\r\n  }\r\n\r\n  /**\r\n   * Filter sliceByTwo\r\n   * @param {Object} canvasEl Canvas element to apply filter to\r\n   * @param {Number} oW Original Width\r\n   * @param {Number} oH Original Height\r\n   * @param {Number} dW Destination Width\r\n   * @param {Number} dH Destination Height\r\n   * @returns {ImageData}\r\n   */\r\n  sliceByTwo(\r\n    options: T2DPipelineState,\r\n    oW: number,\r\n    oH: number,\r\n    dW: number,\r\n    dH: number\r\n  ) {\r\n    const imageData = options.imageData;\r\n    const mult = 0.5;\r\n    let doneW = false;\r\n    let doneH = false;\r\n    let stepW = oW * mult;\r\n    let stepH = oH * mult;\r\n    const resources = options.filterBackend.resources;\r\n    let sX = 0;\r\n    let sY = 0;\r\n    const dX = oW;\r\n    let dY = 0;\r\n    if (!resources.sliceByTwo) {\r\n      resources.sliceByTwo = createCanvasElement();\r\n    }\r\n    const tmpCanvas = resources.sliceByTwo;\r\n    if (tmpCanvas.width < oW * 1.5 || tmpCanvas.height < oH) {\r\n      tmpCanvas.width = oW * 1.5;\r\n      tmpCanvas.height = oH;\r\n    }\r\n    const ctx = tmpCanvas.getContext('2d')!;\r\n    ctx.clearRect(0, 0, oW * 1.5, oH);\r\n    ctx.putImageData(imageData, 0, 0);\r\n\r\n    dW = Math.floor(dW);\r\n    dH = Math.floor(dH);\r\n\r\n    while (!doneW || !doneH) {\r\n      oW = stepW;\r\n      oH = stepH;\r\n      if (dW < Math.floor(stepW * mult)) {\r\n        stepW = Math.floor(stepW * mult);\r\n      } else {\r\n        stepW = dW;\r\n        doneW = true;\r\n      }\r\n      if (dH < Math.floor(stepH * mult)) {\r\n        stepH = Math.floor(stepH * mult);\r\n      } else {\r\n        stepH = dH;\r\n        doneH = true;\r\n      }\r\n      ctx.drawImage(tmpCanvas, sX, sY, oW, oH, dX, dY, stepW, stepH);\r\n      sX = dX;\r\n      sY = dY;\r\n      dY += stepH;\r\n    }\r\n    return ctx.getImageData(sX, sY, dW, dH);\r\n  }\r\n\r\n  /**\r\n   * Filter lanczosResize\r\n   * @param {Object} canvasEl Canvas element to apply filter to\r\n   * @param {Number} oW Original Width\r\n   * @param {Number} oH Original Height\r\n   * @param {Number} dW Destination Width\r\n   * @param {Number} dH Destination Height\r\n   * @returns {ImageData}\r\n   */\r\n  lanczosResize(\r\n    this: ResizeDuring2DResize,\r\n    options: T2DPipelineState,\r\n    oW: number,\r\n    oH: number,\r\n    dW: number,\r\n    dH: number\r\n  ): ImageData {\r\n    function process(u: number): ImageData {\r\n      let v, i, weight, idx, a, red, green, blue, alpha, fX, fY;\r\n      center.x = (u + 0.5) * ratioX;\r\n      icenter.x = Math.floor(center.x);\r\n      for (v = 0; v < dH; v++) {\r\n        center.y = (v + 0.5) * ratioY;\r\n        icenter.y = Math.floor(center.y);\r\n        a = 0;\r\n        red = 0;\r\n        green = 0;\r\n        blue = 0;\r\n        alpha = 0;\r\n        for (i = icenter.x - range2X; i <= icenter.x + range2X; i++) {\r\n          if (i < 0 || i >= oW) {\r\n            continue;\r\n          }\r\n          fX = Math.floor(1000 * Math.abs(i - center.x));\r\n          if (!cacheLanc[fX]) {\r\n            cacheLanc[fX] = {};\r\n          }\r\n          for (let j = icenter.y - range2Y; j <= icenter.y + range2Y; j++) {\r\n            if (j < 0 || j >= oH) {\r\n              continue;\r\n            }\r\n            fY = Math.floor(1000 * Math.abs(j - center.y));\r\n            if (!cacheLanc[fX][fY]) {\r\n              cacheLanc[fX][fY] = lanczos(\r\n                Math.sqrt(\r\n                  Math.pow(fX * rcpRatioX, 2) + Math.pow(fY * rcpRatioY, 2)\r\n                ) / 1000\r\n              );\r\n            }\r\n            weight = cacheLanc[fX][fY];\r\n            if (weight > 0) {\r\n              idx = (j * oW + i) * 4;\r\n              a += weight;\r\n              red += weight * srcData[idx];\r\n              green += weight * srcData[idx + 1];\r\n              blue += weight * srcData[idx + 2];\r\n              alpha += weight * srcData[idx + 3];\r\n            }\r\n          }\r\n        }\r\n        idx = (v * dW + u) * 4;\r\n        destData[idx] = red / a;\r\n        destData[idx + 1] = green / a;\r\n        destData[idx + 2] = blue / a;\r\n        destData[idx + 3] = alpha / a;\r\n      }\r\n\r\n      if (++u < dW) {\r\n        return process(u);\r\n      } else {\r\n        return destImg;\r\n      }\r\n    }\r\n\r\n    const srcData = options.imageData.data,\r\n      destImg = options.ctx.createImageData(dW, dH),\r\n      destData = destImg.data,\r\n      lanczos = this.lanczosCreate(this.lanczosLobes),\r\n      ratioX = this.rcpScaleX,\r\n      ratioY = this.rcpScaleY,\r\n      rcpRatioX = 2 / this.rcpScaleX,\r\n      rcpRatioY = 2 / this.rcpScaleY,\r\n      range2X = Math.ceil((ratioX * this.lanczosLobes) / 2),\r\n      range2Y = Math.ceil((ratioY * this.lanczosLobes) / 2),\r\n      cacheLanc: Record<number, Record<number, number>> = {},\r\n      center: XY = { x: 0, y: 0 },\r\n      icenter: XY = { x: 0, y: 0 };\r\n\r\n    return process(0);\r\n  }\r\n\r\n  /**\r\n   * bilinearFiltering\r\n   * @param {Object} canvasEl Canvas element to apply filter to\r\n   * @param {Number} oW Original Width\r\n   * @param {Number} oH Original Height\r\n   * @param {Number} dW Destination Width\r\n   * @param {Number} dH Destination Height\r\n   * @returns {ImageData}\r\n   */\r\n  bilinearFiltering(\r\n    this: ResizeDuring2DResize,\r\n    options: T2DPipelineState,\r\n    oW: number,\r\n    oH: number,\r\n    dW: number,\r\n    dH: number\r\n  ) {\r\n    let a;\r\n    let b;\r\n    let c;\r\n    let d;\r\n    let x;\r\n    let y;\r\n    let i;\r\n    let j;\r\n    let xDiff;\r\n    let yDiff;\r\n    let chnl;\r\n    let color;\r\n    let offset = 0;\r\n    let origPix;\r\n    const ratioX = this.rcpScaleX;\r\n    const ratioY = this.rcpScaleY;\r\n    const w4 = 4 * (oW - 1);\r\n    const img = options.imageData;\r\n    const pixels = img.data;\r\n    const destImage = options.ctx.createImageData(dW, dH);\r\n    const destPixels = destImage.data;\r\n    for (i = 0; i < dH; i++) {\r\n      for (j = 0; j < dW; j++) {\r\n        x = Math.floor(ratioX * j);\r\n        y = Math.floor(ratioY * i);\r\n        xDiff = ratioX * j - x;\r\n        yDiff = ratioY * i - y;\r\n        origPix = 4 * (y * oW + x);\r\n\r\n        for (chnl = 0; chnl < 4; chnl++) {\r\n          a = pixels[origPix + chnl];\r\n          b = pixels[origPix + 4 + chnl];\r\n          c = pixels[origPix + w4 + chnl];\r\n          d = pixels[origPix + w4 + 4 + chnl];\r\n          color =\r\n            a * (1 - xDiff) * (1 - yDiff) +\r\n            b * xDiff * (1 - yDiff) +\r\n            c * yDiff * (1 - xDiff) +\r\n            d * xDiff * yDiff;\r\n          destPixels[offset++] = color;\r\n        }\r\n      }\r\n    }\r\n    return destImage;\r\n  }\r\n\r\n  /**\r\n   * hermiteFastResize\r\n   * @param {Object} canvasEl Canvas element to apply filter to\r\n   * @param {Number} oW Original Width\r\n   * @param {Number} oH Original Height\r\n   * @param {Number} dW Destination Width\r\n   * @param {Number} dH Destination Height\r\n   * @returns {ImageData}\r\n   */\r\n  hermiteFastResize(\r\n    this: ResizeDuring2DResize,\r\n    options: T2DPipelineState,\r\n    oW: number,\r\n    oH: number,\r\n    dW: number,\r\n    dH: number\r\n  ) {\r\n    const ratioW = this.rcpScaleX,\r\n      ratioH = this.rcpScaleY,\r\n      ratioWHalf = Math.ceil(ratioW / 2),\r\n      ratioHHalf = Math.ceil(ratioH / 2),\r\n      img = options.imageData,\r\n      data = img.data,\r\n      img2 = options.ctx.createImageData(dW, dH),\r\n      data2 = img2.data;\r\n    for (let j = 0; j < dH; j++) {\r\n      for (let i = 0; i < dW; i++) {\r\n        const x2 = (i + j * dW) * 4;\r\n        let weight = 0;\r\n        let weights = 0;\r\n        let weightsAlpha = 0;\r\n        let gxR = 0;\r\n        let gxG = 0;\r\n        let gxB = 0;\r\n        let gxA = 0;\r\n        const centerY = (j + 0.5) * ratioH;\r\n        for (let yy = Math.floor(j * ratioH); yy < (j + 1) * ratioH; yy++) {\r\n          const dy = Math.abs(centerY - (yy + 0.5)) / ratioHHalf,\r\n            centerX = (i + 0.5) * ratioW,\r\n            w0 = dy * dy;\r\n          for (let xx = Math.floor(i * ratioW); xx < (i + 1) * ratioW; xx++) {\r\n            let dx = Math.abs(centerX - (xx + 0.5)) / ratioWHalf;\r\n            const w = Math.sqrt(w0 + dx * dx);\r\n            /* eslint-disable max-depth */\r\n            if (w > 1 && w < -1) {\r\n              continue;\r\n            }\r\n            //hermite filter\r\n            weight = 2 * w * w * w - 3 * w * w + 1;\r\n            if (weight > 0) {\r\n              dx = 4 * (xx + yy * oW);\r\n              //alpha\r\n              gxA += weight * data[dx + 3];\r\n              weightsAlpha += weight;\r\n              //colors\r\n              if (data[dx + 3] < 255) {\r\n                weight = (weight * data[dx + 3]) / 250;\r\n              }\r\n              gxR += weight * data[dx];\r\n              gxG += weight * data[dx + 1];\r\n              gxB += weight * data[dx + 2];\r\n              weights += weight;\r\n            }\r\n            /* eslint-enable max-depth */\r\n          }\r\n        }\r\n        data2[x2] = gxR / weights;\r\n        data2[x2 + 1] = gxG / weights;\r\n        data2[x2 + 2] = gxB / weights;\r\n        data2[x2 + 3] = gxA / weightsAlpha;\r\n      }\r\n    }\r\n    return img2;\r\n  }\r\n}\r\n\r\nclassRegistry.setClass(Resize);\r\n","import { BaseFilter } from './BaseFilter';\r\nimport type { T2DPipelineState, TWebGLUniformLocationMap } from './typedefs';\r\nimport { classRegistry } from '../ClassRegistry';\r\nimport { fragmentSource } from './shaders/saturation';\r\n\r\nexport type SaturationOwnProps = {\r\n  saturation: number;\r\n};\r\n\r\nexport const saturationDefaultValues: SaturationOwnProps = {\r\n  saturation: 0,\r\n};\r\n\r\n/**\r\n * Saturate filter class\r\n * @example\r\n * const filter = new Saturation({\r\n *   saturation: 1\r\n * });\r\n * object.filters.push(filter);\r\n * object.applyFilters();\r\n */\r\nexport class Saturation extends BaseFilter<'Saturation', SaturationOwnProps> {\r\n  /**\r\n   * Saturation value, from -1 to 1.\r\n   * Increases/decreases the color saturation.\r\n   * A value of 0 has no effect.\r\n   *\r\n   * @param {Number} saturation\r\n   * @default\r\n   */\r\n  declare saturation: SaturationOwnProps['saturation'];\r\n\r\n  static type = 'Saturation';\r\n\r\n  static defaults = saturationDefaultValues;\r\n\r\n  static uniformLocations = ['uSaturation'];\r\n\r\n  getFragmentSource() {\r\n    return fragmentSource;\r\n  }\r\n\r\n  /**\r\n   * Apply the Saturation operation to a Uint8ClampedArray representing the pixels of an image.\r\n   *\r\n   * @param {Object} options\r\n   * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\r\n   */\r\n  applyTo2d({ imageData: { data } }: T2DPipelineState) {\r\n    const adjust = -this.saturation;\r\n    for (let i = 0; i < data.length; i += 4) {\r\n      const max = Math.max(data[i], data[i + 1], data[i + 2]);\r\n      data[i] += max !== data[i] ? (max - data[i]) * adjust : 0;\r\n      data[i + 1] += max !== data[i + 1] ? (max - data[i + 1]) * adjust : 0;\r\n      data[i + 2] += max !== data[i + 2] ? (max - data[i + 2]) * adjust : 0;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Send data from this filter to its shader program's uniforms.\r\n   *\r\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\r\n   */\r\n  sendUniformData(\r\n    gl: WebGLRenderingContext,\r\n    uniformLocations: TWebGLUniformLocationMap\r\n  ) {\r\n    gl.uniform1f(uniformLocations.uSaturation, -this.saturation);\r\n  }\r\n\r\n  isNeutralState() {\r\n    return this.saturation === 0;\r\n  }\r\n}\r\n\r\nclassRegistry.setClass(Saturation);\r\n","export const fragmentSource = `\r\n  precision highp float;\r\n  uniform sampler2D uTexture;\r\n  uniform float uSaturation;\r\n  varying vec2 vTexCoord;\r\n  void main() {\r\n    vec4 color = texture2D(uTexture, vTexCoord);\r\n    float rgMax = max(color.r, color.g);\r\n    float rgbMax = max(rgMax, color.b);\r\n    color.r += rgbMax != color.r ? (rgbMax - color.r) * uSaturation : 0.00;\r\n    color.g += rgbMax != color.g ? (rgbMax - color.g) * uSaturation : 0.00;\r\n    color.b += rgbMax != color.b ? (rgbMax - color.b) * uSaturation : 0.00;\r\n    gl_FragColor = color;\r\n  }\r\n`;\r\n","import { BaseFilter } from './BaseFilter';\r\nimport type { T2DPipelineState, TWebGLUniformLocationMap } from './typedefs';\r\nimport { classRegistry } from '../ClassRegistry';\r\nimport { fragmentSource } from './shaders/vibrance';\r\n\r\nexport type VibranceOwnProps = {\r\n  vibrance: number;\r\n};\r\n\r\nexport const vibranceDefaultValues: VibranceOwnProps = {\r\n  vibrance: 0,\r\n};\r\n\r\n/**\r\n * Vibrance filter class\r\n * @example\r\n * const filter = new Vibrance({\r\n *   vibrance: 1\r\n * });\r\n * object.filters.push(filter);\r\n * object.applyFilters();\r\n */\r\nexport class Vibrance extends BaseFilter<'Vibrance', VibranceOwnProps> {\r\n  /**\r\n   * Vibrance value, from -1 to 1.\r\n   * Increases/decreases the saturation of more muted colors with less effect on saturated colors.\r\n   * A value of 0 has no effect.\r\n   *\r\n   * @param {Number} vibrance\r\n   * @default\r\n   */\r\n  declare vibrance: VibranceOwnProps['vibrance'];\r\n\r\n  static type = 'Vibrance';\r\n\r\n  static defaults = vibranceDefaultValues;\r\n\r\n  static uniformLocations = ['uVibrance'];\r\n\r\n  getFragmentSource() {\r\n    return fragmentSource;\r\n  }\r\n\r\n  /**\r\n   * Apply the Vibrance operation to a Uint8ClampedArray representing the pixels of an image.\r\n   *\r\n   * @param {Object} options\r\n   * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\r\n   */\r\n  applyTo2d({ imageData: { data } }: T2DPipelineState) {\r\n    const adjust = -this.vibrance;\r\n    for (let i = 0; i < data.length; i += 4) {\r\n      const max = Math.max(data[i], data[i + 1], data[i + 2]);\r\n      const avg = (data[i] + data[i + 1] + data[i + 2]) / 3;\r\n      const amt = ((Math.abs(max - avg) * 2) / 255) * adjust;\r\n      data[i] += max !== data[i] ? (max - data[i]) * amt : 0;\r\n      data[i + 1] += max !== data[i + 1] ? (max - data[i + 1]) * amt : 0;\r\n      data[i + 2] += max !== data[i + 2] ? (max - data[i + 2]) * amt : 0;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Send data from this filter to its shader program's uniforms.\r\n   *\r\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\r\n   * @param {TWebGLUniformLocationMap} uniformLocations A map of string uniform names to WebGLUniformLocation objects\r\n   */\r\n  sendUniformData(\r\n    gl: WebGLRenderingContext,\r\n    uniformLocations: TWebGLUniformLocationMap\r\n  ) {\r\n    gl.uniform1f(uniformLocations.uVibrance, -this.vibrance);\r\n  }\r\n\r\n  isNeutralState() {\r\n    return this.vibrance === 0;\r\n  }\r\n}\r\n\r\nclassRegistry.setClass(Vibrance);\r\n","export const fragmentSource = `\r\n  precision highp float;\r\n  uniform sampler2D uTexture;\r\n  uniform float uVibrance;\r\n  varying vec2 vTexCoord;\r\n  void main() {\r\n    vec4 color = texture2D(uTexture, vTexCoord);\r\n    float max = max(color.r, max(color.g, color.b));\r\n    float avg = (color.r + color.g + color.b) / 3.0;\r\n    float amt = (abs(max - avg) * 2.0) * uVibrance;\r\n    color.r += max != color.r ? (max - color.r) * amt : 0.00;\r\n    color.g += max != color.g ? (max - color.g) * amt : 0.00;\r\n    color.b += max != color.b ? (max - color.b) * amt : 0.00;\r\n    gl_FragColor = color;\r\n  }\r\n`;\r\n","import { Color } from '../color/Color';\r\nimport type { Point } from '../Point';\r\nimport { Shadow } from '../Shadow';\r\nimport { Circle } from '../shapes/Circle';\r\nimport { Group } from '../shapes/Group';\r\nimport { getRandomInt } from '../util/internals';\r\nimport type { Canvas } from '../canvas/Canvas';\r\nimport { BaseBrush } from './BaseBrush';\r\nimport type { CircleBrushPoint } from './typedefs';\r\nimport { CENTER } from '../constants';\r\n\r\nexport class CircleBrush extends BaseBrush {\r\n  /**\r\n   * Width of a brush\r\n   * @type Number\r\n   * @default\r\n   */\r\n  width = 10;\r\n\r\n  declare points: CircleBrushPoint[];\r\n\r\n  constructor(canvas: Canvas) {\r\n    super(canvas);\r\n    this.points = [];\r\n  }\r\n\r\n  /**\r\n   * Invoked inside on mouse down and mouse move\r\n   * @param {Point} pointer\r\n   */\r\n  drawDot(pointer: Point) {\r\n    const point = this.addPoint(pointer),\r\n      ctx = this.canvas.contextTop;\r\n    this._saveAndTransform(ctx);\r\n    this.dot(ctx, point);\r\n    ctx.restore();\r\n  }\r\n\r\n  dot(ctx: CanvasRenderingContext2D, point: CircleBrushPoint) {\r\n    ctx.fillStyle = point.fill;\r\n    ctx.beginPath();\r\n    ctx.arc(point.x, point.y, point.radius, 0, Math.PI * 2, false);\r\n    ctx.closePath();\r\n    ctx.fill();\r\n  }\r\n\r\n  /**\r\n   * Invoked on mouse down\r\n   */\r\n  onMouseDown(pointer: Point) {\r\n    this.points = [];\r\n    this.canvas.clearContext(this.canvas.contextTop);\r\n    this._setShadow();\r\n    this.drawDot(pointer);\r\n  }\r\n\r\n  /**\r\n   * Render the full state of the brush\r\n   * @private\r\n   */\r\n  _render() {\r\n    const ctx = this.canvas.contextTop,\r\n      points = this.points;\r\n    this._saveAndTransform(ctx);\r\n    for (let i = 0; i < points.length; i++) {\r\n      this.dot(ctx, points[i]);\r\n    }\r\n    ctx.restore();\r\n  }\r\n\r\n  /**\r\n   * Invoked on mouse move\r\n   * @param {Point} pointer\r\n   */\r\n  onMouseMove(pointer: Point) {\r\n    if (this.limitedToCanvasSize === true && this._isOutSideCanvas(pointer)) {\r\n      return;\r\n    }\r\n    if (this.needsFullRender()) {\r\n      this.canvas.clearContext(this.canvas.contextTop);\r\n      this.addPoint(pointer);\r\n      this._render();\r\n    } else {\r\n      this.drawDot(pointer);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Invoked on mouse up\r\n   */\r\n  onMouseUp() {\r\n    const originalRenderOnAddRemove = this.canvas.renderOnAddRemove;\r\n    this.canvas.renderOnAddRemove = false;\r\n\r\n    const circles: Circle[] = [];\r\n\r\n    for (let i = 0; i < this.points.length; i++) {\r\n      const point = this.points[i],\r\n        circle = new Circle({\r\n          radius: point.radius,\r\n          left: point.x,\r\n          top: point.y,\r\n          originX: CENTER,\r\n          originY: CENTER,\r\n          fill: point.fill,\r\n        });\r\n\r\n      this.shadow && (circle.shadow = new Shadow(this.shadow));\r\n\r\n      circles.push(circle);\r\n    }\r\n    const group = new Group(circles, { canvas: this.canvas });\r\n\r\n    this.canvas.fire('before:path:created', { path: group });\r\n    this.canvas.add(group);\r\n    this.canvas.fire('path:created', { path: group });\r\n\r\n    this.canvas.clearContext(this.canvas.contextTop);\r\n    this._resetShadow();\r\n    this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\r\n    this.canvas.requestRenderAll();\r\n  }\r\n\r\n  /**\r\n   * @param {Object} pointer\r\n   * @return {Point} Just added pointer point\r\n   */\r\n  addPoint({ x, y }: Point) {\r\n    const pointerPoint: CircleBrushPoint = {\r\n      x,\r\n      y,\r\n      radius: getRandomInt(Math.max(0, this.width - 20), this.width + 20) / 2,\r\n      fill: new Color(this.color).setAlpha(getRandomInt(0, 100) / 100).toRgba(),\r\n    };\r\n\r\n    this.points.push(pointerPoint);\r\n\r\n    return pointerPoint;\r\n  }\r\n}\r\n","import { Pattern } from '../Pattern';\r\nimport { createCanvasElement } from '../util/misc/dom';\r\nimport type { Canvas } from '../canvas/Canvas';\r\nimport { PencilBrush } from './PencilBrush';\r\nimport type { TSimplePathData } from '../util/path/typedefs';\r\n\r\nexport class PatternBrush extends PencilBrush {\r\n  declare source?: CanvasImageSource;\r\n\r\n  constructor(canvas: Canvas) {\r\n    super(canvas);\r\n  }\r\n\r\n  getPatternSrc() {\r\n    const dotWidth = 20,\r\n      dotDistance = 5,\r\n      patternCanvas = createCanvasElement(),\r\n      patternCtx = patternCanvas.getContext('2d');\r\n\r\n    patternCanvas.width = patternCanvas.height = dotWidth + dotDistance;\r\n    if (patternCtx) {\r\n      patternCtx.fillStyle = this.color;\r\n      patternCtx.beginPath();\r\n      patternCtx.arc(\r\n        dotWidth / 2,\r\n        dotWidth / 2,\r\n        dotWidth / 2,\r\n        0,\r\n        Math.PI * 2,\r\n        false\r\n      );\r\n      patternCtx.closePath();\r\n      patternCtx.fill();\r\n    }\r\n    return patternCanvas;\r\n  }\r\n\r\n  /**\r\n   * Creates \"pattern\" instance property\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   */\r\n  getPattern(ctx: CanvasRenderingContext2D) {\r\n    return ctx.createPattern(this.source || this.getPatternSrc(), 'repeat');\r\n  }\r\n\r\n  /**\r\n   * Sets brush styles\r\n   * @param {CanvasRenderingContext2D} ctx\r\n   */\r\n  _setBrushStyles(ctx: CanvasRenderingContext2D) {\r\n    super._setBrushStyles(ctx);\r\n    const pattern = this.getPattern(ctx);\r\n    pattern && (ctx.strokeStyle = pattern);\r\n  }\r\n\r\n  /**\r\n   * Creates path\r\n   */\r\n  createPath(pathData: TSimplePathData) {\r\n    const path = super.createPath(pathData),\r\n      topLeft = path._getLeftTopCoords().scalarAdd(path.strokeWidth / 2);\r\n\r\n    path.stroke = new Pattern({\r\n      source: this.source || this.getPatternSrc(),\r\n      offsetX: -topLeft.x,\r\n      offsetY: -topLeft.y,\r\n    });\r\n    return path;\r\n  }\r\n}\r\n","import type { Point } from '../Point';\r\nimport { Group } from '../shapes/Group';\r\nimport { Shadow } from '../Shadow';\r\nimport { Rect } from '../shapes/Rect';\r\nimport { getRandomInt } from '../util/internals';\r\nimport type { Canvas } from '../canvas/Canvas';\r\nimport { BaseBrush } from './BaseBrush';\r\nimport type { SprayBrushPoint } from './typedefs';\r\nimport { CENTER } from '../constants';\r\n\r\n/**\r\n *\r\n * @param rects\r\n * @returns\r\n */\r\nfunction getUniqueRects(rects: Rect[]) {\r\n  const uniqueRects: Record<string, boolean> = {};\r\n  const uniqueRectsArray: Rect[] = [];\r\n\r\n  for (let i = 0, key: string; i < rects.length; i++) {\r\n    key = `${rects[i].left}${rects[i].top}`;\r\n    if (!uniqueRects[key]) {\r\n      uniqueRects[key] = true;\r\n      uniqueRectsArray.push(rects[i]);\r\n    }\r\n  }\r\n\r\n  return uniqueRectsArray;\r\n}\r\n\r\nexport class SprayBrush extends BaseBrush {\r\n  /**\r\n   * Width of a spray\r\n   * @type Number\r\n   * @default\r\n   */\r\n  width = 10;\r\n\r\n  /**\r\n   * Density of a spray (number of dots per chunk)\r\n   * @type Number\r\n   * @default\r\n   */\r\n  density = 20;\r\n\r\n  /**\r\n   * Width of spray dots\r\n   * @type Number\r\n   * @default\r\n   */\r\n  dotWidth = 1;\r\n\r\n  /**\r\n   * Width variance of spray dots\r\n   * @type Number\r\n   * @default\r\n   */\r\n  dotWidthVariance = 1;\r\n\r\n  /**\r\n   * Whether opacity of a dot should be random\r\n   * @type Boolean\r\n   * @default\r\n   */\r\n  randomOpacity = false;\r\n\r\n  /**\r\n   * Whether overlapping dots (rectangles) should be removed (for performance reasons)\r\n   * @type Boolean\r\n   * @default\r\n   */\r\n  optimizeOverlapping = true;\r\n\r\n  private declare sprayChunks: SprayBrushPoint[][];\r\n\r\n  private declare sprayChunk: SprayBrushPoint[];\r\n\r\n  /**\r\n   * Constructor\r\n   * @param {Canvas} canvas\r\n   * @return {SprayBrush} Instance of a spray brush\r\n   */\r\n  constructor(canvas: Canvas) {\r\n    super(canvas);\r\n    this.sprayChunks = [];\r\n    this.sprayChunk = [];\r\n  }\r\n\r\n  /**\r\n   * Invoked on mouse down\r\n   * @param {Point} pointer\r\n   */\r\n  onMouseDown(pointer: Point) {\r\n    this.sprayChunks = [];\r\n    this.canvas.clearContext(this.canvas.contextTop);\r\n    this._setShadow();\r\n\r\n    this.addSprayChunk(pointer);\r\n    this.renderChunck(this.sprayChunk);\r\n  }\r\n\r\n  /**\r\n   * Invoked on mouse move\r\n   * @param {Point} pointer\r\n   */\r\n  onMouseMove(pointer: Point) {\r\n    if (this.limitedToCanvasSize === true && this._isOutSideCanvas(pointer)) {\r\n      return;\r\n    }\r\n    this.addSprayChunk(pointer);\r\n    this.renderChunck(this.sprayChunk);\r\n  }\r\n\r\n  /**\r\n   * Invoked on mouse up\r\n   */\r\n  onMouseUp() {\r\n    const originalRenderOnAddRemove = this.canvas.renderOnAddRemove;\r\n    this.canvas.renderOnAddRemove = false;\r\n\r\n    const rects: Rect[] = [];\r\n\r\n    for (let i = 0; i < this.sprayChunks.length; i++) {\r\n      const sprayChunk = this.sprayChunks[i];\r\n      for (let j = 0; j < sprayChunk.length; j++) {\r\n        const chunck = sprayChunk[j];\r\n        const rect = new Rect({\r\n          width: chunck.width,\r\n          height: chunck.width,\r\n          left: chunck.x + 1,\r\n          top: chunck.y + 1,\r\n          originX: CENTER,\r\n          originY: CENTER,\r\n          fill: this.color,\r\n        });\r\n        rects.push(rect);\r\n      }\r\n    }\r\n\r\n    const group = new Group(\r\n      this.optimizeOverlapping ? getUniqueRects(rects) : rects,\r\n      {\r\n        objectCaching: true,\r\n        subTargetCheck: false,\r\n        interactive: false,\r\n      }\r\n    );\r\n    this.shadow && group.set('shadow', new Shadow(this.shadow));\r\n    this.canvas.fire('before:path:created', { path: group });\r\n    this.canvas.add(group);\r\n    this.canvas.fire('path:created', { path: group });\r\n\r\n    this.canvas.clearContext(this.canvas.contextTop);\r\n    this._resetShadow();\r\n    this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\r\n    this.canvas.requestRenderAll();\r\n  }\r\n\r\n  renderChunck(sprayChunck: SprayBrushPoint[]) {\r\n    const ctx = this.canvas.contextTop;\r\n    ctx.fillStyle = this.color;\r\n\r\n    this._saveAndTransform(ctx);\r\n\r\n    for (let i = 0; i < sprayChunck.length; i++) {\r\n      const point = sprayChunck[i];\r\n      ctx.globalAlpha = point.opacity;\r\n      ctx.fillRect(point.x, point.y, point.width, point.width);\r\n    }\r\n\r\n    ctx.restore();\r\n  }\r\n\r\n  /**\r\n   * Render all spray chunks\r\n   */\r\n  _render() {\r\n    const ctx = this.canvas.contextTop;\r\n    ctx.fillStyle = this.color;\r\n\r\n    this._saveAndTransform(ctx);\r\n\r\n    for (let i = 0; i < this.sprayChunks.length; i++) {\r\n      this.renderChunck(this.sprayChunks[i]);\r\n    }\r\n    ctx.restore();\r\n  }\r\n\r\n  /**\r\n   * @param {Point} pointer\r\n   */\r\n  addSprayChunk(pointer: Point) {\r\n    this.sprayChunk = [];\r\n    const radius = this.width / 2;\r\n\r\n    for (let i = 0; i < this.density; i++) {\r\n      this.sprayChunk.push({\r\n        x: getRandomInt(pointer.x - radius, pointer.x + radius),\r\n        y: getRandomInt(pointer.y - radius, pointer.y + radius),\r\n        width: this.dotWidthVariance\r\n          ? getRandomInt(\r\n              // bottom clamp width to 1\r\n              Math.max(1, this.dotWidth - this.dotWidthVariance),\r\n              this.dotWidth + this.dotWidthVariance\r\n            )\r\n          : this.dotWidth,\r\n        opacity: this.randomOpacity ? getRandomInt(0, 100) / 100 : 1,\r\n      });\r\n    }\r\n\r\n    this.sprayChunks.push(this.sprayChunk);\r\n  }\r\n}\r\n","import { getFabricWindow } from '../env';\r\nimport type { LoadImageOptions } from '../util/misc/objectEnlive';\r\nimport { parseSVGDocument } from './parseSVGDocument';\r\nimport type { SVGParsingOutput, TSvgReviverCallback } from './typedefs';\r\n\r\n/**\r\n * Takes string corresponding to an SVG document, and parses it into a set of fabric objects\r\n * @memberOf fabric\r\n * @param {String} string representing the svg\r\n * @param {TSvgParsedCallback} callback Invoked when the parsing is done, with null if parsing wasn't possible with the list of svg nodes.\r\n * {@link TSvgParsedCallback} also receives `allElements` array as the last argument. This is the full list of svg nodes available in the document.\r\n * You may want to use it if you are trying to regroup the objects as they were originally grouped in the SVG. ( This was the reason why it was added )\r\n * @param {TSvgReviverCallback} [reviver] Extra callback for further parsing of SVG elements, called after each fabric object has been created.\r\n * Takes as input the original svg element and the generated `FabricObject` as arguments. Used to inspect extra properties not parsed by fabric,\r\n * or extra custom manipulation\r\n * @param {Object} [options] Object containing options for parsing\r\n * @param {String} [options.crossOrigin] crossOrigin setting to use for external resources\r\n * @param {AbortSignal} [options.signal] handle aborting, see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\r\n */\r\nexport function loadSVGFromString(\r\n  string: string,\r\n  reviver?: TSvgReviverCallback,\r\n  options?: LoadImageOptions\r\n): Promise<SVGParsingOutput> {\r\n  const parser = new (getFabricWindow().DOMParser)(),\r\n    // should we use `image/svg+xml` here?\r\n    doc = parser.parseFromString(string.trim(), 'text/xml');\r\n  return parseSVGDocument(doc, reviver, options);\r\n}\r\n","import { request } from '../util/internals/dom_request';\r\nimport { parseSVGDocument, createEmptyResponse } from './parseSVGDocument';\r\nimport type { SVGParsingOutput, TSvgReviverCallback } from './typedefs';\r\nimport type { LoadImageOptions } from '../util/misc/objectEnlive';\r\n\r\n/**\r\n * Takes url corresponding to an SVG document, and parses it into a set of fabric objects.\r\n * Note that SVG is fetched via XMLHttpRequest, so it needs to conform to SOP (Same Origin Policy)\r\n * @memberOf fabric\r\n * @param {string} url where the SVG is\r\n * @param {TSvgParsedCallback} callback Invoked when the parsing is done, with null if parsing wasn't possible with the list of svg nodes.\r\n * {@link TSvgParsedCallback} also receives `allElements` array as the last argument. This is the full list of svg nodes available in the document.\r\n * You may want to use it if you are trying to regroup the objects as they were originally grouped in the SVG. ( This was the reason why it was added )\r\n * @param {TSvgReviverCallback} [reviver] Extra callback for further parsing of SVG elements, called after each fabric object has been created.\r\n * Takes as input the original svg element and the generated `FabricObject` as arguments. Used to inspect extra properties not parsed by fabric,\r\n * or extra custom manipulation\r\n * @param {Object} [options] Object containing options for parsing\r\n * @param {String} [options.crossOrigin] crossOrigin setting to use for external resources\r\n * @param {AbortSignal} [options.signal] handle aborting, see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\r\n */\r\nexport function loadSVGFromURL(\r\n  url: string,\r\n  reviver?: TSvgReviverCallback,\r\n  options: LoadImageOptions = {}\r\n): Promise<SVGParsingOutput> {\r\n  // need to handle error properly\r\n  return new Promise<Document>((resolve, reject) => {\r\n    const onComplete = (r: XMLHttpRequest) => {\r\n      const xml = r.responseXML;\r\n      if (xml) {\r\n        resolve(xml);\r\n      }\r\n      reject();\r\n    };\r\n\r\n    request(url.replace(/^\\n\\s*/, '').trim(), {\r\n      onComplete,\r\n      signal: options.signal,\r\n    });\r\n  })\r\n    .then((parsedDoc) => parseSVGDocument(parsedDoc, reviver, options))\r\n    .catch(() => {\r\n      // this is an unhappy path, we dont care about speed\r\n      return createEmptyResponse();\r\n    });\r\n}\r\n"],"names":["BaseConfiguration","constructor","_defineProperty","this","window","devicePixelRatio","config","super","configure","arguments","length","undefined","Object","assign","addFonts","paths","fontPaths","_objectSpread","removeFonts","forEach","fontFamily","clearFonts","restoreDefaults","keys","defaults","reduce","acc","key","log","severity","_len","optionalParams","Array","_key","console","FabricError","Error","message","options","concat","SignalAbortedError","context","GLProbe","WebGLProbe","testPrecision","gl","precision","fragmentSource","fragmentShader","createShader","FRAGMENT_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","queryWebGL","canvas","getContext","maxTextureSize","getParameter","MAX_TEXTURE_SIZE","GLPrecision","find","getExtension","loseContext","isSupported","textureSize","copyPasteData","env","setEnv","getEnv","document","isTouchSupported","navigator","maxTouchPoints","dispose","getFabricDocument","getFabricWindow","getDevicePixelRatio","_config$devicePixelRa","Math","max","cache","getFontCache","_ref","fontStyle","fontWeight","toLowerCase","charWidthsCache","fontCache","cacheKey","clearFontCache","limitDimsByArea","ar","perfLimitSizeTotal","roughWidth","sqrt","floor","VERSION","noop","halfPI","PI","twoMathPi","PiBy180","iMatrix","freeze","DEFAULT_SVG_FONT_SIZE","kRect","CENTER","LEFT","TOP","BOTTOM","RIGHT","NONE","reNewline","MOVING","SCALING","ROTATING","ROTATE","SKEWING","RESIZING","MODIFY_POLY","CHANGED","SCALE","SCALE_X","SCALE_Y","SKEW_X","SKEW_Y","FILL","STROKE","MODIFIED","JSON","SVG","classRegistry","Map","getClass","classType","get","setClass","classConstructor","set","type","getSVGClass","SVGTagName","setSVGClass","runningAnimations","remove","index","indexOf","splice","cancelAll","animations","animation","abort","cancelByCanvas","filter","_animation$target","target","cancelByTarget","Observable","on","arg0","handler","__eventListeners","entries","eventName","off","push","once","disposers","_ref2","d","disposer","args","call","_removeEventListener","eventListener","_ref3","fire","_this$__eventListener","listenersForEvent","i","getRandomInt","min","random","ifNaN","value","valueIfNaN","isNaN","removeFromArray","array","idx","cos","angle","abs","sin","angleSlice","sign","Point","y","x","add","that","addEquals","scalarAdd","scalar","scalarAddEquals","subtract","subtractEquals","scalarSubtract","scalarSubtractEquals","multiply","scalarMultiply","scalarMultiplyEquals","divide","scalarDivide","scalarDivideEquals","eq","lt","lte","gt","gte","lerp","t","distanceFrom","dx","dy","midPointFrom","toString","setXY","setX","setY","setFromPoint","swap","clone","rotate","radians","origin","ZERO","sinus","cosinus","p","transform","ignoreOffset","isCollection","fabricObject","isArray","_objects","createCollectionMixin","Base","Collection","_onObjectAdded","object","_onObjectRemoved","_onStackOrderChanged","objects","size","insertAt","_len2","_key2","removed","_len3","_key3","forEachObject","callback","getObjects","_len4","types","_key4","o","isType","item","isEmpty","contains","deep","includes","some","obj","complexity","memo","current","sendObjectToBack","unshift","bringObjectToFront","sendObjectBackwards","intersecting","newIdx","findNewLowerIndex","bringObjectForward","findNewUpperIndex","moveObjectTo","isOverlapping","collectObjects","left","top","width","height","includeIntersecting","tl","br","selectable","visible","intersectsWithRect","isContainedWithinRect","containsPoint","CommonMethods","_setOptions","prop","_setObject","_set","toggle","property","requestAnimFrame","requestAnimationFrame","cancelAnimFrame","handle","cancelAnimationFrame","id","uid","createCanvasElement","element","createElement","createImage","toDataURL","canvasEl","format","quality","degreesToRadians","degrees","radiansToDegrees","isIdentityMatrix","mat","every","transformPoint","invertTransform","a","r","multiplyTransformMatrices","b","is2x2","multiplyTransformMatrixArray","matrices","reduceRight","product","curr","calcPlaneRotation","atan2","qrDecompose","denom","pow","scaleX","scaleY","skewX","skewY","translateX","translateY","createTranslateMatrix","createRotateMatrix","angleRadiant","cosValue","sinValue","createScaleMatrix","angleToSkew","tan","createSkewXMatrix","skewValue","createSkewYMatrix","calcDimensionsMatrix","flipX","flipY","matrix","composeMatrix","scaleMatrix","loadImage","url","signal","crossOrigin","Promise","resolve","reject","aborted","img","err","src","addEventListener","done","onload","onerror","removeEventListener","enlivenObjects","reviver","instances","all","map","fromObject","then","fabricInstance","catch","error","instance","finally","enlivenObjectEnlivables","serializedObject","promises","values","enlived","source","pattern","pick","pickBy","predicate","ColorNameMap","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgrey","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","grey","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","hue2rgb","q","rgb2Hsl","g","maxValue","minValue","h","s","l","round","fromAlphaToFloat","parseFloat","endsWith","hexify","toUpperCase","padStart","greyAverage","avg","Color","color","setSource","_source","_tryParsingColor","sourceFromHex","sourceFromRgb","sourceFromHsl","isUnrecognised","getSource","toRgb","toRgba","join","toHsl","toHsla","toHex","toHexa","slice","getAlpha","setAlpha","alpha","toGrayscale","toBlackWhite","threshold","average","bOrW","overlayWith","otherColor","otherSource","R","G","B","fromRgb","fromRgba","match","parsedValue","fromHsl","fromHsla","parseAngletoDegrees","fromHex","expandedValue","split","hex","hexCouple","parseInt","lowercase","numeric","toFixed","number","fractionDigits","Number","parseUnit","fontSize","unit","exec","dpi","DPI","parsePreserveAspectRatioAttribute","attribute","firstPart","secondPart","trim","alignX","alignY","align","meetOrSlice","matrixToSVG","NUM_FRACTION_DIGITS","colorPropToSVG","colorValue","opacityValue","inlineStyle","toLive","opacity","isFiller","filler","isSerializableFiller","toObject","isPattern","offsetX","isTextObject","_renderText","isActiveSelection","getScrollLeftTop","doc","getDocumentFromElement","docElement","documentElement","body","scrollLeft","scrollTop","parentNode","host","nodeType","style","position","el","ownerDocument","getWindowFromElement","_el$ownerDocument","defaultView","setStyle","styles","elementStyle","cssText","setProperty","setCanvasDimensions","ctx","retinaScaling","setAttribute","scale","setCSSDimensions","makeElementUnselectable","onselectstart","userSelect","StaticCanvasDOMManager","createLowerCanvas","lower","getElementById","hasAttribute","_originalCanvasStyle","classList","cleanupDOM","removeAttribute","setDimensions","calcOffset","_getWindowFromElement","box","offset","offsetAttributes","borderLeftWidth","borderTopWidth","paddingLeft","paddingTop","elemStyle","getComputedStyle","attr","docElem","getBoundingClientRect","scrollLeftTop","clientLeft","clientTop","getElementOffset","staticCanvasDefaults","backgroundVpt","backgroundColor","overlayVpt","overlayColor","includeDefaultValues","svgViewportTransformation","renderOnAddRemove","skipOffscreen","enableRetinaScaling","imageSmoothingEnabled","controlsAboveOverlay","allowTouchScrolling","viewportTransform","StaticCanvas","lowerCanvasEl","_this$elements$lower","elements","contextContainer","_this$elements$lower2","getDefaults","ownDefaults","initElements","_setDimensionsImpl","skipControlsDrawing","calcViewportBoundaries","requestRenderAll","setCoords","getRetinaScaling","_offset","getWidth","getHeight","setWidth","setHeight","dimensions","cssOnly","backstoreOnly","hasLostContext","getZoom","setViewportTransform","vpt","zoomToPoint","point","before","newPoint","after","setZoom","absolutePan","relativePan","getElement","clearContext","clearRect","clear","backgroundImage","overlayImage","renderAll","cancelRequestedRender","destroyed","renderCanvas","renderAndReset","nextRenderHandle","disposed","iVpt","vptCoords","tr","bl","drawControls","v","path","clipPath","patternQuality","_renderBackground","save","_renderObjects","restore","shouldCache","_transformDone","renderCache","forClipping","drawClipPathOnCanvas","_renderOverlay","__cleanupTask","globalCompositeOperation","zoomX","zoomY","drawImage","_cacheCanvas","cacheTranslationX","cacheTranslationY","len","render","_renderBackgroundOrOverlay","fill","needsVpt","isAFiller","beginPath","moveTo","lineTo","closePath","fillStyle","offsetY","m","gradientTransform","patternTransform","getCenter","getCenterPoint","centerObjectH","_centerObject","centerObjectV","centerObject","viewportCenterObject","getVpCenter","viewportCenterObjectH","viewportCenterObjectV","center","toDatalessJSON","propertiesToInclude","toDatalessObject","_toObjectMethod","toJSON","methodName","clipPathData","excludeFromExport","_toObject","version","__serializeBgOverlay","originalValue","data","bgImage","bgColor","background","overlay","toSVG","markup","_setSVGPreamble","_setSVGHeader","clipPathId","_setSVGBgOverlayColor","_setSVGBgOverlayImage","_setSVGObjects","suppressPreamble","encoding","optViewBox","viewBox","createSVGFontFacesMarkup","createSVGRefElementsMarkup","createSVGClipPathMarkup","toClipPathSVG","shouldTransform","additionalTransform","fontList","styleRow","fontListMarkup","_setSVGObject","bgOrOverlay","repeat","finalWidth","finalHeight","loadFromJSON","json","serialized","parse","enlivedMap","properties","cloneWithoutData","multiplier","finalMultiplier","toCanvasElement","scaledWidth","scaledHeight","zoom","originalWidth","originalHeight","originalSkipControlsDrawing","newZoom","vp","newVp","originalRetina","objectsToRender","task","destroy","kill","touchEvents","getPointer","event","scroll","_evt","touchProp","changedTouches","getTouchInfo","clientX","clientY","isTouchEvent","pointerType","stopEvent","e","preventDefault","stopPropagation","makeBoundingBoxFromPoints","points","addTransformToObject","applyTransformToObject","calcOwnMatrix","_qrDecompose","otherOptions","_objectWithoutProperties","_excluded","setPositionByOrigin","resetObjectTransform","saveObjectTransform","sizeAfterTransform","dimX","dimY","bbox","calcPlaneChangeMatrix","from","sendPointToPlane","to","sendVectorToPlane","sendObjectToPlane","fireEvent","_target$canvas","originOffset","bottom","right","resolveOrigin","originValue","NOT_ALLOWED_CURSOR","isTransformCentered","originX","originY","invertOrigin","isLocked","lockingKey","commonEventInfo","eventData","pointer","findCornerQuadrant","control","cornerAngle","getTotalAngle","getLocalPoint","corner","controls","padding","localPoint","getRelativeCenterPoint","translateToGivenOrigin","normalizePoint","dragHandler","newLeft","newTop","moveX","moveY","FabricObjectSVGExportMixin","getSvgStyles","skipShadow","fillRule","strokeWidth","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","visibility","getSvgFilter","stroke","shadow","getSvgCommons","getSvgTransform","full","calcTransformMatrix","svgTransform","_toSVG","_createBaseSVGMarkup","_createBaseClipPathSVGMarkup","objectMarkup","commonPieces","noStyle","withShadow","styleInfo","shadowInfo","vectorEffect","strokeUniform","absoluteClipPath","absolutePositioned","clipPathMarkup","addPaintOrder","paintFirst","normalize","c","asin","elastic","defaultEasing","easeOutBounce","easeInBounce","easeInCirc","easeInCubic","easeInElastic","normA","normS","normP","easeInExpo","easeInOutBounce","easeInOutCirc","easeInOutCubic","easeInOutElastic","normC","easeInOutExpo","easeInOutQuad","easeInOutQuart","easeInOutQuint","easeInOutSine","easeInQuad","easeInQuart","easeInQuint","easeInSine","easeOutCirc","easeOutCubic","easeOutElastic","easeOutExpo","easeOutQuad","easeOutQuart","easeOutQuint","easeOutSine","defaultAbort","AnimationBase","startValue","byValue","duration","delay","easing","onStart","onChange","onComplete","tick","bind","_onStart","_onChange","_onComplete","_abort","endValue","calculate","state","_state","isDone","start","firstTick","timestamp","startTime","Date","register","setTimeout","durationMs","boundDurationMs","durationProgress","valueProgress","unregister","ValueAnimation","timeElapsed","ArrayAnimation","capValue","defaultColorEasing","wrapColorCallback","rgba","ColorAnimation","startColor","endColor","animate","isArrayAnimation","animateColor","unitVectorX","zero","rotateVector","vector","createVector","magnitude","calcAngleBetweenVectors","crossProduct","dotProduct","calcVectorRotation","getUnitVector","getOrthonormalVector","counterClockwise","isBetweenVectors","AxB","AxT","BxT","Intersection","status","append","isPointContained","T","A","infinite","AB","isPointInPolygon","other","hits","inter","intersectSegmentSegment","intersectLineLine","a1","a2","b1","b2","aInfinite","bInfinite","a2xa1x","a2ya1y","b2xb1x","b2yb1y","a1xb1x","a1yb1y","uaT","ubT","uB","ua","ub","segmentsCoincide","intersectSegmentLine","s1","s2","l1","l2","intersectLinePolygon","result","intersectSegmentPolygon","intersectPolygonPolygon","points1","points2","coincidences","intersectPolygonRectangle","r1","r2","topRight","bottomLeft","ObjectOrigin","_getTransformedDimensions","dimOptions","preScalingStrokeValue","postScalingStrokeValue","finalDimensions","fromOriginX","fromOriginY","toOriginX","toOriginY","dim","translateToCenterPoint","translateToOriginPoint","relCenter","group","getPointByOrigin","pos","_getLeftTopCoords","ObjectGeometry","getX","getXY","getY","getRelativeX","setRelativeX","getRelativeY","setRelativeY","relativePosition","getRelativeXY","setRelativeXY","isStrokeAccountedForInDimensions","getCoords","aCoords","calcACoords","coords","intersectsWithObject","intersection","isContainedWithinObject","getBoundingRect","isOnScreen","isPartiallyOnScreen","getScaledWidth","getScaledHeight","scaleToWidth","boundingRectFactor","scaleToHeight","getCanvasRetinaScaling","_this$canvas","getViewportTransform","_this$canvas2","rotateMatrix","tMatrix","finalMatrix","w","transformMatrixKey","skipGroup","prefix","matrixCache","ownMatrixCache","_getNonTransformedDimensions","_calculateCurrentDimensions","StackedObject","isDescendantOf","parent","getAncestors","ancestors","findCommonAncestors","fork","otherFork","common","otherAncestors","ancestor","j","hasCommonAncestors","commonAncestors","isInFrontOf","ancestorData","firstCommonAncestor","headOfFork","pop","headOfOtherFork","thisIndex","otherIndex","AnimatableObject","animatable","_animate","propIsColor","colorProperties","animationOptions","getSvgRegex","arr","RegExp","reNum","String","raw","_templateObject","_taggedTemplateLiteral","svgNS","_templateObject2","reFontDeclaration","attributesMap","cx","cy","display","fSize","cPath","svgValidTagNamesRegEx","svgViewBoxElementsRegEx","svgValidParentsRegEx","reViewBoxAttrValue","shadowOffsetRegex","reOffsetsAndBlur","Shadow","parseShadow","shadowStr","blur","replace","fBoxX","fBoxY","affectStroke","nonScaling","cloneDeep","stringify","stateProperties","cacheProperties","fabricObjectDefaultValues","minScaleLimit","objectCaching","inverted","centeredRotation","centeredScaling","dirty","FabricObject","name","setOptions","_createCacheCanvas","_cacheContext","_updateCacheCanvas","_limitCacheSize","dims","maxCacheSideLimit","minCacheSideLimit","limX","limY","capped","_getCacheCanvasDimensions","objectScale","getTotalObjectScaling","neededX","neededY","minCacheSize","dimensionsChanged","zoomChanged","drawingWidth","drawingHeight","shouldRedraw","additionalWidth","additionalHeight","shouldResizeCanvas","canvasWidth","canvasHeight","sizeGrowing","getHeightOfLine","ceil","setTransform","translate","needFullTransform","contextTop","_removeDefaultValues","baseValues","getPrototypeOf","baseValue","getObjectScaling","retina","getObjectOpacity","_constrainScale","isChanged","isNotVisible","_setupCompositeOperation","drawSelectionBackground","_setOpacity","_setShadow","drawCacheOnCanvas","_removeCacheCanvas","drawObject","isCacheDirty","hasStroke","hasFill","needsItsOwnCache","ownCaching","isOnACache","willDrawShadow","drawClipPathOnCache","originalFill","originalStroke","_setClippingProperties","_render","_drawClipPath","skipCanvas","fillRect","_removeShadow","globalAlpha","_setStrokeStyles","decl","lineWidth","lineCap","lineDashOffset","lineJoin","miterLimit","gradientUnits","_applyPatternForTransformedGradient","strokeStyle","_applyPatternGradientTransform","_setFillStyles","_setLineDash","dashArray","setLineDash","sx","sy","multX","multY","scaling","shadowColor","shadowBlur","browserShadowBlurConstant","shadowOffsetX","shadowOffsetY","_renderPaintInOrder","_renderStroke","_renderFill","_pCtx$createPattern","pCanvas","pCtx","createPattern","_findCenterFromElement","objectForm","cloneAsImage","origParams","originalGroup","originalShadow","canvasProvider","withoutTransform","withoutShadow","boundingRect","shadowOffset","originalCanvas","setOnGroup","_fromObject","extraParam","_excluded2","allOptions","_toPropertyKey","wrapWithFireEvent","actionHandler","actionPerformed","wrapWithFixedAnchor","centerPoint","constraint","changeWidth","changeObjectWidth","strokePadding","oldWidth","newWidth","renderCircleControl","styleOverride","xSize","sizeX","cornerSize","ySize","sizeY","transparentCorners","cornerStrokeColor","myLeft","myTop","cornerColor","arc","renderSquareControl","xSizeBy2","ySizeBy2","strokeRect","Control","shouldActivate","controlKey","_fabricObject$canvas","getActiveObject","isControlVisible","getActionHandler","getMouseDownHandler","mouseDownHandler","getMouseUpHandler","mouseUpHandler","cursorStyleHandler","cursorStyle","getActionName","actionName","getVisibility","_fabricObject$_contro","_fabricObject$_contro2","_controlsVisibility","setVisibility","positionHandler","currentControl","calcCornerCoords","objectCornerSize","centerX","centerY","isTouch","touchSizeX","touchSizeY","cornerStyle","rotationStyleHandler","lockRotation","rotationWithSnapping","rotateObjectWithSnapping","ex","ey","theta","pivotPoint","lastAngle","curAngle","snapAngle","snapThreshold","rightAngleLocked","leftAngleLocked","hasRotated","scaleIsProportional","uniformIsToggled","uniScaleKey","uniformScaling","scalingIsForbidden","by","scaleProportionally","lockX","lockY","scaleMap","scaleCursorStyleHandler","n","scaleObject","signX","signY","gestureScale","distance","original","oldScaleX","oldScaleY","scalingEqually","scaleObjectFromCorner","scalingX","scaleObjectX","scalingY","scaleObjectY","AXIS_KEYS","counterAxis","skew","lockSkewing","flip","skewMap","skewCursorStyleHandler","skewHandler","axis","originKey","lockSkewingKey","skewKey","flipKey","counterOriginKey","counterFlipKey","counterOriginFactor","skewingSide","finalHandler","skewingBefore","skewingStart","shearingStart","shearing","skewing","atan","changed","dimBefore","dimAfter","compensationFactor","skewObject","skewHandlerX","skewHandlerY","isAltAction","altActionKey","scaleOrSkewActionName","isAlternative","scaleSkewCursorStyleHandler","scalingXOrSkewingY","scalingYOrSkewingX","createObjectDefaultControls","ml","mr","mb","mt","mtr","withConnection","createResizeControls","createTextboxDefaultControls","InteractiveFabricObject","createControls","targetCanvas","noScaleCache","_currentTransform","action","startsWith","getActiveControl","__corner","coord","oCoords","findControl","forTouch","hasControls","cornerEntries","touchCorner","calcOCoords","rMatrix","positionMatrix","startMatrix","transformOptions","forEachControl","_calcCornerCoords","touchCornerSize","fn","selectionBackgroundColor","_activeObject","wh","strokeBorders","_drawBorders","borderColor","borderDashArray","drawControlsConnectingLines","_renderControls","hasBorders","styleOptions","shouldDrawBorders","shouldDrawControls","borderScaleFactor","isMoving","borderOpacityWhenMoving","drawBorders","forActiveSelection","shouldStroke","cornerDashArray","setControlVisible","setControlsVisibility","clearContextTop","restoreManually","onDeselect","onSelect","shouldStartDragging","onDragStart","canDrop","renderDragSourceEffect","renderDropTargetEffect","applyMixins","derivedCtor","constructors","baseCtor","getOwnPropertyNames","prototype","defineProperty","getOwnPropertyDescriptor","create","lockMovementX","lockMovementY","lockScalingX","lockScalingY","lockSkewingX","lockSkewingY","lockScalingFlip","evented","perPixelTargetFind","activeOn","hoverCursor","moveCursor","isTransparent","tolerance","getImageData","StrokeProjectionsBase","strokeProjectionMagnitude","strokeUniformScalar","createSideVector","projectOrthogonally","applySkew","calcOrthogonalProjection","isSkewed","scaleUnitVector","unitVector","zeroVector","StrokeLineJoinProjections","getOrthogonalRotationFactor","vector1","vector2","C","AC","bisector","orthogonalProjection","correctSide","projectBevel","projections","projectMiter","hypotUnitScalar","miterVector","projectRoundNoSkew","startCircle","endCircle","projectRoundWithSkew","circleRadius","newY","furthestY","newX","furthestX","projectRound","isStraightLine","newOrigin","proj0","proj1","comparisonVector","isProj0Start","projectPoints","project","originPoint","projectedPoint","StrokeLineCapProjections","projectButt","projection","projectSquare","strokePointingOut","projectedA","projectStrokeOnPoints","openPath","reduced","findIndexRight","escapeXml","string","graphemeSplit","textstring","graphemes","chr","getWholeChar","str","code","charCodeAt","charAt","next","prev","firstLetterOnly","hasStyleChanged","prevStyle","thisStyle","forTextSpans","textBackgroundColor","deltaY","overline","underline","linethrough","stylesToArray","text","textLines","stylesArray","charIndex","chars","end","stylesFromArray","stylesObject","styleIndex","SHARED_ATTRIBUTES","selectorMatches","selector","nodeName","classNames","getAttribute","azAz","matcher","splitClassNames","elementMatchesRule","selectors","parentMatching","firstMatching","parentElement","doesSomeParentMatch","normalizeAttr","_attributesMap","regex","cleanupSvgAttribute","attributeValue","_templateObject3","_templateObject4","_templateObject5","_templateObject6","transforms","transformList","_templateObject7","reTransformList","reTransform","reTransformAll","parseTransformAttribute","test","matchAll","transformMatch","matchedParams","operation","rawArgs","arg1","arg2","arg3","arg4","arg5","arg","normalizeValue","parentAttributes","parsed","ouputValue","transformMatrix","fillIndex","strokeIndex","parseFontDeclaration","oStyle","lineHeight","parseStyleAttribute","chunk","parseStyleString","parseStyleObject","colorAttributesMap","parseAttributes","attributes","cssRules","parentFontSize","ownAttributes","rule","getGlobalStylesForElement","normalizedStyle","normalizedAttr","normalizedValue","font","mergedAttrs","colorAttr","setStrokeFillOpacity","RECT_PROPS","Rect","_initRxRy","rx","ry","isRounded","bezierCurveTo","fromElement","_parseAttributes","ATTRIBUTE_NAMES","restOfparsedAttributes","Boolean","LAYOUT_TYPE_INITIALIZATION","LAYOUT_TYPE_ADDED","LAYOUT_TYPE_REMOVED","LAYOUT_TYPE_IMPERATIVE","getObjectBounds","destinationGroup","currentGroup","objectCenter","accountForStroke","strokeUniformVector","scalingStrokeWidth","sizeVector","LayoutStrategy","calcLayoutResult","shouldPerformLayout","calcBoundingBox","prevStrategy","strategy","shouldLayoutClipPath","getInitialSize","overrides","bboxSize","bboxCenter","actualSize","relativeCorrection","FitContentLayout","LAYOUT_MANAGER","LayoutManager","_subscriptions","performLayout","strictContext","bubbles","_prevLayoutStrategy","onBeforeLayout","layoutResult","getLayoutResult","commitLayout","onAfterLayout","attachHandlers","trigger","subscribe","unsubscribe","delete","unsubscribeTargets","targets","subscribeTargets","tricklingContext","layoutManager","prevCenter","nextCenter","correction","_context$x","_context$y","layoutObjects","layoutObject","_","bubblingContext","NoopLayoutManager","Group","groupInit","_options$layoutManage","__objectSelectionTracker","__objectSelectionMonitor","__objectSelectionDisposer","enterGroup","canEnterGroup","_filterObjectsBeforeEnteringGroup","allowedObjects","_onAfterObjectsChange","removeParentTransform","exitGroup","_shouldSetNestedCoords","subTargetCheck","removeAll","_activeObjects","selected","activeObjects","_watchObject","watch","_enterGroup","activeObject","_exitGroup","ownCache","preserveObjectStacking","triggerLayout","__serializeObjects","method","_includeDefaultValues","originalDefaults","_createSVGBgRect","fillStroke","commons","svgString","bg","abortable","hydratedOptions","layoutClass","strategyClass","interactive","findScaleToFit","destination","findScaleToCover","reMoveToCommand","reLineCommand","reHorizontalLineCommand","reVerticalLineCommand","reClosePathCommand","reCubicCurveCommand","reCubicCurveShortcutCommand","reQuadraticCurveCommand","reQuadraticCurveShortcutCommand","reArcCommand","rePathCommand","repeatedCommands","M","segmentToBezier","theta1","theta2","cosTh","sinTh","cx1","cy1","mT","fromX","fromY","costh1","sinth1","costh2","sinth2","toX","toY","calcVectorAngle","ux","uy","vx","vy","ta","tb","getBoundsOfCurve","begx","begy","cp1x","cp1y","cp2x","cp2y","endx","endy","argsString","cachesBoundsOfCurve","boundsOfCurveCache","tvalues","bounds","b2ac","sqrtb2ac","t1","t2","jlen","iterator","getPointOnCubicBezierIterator","fromArcToBeziers","fx","fy","rot","large","sweep","tx","ty","segsNorm","arcToSegments","rotateX","root","sinTheta","px","py","rx2","ry2","py2","px2","pl","_rx","_ry","mTheta","dtheta","segments","mDelta","th3","makePathSimpler","x1","y1","destinationPath","previous","controlX","controlY","parsedCommand","converted","calcLineLength","x2","y2","pct","c1","c2","CB2","c3","CB3","c4","CB4","QB1","QB2","QB3","getTangentCubicIterator","p1x","p1y","p2x","p2y","p3x","p3y","p4x","p4y","qb1","qb2","qb3","tangentX","tangentY","getPointOnQuadraticBezierIterator","getTangentQuadraticIterator","invT","pathIterator","tempP","tmpLen","perc","findPercentageForDistance","segInfo","nextLen","nextStep","lastPerc","angleFinder","getPathSegmentsInfo","tempInfo","totalLength","info","basicInfo","command","destX","destY","getPointOnPath","infos","segPercent","segment","rePathCmdAll","rePathCmd","parsePath","pathString","res","matchStr","chain","paramArr","filteredGroups","shift","numParse","reverse","transformed","getSmoothPathFromPoints","p1","p2","multSignX","multSignY","manyPoints","midPoint","joinPath","pathData","request","xhr","removeListener","ontimeout","onreadystatechange","readyState","open","send","removeTransformMatrixForSvgParsing","preserveAspectRatioOptions","_assignTransformMatrixProps","cropX","cropY","offsetLeft","offsetTop","_newCanvas$getContext","newCanvas","getRegularPolygonPath","numVertexes","radius","interiorAngle","rotationAdjustment","rad","commonAttributes","groupSVGElements","mergeClipPaths","_b$group","removeTransformFromObject","finalTransform","rotatePoint","transformPath","pathOffset","pathSegment","newSegment","CanvasDOMManager","containerClass","upperCanvasEl","createUpperCanvas","upper","applyCanvasStyle","container","createContainerElement","replaceChild","className","allow","touchAction","removeChild","SelectableCanvas","_this$elements$upper","_this$elements$upper2","wrapperEl","_objectsToRender","deselected","_discardActiveObject","_hoveredTarget","_hoveredTargets","_chooseObjectsToRender","contextTopDirty","_groupSelector","isDrawingMode","renderTopLayer","_isCurrentlyDrawing","freeDrawingBrush","selection","_drawSelection","renderTop","setTargetFindTolerance","targetFindTolerance","pixelFindCanvasEl","pixelFindContext","isTargetTransparent","selectionBgc","enhancedTolerance","_isSelectionKeyPressed","sKey","selectionKey","_shouldClearSelection","getActiveObjects","_shouldCenterTransform","modifierKeyPressed","centerTransform","_getOriginFromCorner","controlName","_setupCurrentTransform","alreadySelected","_control$getActionHan","getScenePoint","getActionFromCorner","altKey","centeredKey","lastX","lastY","shiftKey","setCursor","cursor","deltaX","extent","strokeOffset","selectionLineWidth","minX","minY","maxX","maxY","selectionColor","selectionBorderColor","selectionDashArray","findTarget","skipTargetFind","getViewportPoint","aObjects","searchPossibleTargets","subTargets","altSelectionKey","_pointIsInObjectSelectionArea","viewportZoom","angleRadians","cosP","sinP","cosPSinP","cosPMinusSinP","_checkTarget","isEditing","_searchPossibleTargets","subTarget","_pointer","_absolutePointer","fromViewport","boundsWidth","boundsHeight","cssScale","_resetTransformEventData","_setBrushStyles","willReadFrequently","getTopContext","getSelectionContext","getSelectionElement","active","_fireSelectionEvents","oldObjects","somethingChanged","invalidate","added","setActiveObject","currentActives","_setActiveObject","prevActiveObject","endCurrentTransform","discardActiveObject","discarded","_finalizeCurrentTransform","_scaling","originalProperties","_realizeGroupTransformOnObject","originalValues","selectionFullyContained","defaultCursor","freeDrawingCursor","notAllowedCursor","stopContextMenu","fireRightClick","fireMiddleClick","enablePointerEvents","TextEditingManager","cb","hiddenTextarea","focus","__disposer","exitTextEditing","exitEditing","onMouseMove","_this$target","updateSelectionOnMouseMove","addEventOptions","passive","getEventPoints","viewportPoint","scenePoint","absolutePointer","addListener","syntheticEventConfig","mouse","in","out","targetIn","targetOut","canvasIn","canvasOut","drag","Canvas","eventHandler","addOrRemove","_getEventPrefix","functor","eventjsFunctor","canvasElement","eventTypePrefix","_onResize","_onMouseDown","_onMouseMove","_onMouseOut","_onMouseEnter","_onMouseWheel","_onContextMenu","_onDoubleClick","_onDragStart","_onDragEnd","_onDragOver","_onDragEnter","_onDragLeave","_onDrop","_onTouchStart","removeListeners","_onMouseUp","_onTouchEnd","__onMouseWheel","shared","nestedTarget","_isClick","_dragSource","_onDragProgress","_renderDragEffects","dropTarget","_dropTarget","didDrop","dataTransfer","dropEffect","dragSource","_draggedoverTarget","findDragTargets","eventType","_fireEnterLeaveEvents","_basicEventHandler","_cacheTransformEventData","_handleEvent","getPointerId","evt","identifier","pointerId","_isMainEvent","isPrimary","touches","mainTouchId","__onMouseDown","__onMouseUp","_willAddMouseDown","clearTimeout","__onMouseMove","_shouldRender","_this$_activeObject","isClick","_target","button","_onMouseUpInDrawingMode","shouldRender","targetWasActive","handleSelection","found","originalControl","originalMouseUpHandler","_setCursorFromEvent","currentTarget","currentSubTargets","_onMouseDownInDrawingMode","onMouseDown","_onMouseMoveInDrawingMode","onMouseUp","grouped","handleMultiSelection","groupSelector","_transformObject","_fireOverOutEvents","textEditingManager","fireSyntheticInOutEvents","oldTarget","fireCanvas","draggedoverTarget","targetChanged","outOpt","nextTarget","inOpt","previousTarget","localPointer","_performTransformAction","activeSelection","isAS","prevActiveObjects","multiSelectAdd","newActiveSelection","point1","point2","collectedObjects","klass","linearDefaultCoords","radialDefaultCoords","RE_PERCENT","isPercent","parsePercent","NaN","RE_KEY_VALUE_PAIRS","RE_KEY_VALUE","parseColorStop","keyValuePairs","parseColorStops","opacityAttr","colorStops","colorStopEls","getElementsByTagName","parseType","parseGradientUnits","getValue","parseCoords","valuesToConvert","finalValue","propValue","convertPercentUnitsToValues","parseLinearCoords","parseRadialCoords","Gradient","addColorStop","preTransform","colorStop","sort","_renderPathCommands","needsSwap","minRadius","percentageShift","gradient","createLinearGradient","createRadialGradient","svgOptions","viewBoxWidth","viewBoxHeight","Pattern","isImageSource","isCanvasSource","sourceToString","complete","naturalWidth","naturalHeight","patternSource","patternOffsetX","patternOffsetY","patternWidth","patternHeight","BaseBrush","_saveAndTransform","needsFullRender","_resetShadow","_isOutSideCanvas","Path","_setPath","adjustPosition","setBoundingBox","_calcBoundsFromPath","quadraticCurveTo","pathCmd","sourcePath","_getOffsetTransform","digits","_calcDimensions","subpathStartX","subpathStartY","parsedAttributes","PencilBrush","_points","_hasStraightLine","drawSegment","drawStraightLine","straightLineKey","_prepareForDrawing","_addPoint","limitedToCanvasSize","oldEnd","_finalizeAndAddPath","_reset","convertPointsToSVGPath","createPath","decimatePoints","cDistance","lastPoint","adjustedDistance","newPoints","decimate","isEmptySVGPath","CIRCLE_PROPS","Circle","setRadius","startAngle","endAngle","getRadiusX","getRadiusY","startX","startY","endX","endY","largeFlag","sweepFlag","coordProps","Line","_setWidthHeight","calcLinePoints","origStrokeStyle","_this$stroke","_x1","_x2","_y1","_y2","xMult","yMult","Triangle","widthBy2","heightBy2","ELLIPSE_PROPS","Ellipse","getRx","getRy","parsePointsAttribute","pointsSplit","parsedPoints","polylineDefaultValues","exactBoundingBox","Polyline","initialized","isOpen","_projectStrokeOnPoints","strokeDiff","bboxNoStroke","layoutProperties","_options$width","_options$height","_options$width2","_options$height2","output","diffX","diffY","Polygon","fontProperties","textDecorationProperties","textLayoutProperties","additionalProps","styleProperties","textDefaultValues","_reNewline","_reSpacesAndTabs","_reSpaceAndTab","_reWords","textAlign","superscript","baseline","subscript","pathStartOffset","pathSide","pathAlign","_fontSizeFraction","offsets","_fontSizeMult","charSpacing","direction","CACHE_FONT_SIZE","MIN_TEXT_WIDTH","JUSTIFY","JUSTIFY_LEFT","JUSTIFY_RIGHT","JUSTIFY_CENTER","StyledText","isEmptyStyles","lineIndex","line","p3","styleHas","cleanStyle","letterCount","stylePropertyValue","stylesCount","allStyleObjectPropertiesMatch","graphemeCount","styleObject","_textLines","removeStyle","lineNum","charNum","_extendStyles","get2DCursorLocation","_getLineStyle","_setLineStyle","newStyle","_getStyleDeclaration","_setStyleDeclaration","getSelectionStyles","startIndex","endIndex","getStyleAtPosition","getCompleteStyleDeclaration","setSelectionStyles","_forceClearCache","_lineStyle$charIndex","lineStyle","_styleProperties","_deleteStyleDeclaration","_deleteLineStyle","multipleSpacesRegex","dblQuoteRegex","createSVGInlineRect","svgColor","createSVGRect","measuringContext","FabricText","setPathInfo","initDimensions","segmentsInfo","_splitText","newLines","_splitTextIntoLines","lines","graphemeLines","_unwrappedTextLines","_unwrappedLines","_text","graphemeText","_clearCache","calcTextWidth","cursorWidth","calcTextHeight","enlargeSpaces","diffSpace","currentLineWidth","numberOfSpaces","accumulatedSpace","charBound","spaces","isEndOfWrapping","getLineWidth","__charBounds","kernedWidth","missingNewlineOffset","selectionStart","skipWrapping","_setTextStyles","_renderTextLinesBackground","_renderTextDecoration","_renderTextStroke","_renderTextFill","charStyle","forMeasuring","textBaseline","_getFontDeclaration","maxWidth","_renderTextLine","_renderChars","leftOffset","_getLeftOffset","lineTopOffset","_getTopOffset","heightOfLine","lineLeftOffset","_getLineLeftOffset","drawStart","currentColor","boxWidth","boxStart","lastColor","getValueOfPropertyAt","charBox","renderLeft","_measureChar","_char","previousChar","prevCharStyle","fontDeclaration","couple","stylesAreEqual","fontMultiplier","coupleWidth","previousWidth","getMeasuringContext","measureText","getHeightOfChar","measureLine","lineInfo","_measureLine","_getWidthOfCharSpacing","prevGrapheme","graphemeInfo","llength","lineBounds","grapheme","_getGraphemeBox","positionInPath","totalPathLength","_setGraphemeOnPath","numOfSpaces","centerPosition","skipLeft","previousBox","__lineHeights","maxHeight","_renderTextCommon","lineHeights","isJustify","shortCut","isLtr","currentDirection","actualStyle","nextStyle","timeToRender","drawingLeft","charsToRender","_renderChar","_applyPatternGradientTransformText","handleFiller","fullDecl","shouldFill","fillOffsets","fillText","strokeOffsets","strokeText","setSuperscript","_setScript","setSubscript","schema","loc","lineDiff","__lineWidths","_charStyle$property","topOffset","currentDecoration","currentFill","lastDecoration","lastFill","currentSize","currentDy","parsedFontFamily","genericFonts","newLine","newText","needsDims","isAddingPath","_options$parsedAttrib","textAnchor","textDecoration","restOfOptions","textContent","textHeightScaleFactor","scaledDiff","textHeight","offX","_getSVGLeftTopOffsets","textAndBg","_getSVGTextAndBg","textTop","textLeft","_wrapSVGTextAndBg","lineTop","textBgRects","textSpans","getSvgTextDecoration","textTopOffset","textLeftOffset","lineOffset","_setSVGTextLineBg","_setSVGTextLineText","_createTextCharSpan","char","styleDecl","styleProps","getSvgSpanStyles","fillStyles","dySpan","_getSVGLineTopOffset","lastHeight","useWhiteSpace","decoration","DraggableTextDelegate","dragEnterHandler","dragOverHandler","dragLeaveHandler","dragEndHandler","dropHandler","_dispose","isPointerOverSelection","newSelection","getSelectionStartFromPointer","selectionEnd","__mouseDownInPlace","isActive","__dragStartFired","setCursorByClick","initDelayedCursor","__isDraggingOver","getDragStartSelection","__dragStartSelection","setDragImage","_e$dataTransfer","flipFactor","boundaries","_getCursorBoundaries","diff","bgc","dragImage","border","__dragImageDisposer","appendChild","setData","effectAllowed","abortCursorAnimation","editable","defaultPrevented","dragStartSelection","targetCanDrop","ev","_e$dataTransfer2","insert","getData","trailing","selectionStartOffset","removeChars","trimEnd","insertChars","enterEditing","_updateTextarea","_e$dataTransfer3","reNonWord","ITextBehavior","initBehavior","_tick","_onTickComplete","_animateCursor","toValue","_currentCursorOpacity","renderCursorOrSelection","_currentTickState","cursorDuration","_this$_currentTickCom","_currentTickCompleteState","restart","cursorDelay","shouldClear","cursorAnimation","restartCursorIfNeeded","selectAll","_fireSelectionChanged","getSelectedText","findWordBoundaryLeft","startFrom","_reSpace","findWordBoundaryRight","findLineBoundaryLeft","findLineBoundaryRight","searchWordBoundary","selectWord","newSelectionStart","newSelectionEnd","selectLine","initHiddenTextarea","_saveEditingProps","_setEditingProps","_textBeforeEdit","activeElement","currentStart","currentEnd","__selectionStartOnMouseDown","editingBorderColor","fromStringToGraphemeSelection","smallerTextStart","graphemeStart","smallerTextEnd","fromGraphemeToStringSelection","cursorOffsetCache","inCompositionMode","updateTextareaPosition","updateFromTextArea","textarea","_calcTextareaPosition","desiredPosition","compositionStart","cursorLocation","charHeight","upperCanvas","upperCanvasWidth","upperCanvasHeight","clientWidth","clientHeight","_savedProps","_restoreEditingProps","_exitEditing","isTextChanged","_removeExtraneousStyles","removeStyleFromTo","lineStart","charStart","lineEnd","charEnd","styleObj","shiftLineStyles","numericChar","clonedStyles","numericLine","insertNewlineStyleObject","qty","copiedStyle","newLineStyles","originalLineLength","isEndOfLine","someStyleIsCarryingOver","currentCharStyle","numIndex","styleCarriedOver","insertCharStyleObject","quantity","currentLineStyles","currentLineStylesCloned","numericIndex","insertNewStyleBlock","insertedText","cursorLoc","addedLines","linesLength","setSelectionStartEndWithShift","_selectionDirection","ITextKeyBehavior","autocapitalize","autocorrect","autocomplete","spellcheck","wrap","hiddenTextareaContainer","keydown","keyup","input","copy","cut","paste","compositionstart","compositionupdate","compositionend","onKeyDown","keyMap","keysMapRtl","keysMap","keyCode","ctrlKeysMapDown","ctrlKey","metaKey","stopImmediatePropagation","onKeyUp","_copyDone","ctrlKeysMapUp","onInput","fromPaste","updateAndFire","nextText","charCount","nextCharCount","removedText","removeFrom","removeTo","charDiff","textareaSelection","backDelete","copiedText","disableStyleCopyPaste","copiedTextStyle","onCompositionStart","onCompositionEnd","onCompositionUpdate","compositionEnd","_getWidthBeforeCursor","bound","widthBeforeCursor","getDownCursorOffset","isRight","selectionProp","_getSelectionForOffset","indexOnOtherLine","_getIndexOnLine","getUpCursorOffset","textBeforeCursor","charWidth","foundMatch","widthOfCharsOnLine","indexOnLine","leftEdge","rightEdge","offsetFromLeftEdge","moveCursorDown","_moveCursorUpOrDown","moveCursorUp","moveCursorWithShift","moveCursorWithoutShift","moveCursorLeft","_moveCursorLeftOrRight","_move","newValue","_moveLeft","_moveRight","moveCursorLeftWithoutShift","change","moveCursorLeftWithShift","moveCursorRight","moveCursorRightWithShift","moveCursorRightWithoutShift","notALeftClick","ITextClickBehavior","_mouseDownHandler","_mouseDownHandlerBefore","doubleClickHandler","tripleClickHandler","__lastClickTime","__lastLastClickTime","__lastPointer","draggableTextDelegate","__newClickTime","newPointer","isTripleClick","__lastSelected","didDrag","mouseOffset","charLength","widthAfter","MOVE_CURSOR_UP","MOVE_CURSOR_DOWN","MOVE_CURSOR_LEFT","MOVE_CURSOR_RIGHT","EXIT_EDITING","iTextDefaultValues","cursorColor","caching","IText","setSelectionStart","_updateAndFire","setSelectionEnd","renderCursor","renderSelection","skipCaching","_getCursorBoundariesOffsets","__getCursorBoundariesOffsets","renderCursorAt","_renderCursor","_renderSelection","dragSelection","startLine","endLine","startChar","endChar","realLineHeight","boxEnd","drawHeight","extraTop","drawWidth","compositionColor","getCurrentCharFontSize","cp","_getCurrentCharIndex","getCurrentCharColor","cursorPosition","Textbox","dynamicMinWidth","_styleMap","_generateStyleMap","textInfo","realLineCount","realLineCharCount","splitByGrapheme","isWrapping","nextOffset","nextLineIndex","shouldLimit","mapNextLine","p2Number","_wrapText","desiredWidth","getGraphemeDataForRender","wrapped","wordsData","_wrapLine","infix","largestWordWidth","wordsOrGraphemes","wordSplit","word","graphemeArray","_measureWord","charOffset","_wordJoiners","reservedSpace","additionalSpace","infixWidth","lineJustStarted","wordWidth","getMinWidth","minWidth","linesToKeep","propNumber","has","ClipPathLayout","clipPathCenter","FixedLayout","ActiveSelectionLayoutManager","parents","Set","selectedObjects","ActiveSelection","multiSelectionStacking","findIndex","groups","childrenOverride","Canvas2dFilterBackend","applyFilters","filters","sourceElement","sourceWidth","sourceHeight","pipelineState","imageData","originalEl","originalImageData","filterBackend","applyTo","imageDataPostFilter","putImageData","WebGLFilterBackend","tileSize","Float32Array","setupGLContext","captureGPUInfo","createWebGLCanvas","premultipliedAlpha","depth","stencil","antialias","clearColor","cachedTexture","getCachedTexture","destinationWidth","destinationHeight","sourceTexture","createTexture","targetTexture","originalTexture","passes","webgl","aPosition","programCache","pass","tempFbo","createFramebuffer","bindFramebuffer","FRAMEBUFFER","dWidth","dHeight","resizeCanvasIfNeeded","copyGLTo2D","bindTexture","TEXTURE_2D","deleteTexture","deleteFramebuffer","clearWebGLCaches","textureCache","textureImageSource","NEAREST","RGBA","UNSIGNED_BYTE","CLAMP_TO_EDGE","TEXTURE_MAG_FILTER","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","TEXTURE_WRAP_T","texture","texParameteri","texImage2D","uniqueId","evictCachesForKey","glCanvas","sourceY","copyGLTo2DPutImageData","numBytes","u8","Uint8Array","imageBuffer","u8Clamped","Uint8ClampedArray","readPixels","imgData","ImageData","gpuInfo","renderer","vendor","ext","UNMASKED_RENDERER_WEBGL","UNMASKED_VENDOR_WEBGL","initFilterBackend","enableGLFiltering","getFilterBackend","IMAGE_PROPS","FabricImage","setElement","_element","removeTexture","_originalElement","CSS_CANVAS","resizeFilter","applyResizeFilters","backend","elementKey","getCrossOrigin","getOriginalSize","_stroke","filterObj","getSrc","hasCrop","imageMarkup","strokeSvg","imageRendering","imageSmoothing","getSvgSrc","origFill","filtered","srcFromAttribute","setSrc","minimumScale","minimumScaleTrigger","elementToFilter","_filteredEl","_filterScalingX","_filterScalingY","_lastScaleX","_lastScaleY","isNeutralState","imgElement","_needsResize","elementToDraw","elWidth","elHeight","sX","sY","sW","sH","maxDestW","maxDestH","_resetWidthHeight","pAR","preserveAspectRatio","pWidth","pHeight","rWidth","rHeight","f","rf","hydratedProps","fromURL","imageOptions","applyViewboxTransform","viewBoxAttr","widthAttr","heightAttr","missingViewBox","missingDimAttr","translateMatrix","widthDiff","heightDiff","parsedDim","pasedViewBox","createElementNS","firstChild","getTagName","node","tagName","svgInvalidAncestorsRegEx","getMultipleNodes","nodeNames","nodeList","nodeArray","getElementsByTagNameNS","gradientsAttrs","xlinkAttr","recursivelyParseGradientsXlink","_gradient$getAttribut","xLink","referencedGradient","children","referenceClone","cloneNode","tagArray","getCSSRules","allRules","styleContents","ruleObj","propertyValuePairs","pair","_rule","findTag","ElementsParser","clipPaths","regexUrl","gradientDefs","elList","getGradientDefs","createObject","resolveGradient","resolveClipPath","extractPropertyDefinition","storage","lastIndex","gradientDef","usingElement","clipPathElements","objTransformInv","clipPathTag","clipPathOwner","clipPathElement","enlivedClippath","clipRule","gTransform","isValidSvgTag","createEmptyResponse","allElements","async","parseSVGDocument","nodelist","xlinkAttribute","xlink","el2Orig","el2","currentTrans","oldLength","namespace","el3","attrs","setAttributeNS","nodeValue","parseUseDirectives","descendants","hasInvalidAncestor","localClipPaths","elementParser","ACTION_NAME","createPolyPositionHandler","pointIndex","polyObject","polyActionHandler","poly","mouseLocalPosition","factoryPolyActionHandler","anchorPoint","anchorPointInParentPlane","createPolyActionHandler","isWebGLPipelineState","highPsourceCode","identityFragmentShader","BaseFilter","getFragmentSource","getVertexSource","createProgram","vertexSource","vertexShader","VERTEX_SHADER","program","getShaderInfoLog","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","uniformLocations","getUniformLocations","uStepW","getUniformLocation","uStepH","attributeLocations","getAttributeLocations","getAttribLocation","locations","sendAttributeData","aPositionData","attributeLocation","buffer","createBuffer","bindBuffer","ARRAY_BUFFER","enableVertexAttribArray","vertexAttribPointer","FLOAT","bufferData","STATIC_DRAW","_setupFrameBuffer","framebufferTexture2D","COLOR_ATTACHMENT0","finish","_swapTextures","temp","applyToWebGL","applyTo2d","getCacheKey","retrieveShader","shader","useProgram","uniform1f","sendUniformData","viewport","drawArrays","TRIANGLE_STRIP","bindAdditionalTexture","textureUnit","activeTexture","TEXTURE0","unbindAdditionalTexture","createHelpLayer","helpLayer","defaultKeys","blendColorFragmentSource","screen","difference","lighten","darken","exclusion","tint","BlendColor","mode","tg","alpha1","uniform4fv","uColor","mask","BlendImage","image","TEXTURE1","calculateMatrix","resources","blendImage","canvas1","blendData","uniform1i","uImage","uniformMatrix3fv","uTransformMatrix","filterOptions","enlivedImage","Blur","aspectRatio","horizontal","simpleBlur","blurLayer1","blurLayer2","canvas2","ctx1","ctx2","nSamples","percent","newImageData","delta","chooseRightDelta","uniform2fv","uDelta","blurScale","Brightness","brightness","uBrightness","ColorMatrix","colorsOnly","constants","uniformMatrix4fv","uColorMatrix","uConstants","createColorMatrixFilter","_Class","newClass","Brownie","Vintage","Kodachrome","Technicolor","Polaroid","Sepia","BlackWhite","Composed","subFilters","enlivedFilters","Contrast","contrast","contrastF","uContrast","Convolute_3_1","Convolute_3_0","Convolute_5_1","Convolute_5_0","Convolute_7_1","Convolute_7_0","Convolute_9_1","Convolute_9_0","Convolute","opaque","weights","side","halfSide","sw","sh","createImageData","dst","alphaFac","dstOff","scx","scy","srcOff","wt","uniform1fv","uMatrix","GAMMA","Gamma","gamma","rInv","gInv","bInv","rgbValues","rgb","uniform3fv","uGamma","lightness","luminosity","Grayscale","uMode","HueRotation","rotation","cosine","sine","aThird","aThirdSqtSin","OneMinusCos","Invert","invert","uInvert","uAlpha","Noise","noise","rand","uNoise","uSeed","Pixelate","blocksize","_i","_j","uBlocksize","RemoveColor","lowC","highC","uLow","uHigh","useAlpha","Resize","uTaps","taps","getFilterWindow","tempScale","lanczosLobes","filterWindow","generateShader","getTaps","lobeFunction","lanczosCreate","applyToForWebgl","dW","dH","lobes","xx","rcpScaleX","rcpScaleY","oW","oH","newData","resizeType","sliceByTwo","hermiteFastResize","bilinearFiltering","lanczosResize","mult","doneW","doneH","stepW","stepH","dX","dY","tmpCanvas","srcData","destImg","destData","lanczos","ratioX","ratioY","rcpRatioX","rcpRatioY","range2X","range2Y","cacheLanc","icenter","process","u","weight","fX","fY","xDiff","yDiff","chnl","origPix","w4","pixels","destImage","destPixels","ratioW","ratioH","ratioWHalf","ratioHHalf","img2","data2","weightsAlpha","gxR","gxG","gxB","gxA","yy","w0","Saturation","adjust","saturation","uSaturation","Vibrance","vibrance","amt","uVibrance","drawDot","addPoint","dot","originalRenderOnAddRemove","circles","circle","pointerPoint","getPatternSrc","patternCanvas","patternCtx","dotWidth","getPattern","topLeft","sprayChunks","sprayChunk","addSprayChunk","renderChunck","rects","chunck","rect","optimizeOverlapping","uniqueRects","uniqueRectsArray","getUniqueRects","sprayChunck","density","dotWidthVariance","randomOpacity","isPutImageFaster","testContext","ArrayBuffer","testPipelineState","performance","now","drawImageTime","parseFromString","xml","responseXML","parsedDoc"],"mappings":"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"}